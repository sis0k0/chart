{
  "errors": [],
  "warnings": [
    "./app/app.css\n(Emitted value instead of an instance of Error)   resolve-url-loader cannot operate: CSS error\n  /home/svlaeva@bedford.progress.com/chart/app/app.css:9:1: missing '{'\n  at error (/home/svlaeva@bedford.progress.com/chart/node_modules/css/lib/parse/index.js:62:15)\nNonErrorEmittedError: (Emitted value instead of an instance of Error)   resolve-url-loader cannot operate: CSS error\n  /home/svlaeva@bedford.progress.com/chart/app/app.css:9:1: missing '{'\n  at error (/home/svlaeva@bedford.progress.com/chart/node_modules/css/lib/parse/index.js:62:15)\n    at Object.emitWarning (/home/svlaeva@bedford.progress.com/chart/node_modules/webpack/lib/NormalModule.js:114:16)\n    at handleException (/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js:147:14)\n    at Object.resolveUrlLoader (/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js:112:12)"
  ],
  "version": "2.4.1",
  "hash": "544c0902fb979ea1ce68",
  "time": 7005,
  "publicPath": "",
  "assetsByChunkName": {
    "bundle": "bundle.js",
    "app.css": [
      "app.css.js",
      "app.css"
    ],
    "vendor": "vendor.js"
  },
  "assets": [
    {
      "name": "bundle.js",
      "size": 29656,
      "chunks": [
        0
      ],
      "chunkNames": [
        "bundle"
      ],
      "emitted": true
    },
    {
      "name": "app.css.js",
      "size": 268,
      "chunks": [
        1
      ],
      "chunkNames": [
        "app.css"
      ],
      "emitted": true
    },
    {
      "name": "vendor.js",
      "size": 3242351,
      "chunks": [
        2
      ],
      "chunkNames": [
        "vendor"
      ],
      "emitted": true,
      "isOverSizeLimit": true
    },
    {
      "name": "app.css",
      "size": 14178,
      "chunks": [
        1
      ],
      "chunkNames": [
        "app.css"
      ],
      "emitted": true
    },
    {
      "name": "package.json",
      "size": 154,
      "chunks": [],
      "chunkNames": [],
      "emitted": true
    },
    {
      "name": "starter.js",
      "size": 41,
      "chunks": [],
      "chunkNames": [],
      "emitted": true
    }
  ],
  "entrypoints": {
    "bundle": {
      "chunks": [
        2,
        0
      ],
      "assets": [
        "vendor.js",
        "bundle.js"
      ],
      "isOverSizeLimit": true
    },
    "vendor": {
      "chunks": [
        2
      ],
      "assets": [
        "vendor.js"
      ],
      "isOverSizeLimit": true
    },
    "app.css": {
      "chunks": [
        2,
        1
      ],
      "assets": [
        "vendor.js",
        "app.css.js",
        "app.css"
      ],
      "isOverSizeLimit": true
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": false,
      "extraAsync": false,
      "size": 27225,
      "names": [
        "bundle"
      ],
      "files": [
        "bundle.js"
      ],
      "hash": "b5bc6297852058dcd219",
      "parents": [
        2
      ],
      "origins": [
        {
          "moduleId": 186,
          "module": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/main.aot.ts",
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/main.aot.ts",
          "moduleName": "./app/main.aot.ts",
          "loc": "",
          "name": "bundle",
          "reasons": []
        }
      ]
    },
    {
      "id": 1,
      "rendered": true,
      "initial": true,
      "entry": false,
      "extraAsync": false,
      "size": 41,
      "names": [
        "app.css"
      ],
      "files": [
        "app.css.js",
        "app.css"
      ],
      "hash": "a7da808296ad59f52c2f",
      "parents": [
        2
      ],
      "origins": [
        {
          "moduleId": 175,
          "module": "/home/svlaeva@bedford.progress.com/chart/node_modules/extract-text-webpack-plugin/loader.js??ref--1-0!/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/extract-text-webpack-plugin/loader.js??ref--1-0!/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
          "moduleName": "./app/app.css",
          "loc": "",
          "name": "app.css",
          "reasons": []
        }
      ]
    },
    {
      "id": 2,
      "rendered": true,
      "initial": true,
      "entry": true,
      "extraAsync": false,
      "size": 3043699,
      "names": [
        "vendor"
      ],
      "files": [
        "vendor.js"
      ],
      "hash": "31cf5d882b620e5d87f2",
      "parents": [],
      "origins": [
        {
          "moduleId": 187,
          "module": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "loc": "",
          "name": "vendor",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
      "name": "./~/tns-core-modules/ui/core/view/view.android.js",
      "index": 10,
      "index2": 51,
      "size": 24671,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
      "issuerId": 82,
      "issuerName": "./~/nativescript-angular/renderer.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 26,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/content-view/content-view.js",
          "module": "./~/tns-core-modules/ui/content-view/content-view.js",
          "moduleName": "./~/tns-core-modules/ui/content-view/content-view.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 26,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/content-view/content-view.js",
          "module": "./~/tns-core-modules/ui/content-view/content-view.js",
          "moduleName": "./~/tns-core-modules/ui/content-view/content-view.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "2:13-53"
        },
        {
          "moduleId": 52,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "3:13-53"
        },
        {
          "moduleId": 67,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/placeholder/placeholder.android.js",
          "module": "./~/tns-core-modules/ui/placeholder/placeholder.android.js",
          "moduleName": "./~/tns-core-modules/ui/placeholder/placeholder.android.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "2:13-36"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "6:13-53"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "3:13-53"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "3:13-53"
        },
        {
          "moduleId": 94,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "2:13-53"
        },
        {
          "moduleId": 95,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "3:13-53"
        },
        {
          "moduleId": 96,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "6:13-53"
        },
        {
          "moduleId": 116,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/formatted-string.js",
          "module": "./~/tns-core-modules/text/formatted-string.js",
          "moduleName": "./~/tns-core-modules/text/formatted-string.js",
          "type": "cjs require",
          "userRequest": "../ui/core/view",
          "loc": "6:13-39"
        },
        {
          "moduleId": 117,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/span.js",
          "module": "./~/tns-core-modules/text/span.js",
          "moduleName": "./~/tns-core-modules/text/span.js",
          "type": "cjs require",
          "userRequest": "../ui/core/view",
          "loc": "2:13-39"
        },
        {
          "moduleId": 119,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar-common.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar-common.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:13-36"
        },
        {
          "moduleId": 119,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar-common.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar-common.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:9-32"
        },
        {
          "moduleId": 120,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
          "module": "./~/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
          "moduleName": "./~/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 120,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
          "module": "./~/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
          "moduleName": "./~/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 128,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker-common.js",
          "module": "./~/tns-core-modules/ui/date-picker/date-picker-common.js",
          "moduleName": "./~/tns-core-modules/ui/date-picker/date-picker-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 128,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker-common.js",
          "module": "./~/tns-core-modules/ui/date-picker/date-picker-common.js",
          "moduleName": "./~/tns-core-modules/ui/date-picker/date-picker-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 133,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
          "module": "./~/tns-core-modules/ui/frame/frame-common.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "11:9-32"
        },
        {
          "moduleId": 133,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
          "module": "./~/tns-core-modules/ui/frame/frame-common.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 136,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view-common.js",
          "module": "./~/tns-core-modules/ui/html-view/html-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/html-view/html-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 136,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view-common.js",
          "module": "./~/tns-core-modules/ui/html-view/html-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/html-view/html-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 137,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
          "module": "./~/tns-core-modules/ui/image/image-common.js",
          "moduleName": "./~/tns-core-modules/ui/image/image-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 137,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
          "module": "./~/tns-core-modules/ui/image/image-common.js",
          "moduleName": "./~/tns-core-modules/ui/image/image-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "16:9-32"
        },
        {
          "moduleId": 144,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base-common.js",
          "module": "./~/tns-core-modules/ui/layouts/layout-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/layout-base-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 144,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base-common.js",
          "module": "./~/tns-core-modules/ui/layouts/layout-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/layout-base-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 147,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker-common.js",
          "module": "./~/tns-core-modules/ui/list-picker/list-picker-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-picker/list-picker-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 147,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker-common.js",
          "module": "./~/tns-core-modules/ui/list-picker/list-picker-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-picker/list-picker-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 148,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 148,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "10:9-32"
        },
        {
          "moduleId": 151,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress-common.js",
          "module": "./~/tns-core-modules/ui/progress/progress-common.js",
          "moduleName": "./~/tns-core-modules/ui/progress/progress-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 151,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress-common.js",
          "module": "./~/tns-core-modules/ui/progress/progress-common.js",
          "moduleName": "./~/tns-core-modules/ui/progress/progress-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 153,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar-common.js",
          "module": "./~/tns-core-modules/ui/search-bar/search-bar-common.js",
          "moduleName": "./~/tns-core-modules/ui/search-bar/search-bar-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 153,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar-common.js",
          "module": "./~/tns-core-modules/ui/search-bar/search-bar-common.js",
          "moduleName": "./~/tns-core-modules/ui/search-bar/search-bar-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 154,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
          "module": "./~/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
          "moduleName": "./~/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 154,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
          "module": "./~/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
          "moduleName": "./~/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 156,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider-common.js",
          "module": "./~/tns-core-modules/ui/slider/slider-common.js",
          "moduleName": "./~/tns-core-modules/ui/slider/slider-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 156,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider-common.js",
          "module": "./~/tns-core-modules/ui/slider/slider-common.js",
          "moduleName": "./~/tns-core-modules/ui/slider/slider-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 161,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch-common.js",
          "module": "./~/tns-core-modules/ui/switch/switch-common.js",
          "moduleName": "./~/tns-core-modules/ui/switch/switch-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 161,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch-common.js",
          "module": "./~/tns-core-modules/ui/switch/switch-common.js",
          "moduleName": "./~/tns-core-modules/ui/switch/switch-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 162,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view-common.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 162,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view-common.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 164,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base-common.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "9:9-32"
        },
        {
          "moduleId": 164,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base-common.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 168,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker-common.js",
          "module": "./~/tns-core-modules/ui/time-picker/time-picker-common.js",
          "moduleName": "./~/tns-core-modules/ui/time-picker/time-picker-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 168,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker-common.js",
          "module": "./~/tns-core-modules/ui/time-picker/time-picker-common.js",
          "moduleName": "./~/tns-core-modules/ui/time-picker/time-picker-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "6:9-32"
        },
        {
          "moduleId": 169,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view-common.js",
          "module": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "5:13-36"
        },
        {
          "moduleId": 169,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view-common.js",
          "module": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/view",
          "loc": "11:9-32"
        },
        {
          "moduleId": 193,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "2:13-53"
        },
        {
          "moduleId": 196,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-label-style-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-label-style-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-label-style-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "2:13-53"
        },
        {
          "moduleId": 197,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "5:13-53"
        },
        {
          "moduleId": 200,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/view",
          "loc": "2:13-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar background_1 = require(\"../../styling/background\");\nvar view_common_1 = require(\"./view-common\");\nvar style_properties_1 = require(\"../../styling/style-properties\");\n__export(require(\"./view-common\"));\nvar TouchListener;\nvar disableUserInteractionListener;\nfunction initializeDisabledListener() {\n    if (disableUserInteractionListener) {\n        return;\n    }\n    disableUserInteractionListener = new org.nativescript.widgets.DisableUserInteractionListener();\n}\nfunction initializeTouchListener() {\n    if (TouchListener) {\n        return;\n    }\n    var TouchListenerImpl = (function (_super) {\n        __extends(TouchListenerImpl, _super);\n        function TouchListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        TouchListenerImpl.prototype.onTouch = function (view, event) {\n            var owner = this.owner;\n            for (var type in owner._gestureObservers) {\n                var list = owner._gestureObservers[type];\n                list.forEach(function (element) {\n                    element.androidOnTouchEvent(event);\n                });\n            }\n            var nativeView = owner.nativeView;\n            if (!nativeView || !nativeView.onTouchEvent) {\n                return false;\n            }\n            return nativeView.onTouchEvent(event);\n        };\n        return TouchListenerImpl;\n    }(java.lang.Object));\n    TouchListenerImpl = __decorate([\n        Interfaces([android.view.View.OnTouchListener])\n    ], TouchListenerImpl);\n    TouchListener = TouchListenerImpl;\n}\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    View.prototype.observe = function (type, callback, thisArg) {\n        _super.prototype.observe.call(this, type, callback, thisArg);\n        if (this.isLoaded && !this.touchListenerIsSet) {\n            this.setOnTouchListener();\n        }\n    };\n    View.prototype.onLoaded = function () {\n        _super.prototype.onLoaded.call(this);\n        this.setOnTouchListener();\n    };\n    View.prototype.onUnloaded = function () {\n        if (this.touchListenerIsSet) {\n            this.nativeView.setOnTouchListener(null);\n            this.touchListenerIsSet = false;\n        }\n        this._cancelAllAnimations();\n        _super.prototype.onUnloaded.call(this);\n    };\n    View.prototype.hasGestureObservers = function () {\n        return this._gestureObservers && Object.keys(this._gestureObservers).length > 0;\n    };\n    View.prototype.setOnTouchListener = function () {\n        if (this.nativeView && this.hasGestureObservers()) {\n            this.touchListenerIsSet = true;\n            if (this.nativeView.setClickable) {\n                this.nativeView.setClickable(true);\n            }\n            initializeTouchListener();\n            this.touchListener = this.touchListener || new TouchListener(this);\n            this.nativeView.setOnTouchListener(this.touchListener);\n        }\n    };\n    Object.defineProperty(View.prototype, \"isLayoutRequired\", {\n        get: function () {\n            return !this.isLayoutValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"isLayoutValid\", {\n        get: function () {\n            if (this.nativeView) {\n                return !this.nativeView.isLayoutRequested();\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.prototype.layoutNativeView = function (left, top, right, bottom) {\n        if (this.nativeView) {\n            this.nativeView.layout(left, top, right, bottom);\n        }\n    };\n    View.prototype.requestLayout = function () {\n        _super.prototype.requestLayout.call(this);\n        if (this.nativeView) {\n            return this.nativeView.requestLayout();\n        }\n    };\n    View.prototype.measure = function (widthMeasureSpec, heightMeasureSpec) {\n        _super.prototype.measure.call(this, widthMeasureSpec, heightMeasureSpec);\n        this.onMeasure(widthMeasureSpec, heightMeasureSpec);\n    };\n    View.prototype.layout = function (left, top, right, bottom) {\n        _super.prototype.layout.call(this, left, top, right, bottom);\n        this.onLayout(left, top, right, bottom);\n    };\n    View.prototype.onMeasure = function (widthMeasureSpec, heightMeasureSpec) {\n        var view = this.nativeView;\n        if (view) {\n            view.measure(widthMeasureSpec, heightMeasureSpec);\n            this.setMeasuredDimension(view.getMeasuredWidth(), view.getMeasuredHeight());\n        }\n    };\n    View.prototype.onLayout = function (left, top, right, bottom) {\n        var view = this.nativeView;\n        if (view) {\n            this.layoutNativeView(left, top, right, bottom);\n        }\n    };\n    View.prototype._getCurrentLayoutBounds = function () {\n        if (this.nativeView && !this.isCollapsed) {\n            return {\n                left: this.nativeView.getLeft(),\n                top: this.nativeView.getTop(),\n                right: this.nativeView.getRight(),\n                bottom: this.nativeView.getBottom()\n            };\n        }\n        else {\n            return { left: 0, top: 0, right: 0, bottom: 0 };\n        }\n    };\n    View.prototype.getMeasuredWidth = function () {\n        if (this.nativeView) {\n            return this.nativeView.getMeasuredWidth();\n        }\n        return _super.prototype.getMeasuredWidth.call(this);\n    };\n    View.prototype.getMeasuredHeight = function () {\n        if (this.nativeView) {\n            return this.nativeView.getMeasuredHeight();\n        }\n        return _super.prototype.getMeasuredHeight.call(this);\n    };\n    View.prototype.focus = function () {\n        if (this.nativeView) {\n            return this.nativeView.requestFocus();\n        }\n        return false;\n    };\n    View.prototype.getLocationInWindow = function () {\n        if (!this.nativeView || !this.nativeView.getWindowToken()) {\n            return undefined;\n        }\n        var nativeArray = Array.create(\"int\", 2);\n        this.nativeView.getLocationInWindow(nativeArray);\n        return {\n            x: view_common_1.layout.toDeviceIndependentPixels(nativeArray[0]),\n            y: view_common_1.layout.toDeviceIndependentPixels(nativeArray[1]),\n        };\n    };\n    View.prototype.getLocationOnScreen = function () {\n        if (!this.nativeView || !this.nativeView.getWindowToken()) {\n            return undefined;\n        }\n        var nativeArray = Array.create(\"int\", 2);\n        this.nativeView.getLocationOnScreen(nativeArray);\n        return {\n            x: view_common_1.layout.toDeviceIndependentPixels(nativeArray[0]),\n            y: view_common_1.layout.toDeviceIndependentPixels(nativeArray[1]),\n        };\n    };\n    View.prototype.getLocationRelativeTo = function (otherView) {\n        if (!this.nativeView || !this.nativeView.getWindowToken() ||\n            !otherView.nativeView || !otherView.nativeView.getWindowToken() ||\n            this.nativeView.getWindowToken() !== otherView.nativeView.getWindowToken()) {\n            return undefined;\n        }\n        var myArray = Array.create(\"int\", 2);\n        this.nativeView.getLocationOnScreen(myArray);\n        var otherArray = Array.create(\"int\", 2);\n        otherView.nativeView.getLocationOnScreen(otherArray);\n        return {\n            x: view_common_1.layout.toDeviceIndependentPixels(myArray[0] - otherArray[0]),\n            y: view_common_1.layout.toDeviceIndependentPixels(myArray[1] - otherArray[1]),\n        };\n    };\n    View.resolveSizeAndState = function (size, specSize, specMode, childMeasuredState) {\n        var result = size;\n        switch (specMode) {\n            case view_common_1.layout.UNSPECIFIED:\n                result = size;\n                break;\n            case view_common_1.layout.AT_MOST:\n                if (specSize < size) {\n                    result = specSize | view_common_1.layout.MEASURED_STATE_TOO_SMALL;\n                }\n                break;\n            case view_common_1.layout.EXACTLY:\n                result = specSize;\n                break;\n        }\n        return result | (childMeasuredState & view_common_1.layout.MEASURED_STATE_MASK);\n    };\n    View.prototype[view_common_1.isEnabledProperty.getDefault] = function () {\n        return this.nativeView.isEnabled();\n    };\n    View.prototype[view_common_1.isEnabledProperty.setNative] = function (value) {\n        this.nativeView.setEnabled(value);\n    };\n    View.prototype[view_common_1.originXProperty.getDefault] = function () {\n        return this.nativeView.getPivotX();\n    };\n    View.prototype[view_common_1.originXProperty.setNative] = function (value) {\n        org.nativescript.widgets.OriginPoint.setX(this.nativeView, value);\n    };\n    View.prototype[view_common_1.originYProperty.getDefault] = function () {\n        return this.nativeView.getPivotY();\n    };\n    View.prototype[view_common_1.originYProperty.setNative] = function (value) {\n        org.nativescript.widgets.OriginPoint.setY(this.nativeView, value);\n    };\n    View.prototype[view_common_1.automationTextProperty.getDefault] = function () {\n        return this.nativeView.getContentDescription();\n    };\n    View.prototype[view_common_1.automationTextProperty.setNative] = function (value) {\n        this.nativeView.setContentDescription(value);\n    };\n    View.prototype[view_common_1.isUserInteractionEnabledProperty.getDefault] = function () {\n        return true;\n    };\n    View.prototype[view_common_1.isUserInteractionEnabledProperty.setNative] = function (value) {\n        if (!value) {\n            initializeDisabledListener();\n            this.nativeView.setOnTouchListener(disableUserInteractionListener);\n        }\n        else {\n            this.setOnTouchListener();\n        }\n    };\n    View.prototype[style_properties_1.visibilityProperty.getDefault] = function () {\n        var nativeVisibility = this.nativeView.getVisibility();\n        switch (nativeVisibility) {\n            case android.view.View.VISIBLE:\n                return \"visible\";\n            case android.view.View.INVISIBLE:\n                return \"hidden\";\n            case android.view.View.GONE:\n                return \"collapse\";\n            default:\n                throw new Error(\"Unsupported android.view.View visibility: \" + nativeVisibility + \". Currently supported values are android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE.\");\n        }\n    };\n    View.prototype[style_properties_1.visibilityProperty.setNative] = function (value) {\n        switch (value) {\n            case \"visible\":\n                this.nativeView.setVisibility(android.view.View.VISIBLE);\n                break;\n            case \"hidden\":\n                this.nativeView.setVisibility(android.view.View.INVISIBLE);\n                break;\n            case \"collapse\":\n                this.nativeView.setVisibility(android.view.View.GONE);\n                break;\n            default:\n                throw new Error(\"Invalid visibility value: \" + value + \". Valid values are: visible, hidden, collapse.\");\n        }\n    };\n    View.prototype[style_properties_1.opacityProperty.getDefault] = function () {\n        return this.nativeView.getAlpha();\n    };\n    View.prototype[style_properties_1.opacityProperty.setNative] = function (value) {\n        this.nativeView.setAlpha(value);\n    };\n    View.prototype[style_properties_1.horizontalAlignmentProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getHorizontalAlignment(this.nativeView);\n    };\n    View.prototype[style_properties_1.horizontalAlignmentProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        var lp = nativeView.getLayoutParams() || new org.nativescript.widgets.CommonLayoutParams();\n        if (lp.gravity !== undefined) {\n            switch (value) {\n                case \"left\":\n                    lp.gravity = android.view.Gravity.LEFT | (lp.gravity & android.view.Gravity.VERTICAL_GRAVITY_MASK);\n                    break;\n                case \"center\":\n                    lp.gravity = android.view.Gravity.CENTER_HORIZONTAL | (lp.gravity & android.view.Gravity.VERTICAL_GRAVITY_MASK);\n                    break;\n                case \"right\":\n                    lp.gravity = android.view.Gravity.RIGHT | (lp.gravity & android.view.Gravity.VERTICAL_GRAVITY_MASK);\n                    break;\n                case \"stretch\":\n                    lp.gravity = android.view.Gravity.FILL_HORIZONTAL | (lp.gravity & android.view.Gravity.VERTICAL_GRAVITY_MASK);\n                    break;\n            }\n            nativeView.setLayoutParams(lp);\n        }\n    };\n    View.prototype[style_properties_1.verticalAlignmentProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getVerticalAlignment(this.nativeView);\n    };\n    View.prototype[style_properties_1.verticalAlignmentProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        var lp = nativeView.getLayoutParams() || new org.nativescript.widgets.CommonLayoutParams();\n        if (lp.gravity !== undefined) {\n            switch (value) {\n                case \"top\":\n                    lp.gravity = android.view.Gravity.TOP | (lp.gravity & android.view.Gravity.HORIZONTAL_GRAVITY_MASK);\n                    break;\n                case \"middle\":\n                    lp.gravity = android.view.Gravity.CENTER_VERTICAL | (lp.gravity & android.view.Gravity.HORIZONTAL_GRAVITY_MASK);\n                    break;\n                case \"bottom\":\n                    lp.gravity = android.view.Gravity.BOTTOM | (lp.gravity & android.view.Gravity.HORIZONTAL_GRAVITY_MASK);\n                    break;\n                case \"stretch\":\n                    lp.gravity = android.view.Gravity.FILL_VERTICAL | (lp.gravity & android.view.Gravity.HORIZONTAL_GRAVITY_MASK);\n                    break;\n            }\n            nativeView.setLayoutParams(lp);\n        }\n    };\n    View.prototype[style_properties_1.rotateProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getRotate(this.nativeView);\n    };\n    View.prototype[style_properties_1.rotateProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setRotate(this.nativeView, float(value));\n    };\n    View.prototype[style_properties_1.scaleXProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getScaleX(this.nativeView);\n    };\n    View.prototype[style_properties_1.scaleXProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setScaleX(this.nativeView, float(value));\n    };\n    View.prototype[style_properties_1.scaleYProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getScaleY(this.nativeView);\n    };\n    View.prototype[style_properties_1.scaleYProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setScaleY(this.nativeView, float(value));\n    };\n    View.prototype[style_properties_1.translateXProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getTranslateX(this.nativeView);\n    };\n    View.prototype[style_properties_1.translateXProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setTranslateX(this.nativeView, style_properties_1.Length.toDevicePixels(value, 0));\n    };\n    View.prototype[style_properties_1.translateYProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getTranslateY(this.nativeView);\n    };\n    View.prototype[style_properties_1.translateYProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setTranslateY(this.nativeView, style_properties_1.Length.toDevicePixels(value, 0));\n    };\n    View.prototype[style_properties_1.zIndexProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getZIndex(this.nativeView);\n    };\n    View.prototype[style_properties_1.zIndexProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setZIndex(this.nativeView, value);\n    };\n    View.prototype[style_properties_1.backgroundInternalProperty.getDefault] = function () {\n        return this.nativeView.getBackground();\n    };\n    View.prototype[style_properties_1.backgroundInternalProperty.setNative] = function (value) {\n        if (value instanceof android.graphics.drawable.Drawable) {\n            this.nativeView.setBackground(value);\n        }\n        else {\n            background_1.ad.onBackgroundOrBorderPropertyChanged(this);\n        }\n    };\n    View.prototype[style_properties_1.minWidthProperty.setNative] = function (value) {\n        if (this.parent instanceof CustomLayoutView && this.parent.nativeView) {\n            this.parent._setChildMinWidthNative(this);\n        }\n        else {\n            this._setMinWidthNative(this.minWidth);\n        }\n    };\n    View.prototype[style_properties_1.minHeightProperty.setNative] = function (value) {\n        if (this.parent instanceof CustomLayoutView && this.parent.nativeView) {\n            this.parent._setChildMinHeightNative(this);\n        }\n        else {\n            this._setMinHeightNative(this.minHeight);\n        }\n    };\n    return View;\n}(view_common_1.ViewCommon));\nexports.View = View;\nvar CustomLayoutView = (function (_super) {\n    __extends(CustomLayoutView, _super);\n    function CustomLayoutView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CustomLayoutView.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.ContentLayout(this._context);\n    };\n    CustomLayoutView.prototype._addViewToNativeVisualTree = function (child, atIndex) {\n        if (atIndex === void 0) { atIndex = -1; }\n        _super.prototype._addViewToNativeVisualTree.call(this, child);\n        if (this.nativeView && child.nativeView) {\n            if (view_common_1.traceEnabled()) {\n                view_common_1.traceWrite(this + \".nativeView.addView(\" + child + \".nativeView, \" + atIndex + \")\", view_common_1.traceCategories.VisualTreeEvents);\n            }\n            this.nativeView.addView(child.nativeView, atIndex);\n            if (child instanceof View) {\n                this._updateNativeLayoutParams(child);\n            }\n            return true;\n        }\n        return false;\n    };\n    CustomLayoutView.prototype._updateNativeLayoutParams = function (child) {\n        this._setChildMinWidthNative(child);\n        this._setChildMinHeightNative(child);\n    };\n    CustomLayoutView.prototype._setChildMinWidthNative = function (child) {\n        child._setMinWidthNative(child.minWidth);\n    };\n    CustomLayoutView.prototype._setChildMinHeightNative = function (child) {\n        child._setMinHeightNative(child.minHeight);\n    };\n    CustomLayoutView.prototype._removeViewFromNativeVisualTree = function (child) {\n        _super.prototype._removeViewFromNativeVisualTree.call(this, child);\n        if (this.nativeView && child.nativeView) {\n            this.nativeView.removeView(child.nativeView);\n            if (view_common_1.traceEnabled()) {\n                view_common_1.traceWrite(this + \".nativeView.removeView(\" + child + \".nativeView)\", view_common_1.traceCategories.VisualTreeEvents);\n                view_common_1.traceNotifyEvent(child, \"childInLayoutRemovedFromNativeVisualTree\");\n            }\n        }\n    };\n    return CustomLayoutView;\n}(View));\nexports.CustomLayoutView = CustomLayoutView;\nvar percentNotSupported = function (view, value) { throw new Error(\"PercentLength is not supported.\"); };\nfunction createNativePercentLengthProperty(options) {\n    var getter = options.getter, setter = options.setter, _a = options.auto, auto = _a === void 0 ? 0 : _a;\n    var setPixels, getPixels, setPercent;\n    if (getter) {\n        View.prototype[getter] = function () {\n            if (options) {\n                setPixels = options.setPixels;\n                getPixels = options.getPixels;\n                setPercent = options.setPercent || percentNotSupported;\n                options = null;\n            }\n            var value = getPixels(this.nativeView);\n            if (value == auto) {\n                return \"auto\";\n            }\n            else {\n                return { value: value, unit: \"px\" };\n            }\n        };\n    }\n    if (setter) {\n        View.prototype[setter] = function (length) {\n            if (options) {\n                setPixels = options.setPixels;\n                getPixels = options.getPixels;\n                setPercent = options.setPercent || percentNotSupported;\n                options = null;\n            }\n            if (length == \"auto\") {\n                setPixels(this.nativeView, auto);\n            }\n            else if (typeof length === \"number\") {\n                setPixels(this.nativeView, view_common_1.layout.round(view_common_1.layout.toDevicePixels(length)));\n            }\n            else if (length.unit == \"dip\") {\n                setPixels(this.nativeView, view_common_1.layout.round(view_common_1.layout.toDevicePixels(length.value)));\n            }\n            else if (length.unit == \"px\") {\n                setPixels(this.nativeView, view_common_1.layout.round(length.value));\n            }\n            else if (length.unit == \"%\") {\n                setPercent(this.nativeView, length.value);\n            }\n            else {\n                throw new Error(\"Unsupported PercentLength \" + length);\n            }\n        };\n    }\n}\ncreateNativePercentLengthProperty({\n    getter: style_properties_1.marginTopProperty.getDefault,\n    setter: style_properties_1.marginTopProperty.setNative,\n    get getPixels() { return org.nativescript.widgets.ViewHelper.getMarginTop; },\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setMarginTop; },\n    get setPercent() { return org.nativescript.widgets.ViewHelper.setMarginTopPercent; }\n});\ncreateNativePercentLengthProperty({\n    getter: style_properties_1.marginRightProperty.getDefault,\n    setter: style_properties_1.marginRightProperty.setNative,\n    get getPixels() { return org.nativescript.widgets.ViewHelper.getMarginRight; },\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setMarginRight; },\n    get setPercent() { return org.nativescript.widgets.ViewHelper.setMarginRightPercent; }\n});\ncreateNativePercentLengthProperty({\n    getter: style_properties_1.marginBottomProperty.getDefault,\n    setter: style_properties_1.marginBottomProperty.setNative,\n    get getPixels() { return org.nativescript.widgets.ViewHelper.getMarginBottom; },\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setMarginBottom; },\n    get setPercent() { return org.nativescript.widgets.ViewHelper.setMarginBottomPercent; }\n});\ncreateNativePercentLengthProperty({\n    getter: style_properties_1.marginLeftProperty.getDefault,\n    setter: style_properties_1.marginLeftProperty.setNative,\n    get getPixels() { return org.nativescript.widgets.ViewHelper.getMarginLeft; },\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setMarginLeft; },\n    get setPercent() { return org.nativescript.widgets.ViewHelper.setMarginLeftPercent; }\n});\ncreateNativePercentLengthProperty({\n    getter: style_properties_1.widthProperty.getDefault,\n    setter: style_properties_1.widthProperty.setNative,\n    auto: -1,\n    get getPixels() { return org.nativescript.widgets.ViewHelper.getWidth; },\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setWidth; },\n    get setPercent() { return org.nativescript.widgets.ViewHelper.setWidthPercent; }\n});\ncreateNativePercentLengthProperty({\n    getter: style_properties_1.heightProperty.getDefault,\n    setter: style_properties_1.heightProperty.setNative,\n    auto: -1,\n    get getPixels() { return org.nativescript.widgets.ViewHelper.getHeight; },\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setHeight; },\n    get setPercent() { return org.nativescript.widgets.ViewHelper.setHeightPercent; }\n});\ncreateNativePercentLengthProperty({\n    setter: \"_setMinWidthNative\",\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setMinWidth; }\n});\ncreateNativePercentLengthProperty({\n    setter: \"_setMinHeightNative\",\n    get setPixels() { return org.nativescript.widgets.ViewHelper.setMinHeight; }\n});\n//# sourceMappingURL=view.android.js.map"
    },
    {
      "id": 1,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
      "name": "./~/@angular/core/@angular/core.es5.js",
      "index": 91,
      "index2": 122,
      "size": 460390,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 19,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/common/@angular/common.es5.js",
          "module": "./~/@angular/common/@angular/common.es5.js",
          "moduleName": "./~/@angular/common/@angular/common.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/core",
          "loc": "11:0-392"
        },
        {
          "moduleId": 20,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
          "module": "./~/@angular/forms/@angular/forms.es5.js",
          "moduleName": "./~/@angular/forms/@angular/forms.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/core",
          "loc": "11:0-246"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/core",
          "loc": "11:0-542"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
          "module": "./~/nativescript-angular/platform-providers.js",
          "moduleName": "./~/nativescript-angular/platform-providers.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "4:13-37"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/platform-browser/@angular/platform-browser.es5.js",
          "module": "./~/@angular/platform-browser/@angular/platform-browser.es5.js",
          "moduleName": "./~/@angular/platform-browser/@angular/platform-browser.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/core",
          "loc": "12:0-429"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.js",
          "module": "./~/nativescript-angular/common/detached-loader.js",
          "moduleName": "./~/nativescript-angular/common/detached-loader.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 38,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-location-strategy.js",
          "module": "./~/nativescript-angular/router/ns-location-strategy.js",
          "moduleName": "./~/nativescript-angular/router/ns-location-strategy.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-static.js",
          "module": "./~/nativescript-angular/platform-static.js",
          "moduleName": "./~/nativescript-angular/platform-static.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "4:13-37"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/router-extensions.js",
          "module": "./~/nativescript-angular/router/router-extensions.js",
          "moduleName": "./~/nativescript-angular/router/router-extensions.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 75,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/dialogs.js",
          "module": "./~/nativescript-angular/directives/dialogs.js",
          "moduleName": "./~/nativescript-angular/directives/dialogs.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 76,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
          "module": "./~/nativescript-angular/directives/list-view-comp.js",
          "moduleName": "./~/nativescript-angular/directives/list-view-comp.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 77,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/platform-filters.js",
          "module": "./~/nativescript-angular/directives/platform-filters.js",
          "moduleName": "./~/nativescript-angular/directives/platform-filters.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 78,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/tab-view.js",
          "module": "./~/nativescript-angular/directives/tab-view.js",
          "moduleName": "./~/nativescript-angular/directives/tab-view.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "13:13-37"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 83,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
          "module": "./~/nativescript-angular/router/ns-router-link.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 84,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/checked-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 85,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/date-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 86,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/number-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 87,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 88,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/text-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 89,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/time-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 170,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/http/@angular/http.es5.js",
          "module": "./~/@angular/http/@angular/http.es5.js",
          "moduleName": "./~/@angular/http/@angular/http.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/core",
          "loc": "11:0-62"
        },
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "9:14-38"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "10:13-37"
        },
        {
          "moduleId": 180,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-module-factory-loader.js",
          "module": "./~/nativescript-angular/router/ns-module-factory-loader.js",
          "moduleName": "./~/nativescript-angular/router/ns-module-factory-loader.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 181,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-platform-location.js",
          "module": "./~/nativescript-angular/router/ns-platform-location.js",
          "moduleName": "./~/nativescript-angular/router/ns-platform-location.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "4:13-37"
        },
        {
          "moduleId": 182,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link-active.js",
          "module": "./~/nativescript-angular/router/ns-router-link-active.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link-active.js",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "2:13-37"
        },
        {
          "moduleId": 183,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
          "module": "./app/app.component.ngfactory.ts",
          "moduleName": "./app/app.component.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "9:14-38"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "6:0-24"
        },
        {
          "moduleId": 188,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.ngfactory.ts",
          "module": "./~/nativescript-angular/common/detached-loader.ngfactory.ts",
          "moduleName": "./~/nativescript-angular/common/detached-loader.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "9:14-38"
        },
        {
          "moduleId": 189,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
          "module": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "@angular/core",
          "loc": "9:14-38"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "Class",
        "createPlatform",
        "assertPlatform",
        "destroyPlatform",
        "getPlatform",
        "PlatformRef",
        "ApplicationRef",
        "enableProdMode",
        "isDevMode",
        "createPlatformFactory",
        "NgProbeToken",
        "APP_ID",
        "PACKAGE_ROOT_URL",
        "PLATFORM_INITIALIZER",
        "PLATFORM_ID",
        "APP_BOOTSTRAP_LISTENER",
        "APP_INITIALIZER",
        "ApplicationInitStatus",
        "DebugElement",
        "DebugNode",
        "asNativeElements",
        "getDebugNode",
        "Testability",
        "TestabilityRegistry",
        "setTestabilityGetter",
        "TRANSLATIONS",
        "TRANSLATIONS_FORMAT",
        "LOCALE_ID",
        "MissingTranslationStrategy",
        "ApplicationModule",
        "wtfCreateScope",
        "wtfLeave",
        "wtfStartTimeRange",
        "wtfEndTimeRange",
        "Type",
        "EventEmitter",
        "ErrorHandler",
        "Sanitizer",
        "SecurityContext",
        "ANALYZE_FOR_ENTRY_COMPONENTS",
        "Attribute",
        "ContentChild",
        "ContentChildren",
        "Query",
        "ViewChild",
        "ViewChildren",
        "Component",
        "Directive",
        "HostBinding",
        "HostListener",
        "Input",
        "Output",
        "Pipe",
        "CUSTOM_ELEMENTS_SCHEMA",
        "NO_ERRORS_SCHEMA",
        "NgModule",
        "ViewEncapsulation",
        "Version",
        "VERSION",
        "forwardRef",
        "resolveForwardRef",
        "Injector",
        "ReflectiveInjector",
        "ResolvedReflectiveFactory",
        "ReflectiveKey",
        "InjectionToken",
        "OpaqueToken",
        "Inject",
        "Optional",
        "Injectable",
        "Self",
        "SkipSelf",
        "Host",
        "NgZone",
        "RenderComponentType",
        "Renderer",
        "Renderer2",
        "RendererFactory2",
        "RendererStyleFlags2",
        "RootRenderer",
        "COMPILER_OPTIONS",
        "Compiler",
        "CompilerFactory",
        "ModuleWithComponentFactories",
        "ComponentFactory",
        "ComponentRef",
        "ComponentFactoryResolver",
        "ElementRef",
        "NgModuleFactory",
        "NgModuleRef",
        "NgModuleFactoryLoader",
        "getModuleFactory",
        "QueryList",
        "SystemJsNgModuleLoader",
        "SystemJsNgModuleLoaderConfig",
        "TemplateRef",
        "ViewContainerRef",
        "EmbeddedViewRef",
        "ViewRef",
        "ChangeDetectionStrategy",
        "ChangeDetectorRef",
        "DefaultIterableDiffer",
        "IterableDiffers",
        "KeyValueDiffers",
        "SimpleChange",
        "WrappedValue",
        "platformCore",
        "ɵALLOW_MULTIPLE_PLATFORMS",
        "ɵAPP_ID_RANDOM_PROVIDER",
        "ɵValueUnwrapper",
        "ɵdevModeEqual",
        "ɵisListLikeIterable",
        "ɵChangeDetectorStatus",
        "ɵisDefaultChangeDetectionStrategy",
        "ɵConsole",
        "ɵERROR_COMPONENT_TYPE",
        "ɵComponentFactory",
        "ɵCodegenComponentFactoryResolver",
        "ɵLIFECYCLE_HOOKS_VALUES",
        "ɵLifecycleHooks",
        "ɵViewMetadata",
        "ɵReflector",
        "ɵreflector",
        "ɵReflectionCapabilities",
        "ɵReflectorReader",
        "ɵRenderDebugInfo",
        "ɵglobal",
        "ɵlooseIdentical",
        "ɵstringify",
        "ɵmakeDecorator",
        "ɵisObservable",
        "ɵisPromise",
        "ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR",
        "ɵNgModuleInjector",
        "ɵregisterModuleFactory",
        "ɵEMPTY_ARRAY",
        "ɵEMPTY_MAP",
        "ɵand",
        "ɵccf",
        "ɵcrt",
        "ɵdid",
        "ɵeld",
        "ɵelementEventFullName",
        "ɵgetComponentViewDefinitionFactory",
        "ɵinlineInterpolate",
        "ɵinterpolate",
        "ɵncd",
        "ɵnov",
        "ɵpid",
        "ɵprd",
        "ɵpad",
        "ɵpod",
        "ɵppd",
        "ɵqud",
        "ɵted",
        "ɵunv",
        "ɵvid",
        "AUTO_STYLE",
        "trigger",
        "animate",
        "group",
        "sequence",
        "style",
        "state",
        "keyframes",
        "transition",
        "ɵba",
        "ɵbb",
        "ɵbf",
        "ɵbc",
        "ɵbe",
        "ɵbd",
        "ɵbg",
        "ɵz",
        "ɵo",
        "ɵl",
        "ɵm",
        "ɵn",
        "ɵf",
        "ɵg",
        "ɵh",
        "ɵi",
        "ɵj",
        "ɵk",
        "ɵc",
        "ɵd",
        "ɵe",
        "ɵp",
        "ɵr",
        "ɵq",
        "ɵu",
        "ɵs",
        "ɵt",
        "ɵa",
        "ɵb",
        "ɵw",
        "ɵx"
      ],
      "depth": 1,
      "source": "var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { share } from 'rxjs/operator/share';\nimport { Subject } from 'rxjs/Subject';\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n *\n * ```typescript\n * var t = new OpaqueToken(\"value\");\n *\n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n *\n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n *\n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n *\n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nvar OpaqueToken = (function () {\n    /**\n     * @param {?} _desc\n     */\n    function OpaqueToken(_desc) {\n        this._desc = _desc;\n    }\n    /**\n     * @return {?}\n     */\n    OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n    return OpaqueToken;\n}());\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function (_super) {\n    __extends(InjectionToken, _super);\n    /**\n     * @param {?} desc\n     */\n    function InjectionToken(desc) {\n        return _super.call(this, desc) || this;\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}(OpaqueToken));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol = _global['Symbol'];\n        if (Symbol && Symbol.iterator) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    ((Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextClassId = 0;\nvar Reflect = _global['Reflect'];\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation) {\n    if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n        // it is a decorator, extract annotation\n        annotation = annotation.annotation;\n    }\n    return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray, key) {\n    if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n        fnOrArray === Number || fnOrArray === Array) {\n        throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n    }\n    if (typeof fnOrArray === 'function') {\n        return fnOrArray;\n    }\n    if (Array.isArray(fnOrArray)) {\n        var /** @type {?} */ annotations = (fnOrArray);\n        var /** @type {?} */ annoLength = annotations.length - 1;\n        var /** @type {?} */ fn = fnOrArray[annoLength];\n        if (typeof fn !== 'function') {\n            throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n        }\n        if (annoLength != fn.length) {\n            throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n        }\n        var /** @type {?} */ paramsAnnotations = [];\n        for (var /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n            var /** @type {?} */ paramAnnotations = [];\n            paramsAnnotations.push(paramAnnotations);\n            var /** @type {?} */ annotation = annotations[i];\n            if (Array.isArray(annotation)) {\n                for (var /** @type {?} */ j = 0; j < annotation.length; j++) {\n                    paramAnnotations.push(extractAnnotation(annotation[j]));\n                }\n            }\n            else if (typeof annotation === 'function') {\n                paramAnnotations.push(extractAnnotation(annotation));\n            }\n            else {\n                paramAnnotations.push(annotation);\n            }\n        }\n        Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n        return fn;\n    }\n    throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n *\n * ## Basic Example\n *\n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n *\n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n *\n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n *\n * or equivalent to ES5:\n *\n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n *\n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n *\n * ### Example with parameter annotations\n *\n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n *\n * ### Example with inheritance\n *\n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n *\n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nfunction Class(clsDef) {\n    var /** @type {?} */ constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n    var /** @type {?} */ proto = constructor.prototype;\n    if (clsDef.hasOwnProperty('extends')) {\n        if (typeof clsDef.extends === 'function') {\n            ((constructor)).prototype = proto =\n                Object.create(((clsDef.extends)).prototype);\n        }\n        else {\n            throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n        }\n    }\n    for (var /** @type {?} */ key in clsDef) {\n        if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n            proto[key] = applyParams(clsDef[key], key);\n        }\n    }\n    if (this && this.annotations instanceof Array) {\n        Reflect.defineMetadata('annotations', this.annotations, constructor);\n    }\n    var /** @type {?} */ constructorName = constructor['name'];\n    if (!constructorName || constructorName === 'constructor') {\n        ((constructor))['overriddenName'] = \"class\" + _nextClassId++;\n    }\n    return (constructor);\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (!(Reflect && Reflect.getOwnMetadata)) {\n            throw 'reflect-metadata shim is required when using class decorators';\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n        var /** @type {?} */ chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n        chainAnnotation.push(annotationInstance);\n        var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n            var /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n            annotations.push(annotationInstance);\n            Reflect.defineMetadata('annotations', annotations, cls);\n            return cls;\n        });\n        TypeDecorator.annotations = chainAnnotation;\n        TypeDecorator.Class = Class;\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.toString = function () { return \"@\" + name; };\n    ((DecoratorFactory)).annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\n/**\n * @param {?} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        props.forEach(function (prop, i) {\n            var /** @type {?} */ argVal = args[i];\n            if (Array.isArray(prop)) {\n                // plain parameter\n                _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n            }\n            else {\n                for (var /** @type {?} */ propName in prop) {\n                    _this[propName] =\n                        argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n                }\n            }\n        });\n    };\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (((ParamDecoratorFactory)).bind.apply(((ParamDecoratorFactory)), [void 0].concat(args)))();\n        ((ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            var /** @type {?} */ parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            parameters[index] = parameters[index] || []; /** @type {?} */\n            ((parameters[index])).push(annotationInstance);\n            Reflect.defineMetadata('parameters', parameters, cls);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.toString = function () { return \"@\" + name; };\n    ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new (((PropDecoratorFactory)).bind.apply(((PropDecoratorFactory)), [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            Reflect.defineMetadata('propMetadata', meta, target.constructor);\n        };\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.toString = function () { return \"@\" + name; };\n    ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', [\n    ['selector', undefined], {\n        first: false,\n        isViewQuery: false,\n        descendants: false,\n        read: undefined,\n    }\n], Query);\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', [\n    ['selector', undefined], {\n        first: true,\n        isViewQuery: false,\n        descendants: true,\n        read: undefined,\n    }\n], Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', [\n    ['selector', undefined], {\n        first: false,\n        isViewQuery: true,\n        descendants: true,\n        read: undefined,\n    }\n], Query);\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', [\n    ['selector', undefined], {\n        first: true,\n        isViewQuery: true,\n        descendants: true,\n        read: undefined,\n    }\n], Query);\nvar ChangeDetectionStrategy = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar ChangeDetectorStatus = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', {\n    selector: undefined,\n    inputs: undefined,\n    outputs: undefined,\n    host: undefined,\n    providers: undefined,\n    exportAs: undefined,\n    queries: undefined\n});\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', {\n    selector: undefined,\n    inputs: undefined,\n    outputs: undefined,\n    host: undefined,\n    exportAs: undefined,\n    moduleId: undefined,\n    providers: undefined,\n    viewProviders: undefined,\n    changeDetection: ChangeDetectionStrategy.Default,\n    queries: undefined,\n    templateUrl: undefined,\n    template: undefined,\n    styleUrls: undefined,\n    styles: undefined,\n    animations: undefined,\n    encapsulation: undefined,\n    interpolation: undefined,\n    entryComponents: undefined\n}, Directive);\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', {\n    name: undefined,\n    pure: true,\n});\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', {\n    providers: undefined,\n    declarations: undefined,\n    imports: undefined,\n    exports: undefined,\n    entryComponents: undefined,\n    bootstrap: undefined,\n    schemas: undefined,\n    id: undefined,\n});\nvar ViewEncapsulation = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/**\n * Metadata properties available for configuring Views.\n *\n * For details on the `\\@Component` annotation, see {\\@link Component}.\n *\n * ### Example\n *\n * ```\n * \\@Component({\n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n *\n * @deprecated Use Component instead.\n *\n * {\\@link Component}\n */\nvar ViewMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function ViewMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n        this.templateUrl = templateUrl;\n        this.template = template;\n        this.styleUrls = styleUrls;\n        this.styles = styles;\n        this.encapsulation = encapsulation;\n        this.animations = animations;\n        this.interpolation = interpolation;\n    }\n    return ViewMetadata;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = (function () {\n    /**\n     * @param {?} full\n     */\n    function Version(full) {\n        this.full = full;\n    }\n    Object.defineProperty(Version.prototype, \"major\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.')[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"minor\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.')[1]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"patch\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.').slice(2).join('.'); },\n        enumerable: true,\n        configurable: true\n    });\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', [['token', undefined]]);\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional', []);\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable', []);\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self', []);\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf', []);\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host', []);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    ((forwardRefFn)).__forward_ref__ = forwardRef;\n    ((forwardRefFn)).toString = function () { return stringify(this()); };\n    return (((forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return ((type))();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Retrieves an instance from the injector based on the provided token.\n     * If not found:\n     * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n     * Injector.THROW_IF_NOT_FOUND is given\n     * - Returns the `notFoundValue` otherwise\n     * @abstract\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector.prototype.get = function (token, notFoundValue) { };\n    /**\n     * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n     * @suppress {duplicate}\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector.prototype.get = function (token, notFoundValue) { };\n    return Injector;\n}());\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new _NullInjector();\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return ((error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return ((error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return ((error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    /**\n     * @param {?=} deprecatedParameter\n     */\n    function ErrorHandler(\n        /**\n         * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n         * rethrow.\n         */\n        deprecatedParameter) {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ error = ((originalError ? wrappedError('', originalError) : Error()));\n    error.addKey = addKey;\n    error.keys = [key];\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error.message = error.constructResolvingMessage();\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    this.message = this.constructResolvingMessage();\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function () {\n        var /** @type {?} */ first = stringify(this.keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(this.keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function () {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(this.keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function () {\n        var /** @type {?} */ first = stringify(this.keys[0].token);\n        return getOriginalError(this).message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     * @param {?} token\n     * @param {?} id\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n    }\n    Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n        /**\n         * Returns a stringified token.\n         * @return {?}\n         */\n        get: function () { return stringify(this.token); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @return {?} the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    /**\n     * @param {?=} reflect\n     */\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n            return ((type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations = ctorParameters.map(function (ctorParam) { return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators); });\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // API for metadata created by invoking the decorators.\n        if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n            var /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n            var /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(((type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (this._reflect && this._reflect.getOwnMetadata) {\n            return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).propMetadata &&\n            ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).propDecorators &&\n            ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (this._reflect && this._reflect.getOwnMetadata) {\n            return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = function (name) { return (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return (new Function('o', 'args', functionBody));\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n/**\n * Provides read-only access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n * @abstract\n */\nvar ReflectorReader = (function () {\n    function ReflectorReader() {\n    }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectorReader.prototype.parameters = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectorReader.prototype.annotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectorReader.prototype.propMetadata = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectorReader.prototype.importUri = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectorReader.prototype.resourceUri = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectorReader.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) { };\n    /**\n     * @abstract\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectorReader.prototype.resolveEnum = function (identifier, name) { };\n    return ReflectorReader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function (_super) {\n    __extends(Reflector, _super);\n    /**\n     * @param {?} reflectionCapabilities\n     */\n    function Reflector(reflectionCapabilities) {\n        var _this = _super.call(this) || this;\n        _this.reflectionCapabilities = reflectionCapabilities;\n        return _this;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}(ReflectorReader));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    /**\n     * @param {?} key\n     * @param {?} optional\n     * @param {?} visibility\n     */\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = (function () {\n    /**\n     * @param {?} key\n     * @param {?} resolvedFactories\n     * @param {?} multiProvider\n     */\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    /**\n     * @param {?} factory\n     * @param {?} dependencies\n     */\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata['token'], optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata['token'];\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * \\@stable\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    /**\n     * Parent of this injector.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n     *\n     * ```typescript\n     * var parent = ReflectiveInjector.resolveAndCreate([]);\n     * var child = parent.resolveAndCreateChild([]);\n     * expect(child.parent).toBe(parent);\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.parent = function () { };\n    /**\n     * Resolves an array of providers and creates a child injector from those providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n     * var child = parent.resolveAndCreateChild([ChildProvider]);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     *\n     * This function is slower than the corresponding `createChildFromResolved`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n    /**\n     * Creates a child injector from previously resolved providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n     *\n     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n     * var child = parent.createChildFromResolved(childProviders);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n    /**\n     * Resolves a provider and instantiates an object in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     *\n     * var car = injector.resolveAndInstantiate(Car);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n    /**\n     * Instantiates an object using a resolved provider in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     * var carProvider = ReflectiveInjector.resolve([Car])[0];\n     * var car = injector.instantiateResolved(carProvider);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n    /**\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     * @param {?} _providers\n     * @param {?=} _parent\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this._parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        inj._parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this._parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_._parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    return ReflectiveInjector_;\n}());\nvar INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    /**\n     * @param {?} appInits\n     */\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this._done = false;\n        var asyncInitPromises = [];\n        if (appInits) {\n            for (var i = 0; i < appInits.length; i++) {\n                var initResult = appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n        if (asyncInitPromises.length === 0) {\n            this._done = true;\n        }\n    }\n    Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._done; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._donePromise; },\n        enumerable: true,\n        configurable: true\n    });\n    return ApplicationInitStatus;\n}());\nApplicationInitStatus.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nApplicationInitStatus.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    return Console;\n}());\nConsole.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nConsole.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = (function () {\n    /**\n     * @param {?} ngModuleFactory\n     * @param {?} componentFactories\n     */\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     * @param {?} component\n     * @return {?}\n     */\n    Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    return Compiler;\n}());\nCompiler.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nCompiler.ctorParameters = function () { return []; };\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    /**\n     * @abstract\n     * @param {?=} options\n     * @return {?}\n     */\n    CompilerFactory.prototype.createCompiler = function (options) { };\n    return CompilerFactory;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    /**\n     * Location of the Host Element of this Component Instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.location = function () { };\n    /**\n     * The injector on which the component instance exists.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.injector = function () { };\n    /**\n     * The instance of the Component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.instance = function () { };\n    /**\n     * The {\\@link ViewRef} of the Host View of this Component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.hostView = function () { };\n    /**\n     * The {\\@link ChangeDetectorRef} of the Component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.changeDetectorRef = function () { };\n    /**\n     * The component type.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.componentType = function () { };\n    /**\n     * Destroys the component instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.destroy = function () { };\n    /**\n     * Allows to register a callback that will be called when the component is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef.prototype.onDestroy = function (callback) { };\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.selector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.componentType = function () { };\n    /**\n     * selector for all <ng-content> elements in the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.ngContentSelectors = function () { };\n    /**\n     * the inputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.inputs = function () { };\n    /**\n     * the outputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.outputs = function () { };\n    /**\n     * Creates a new component.\n     * @abstract\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) { };\n    return ComponentFactory;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    ((error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    /**\n     * @abstract\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n    return ComponentFactoryResolver;\n}());\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nvar CodegenComponentFactoryResolver = (function () {\n    /**\n     * @param {?} factories\n     * @param {?} _parent\n     * @param {?} _ngModule\n     */\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var /** @type {?} */ factory = this._factories.get(component) || this._parent.resolveComponentFactory(component);\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    /**\n     * @param {?} factory\n     * @param {?} ngModule\n     */\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    /**\n     * The injector that contains all of the providers of the NgModule.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.injector = function () { };\n    /**\n     * The ComponentFactoryResolver to get hold of the ComponentFactories\n     * declared in the `entryComponents` property of the module.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.componentFactoryResolver = function () { };\n    /**\n     * The NgModule instance.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.instance = function () { };\n    /**\n     * Destroys the module instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.destroy = function () { };\n    /**\n     * Allows to register a callback that will be called when the module is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef.prototype.onDestroy = function (callback) { };\n    return NgModuleRef;\n}());\n/**\n * \\@experimental\n */\nvar NgModuleFactory = (function () {\n    /**\n     * @param {?} _injectorClass\n     * @param {?} _moduleType\n     */\n    function NgModuleFactory(_injectorClass, _moduleType) {\n        this._injectorClass = _injectorClass;\n        this._moduleType = _moduleType;\n    }\n    Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._moduleType; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory.prototype.create = function (parentInjector) {\n        var /** @type {?} */ instance = new this._injectorClass(parentInjector || Injector.NULL);\n        instance.create();\n        return instance;\n    };\n    return NgModuleFactory;\n}());\nvar _UNDEFINED = new Object();\n/**\n * @abstract\n */\nvar NgModuleInjector = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} factories\n     * @param {?} bootstrapFactories\n     */\n    function NgModuleInjector(parent, factories, bootstrapFactories) {\n        var _this = this;\n        this.parent = parent;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.bootstrapFactories =\n            bootstrapFactories.map(function (f) { return new ComponentFactoryBoundToModule(f, _this); });\n        this._cmpFactoryResolver = new CodegenComponentFactoryResolver(factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL), this);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    NgModuleInjector.prototype.createInternal = function () { };\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (token === Injector || token === NgModuleRef) {\n            return this;\n        }\n        if (token === ComponentFactoryResolver) {\n            return this._cmpFactoryResolver;\n        }\n        var /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n        return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n    };\n    /**\n     * @abstract\n     * @param {?} token\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    NgModuleInjector.prototype.getInternal = function (token, notFoundValue) { };\n    Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cmpFactoryResolver; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleInjector.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        this.destroyInternal();\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    NgModuleInjector.prototype.destroyInternal = function () { };\n    return NgModuleInjector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = ((_global) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope$1(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope$1 : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of [EventEmitter], which depending on [isAsync],\n     * delivers events synchronously or asynchronously.\n     * @param {?=} isAsync\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    /**\n     * @param {?} __0\n     */\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this._hasPendingMicrotasks = false;\n        this._hasPendingMacrotasks = false;\n        this._isStable = true;\n        this._nesting = 0;\n        this._onUnstable = new EventEmitter(false);\n        this._onMicrotaskEmpty = new EventEmitter(false);\n        this._onStable = new EventEmitter(false);\n        this._onErrorEvents = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        this.outer = this.inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        this.forkInnerZoneWithAngularBehavior();\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n    Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         * @return {?}\n         */\n        get: function () { return this._onUnstable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n        /**\n         * Notifies when there is no more microtasks enqueue in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         * @return {?}\n         */\n        get: function () { return this._onMicrotaskEmpty; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgZone.prototype, \"onStable\", {\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         * @return {?}\n         */\n        get: function () { return this._onStable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgZone.prototype, \"onError\", {\n        /**\n         * Notify that an error has been delivered.\n         * @return {?}\n         */\n        get: function () { return this._onErrorEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgZone.prototype, \"isStable\", {\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         * @return {?}\n         */\n        get: function () { return this._isStable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasPendingMicrotasks; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasPendingMacrotasks; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgZone.prototype.checkStable = function () {\n        var _this = this;\n        if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n            try {\n                this._nesting++;\n                this._onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                this._nesting--;\n                if (!this._hasPendingMicrotasks) {\n                    try {\n                        this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                    }\n                    finally {\n                        this._isStable = true;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n        var _this = this;\n        this.inner = this.inner.fork({\n            name: 'angular',\n            properties: /** @type {?} */ ({ 'isAngularZone': true }),\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    _this.onEnter();\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    _this.onLeave();\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    _this.onEnter();\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _this.onLeave();\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        _this.setHasMicrotask(hasTaskState.microTask);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        _this.setHasMacrotask(hasTaskState.macroTask);\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                _this.triggerError(error);\n                return false;\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.prototype.onEnter = function () {\n        this._nesting++;\n        if (this._isStable) {\n            this._isStable = false;\n            this._onUnstable.emit(null);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.prototype.onLeave = function () {\n        this._nesting--;\n        this.checkStable();\n    };\n    /**\n     * @param {?} hasMicrotasks\n     * @return {?}\n     */\n    NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n        this._hasPendingMicrotasks = hasMicrotasks;\n        this.checkStable();\n    };\n    /**\n     * @param {?} hasMacrotasks\n     * @return {?}\n     */\n    NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n    return NgZone;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    Testability.prototype.whenStable = function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * @deprecated use findProviders\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findBindings = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    /**\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    return Testability;\n}());\nTestability.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nTestability.ctorParameters = function () { return [\n    { type: NgZone, },\n]; };\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?} testability\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * @param {?} elem\n     * @param {?=} findInAncestors\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    return TestabilityRegistry;\n}());\nTestabilityRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nTestabilityRegistry.ctorParameters = function () { return []; };\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = (function () {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n * explicitly by calling {\\@link createPlatform}().\n *\n * \\@stable\n * @abstract\n */\nvar PlatformRef = (function () {\n    function PlatformRef() {\n    }\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @abstract\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) { };\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @abstract\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) { };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { };\n    /**\n     * Retrieve the platform {\\@link Injector}, which is the parent injector for\n     * every Angular application on the page and provides singleton providers.\n     * @abstract\n     * @return {?}\n     */\n    PlatformRef.prototype.injector = function () { };\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @abstract\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    PlatformRef.prototype.destroyed = function () { };\n    return PlatformRef;\n}());\n/**\n * @param {?} errorHandler\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                errorHandler.handleError(e);\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        errorHandler.handleError(e);\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar PlatformRef_ = (function (_super) {\n    __extends(PlatformRef_, _super);\n    /**\n     * @param {?} _injector\n     */\n    function PlatformRef_(_injector) {\n        var _this = _super.call(this) || this;\n        _this._injector = _injector;\n        _this._modules = [];\n        _this._destroyListeners = [];\n        _this._destroyed = false;\n        return _this;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PlatformRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n        return this._bootstrapModuleFactoryWithZone(moduleFactory);\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        if (!ngZone)\n            ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n            return _callAndReportToErrorHandler(exceptionHandler, function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n        var /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef.bootstrapFactories.length > 0) {\n            moduleRef.bootstrapFactories.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    return PlatformRef_;\n}(PlatformRef));\nPlatformRef_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nPlatformRef_.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * A reference to an Angular application running on a page.\n *\n * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n *\n * \\@stable\n * @abstract\n */\nvar ApplicationRef = (function () {\n    function ApplicationRef() {\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @abstract\n     * @template C\n     * @param {?} componentFactory\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentFactory) { };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @abstract\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = function () { };\n    /**\n     * Get a list of component types registered to this application.\n     * This list is populated even before the component is created.\n     * @abstract\n     * @return {?}\n     */\n    ApplicationRef.prototype.componentTypes = function () { };\n    /**\n     * Get a list of components registered to this application.\n     * @abstract\n     * @return {?}\n     */\n    ApplicationRef.prototype.components = function () { };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @abstract\n     * @param {?} view\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = function (view) { };\n    /**\n     * Detaches a view from dirty checking again.\n     * @abstract\n     * @param {?} view\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = function (view) { };\n    /**\n     * Returns the number of attached views.\n     * @abstract\n     * @return {?}\n     */\n    ApplicationRef.prototype.viewCount = function () { };\n    /**\n     * Returns an Observable that indicates when the application is stable or unstable.\n     * @abstract\n     * @return {?}\n     */\n    ApplicationRef.prototype.isStable = function () { };\n    return ApplicationRef;\n}());\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar ApplicationRef_ = (function (_super) {\n    __extends(ApplicationRef_, _super);\n    /**\n     * @param {?} _zone\n     * @param {?} _console\n     * @param {?} _injector\n     * @param {?} _exceptionHandler\n     * @param {?} _componentFactoryResolver\n     * @param {?} _initStatus\n     */\n    function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = _super.call(this) || this;\n        _this._zone = _zone;\n        _this._console = _console;\n        _this._injector = _injector;\n        _this._exceptionHandler = _exceptionHandler;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._initStatus = _initStatus;\n        _this._bootstrapListeners = [];\n        _this._rootComponents = [];\n        _this._rootComponentTypes = [];\n        _this._views = [];\n        _this._runningTick = false;\n        _this._enforceNoNewChanges = false;\n        _this._stable = true;\n        _this._enforceNoNewChanges = isDevMode();\n        _this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new Observable(function (observer) {\n            var stableSub = _this._zone.onStable.subscribe(function () {\n                NgZone.assertNotInAngularZone();\n                // Check whether there are no pending macro/micro tasks in the next tick\n                // to allow for NgZone to update the state.\n                scheduleMicroTask(function () {\n                    if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                        !_this._zone.hasPendingMicrotasks) {\n                        _this._stable = true;\n                        observer.next(true);\n                    }\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        _this._isStable = merge(isCurrentlyStable, share.call(isStable));\n        return _this;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.attachView = function (viewRef) {\n        var /** @type {?} */ view = ((viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.detachView = function (viewRef) {\n        var /** @type {?} */ view = ((viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @template C\n     * @param {?} componentOrFactory\n     * @return {?}\n     */\n    ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory = ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this._rootComponentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], componentFactory.selector, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this._rootComponents.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this._rootComponents, componentRef);\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.tick = function () {\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef_._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._rootComponentTypes; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._rootComponents; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"isStable\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._isStable; },\n        enumerable: true,\n        configurable: true\n    });\n    return ApplicationRef_;\n}(ApplicationRef));\n/**\n * \\@internal\n */\nApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nApplicationRef_.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: Console, },\n    { type: Injector, },\n    { type: ErrorHandler, },\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationInitStatus, },\n]; };\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = (function () {\n    /**\n     * @param {?} id\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     */\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = (function () {\n    function RenderDebugInfo() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.source = function () { };\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @return {?}\n     */\n    Renderer.prototype.createViewRoot = function (hostElement) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} value\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.detachView = function (viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listen = function (renderElement, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listenGlobal = function (target, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} attributeName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n    /**\n     * Used only in debug mode to serialize property changes to dom nodes as attributes.\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?=} args\n     * @return {?}\n     */\n    Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n    /**\n     * @abstract\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    Renderer.prototype.setText = function (renderNode, text) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = (function () {\n    function RootRenderer() {\n    }\n    /**\n     * @abstract\n     * @param {?} componentType\n     * @return {?}\n     */\n    RootRenderer.prototype.renderComponent = function (componentType) { };\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    RendererFactory2.prototype.createRenderer = function (hostElement, type) { };\n    return RendererFactory2;\n}());\nvar RendererStyleFlags2 = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    /**\n     * This field can be used to store arbitrary data on this renderer instance.\n     * This is useful for renderers that delegate to other renderers.\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.data = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    Renderer2.prototype.createElement = function (name, namespace) { };\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.createComment = function (value) { };\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.createText = function (value) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    Renderer2.prototype.appendChild = function (parent, newChild) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    Renderer2.prototype.insertBefore = function (parent, newChild, refChild) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    Renderer2.prototype.removeChild = function (parent, oldChild) { };\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    Renderer2.prototype.selectRootElement = function (selectorOrNode) { };\n    /**\n     * Attention: On WebWorkers, this will always return a value,\n     * as we are asking for a result synchronously. I.e.\n     * the caller can't rely on checking whether this is null or not.\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    Renderer2.prototype.parentNode = function (node) { };\n    /**\n     * Attention: On WebWorkers, this will always return a value,\n     * as we are asking for a result synchronously. I.e.\n     * the caller can't rely on checking whether this is null or not.\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    Renderer2.prototype.nextSibling = function (node) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    Renderer2.prototype.setAttribute = function (el, name, value, namespace) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    Renderer2.prototype.removeAttribute = function (el, name, namespace) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    Renderer2.prototype.addClass = function (el, name) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    Renderer2.prototype.removeClass = function (el, name) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    Renderer2.prototype.setStyle = function (el, style, value, flags) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    Renderer2.prototype.removeStyle = function (el, style, flags) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.setProperty = function (el, name, value) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.setValue = function (node, value) { };\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer2.prototype.listen = function (target, eventName, callback) { };\n    return Renderer2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\nvar ElementRef = (function () {\n    /**\n     * @param {?} nativeElement\n     */\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = (function () {\n    function NgModuleFactoryLoader() {\n    }\n    /**\n     * @abstract\n     * @param {?} path\n     * @return {?}\n     */\n    NgModuleFactoryLoader.prototype.load = function (path) { };\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this._dirty = true;\n        this._results = [];\n        this._emitter = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"changes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._emitter; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten(res);\n        this._dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = function () { this._dirty = true; };\n    Object.defineProperty(QueryList.prototype, \"dirty\", {\n        /**\n         * internal\n         * @return {?}\n         */\n        get: function () { return this._dirty; },\n        enumerable: true,\n        configurable: true\n    });\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = (function () {\n    /**\n     * @param {?} _compiler\n     * @param {?=} config\n     */\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    return SystemJsNgModuleLoader;\n}());\nSystemJsNgModuleLoader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSystemJsNgModuleLoader.ctorParameters = function () { return [\n    { type: Compiler, },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    TemplateRef.prototype.elementRef = function () { };\n    /**\n     * @abstract\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef.prototype.createEmbeddedView = function (context) { };\n    return TemplateRef;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    /**\n     * Anchor element that specifies the location of this container in the containing View.\n     * <!-- TODO: rename to anchorElement -->\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.element = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.parentInjector = function () { };\n    /**\n     * Destroys all Views in this container.\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.clear = function () { };\n    /**\n     * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n     * @abstract\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.get = function (index) { };\n    /**\n     * Returns the number of Views currently attached to this container.\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.length = function () { };\n    /**\n     * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n     * into this container at the specified `index`.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * Returns the {\\@link ViewRef} for the newly created View.\n     * @abstract\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n    /**\n     * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n     * specified `index`.\n     *\n     * The component is instantiated using its {\\@link ComponentFactory} which can be\n     * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n     *\n     * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n     * @abstract\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) { };\n    /**\n     * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * Returns the inserted {\\@link ViewRef}.\n     * @abstract\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.insert = function (viewRef, index) { };\n    /**\n     * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n     *\n     * Returns the inserted {\\@link ViewRef}.\n     * @abstract\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n    /**\n     * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n     * `-1` if this container doesn't contain the View.\n     * @abstract\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef.prototype.indexOf = function (viewRef) { };\n    /**\n     * Destroys a View attached to this container at the specified `index`.\n     *\n     * If `index` is not specified, the last View in the container will be removed.\n     * @abstract\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.remove = function (index) { };\n    /**\n     * Use along with {\\@link #insert} to move a View within the current container.\n     *\n     * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n     * @abstract\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.detach = function (index) { };\n    return ViewContainerRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    /**\n     * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'cmp',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     * })\n     * class Cmp {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks ++\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `\n     *     <cmp><cmp>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.markForCheck = function () { };\n    /**\n     * Detaches the change detector from the change detector tree.\n     *\n     * The detached change detector will not be checked until it is reattached.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n     * local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detach = function () { };\n    /**\n     * Checks the change detector and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n     * change detection\n     * checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check\n     * every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach} for more information.\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detectChanges = function () { };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't introduce\n     * other changes.\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.checkNoChanges = function () { };\n    /**\n     * Reattach the change detector to the change detector tree.\n     *\n     * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n     * checked during the next change detection run.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value)\n     *       this.ref.reattach();\n     *     else\n     *       this.ref.detach();\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class App {\n     *   live = true;\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.reattach = function () { };\n    return ChangeDetectorRef;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Destroys the view and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroyed = function () { };\n    /**\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = function (callback) { };\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.rootNodes = function () { };\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = (function () {\n    /**\n     * @param {?} name\n     * @param {?} callback\n     */\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    ;\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"source\", {\n        /**\n         * @deprecated since v4\n         * @return {?}\n         */\n        get: function () { return 'Deprecated since v4'; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    /**\n     * @param {?} wrapped\n     */\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    /**\n     * @param {?} previousValue\n     * @param {?} currentValue\n     * @param {?} firstChange\n     */\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n     * @template V\n     * @param {?=} cdRefOrTrackBy\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = function (cdRefOrTrackBy, trackByFn) {\n        return new DefaultIterableDiffer(trackByFn || (cdRefOrTrackBy));\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    /**\n     * @param {?=} trackByFn\n     */\n    function DefaultIterableDiffer(trackByFn) {\n        this._length = 0;\n        this._collection = null;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._collection; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && ((nextIt.currentIndex)) <\n                    getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            this._length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this._length = index;\n        }\n        this._truncate(record);\n        this._collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = ((this._itTail));\n        }\n        else {\n            previousRecord = ((record._prev));\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.toString = function () {\n        var /** @type {?} */ list = [];\n        this.forEachItem(function (record) { return list.push(record); });\n        var /** @type {?} */ previous = [];\n        this.forEachPreviousItem(function (record) { return previous.push(record); });\n        var /** @type {?} */ additions = [];\n        this.forEachAddedItem(function (record) { return additions.push(record); });\n        var /** @type {?} */ moves = [];\n        this.forEachMovedItem(function (record) { return moves.push(record); });\n        var /** @type {?} */ removals = [];\n        this.forEachRemovedItem(function (record) { return removals.push(record); });\n        var /** @type {?} */ identityChanges = [];\n        this.forEachIdentityChange(function (record) { return identityChanges.push(record); });\n        return 'collection: ' + list.join(', ') + '\\n' +\n            'previous: ' + previous.join(', ') + '\\n' +\n            'additions: ' + additions.join(', ') + '\\n' +\n            'moves: ' + moves.join(', ') + '\\n' +\n            'removals: ' + removals.join(', ') + '\\n' +\n            'identityChanges: ' + identityChanges.join(', ') + '\\n';\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    /**\n     * @param {?} item\n     * @param {?} trackById\n     */\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    /**\n     * @return {?}\n     */\n    IterableChangeRecord_.prototype.toString = function () {\n        return this.previousIndex === this.currentIndex ? stringify(this.item) :\n            stringify(this.item) + '[' +\n                stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n    };\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    /**\n     * @param {?} trackById\n     * @param {?} afterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the afterIndex to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the last `a` not the first or second.\n     * @param {?} trackById\n     * @param {?} afterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, afterIndex) : null;\n    };\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n     * @template K, V\n     * @param {?=} cd\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = function (cd) {\n        return new DefaultKeyValueDiffer();\n    };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.toString = function () {\n        var /** @type {?} */ items = [];\n        var /** @type {?} */ previous = [];\n        var /** @type {?} */ changes = [];\n        var /** @type {?} */ additions = [];\n        var /** @type {?} */ removals = [];\n        this.forEachItem(function (r) { return items.push(stringify(r)); });\n        this.forEachPreviousItem(function (r) { return previous.push(stringify(r)); });\n        this.forEachChangedItem(function (r) { return changes.push(stringify(r)); });\n        this.forEachAddedItem(function (r) { return additions.push(stringify(r)); });\n        this.forEachRemovedItem(function (r) { return removals.push(stringify(r)); });\n        return 'map: ' + items.join(', ') + '\\n' +\n            'previous: ' + previous.join(', ') + '\\n' +\n            'additions: ' + additions.join(', ') + '\\n' +\n            'changes: ' + changes.join(', ') + '\\n' +\n            'removals: ' + removals.join(', ') + '\\n';\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    /**\n     * @param {?} key\n     */\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    /**\n     * @return {?}\n     */\n    KeyValueChangeRecord_.prototype.toString = function () {\n        return looseIdentical(this.previousValue, this.currentValue) ?\n            stringify(this.key) :\n            (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                stringify(this.currentValue) + ']');\n    };\n    return KeyValueChangeRecord_;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    /**\n     * @param {?} factories\n     */\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    /**\n     * @param {?} factories\n     */\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _reflector() {\n    return reflector;\n}\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    PlatformRef_,\n    { provide: PlatformRef, useExisting: PlatformRef_ },\n    { provide: Reflector, useFactory: _reflector, deps: [] },\n    { provide: ReflectorReader, useExisting: Reflector },\n    TestabilityRegistry,\n    Console,\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\nvar MissingTranslationStrategy = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\nvar SecurityContext = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    /**\n     * @abstract\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    Sanitizer.prototype.sanitize = function (context, value) { };\n    return Sanitizer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * @abstract\n */\nvar DebugContext = (function () {\n    function DebugContext() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.view = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.nodeIndex = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.componentRenderElement = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.renderNode = function () { };\n    /**\n     * @abstract\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n    };\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    ((err))[ERROR_DEBUG_CONTEXT] = context;\n    ((err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 1 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* FirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.index), oldValue, value, (view.state & 1 /* FirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 2 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    var /** @type {?} */ startView = nodeDef.flags & 16777216 /* ComponentView */ ? asElementData(view, nodeIndex).componentView : view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).index);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 100673535 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.index).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.index).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(((view.parentNodeDef)).flags & 16384 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(((view.parentNodeDef)).flags & 16384 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 16777216 /* ComponentView */) === 0 ||\n            (((renderParent.element)).componentRendererType && ((((renderParent.element)).componentRendererType)).encapsulation ===\n                ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).index).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar VIEW_DEFINITION_CACHE = new WeakMap();\n/**\n * @param {?} factory\n * @return {?}\n */\nfunction resolveViewDefinition(factory) {\n    var /** @type {?} */ value = ((VIEW_DEFINITION_CACHE.get(factory)));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        VIEW_DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 4 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = ((hostElDef)).index + 1;\n    var /** @type {?} */ endIndex = ((hostElDef)).index + ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 4 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 16777216 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 8388608 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = ((asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveViewDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = ((null));\n    var /** @type {?} */ name = ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = ((undefined));\n        var /** @type {?} */ suffix = ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 16777216 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name = _a[1], value = _a[2];\n            renderer.setAttribute(el, name, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.index, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.index);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 16777216 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: 4 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData && dvcElementData !== elementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n    }\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = ((viewIndex)) > 0 ? embeddedViews[((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData && dvcElementData !== elementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        removeFromArray(projectedViews, projectedViews.indexOf(view));\n    }\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return ((componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    /**\n     * @param {?} selector\n     * @param {?} componentType\n     * @param {?} viewDefFactory\n     * @param {?} _inputs\n     * @param {?} _outputs\n     * @param {?} ngContentSelectors\n     */\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ inputsArr = [];\n            for (var /** @type {?} */ propName in this._inputs) {\n                var /** @type {?} */ templateName = this._inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveViewDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = ((((viewDef.nodes[0].element)).componentProvider)).index;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    /**\n     * @param {?} _view\n     * @param {?} _viewRef\n     * @param {?} _component\n     */\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._component; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    /**\n     * @param {?} _view\n     * @param {?} _elDef\n     * @param {?} _data\n     */\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        var /** @type {?} */ viewRef_ = (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(((viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    /**\n     * @param {?} _view\n     */\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this._view.state & 8 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = function () { this._view.state &= ~2 /* ChecksEnabled */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = function () { Services.checkAndUpdateView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = function () { this._view.state |= 2 /* ChecksEnabled */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    /**\n     * @param {?} _parentView\n     * @param {?} _def\n     */\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    /**\n     * @param {?} view\n     * @param {?} elDef\n     */\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 16777216 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.index);\n        return ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.index).renderText;\n    }\n    else if (def.flags & (10112 /* CatProvider */ | 8 /* TypePipe */)) {\n        return asProviderData(view, def.index).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        ((renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 8192 /* TypeDirective */;\n    return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 8 /* TypePipe */;\n    return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    var /** @type {?} */ depDefs = deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, tokenKey: tokenKey(token), value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return def.flags & 2048 /* LazyProvider */ ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 16384 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).index, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 1 /* FirstCheck */) && (def.flags & 32768 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 131072 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 1 /* FirstCheck */) && (def.flags & 32768 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 131072 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 4096 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    var /** @type {?} */ injectable;\n    switch (def.flags & 100673535 /* Types */) {\n        case 256 /* TypeClassProvider */:\n            injectable = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 512 /* TypeFactoryProvider */:\n            injectable = callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 1024 /* TypeUseExistingProvider */:\n            injectable = resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n            break;\n        case 128 /* TypeValueProvider */:\n            injectable = ((providerDef)).value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.index).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.index).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (((elDef.element)).template) {\n                        return asElementData(view, elDef.index).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = (((allowPrivateServices ? ((elDef.element)).allProviders : ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.index);\n                        if (providerData.instance === NOT_CREATED) {\n                            providerData.instance = _createProviderInstance(view, providerDef_1);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = ((viewParentEl(view)));\n        view = ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.index).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 16384 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).index).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 2 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 262144 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 1 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent = nodeDef.parent;\n        if (!parent && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent && (parent.flags & 1 /* TypeElement */) &&\n            i === parent.index + parent.childCount) {\n            // last child of an element\n            if (parent.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent, lifecycles);\n            }\n            parent = parent.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ provider = asProviderData(view, index).instance;\n    if (provider === NOT_CREATED) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 524288 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 1048576 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 2097152 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 4194304 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 65536 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(64 /* TypePurePipe */, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(argCount) {\n    return _pureExpressionDef(16 /* TypePureArray */, new Array(argCount));\n}\n/**\n * @param {?} propertyNames\n * @return {?}\n */\nfunction pureObjectDef(propertyNames) {\n    return _pureExpressionDef(32 /* TypePureObject */, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 100673535 /* Types */) {\n            case 16 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 32 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[((bindings[9].name))] = v9;\n                break;\n            case 64 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 100673535 /* Types */) {\n            case 16 /* TypePureArray */:\n                value = values;\n                break;\n            case 32 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[((bindings[i].name))] = values[i];\n                }\n                break;\n            case 64 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.index + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 33554432 /* TypeContentQuery */) &&\n                (nodeDef.flags & 268435456 /* DynamicQuery */) &&\n                (((nodeDef.query)).filterId & queryIds) === ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.index) ||\n                !(nodeDef.childFlags & 33554432 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 268435456 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 67108864 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeViewQuery */) && (nodeDef.flags & 268435456 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = ((undefined));\n    if (nodeDef.flags & 33554432 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef_1 = ((((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef_1.index, elementDef_1.index + elementDef_1.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).index).instance;\n    }\n    else if (nodeDef.flags & 67108864 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && ((nodeDef.element)).template &&\n            (((((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            // check embedded views that were attached at the place of their template.\n            var /** @type {?} */ elementData = asElementData(view, i);\n            if (nodeDef.flags & 8388608 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        var /** @type {?} */ value = void 0;\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                value = asElementData(view, nodeDef.index).renderElement;\n                break;\n            case 0 /* ElementRef */:\n                value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n                break;\n            case 2 /* TemplateRef */:\n                value = asElementData(view, nodeDef.index).template;\n                break;\n            case 3 /* ViewContainerRef */:\n                value = asElementData(view, nodeDef.index).viewContainer;\n                break;\n            case 4 /* Provider */:\n                value = asProviderData(view, nodeDef.index).instance;\n                break;\n        }\n        return value;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nfunction textDef(ngContentIndex, constants) {\n    var /** @type {?} */ bindings = new Array(constants.length - 1);\n    for (var /** @type {?} */ i = 1; i < constants.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: constants[i]\n        };\n    }\n    var /** @type {?} */ flags = 2;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: constants[0] },\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        while (currentParent && i > currentParent.index + currentParent.childCount) {\n            var /** @type {?} */ newParent = currentParent.parent;\n            if (newParent) {\n                newParent.childFlags |= ((currentParent.childFlags));\n                newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n            }\n            currentParent = newParent;\n        }\n        var /** @type {?} */ node = nodes[i];\n        node.index = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        // renderParent needs to account for ng-container!\n        var /** @type {?} */ currentRenderParent = void 0;\n        if (currentParent && currentParent.flags & 1 /* TypeElement */ &&\n            !((currentParent.element)).name) {\n            currentRenderParent = currentParent.renderParent;\n        }\n        else {\n            currentRenderParent = currentParent;\n        }\n        node.renderParent = currentRenderParent;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element && node.element.template) {\n            viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 10112 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((((\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent)).element)).publicProviders =\n                    Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders); /** @type {?} */\n                ((((currentParent)).element)).allProviders = ((((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 4096 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 16384 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                ((((((currentParent)).element)).publicProviders))[((node.provider)).tokenKey] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((((\n                    // Use protoyypical inheritance to not get O(n^2) complexity...\n                    currentParent)).element)).allProviders =\n                        Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((((((currentParent)).element)).allProviders))[((node.provider)).tokenKey] = node;\n            }\n            if (isComponent) {\n                ((((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (node.childCount) {\n            currentParent = node;\n        }\n    }\n    while (currentParent) {\n        var /** @type {?} */ newParent = currentParent.parent;\n        if (newParent) {\n            newParent.childFlags |= currentParent.childFlags;\n            newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP,\n        handleEvent: handleEvent || NOOP,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 8388608 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.flags & 10112 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 33554432 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 8192 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.index + \"!\");\n        }\n        if (node.flags & 67108864 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n        if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.index + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, /** @type {?} */ ((((anchorDef$$1.element)).template)));\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 1 /* FirstCheck */ | 2 /* ChecksEnabled */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((((hostDef)).parent)).index).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 100673535 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = ((undefined));\n                if (nodeDef.flags & 16777216 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveViewDefinition(/** @type {?} */ ((((nodeDef.element)).componentView)));\n                    var /** @type {?} */ rendererType = ((nodeDef.element)).componentRendererType;\n                    var /** @type {?} */ compRenderer = void 0;\n                    if (!rendererType) {\n                        compRenderer = view.root.renderer;\n                    }\n                    else {\n                        compRenderer = view.root.rendererFactory.createRenderer(el, rendererType);\n                    }\n                    componentView = createView(view.root, compRenderer, view, /** @type {?} */ ((nodeDef.element)).componentProvider, compViewDef);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 8388608 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = (createText(view, renderHost, nodeDef));\n                break;\n            case 256 /* TypeClassProvider */:\n            case 512 /* TypeFactoryProvider */:\n            case 1024 /* TypeUseExistingProvider */:\n            case 128 /* TypeValueProvider */: {\n                var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                break;\n            }\n            case 8 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                break;\n            }\n            case 8192 /* TypeDirective */: {\n                var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                if (nodeDef.flags & 16384 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).index).componentView;\n                    initView(compView, instance, instance);\n                }\n                break;\n            }\n            case 16 /* TypePureArray */:\n            case 32 /* TypePureObject */:\n            case 64 /* TypePurePipe */:\n                nodeData = (createPureExpression(view, nodeDef));\n                break;\n            case 33554432 /* TypeContentQuery */:\n            case 67108864 /* TypeViewQuery */:\n                nodeData = (createQuery());\n                break;\n            case 4 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 33554432 /* TypeContentQuery */ | 67108864 /* TypeViewQuery */, 134217728 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 33554432 /* TypeContentQuery */, 268435456 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 1048576 /* AfterContentChecked */ |\n        (view.state & 1 /* FirstCheck */ ? 524288 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeViewQuery */, 268435456 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 4194304 /* AfterViewChecked */ |\n        (view.state & 1 /* FirstCheck */ ? 2097152 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~2 /* ChecksEnabled */;\n    }\n    view.state &= ~1 /* FirstCheck */;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 100673535 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 8192 /* TypeDirective */:\n            changed =\n                checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 16 /* TypePureArray */:\n        case 32 /* TypePureObject */:\n        case 64 /* TypePurePipe */:\n            changed =\n                checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 100673535 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n            break;\n        case 8192 /* TypeDirective */:\n            changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            break;\n        case 16 /* TypePureArray */:\n        case 32 /* TypePureObject */:\n        case 64 /* TypePurePipe */:\n            changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            break;\n    }\n    if (changed) {\n        // Update oldValues after all bindings have been updated,\n        // as a setter for a property might update other properties.\n        var /** @type {?} */ bindLen = nodeDef.bindings.length;\n        var /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n        var /** @type {?} */ oldValues = view.oldValues;\n        for (var /** @type {?} */ i = 0; i < bindLen; i++) {\n            oldValues[bindingStart + i] = values[i];\n        }\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.index), \"Query \" + ((nodeDef.query)).id + \" not dirty\", \"Query \" + ((nodeDef.query)).id + \" dirty\", (view.state & 1 /* FirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 8 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 65536 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 8 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n    }\n}\nvar ViewAction = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 16777216 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 8388608 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 8388608 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 8388608 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 2 /* ChecksEnabled */) &&\n                (viewState & (4 /* Errored */ | 8 /* Destroyed */)) === 0) {\n                checkNoChangesView(view);\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 2 /* ChecksEnabled */) &&\n                (viewState & (4 /* Errored */ | 8 /* Destroyed */)) === 0) {\n                checkAndUpdateView(view);\n            }\n            break;\n        case ViewAction.Destroy:\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.index);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) { return view.def.handleEvent(view, nodeIndex, eventName, event); },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, def, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer\n    };\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 112 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 112 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parent, anchorDef, context) {\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parent, anchorDef, context]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 8 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 8192 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 112 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 8 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 112 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = ((checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 8192 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n            if (!((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    ((checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 8192 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     */\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.index).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 10112 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 10112 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.index;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.index;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).index);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        _currentView.state |= 4 /* Errored */;\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * @return {?}\n */\nfunction _initViewEngine() {\n    initServicesIfNeeded();\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    /**\n     * @param {?} appRef\n     */\n    function ApplicationModule(appRef) {\n    }\n    return ApplicationModule;\n}());\nApplicationModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    ApplicationRef_,\n                    { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                    ApplicationInitStatus,\n                    Compiler,\n                    APP_ID_RANDOM_PROVIDER,\n                    { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                    {\n                        provide: LOCALE_ID,\n                        useFactory: _localeFactory,\n                        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                    },\n                    { provide: APP_INITIALIZER, useValue: _initViewEngine, multi: true },\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nApplicationModule.ctorParameters = function () { return [\n    { type: ApplicationRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n * transition transition} entries that will be evaluated when the expression bound to the trigger\n * changes.\n *\n * Triggers are registered within the component annotation data under the {\\@link\n * Component#animations-anchor animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and {\\@link\n * transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * tools/gulp-tasks/validate-commit-message.js ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { name: name, definitions: definitions };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different statrting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction group$1(steps) {\n    return { type: 3 /* Group */, steps: steps };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$1(steps) {\n    return { type: 2 /* Sequence */, steps: steps };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$1(name, styles) {\n    return { type: 0 /* State */, name: name, styles: styles };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* KeyframeSequence */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps) {\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE$$1 = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Class, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, forwardRef, resolveForwardRef, Injector, ReflectiveInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, OpaqueToken, Inject, Optional, Injectable, Self, SkipSelf, Host, NgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, ValueUnwrapper as ɵValueUnwrapper, devModeEqual as ɵdevModeEqual, isListLikeIterable as ɵisListLikeIterable, ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, Console as ɵConsole, ERROR_COMPONENT_TYPE as ɵERROR_COMPONENT_TYPE, ComponentFactory as ɵComponentFactory, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, LIFECYCLE_HOOKS_VALUES as ɵLIFECYCLE_HOOKS_VALUES, LifecycleHooks as ɵLifecycleHooks, ViewMetadata as ɵViewMetadata, Reflector as ɵReflector, reflector as ɵreflector, ReflectionCapabilities as ɵReflectionCapabilities, ReflectorReader as ɵReflectorReader, RenderDebugInfo as ɵRenderDebugInfo, _global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify, makeDecorator as ɵmakeDecorator, isObservable as ɵisObservable, isPromise as ɵisPromise, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, NgModuleInjector as ɵNgModuleInjector, registerModuleFactory as ɵregisterModuleFactory, EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid, AUTO_STYLE$$1 as AUTO_STYLE, trigger$$1 as trigger, animate$$1 as animate, group$$1 as group, sequence$$1 as sequence, style$$1 as style, state$$1 as state, keyframes$$1 as keyframes, transition$$1 as transition, animate$1 as ɵba, group$1 as ɵbb, keyframes$1 as ɵbf, sequence$1 as ɵbc, state$1 as ɵbe, style$1 as ɵbd, transition$1 as ɵbg, trigger$1 as ɵz, _initViewEngine as ɵo, _iterableDiffersFactory as ɵl, _keyValueDiffersFactory as ɵm, _localeFactory as ɵn, ApplicationRef_ as ɵf, _appIdRandomProviderFactory as ɵg, defaultIterableDiffers as ɵh, defaultKeyValueDiffers as ɵi, DefaultIterableDifferFactory as ɵj, DefaultKeyValueDifferFactory as ɵk, ReflectiveInjector_ as ɵc, ReflectiveDependency as ɵd, resolveReflectiveProviders as ɵe, wtfEnabled as ɵp, createScope$1 as ɵr, detectWTF as ɵq, endTimeRange as ɵu, leave as ɵs, startTimeRange as ɵt, makeParamDecorator as ɵa, makePropDecorator as ɵb, _def as ɵw, DebugContext as ɵx };\n//# sourceMappingURL=core.es5.js.map\n"
    },
    {
      "id": 2,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils.android.js",
      "name": "./~/tns-core-modules/utils/utils.android.js",
      "index": 13,
      "index2": 8,
      "size": 7513,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
      "issuerId": 30,
      "issuerName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "4:14-42"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "6:14-42"
        },
        {
          "moduleId": 33,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-source/image-source.android.js",
          "module": "./~/tns-core-modules/image-source/image-source.android.js",
          "moduleName": "./~/tns-core-modules/image-source/image-source.android.js",
          "type": "cjs require",
          "userRequest": "../utils/utils",
          "loc": "3:14-39"
        },
        {
          "moduleId": 42,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
          "module": "./~/tns-core-modules/ui/animation/animation.android.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "7:14-42"
        },
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/utils",
          "loc": "5:18-57"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../../utils/utils",
          "loc": "8:14-45"
        },
        {
          "moduleId": 65,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "module": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "6:14-42"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../../../utils/utils",
          "loc": "10:14-45"
        },
        {
          "moduleId": 135,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/gestures/gestures.android.js",
          "module": "./~/tns-core-modules/ui/gestures/gestures.android.js",
          "moduleName": "./~/tns-core-modules/ui/gestures/gestures.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "6:14-42"
        },
        {
          "moduleId": 137,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
          "module": "./~/tns-core-modules/ui/image/image-common.js",
          "moduleName": "./~/tns-core-modules/ui/image/image-common.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "12:14-42"
        },
        {
          "moduleId": 157,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
          "module": "./~/tns-core-modules/ui/styling/background.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/background.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "6:14-42"
        },
        {
          "moduleId": 163,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "9:14-42"
        },
        {
          "moduleId": 169,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view-common.js",
          "module": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "6:14-42"
        },
        {
          "moduleId": 194,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/utils",
          "loc": "4:18-57"
        },
        {
          "moduleId": 195,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/utils",
          "loc": "3:18-57"
        },
        {
          "moduleId": 201,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/utils",
          "loc": "5:18-57"
        },
        {
          "moduleId": 202,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/utils",
          "loc": "3:18-57"
        },
        {
          "moduleId": 261,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar.android.js",
          "module": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/utils",
          "loc": "7:14-42"
        },
        {
          "moduleId": 267,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "module": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "moduleName": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "type": "cjs require",
          "userRequest": "../../../utils/utils",
          "loc": "3:14-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar trace_1 = require(\"../trace\");\n__export(require(\"./utils-common\"));\nvar application_1 = require(\"../application\");\nvar layout;\n(function (layout) {\n    var density;\n    var MODE_SHIFT = 30;\n    var MODE_MASK = 0x3 << MODE_SHIFT;\n    var sdkVersion;\n    var useOldMeasureSpec = false;\n    function makeMeasureSpec(size, mode) {\n        if (sdkVersion === undefined) {\n            sdkVersion = ad.getApplicationContext().getApplicationInfo().targetSdkVersion;\n            useOldMeasureSpec = sdkVersion <= android.os.Build.VERSION_CODES.JELLY_BEAN_MR1;\n        }\n        if (useOldMeasureSpec) {\n            return size + mode;\n        }\n        return (size & ~MODE_MASK) | (mode & MODE_MASK);\n    }\n    layout.makeMeasureSpec = makeMeasureSpec;\n    function getDisplayDensity() {\n        if (density === undefined) {\n            density = ad.getResources().getDisplayMetrics().density;\n        }\n        return density;\n    }\n    layout.getDisplayDensity = getDisplayDensity;\n    function toDevicePixels(value) {\n        return value * getDisplayDensity();\n    }\n    layout.toDevicePixels = toDevicePixels;\n    function toDeviceIndependentPixels(value) {\n        return value / getDisplayDensity();\n    }\n    layout.toDeviceIndependentPixels = toDeviceIndependentPixels;\n    function measureNativeView(nativeView, width, widthMode, height, heightMode) {\n        var view = nativeView;\n        view.measure(makeMeasureSpec(width, widthMode), makeMeasureSpec(height, heightMode));\n        return {\n            width: view.getMeasuredWidth(),\n            height: view.getMeasuredHeight()\n        };\n    }\n    layout.measureNativeView = measureNativeView;\n})(layout = exports.layout || (exports.layout = {}));\nvar ad;\n(function (ad) {\n    var application;\n    var applicationContext;\n    var contextResources;\n    var packageName;\n    function getApplicationContext() {\n        if (!applicationContext) {\n            applicationContext = getApplication().getApplicationContext();\n        }\n        return applicationContext;\n    }\n    ad.getApplicationContext = getApplicationContext;\n    function getApplication() {\n        if (!application) {\n            application = application_1.getNativeApplication();\n        }\n        return application;\n    }\n    ad.getApplication = getApplication;\n    function getResources() {\n        if (!contextResources) {\n            contextResources = getApplication().getResources();\n        }\n        return contextResources;\n    }\n    ad.getResources = getResources;\n    function getPackageName() {\n        if (!packageName) {\n            packageName = getApplicationContext().getPackageName();\n        }\n        return packageName;\n    }\n    var inputMethodManager;\n    function getInputMethodManager() {\n        if (!inputMethodManager) {\n            inputMethodManager = getApplicationContext().getSystemService(android.content.Context.INPUT_METHOD_SERVICE);\n        }\n        return inputMethodManager;\n    }\n    ad.getInputMethodManager = getInputMethodManager;\n    function showSoftInput(nativeView) {\n        var inputManager = getInputMethodManager();\n        if (inputManager && nativeView instanceof android.view.View) {\n            inputManager.showSoftInput(nativeView, android.view.inputmethod.InputMethodManager.SHOW_IMPLICIT);\n        }\n    }\n    ad.showSoftInput = showSoftInput;\n    function dismissSoftInput(nativeView) {\n        var inputManager = getInputMethodManager();\n        var windowToken;\n        if (nativeView instanceof android.view.View) {\n            windowToken = nativeView.getWindowToken();\n        }\n        else if (application_1.android.foregroundActivity instanceof android.app.Activity) {\n            var decorView = application_1.android.foregroundActivity.getWindow().getDecorView();\n            windowToken = decorView ? decorView.getWindowToken() : null;\n        }\n        if (inputManager && windowToken) {\n            inputManager.hideSoftInputFromWindow(windowToken, 0);\n        }\n    }\n    ad.dismissSoftInput = dismissSoftInput;\n    var collections;\n    (function (collections) {\n        function stringArrayToStringSet(str) {\n            var hashSet = new java.util.HashSet();\n            if (str !== undefined) {\n                for (var element in str) {\n                    hashSet.add('' + str[element]);\n                }\n            }\n            return hashSet;\n        }\n        collections.stringArrayToStringSet = stringArrayToStringSet;\n        function stringSetToStringArray(stringSet) {\n            var arr = [];\n            if (stringSet !== undefined) {\n                var it = stringSet.iterator();\n                while (it.hasNext()) {\n                    var element = '' + it.next();\n                    arr.push(element);\n                }\n            }\n            return arr;\n        }\n        collections.stringSetToStringArray = stringSetToStringArray;\n    })(collections = ad.collections || (ad.collections = {}));\n    var resources;\n    (function (resources_1) {\n        var attr;\n        var attrCache = new Map();\n        function getDrawableId(name) {\n            return getId(\":drawable/\" + name);\n        }\n        resources_1.getDrawableId = getDrawableId;\n        function getStringId(name) {\n            return getId(\":string/\" + name);\n        }\n        resources_1.getStringId = getStringId;\n        function getId(name) {\n            var resources = getResources();\n            var packageName = getPackageName();\n            var uri = packageName + name;\n            return resources.getIdentifier(uri, null, null);\n        }\n        resources_1.getId = getId;\n        function getPalleteColor(name, context) {\n            if (attrCache.has(name)) {\n                return attrCache.get(name);\n            }\n            var result = 0;\n            try {\n                if (!attr) {\n                    attr = java.lang.Class.forName(\"android.support.v7.appcompat.R$attr\");\n                }\n                var colorID = 0;\n                var field = attr.getField(name);\n                if (field) {\n                    colorID = field.getInt(null);\n                }\n                if (colorID) {\n                    var typedValue = new android.util.TypedValue();\n                    context.getTheme().resolveAttribute(colorID, typedValue, true);\n                    result = typedValue.data;\n                }\n            }\n            catch (ex) {\n                trace_1.write(\"Cannot get pallete color: \" + name, trace_1.categories.Error, trace_1.messageType.error);\n            }\n            attrCache.set(name, result);\n            return result;\n        }\n        resources_1.getPalleteColor = getPalleteColor;\n    })(resources = ad.resources || (ad.resources = {}));\n})(ad = exports.ad || (exports.ad = {}));\nfunction GC() {\n    gc();\n}\nexports.GC = GC;\nfunction openUrl(location) {\n    var context = ad.getApplicationContext();\n    try {\n        var intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(location.trim()));\n        intent.addFlags(android.content.Intent.FLAG_ACTIVITY_NEW_TASK);\n        context.startActivity(intent);\n    }\n    catch (e) {\n        trace_1.write(\"Error in OpenURL\", trace_1.categories.Error, trace_1.messageType.error);\n        return false;\n    }\n    return true;\n}\nexports.openUrl = openUrl;\n//# sourceMappingURL=utils.android.js.map"
    },
    {
      "id": 3,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application.android.js",
      "name": "./~/tns-core-modules/application/application.android.js",
      "index": 16,
      "index2": 7,
      "size": 10640,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
      "issuerId": 174,
      "issuerName": "./app/vendor-platform.android.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils.android.js",
          "module": "./~/tns-core-modules/utils/utils.android.js",
          "moduleName": "./~/tns-core-modules/utils/utils.android.js",
          "type": "cjs require",
          "userRequest": "../application",
          "loc": "7:20-45"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/platform/platform.android.js",
          "module": "./~/tns-core-modules/platform/platform.android.js",
          "moduleName": "./~/tns-core-modules/platform/platform.android.js",
          "type": "cjs require",
          "userRequest": "../application",
          "loc": "2:16-41"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "8:18-46"
        },
        {
          "moduleId": 33,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-source/image-source.android.js",
          "module": "./~/tns-core-modules/image-source/image-source.android.js",
          "moduleName": "./~/tns-core-modules/image-source/image-source.android.js",
          "type": "cjs require",
          "userRequest": "../application",
          "loc": "5:20-45"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
          "module": "./~/tns-core-modules/ui/styling/font.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/font.android.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "7:18-46"
        },
        {
          "moduleId": 61,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "module": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "moduleName": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "5:16-44"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../../application",
          "loc": "17:18-49"
        },
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/application",
          "loc": "4:0-39"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/application",
          "loc": "4:20-59"
        },
        {
          "moduleId": 130,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs.android.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "6:20-48"
        },
        {
          "moduleId": 132,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/activity.android.js",
          "module": "./~/tns-core-modules/ui/frame/activity.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/activity.android.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "3:16-44"
        },
        {
          "moduleId": 133,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
          "module": "./~/tns-core-modules/ui/frame/frame-common.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame-common.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "9:18-46"
        },
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "../../application",
          "loc": "7:18-46"
        },
        {
          "moduleId": 174,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
          "module": "./app/vendor-platform.android.ts",
          "moduleName": "./app/vendor-platform.android.ts",
          "type": "cjs require",
          "userRequest": "application",
          "loc": "18:19-41"
        },
        {
          "moduleId": 174,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
          "module": "./app/vendor-platform.android.ts",
          "moduleName": "./app/vendor-platform.android.ts",
          "type": "cjs require",
          "userRequest": "application",
          "loc": "12:0-22"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/application",
          "loc": "5:0-39"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/application",
          "loc": "19:20-59"
        },
        {
          "moduleId": 236,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system-access.android.js",
          "module": "./~/tns-core-modules/file-system/file-system-access.android.js",
          "moduleName": "./~/tns-core-modules/file-system/file-system-access.android.js",
          "type": "cjs require",
          "userRequest": "../application",
          "loc": "3:20-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar application_common_1 = require(\"./application-common\");\n__export(require(\"./application-common\"));\nvar ActivityCreated = \"activityCreated\";\nvar ActivityDestroyed = \"activityDestroyed\";\nvar ActivityStarted = \"activityStarted\";\nvar ActivityPaused = \"activityPaused\";\nvar ActivityResumed = \"activityResumed\";\nvar ActivityStopped = \"activityStopped\";\nvar SaveActivityState = \"saveActivityState\";\nvar ActivityResult = \"activityResult\";\nvar ActivityBackPressed = \"activityBackPressed\";\nvar ActivityRequestPermissions = \"activityRequestPermissions\";\nvar AndroidApplication = (function (_super) {\n    __extends(AndroidApplication, _super);\n    function AndroidApplication() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._registeredReceivers = {};\n        _this._pendingReceiverRegistrations = new Array();\n        return _this;\n    }\n    Object.defineProperty(AndroidApplication.prototype, \"currentContext\", {\n        get: function () {\n            return this.foregroundActivity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AndroidApplication.prototype.init = function (nativeApp) {\n        if (this.nativeApp === nativeApp) {\n            return;\n        }\n        if (this.nativeApp) {\n            throw new Error(\"application.android already initialized.\");\n        }\n        this.nativeApp = nativeApp;\n        this.packageName = nativeApp.getPackageName();\n        this.context = nativeApp.getApplicationContext();\n        var lifecycleCallbacks = initLifecycleCallbacks();\n        var componentCallbacks = initComponentCallbacks();\n        this.nativeApp.registerActivityLifecycleCallbacks(lifecycleCallbacks);\n        this.nativeApp.registerComponentCallbacks(componentCallbacks);\n        this._registerPendingReceivers();\n    };\n    AndroidApplication.prototype._registerPendingReceivers = function () {\n        var _this = this;\n        this._pendingReceiverRegistrations.forEach(function (func) { return func(_this.context); });\n        this._pendingReceiverRegistrations.length = 0;\n    };\n    AndroidApplication.prototype.registerBroadcastReceiver = function (intentFilter, onReceiveCallback) {\n        ensureBroadCastReceiverClass();\n        var that = this;\n        var registerFunc = function (context) {\n            var receiver = new BroadcastReceiverClass(onReceiveCallback);\n            context.registerReceiver(receiver, new android.content.IntentFilter(intentFilter));\n            that._registeredReceivers[intentFilter] = receiver;\n        };\n        if (this.context) {\n            registerFunc(this.context);\n        }\n        else {\n            this._pendingReceiverRegistrations.push(registerFunc);\n        }\n    };\n    AndroidApplication.prototype.unregisterBroadcastReceiver = function (intentFilter) {\n        var receiver = this._registeredReceivers[intentFilter];\n        if (receiver) {\n            this.context.unregisterReceiver(receiver);\n            this._registeredReceivers[intentFilter] = undefined;\n            delete this._registeredReceivers[intentFilter];\n        }\n    };\n    return AndroidApplication;\n}(application_common_1.Observable));\nAndroidApplication.activityCreatedEvent = ActivityCreated;\nAndroidApplication.activityDestroyedEvent = ActivityDestroyed;\nAndroidApplication.activityStartedEvent = ActivityStarted;\nAndroidApplication.activityPausedEvent = ActivityPaused;\nAndroidApplication.activityResumedEvent = ActivityResumed;\nAndroidApplication.activityStoppedEvent = ActivityStopped;\nAndroidApplication.saveActivityStateEvent = SaveActivityState;\nAndroidApplication.activityResultEvent = ActivityResult;\nAndroidApplication.activityBackPressedEvent = ActivityBackPressed;\nAndroidApplication.activityRequestPermissionsEvent = ActivityRequestPermissions;\nexports.AndroidApplication = AndroidApplication;\nvar androidApp = new AndroidApplication();\nexports.android = androidApp;\napplication_common_1.setApplication(androidApp);\nvar mainEntry;\nvar started = false;\nfunction start(entry) {\n    if (started) {\n        throw new Error(\"Application is already started.\");\n    }\n    started = true;\n    mainEntry = typeof entry === \"string\" ? { moduleName: entry } : entry;\n    if (!androidApp.nativeApp) {\n        var nativeApp = getNativeApplication();\n        androidApp.init(nativeApp);\n    }\n}\nexports.start = start;\nfunction getMainEntry() {\n    return mainEntry;\n}\nexports.getMainEntry = getMainEntry;\nfunction getNativeApplication() {\n    var nativeApp = androidApp.nativeApp;\n    if (!nativeApp) {\n        if (!nativeApp && com.tns.NativeScriptApplication) {\n            nativeApp = com.tns.NativeScriptApplication.getInstance();\n        }\n        if (!nativeApp) {\n            var clazz = java.lang.Class.forName(\"android.app.ActivityThread\");\n            if (clazz) {\n                var method = clazz.getMethod(\"currentApplication\", null);\n                if (method) {\n                    nativeApp = method.invoke(null, null);\n                }\n            }\n        }\n        if (!nativeApp) {\n            throw new Error(\"Failed to retrieve native Android Application object. If you have a custom android.app.Application type implemented make sure that you've called the '<application-module>.android.init' method.\");\n        }\n    }\n    return nativeApp;\n}\nexports.getNativeApplication = getNativeApplication;\nglobal.__onLiveSync = function () {\n    if (androidApp && androidApp.paused) {\n        return;\n    }\n    application_common_1.livesync();\n};\nfunction initLifecycleCallbacks() {\n    var lifecycleCallbacks = new android.app.Application.ActivityLifecycleCallbacks({\n        onActivityCreated: function (activity, savedInstanceState) {\n            var activityInfo = activity.getPackageManager().getActivityInfo(activity.getComponentName(), android.content.pm.PackageManager.GET_META_DATA);\n            if (activityInfo.metaData) {\n                var setThemeOnLaunch = activityInfo.metaData.getInt(\"SET_THEME_ON_LAUNCH\", -1);\n                if (setThemeOnLaunch !== -1) {\n                    activity.setTheme(setThemeOnLaunch);\n                }\n            }\n            if (!androidApp.startActivity) {\n                androidApp.startActivity = activity;\n            }\n            androidApp.notify({ eventName: ActivityCreated, object: androidApp, activity: activity, bundle: savedInstanceState });\n        },\n        onActivityDestroyed: function (activity) {\n            if (activity === androidApp.foregroundActivity) {\n                androidApp.foregroundActivity = undefined;\n            }\n            if (activity === androidApp.startActivity) {\n                androidApp.startActivity = undefined;\n            }\n            androidApp.notify({ eventName: ActivityDestroyed, object: androidApp, activity: activity });\n            gc();\n        },\n        onActivityPaused: function (activity) {\n            if (activity.isNativeScriptActivity) {\n                androidApp.paused = true;\n                application_common_1.notify({ eventName: application_common_1.suspendEvent, object: androidApp, android: activity });\n            }\n            androidApp.notify({ eventName: ActivityPaused, object: androidApp, activity: activity });\n        },\n        onActivityResumed: function (activity) {\n            androidApp.foregroundActivity = activity;\n            if (activity.isNativeScriptActivity) {\n                application_common_1.notify({ eventName: application_common_1.resumeEvent, object: androidApp, android: activity });\n                androidApp.paused = false;\n            }\n            androidApp.notify({ eventName: ActivityResumed, object: androidApp, activity: activity });\n        },\n        onActivitySaveInstanceState: function (activity, outState) {\n            androidApp.notify({ eventName: SaveActivityState, object: androidApp, activity: activity, bundle: outState });\n        },\n        onActivityStarted: function (activity) {\n            androidApp.notify({ eventName: ActivityStarted, object: androidApp, activity: activity });\n        },\n        onActivityStopped: function (activity) {\n            androidApp.notify({ eventName: ActivityStopped, object: androidApp, activity: activity });\n        }\n    });\n    return lifecycleCallbacks;\n}\nvar currentOrientation;\nfunction initComponentCallbacks() {\n    var componentCallbacks = new android.content.ComponentCallbacks2({\n        onLowMemory: function () {\n            gc();\n            java.lang.System.gc();\n            application_common_1.notify({ eventName: application_common_1.lowMemoryEvent, object: this, android: this });\n        },\n        onTrimMemory: function (level) {\n        },\n        onConfigurationChanged: function (newConfig) {\n            var newOrientation = newConfig.orientation;\n            if (newOrientation === currentOrientation) {\n                return;\n            }\n            currentOrientation = newOrientation;\n            var newValue;\n            switch (newOrientation) {\n                case android.content.res.Configuration.ORIENTATION_LANDSCAPE:\n                    newValue = \"landscape\";\n                    break;\n                case android.content.res.Configuration.ORIENTATION_PORTRAIT:\n                    newValue = \"portrait\";\n                    break;\n                default:\n                    newValue = \"unknown\";\n                    break;\n            }\n            application_common_1.notify({\n                eventName: application_common_1.orientationChangedEvent,\n                android: androidApp.nativeApp,\n                newValue: newValue,\n                object: androidApp\n            });\n        }\n    });\n    return componentCallbacks;\n}\nvar BroadcastReceiverClass;\nfunction ensureBroadCastReceiverClass() {\n    if (BroadcastReceiverClass) {\n        return;\n    }\n    var BroadcastReceiver = (function (_super) {\n        __extends(BroadcastReceiver, _super);\n        function BroadcastReceiver(onReceiveCallback) {\n            var _this = _super.call(this) || this;\n            _this._onReceiveCallback = onReceiveCallback;\n            return global.__native(_this);\n        }\n        BroadcastReceiver.prototype.onReceive = function (context, intent) {\n            if (this._onReceiveCallback) {\n                this._onReceiveCallback(context, intent);\n            }\n        };\n        return BroadcastReceiver;\n    }(android.content.BroadcastReceiver));\n    BroadcastReceiverClass = BroadcastReceiver;\n}\n//# sourceMappingURL=application.android.js.map"
    },
    {
      "id": 4,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base.android.js",
      "name": "./~/tns-core-modules/ui/layouts/layout-base.android.js",
      "index": 135,
      "index2": 129,
      "size": 2898,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
      "issuerId": 90,
      "issuerName": "./~/nativescript-angular/view-util.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 68,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/proxy-view-container/proxy-view-container.js",
          "module": "./~/tns-core-modules/ui/proxy-view-container/proxy-view-container.js",
          "moduleName": "./~/tns-core-modules/ui/proxy-view-container/proxy-view-container.js",
          "type": "cjs require",
          "userRequest": "../layouts/layout-base",
          "loc": "2:20-53"
        },
        {
          "moduleId": 76,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
          "module": "./~/nativescript-angular/directives/list-view-comp.js",
          "moduleName": "./~/nativescript-angular/directives/list-view-comp.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/layout-base",
          "loc": "5:20-70"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/layout-base",
          "loc": "5:20-70"
        },
        {
          "moduleId": 139,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "6:9-34"
        },
        {
          "moduleId": 139,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "5:20-45"
        },
        {
          "moduleId": 140,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "12:9-34"
        },
        {
          "moduleId": 140,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "5:20-45"
        },
        {
          "moduleId": 141,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "5:20-45"
        },
        {
          "moduleId": 141,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "6:9-34"
        },
        {
          "moduleId": 142,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "6:9-34"
        },
        {
          "moduleId": 142,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "5:20-45"
        },
        {
          "moduleId": 145,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "5:20-45"
        },
        {
          "moduleId": 145,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "6:9-34"
        },
        {
          "moduleId": 146,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "5:20-45"
        },
        {
          "moduleId": 146,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
          "module": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
          "type": "cjs require",
          "userRequest": "../layout-base",
          "loc": "6:9-34"
        },
        {
          "moduleId": 257,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "type": "cjs require",
          "userRequest": "../layouts/layout-base",
          "loc": "8:20-53"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../layouts/layout-base",
          "loc": "11:9-42"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../layouts/layout-base",
          "loc": "6:20-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_common_1 = require(\"./layout-base-common\");\n__export(require(\"./layout-base-common\"));\nvar LayoutBase = (function (_super) {\n    __extends(LayoutBase, _super);\n    function LayoutBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LayoutBase.prototype[layout_base_common_1.clipToBoundsProperty.getDefault] = function () {\n        return true;\n    };\n    LayoutBase.prototype[layout_base_common_1.clipToBoundsProperty.setNative] = function (value) {\n        console.warn(\"clipToBounds with value false is not supported on Android. You can use this.android.getParent().setClipChildren(false) as an alternative\");\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingTopProperty.getDefault] = function () {\n        return { value: this._defaultPaddingTop, unit: \"px\" };\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingTopProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingTop(this.nativeView, layout_base_common_1.Length.toDevicePixels(value, 0) + layout_base_common_1.Length.toDevicePixels(this.style.borderTopWidth, 0));\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingRightProperty.getDefault] = function () {\n        return { value: this._defaultPaddingRight, unit: \"px\" };\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingRightProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingRight(this.nativeView, layout_base_common_1.Length.toDevicePixels(value, 0) + layout_base_common_1.Length.toDevicePixels(this.style.borderRightWidth, 0));\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingBottomProperty.getDefault] = function () {\n        return { value: this._defaultPaddingBottom, unit: \"px\" };\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingBottomProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingBottom(this.nativeView, layout_base_common_1.Length.toDevicePixels(value, 0) + layout_base_common_1.Length.toDevicePixels(this.style.borderBottomWidth, 0));\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingLeftProperty.getDefault] = function () {\n        return { value: this._defaultPaddingLeft, unit: \"px\" };\n    };\n    LayoutBase.prototype[layout_base_common_1.paddingLeftProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingLeft(this.nativeView, layout_base_common_1.Length.toDevicePixels(value, 0) + layout_base_common_1.Length.toDevicePixels(this.style.borderLeftWidth, 0));\n    };\n    return LayoutBase;\n}(layout_base_common_1.LayoutBaseCommon));\nexports.LayoutBase = LayoutBase;\n//# sourceMappingURL=layout-base.android.js.map"
    },
    {
      "id": 5,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
      "name": "./~/rxjs/Observable.js",
      "index": 92,
      "index2": 101,
      "size": 5449,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
      "issuerId": 1,
      "issuerName": "./~/@angular/core/@angular/core.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
          "module": "./~/@angular/core/@angular/core.es5.js",
          "moduleName": "./~/@angular/core/@angular/core.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/Observable",
          "loc": "11:0-45"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/Observable",
          "loc": "22:0-45"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./Observable",
          "loc": "7:19-42"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "6:19-43"
        },
        {
          "moduleId": 53,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 54,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/EmptyObservable.js",
          "module": "./~/rxjs/observable/EmptyObservable.js",
          "moduleName": "./~/rxjs/observable/EmptyObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 100,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/PromiseObservable.js",
          "module": "./~/rxjs/observable/PromiseObservable.js",
          "moduleName": "./~/rxjs/observable/PromiseObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "8:19-43"
        },
        {
          "moduleId": 101,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ScalarObservable.js",
          "module": "./~/rxjs/observable/ScalarObservable.js",
          "moduleName": "./~/rxjs/observable/ScalarObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 170,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/http/@angular/http.es5.js",
          "module": "./~/@angular/http/@angular/http.es5.js",
          "moduleName": "./~/@angular/http/@angular/http.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/Observable",
          "loc": "12:0-45"
        },
        {
          "moduleId": 204,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Notification.js",
          "module": "./~/rxjs/Notification.js",
          "moduleName": "./~/rxjs/Notification.js",
          "type": "cjs require",
          "userRequest": "./Observable",
          "loc": "2:19-42"
        },
        {
          "moduleId": 206,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "module": "./~/rxjs/observable/ArrayLikeObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 207,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ConnectableObservable.js",
          "module": "./~/rxjs/observable/ConnectableObservable.js",
          "moduleName": "./~/rxjs/observable/ConnectableObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "8:19-43"
        },
        {
          "moduleId": 208,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
          "module": "./~/rxjs/observable/ForkJoinObservable.js",
          "moduleName": "./~/rxjs/observable/ForkJoinObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "7:19-43"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "15:19-43"
        },
        {
          "moduleId": 210,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/IteratorObservable.js",
          "module": "./~/rxjs/observable/IteratorObservable.js",
          "moduleName": "./~/rxjs/observable/IteratorObservable.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "8:19-43"
        },
        {
          "moduleId": 222,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/merge.js",
          "module": "./~/rxjs/operator/merge.js",
          "moduleName": "./~/rxjs/operator/merge.js",
          "type": "cjs require",
          "userRequest": "../Observable",
          "loc": "2:19-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map"
    },
    {
      "id": 6,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/platform/platform.android.js",
      "name": "./~/tns-core-modules/platform/platform.android.js",
      "index": 33,
      "index2": 20,
      "size": 5755,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
      "issuerId": 24,
      "issuerName": "./~/nativescript-angular/platform-providers.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system.js",
          "module": "./~/tns-core-modules/file-system/file-system.js",
          "moduleName": "./~/tns-core-modules/file-system/file-system.js",
          "type": "cjs require",
          "userRequest": "platform",
          "loc": "13:19-38"
        },
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "../../platform",
          "loc": "6:17-42"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
          "module": "./~/nativescript-angular/platform-providers.js",
          "moduleName": "./~/nativescript-angular/platform-providers.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/platform",
          "loc": "6:15-51"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
          "module": "./~/nativescript-angular/platform-providers.js",
          "moduleName": "./~/nativescript-angular/platform-providers.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/platform",
          "loc": "5:17-53"
        },
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
          "module": "./~/tns-core-modules/ui/page/page.android.js",
          "moduleName": "./~/tns-core-modules/ui/page/page.android.js",
          "type": "cjs require",
          "userRequest": "../../platform",
          "loc": "9:17-42"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "../../platform",
          "loc": "3:17-42"
        },
        {
          "moduleId": 61,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "module": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "moduleName": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "type": "cjs require",
          "userRequest": "../../platform",
          "loc": "2:17-42"
        },
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "../../platform",
          "loc": "7:17-42"
        },
        {
          "moduleId": 77,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/platform-filters.js",
          "module": "./~/nativescript-angular/directives/platform-filters.js",
          "moduleName": "./~/nativescript-angular/directives/platform-filters.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/platform",
          "loc": "3:17-53"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/platform",
          "loc": "7:17-53"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../../../platform",
          "loc": "7:17-45"
        },
        {
          "moduleId": 238,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http-request/http-request.android.js",
          "module": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "moduleName": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "type": "cjs require",
          "userRequest": "platform",
          "loc": "21:19-38"
        },
        {
          "moduleId": 239,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset-common.js",
          "module": "./~/tns-core-modules/image-asset/image-asset-common.js",
          "moduleName": "./~/tns-core-modules/image-asset/image-asset-common.js",
          "type": "cjs require",
          "userRequest": "../platform",
          "loc": "3:15-37"
        },
        {
          "moduleId": 240,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset.android.js",
          "module": "./~/tns-core-modules/image-asset/image-asset.android.js",
          "moduleName": "./~/tns-core-modules/image-asset/image-asset.android.js",
          "type": "cjs require",
          "userRequest": "../platform",
          "loc": "2:15-37"
        },
        {
          "moduleId": 248,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "module": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "type": "cjs require",
          "userRequest": "../../../platform",
          "loc": "6:15-43"
        },
        {
          "moduleId": 272,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/slide-transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
          "type": "cjs require",
          "userRequest": "../../platform",
          "loc": "3:15-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar appModule = require(\"../application\");\nvar MIN_TABLET_PIXELS = 600;\nvar platformNames;\n(function (platformNames) {\n    platformNames.android = \"Android\";\n    platformNames.ios = \"iOS\";\n})(platformNames = exports.platformNames || (exports.platformNames = {}));\nvar Device = (function () {\n    function Device() {\n    }\n    Object.defineProperty(Device.prototype, \"os\", {\n        get: function () {\n            return platformNames.android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"manufacturer\", {\n        get: function () {\n            if (!this._manufacturer) {\n                this._manufacturer = android.os.Build.MANUFACTURER;\n            }\n            return this._manufacturer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"osVersion\", {\n        get: function () {\n            if (!this._osVersion) {\n                this._osVersion = android.os.Build.VERSION.RELEASE;\n            }\n            return this._osVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"model\", {\n        get: function () {\n            if (!this._model) {\n                this._model = android.os.Build.MODEL;\n            }\n            return this._model;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"sdkVersion\", {\n        get: function () {\n            if (!this._sdkVersion) {\n                this._sdkVersion = android.os.Build.VERSION.SDK;\n            }\n            return this._sdkVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"deviceType\", {\n        get: function () {\n            if (!this._deviceType) {\n                var dips = Math.min(screen.mainScreen.widthPixels, screen.mainScreen.heightPixels) / screen.mainScreen.scale;\n                if (dips >= MIN_TABLET_PIXELS) {\n                    this._deviceType = \"Tablet\";\n                }\n                else {\n                    this._deviceType = \"Phone\";\n                }\n            }\n            return this._deviceType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"uuid\", {\n        get: function () {\n            if (!this._uuid) {\n                var nativeApp = appModule.android.nativeApp;\n                this._uuid = android.provider.Settings.Secure.getString(nativeApp.getContentResolver(), android.provider.Settings.Secure.ANDROID_ID);\n            }\n            return this._uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"language\", {\n        get: function () {\n            if (!this._language) {\n                this._language = java.util.Locale.getDefault().getLanguage().replace(\"_\", \"-\");\n            }\n            return this._language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"region\", {\n        get: function () {\n            if (!this._region) {\n                this._region = java.util.Locale.getDefault().getCountry();\n            }\n            return this._region;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Device;\n}());\nvar MainScreen = (function () {\n    function MainScreen() {\n    }\n    MainScreen.prototype.cssChanged = function (args) {\n        if (!this._metrics) {\n            this._metrics = new android.util.DisplayMetrics();\n        }\n        this.initMetrics();\n    };\n    MainScreen.prototype.initMetrics = function () {\n        var nativeApp = appModule.getNativeApplication();\n        nativeApp.getSystemService(android.content.Context.WINDOW_SERVICE).getDefaultDisplay().getRealMetrics(this._metrics);\n    };\n    Object.defineProperty(MainScreen.prototype, \"metrics\", {\n        get: function () {\n            if (!this._metrics) {\n                appModule.on(\"cssChanged\", this.cssChanged, this);\n                this._metrics = new android.util.DisplayMetrics();\n                this.initMetrics();\n            }\n            return this._metrics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MainScreen.prototype, \"widthPixels\", {\n        get: function () {\n            return this.metrics.widthPixels;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MainScreen.prototype, \"heightPixels\", {\n        get: function () {\n            return this.metrics.heightPixels;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MainScreen.prototype, \"scale\", {\n        get: function () {\n            return this.metrics.density;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MainScreen.prototype, \"widthDIPs\", {\n        get: function () {\n            return this.metrics.widthPixels / this.metrics.density;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MainScreen.prototype, \"heightDIPs\", {\n        get: function () {\n            return this.metrics.heightPixels / this.metrics.density;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MainScreen;\n}());\nexports.device = new Device();\nvar screen;\n(function (screen) {\n    screen.mainScreen = new MainScreen();\n})(screen = exports.screen || (exports.screen = {}));\nexports.isAndroid = true;\n//# sourceMappingURL=platform.android.js.map"
    },
    {
      "id": 7,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
      "name": "./~/tns-core-modules/ui/frame/frame.android.js",
      "index": 8,
      "index2": 64,
      "size": 32856,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
      "issuerId": 174,
      "issuerName": "./app/vendor-platform.android.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
          "module": "./~/nativescript-angular/platform-providers.js",
          "moduleName": "./~/nativescript-angular/platform-providers.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "2:14-50"
        },
        {
          "moduleId": 38,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-location-strategy.js",
          "module": "./~/nativescript-angular/router/ns-location-strategy.js",
          "moduleName": "./~/nativescript-angular/router/ns-location-strategy.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "5:14-50"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "4:14-50"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/router-extensions.js",
          "module": "./~/nativescript-angular/router/router-extensions.js",
          "moduleName": "./~/nativescript-angular/router/router-extensions.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "5:14-50"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "5:14-50"
        },
        {
          "moduleId": 129,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs-common.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "type": "cjs require",
          "userRequest": "ui/frame",
          "loc": "17:16-35"
        },
        {
          "moduleId": 132,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/activity.android.js",
          "module": "./~/tns-core-modules/ui/frame/activity.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/activity.android.js",
          "type": "cjs require",
          "userRequest": "./frame",
          "loc": "2:14-32"
        },
        {
          "moduleId": 150,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
          "module": "./~/tns-core-modules/ui/page/page-common.js",
          "moduleName": "./~/tns-core-modules/ui/page/page-common.js",
          "type": "cjs require",
          "userRequest": "../frame",
          "loc": "6:14-33"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "5:14-50"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame/frame",
          "loc": "19:15-57"
        },
        {
          "moduleId": 174,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
          "module": "./app/vendor-platform.android.ts",
          "moduleName": "./app/vendor-platform.android.ts",
          "type": "cjs require",
          "userRequest": "ui/frame",
          "loc": "13:0-19"
        },
        {
          "moduleId": 174,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
          "module": "./app/vendor-platform.android.ts",
          "moduleName": "./app/vendor-platform.android.ts",
          "type": "cjs require",
          "userRequest": "ui/frame",
          "loc": "21:19-38"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/frame",
          "loc": "20:14-50"
        },
        {
          "moduleId": 250,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/fragment.android.js",
          "module": "./~/tns-core-modules/ui/frame/fragment.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/fragment.android.js",
          "type": "cjs require",
          "userRequest": "./frame",
          "loc": "2:14-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar frame_common_1 = require(\"./frame-common\");\nvar constants_1 = require(\"../page/constants\");\nvar transitionModule = require(\"../transition\");\n__export(require(\"./frame-common\"));\nvar HIDDEN = \"_hidden\";\nvar INTENT_EXTRA = \"com.tns.activity\";\nvar FRAMEID = \"_frameId\";\nvar CALLBACKS = \"_callbacks\";\nvar navDepth = -1;\nvar fragmentId = -1;\nvar activityInitialized = false;\nfunction onFragmentShown(fragment) {\n    if (frame_common_1.traceEnabled()) {\n        frame_common_1.traceWrite(\"SHOWN \" + fragment, frame_common_1.traceCategories.NativeLifecycle);\n    }\n    var callbacks = fragment[CALLBACKS];\n    if (callbacks.clearHistory) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \" has been shown, but it is being cleared from history. Returning.\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        return null;\n    }\n    var frame = callbacks.frame;\n    var entry = callbacks.entry;\n    var page = entry.resolvedPage;\n    page._fragmentTag = entry.fragmentTag;\n    var currentNavigationContext;\n    var navigationQueue = frame._navigationQueue;\n    for (var i = 0; i < navigationQueue.length; i++) {\n        if (navigationQueue[i].entry === entry) {\n            currentNavigationContext = navigationQueue[i];\n            break;\n        }\n    }\n    var isBack = currentNavigationContext ? currentNavigationContext.isBackNavigation : false;\n    frame._addView(page);\n    if (!frame.isLoaded) {\n        frame._currentEntry = entry;\n        frame.onLoaded();\n    }\n    transitionModule._onFragmentShown(fragment, isBack);\n}\nfunction onFragmentHidden(fragment, destroyed) {\n    if (frame_common_1.traceEnabled()) {\n        frame_common_1.traceWrite(\"HIDDEN \" + fragment + \"; destroyed: \" + destroyed, frame_common_1.traceCategories.NativeLifecycle);\n    }\n    var callbacks = fragment[CALLBACKS];\n    var isBack = callbacks.entry.isBack;\n    callbacks.entry.isBack = undefined;\n    callbacks.entry.resolvedPage._fragmentTag = undefined;\n    transitionModule._onFragmentHidden(fragment, isBack, destroyed);\n}\nvar Frame = (function (_super) {\n    __extends(Frame, _super);\n    function Frame() {\n        var _this = _super.call(this) || this;\n        _this._containerViewId = -1;\n        _this._android = new AndroidFrame(_this);\n        return _this;\n    }\n    Object.defineProperty(Frame, \"defaultAnimatedNavigation\", {\n        get: function () {\n            return frame_common_1.FrameBase.defaultAnimatedNavigation;\n        },\n        set: function (value) {\n            frame_common_1.FrameBase.defaultAnimatedNavigation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Frame, \"defaultTransition\", {\n        get: function () {\n            return frame_common_1.FrameBase.defaultTransition;\n        },\n        set: function (value) {\n            frame_common_1.FrameBase.defaultTransition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Frame.prototype, \"containerViewId\", {\n        get: function () {\n            return this._containerViewId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Frame.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Frame.prototype._navigateCore = function (backstackEntry) {\n        _super.prototype._navigateCore.call(this, backstackEntry);\n        var activity = this._android.activity;\n        if (!activity) {\n            var currentActivity = this._android.currentActivity;\n            if (currentActivity) {\n                startActivity(currentActivity, this._android.frameId);\n            }\n            this._delayedNavigationEntry = backstackEntry;\n            return;\n        }\n        var manager = activity.getFragmentManager();\n        var currentFragment;\n        if (this._currentEntry) {\n            this._currentEntry.isNavigation = true;\n            currentFragment = manager.findFragmentByTag(this._currentEntry.fragmentTag);\n        }\n        var clearHistory = backstackEntry.entry.clearHistory;\n        if (clearHistory) {\n            navDepth = -1;\n        }\n        navDepth++;\n        fragmentId++;\n        var newFragmentTag = \"fragment\" + fragmentId + \"[\" + navDepth + \"]\";\n        ensureFragmentClass();\n        var newFragment = new fragmentClass();\n        var args = new android.os.Bundle();\n        args.putInt(FRAMEID, this._android.frameId);\n        newFragment.setArguments(args);\n        setFragmentCallbacks(newFragment);\n        var callbacks = newFragment[CALLBACKS];\n        callbacks.frame = this;\n        callbacks.entry = backstackEntry;\n        backstackEntry.isNavigation = true;\n        backstackEntry.fragmentTag = newFragmentTag;\n        backstackEntry.navDepth = navDepth;\n        var fragmentTransaction = manager.beginTransaction();\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"BEGIN TRANSACTION \" + fragmentTransaction, frame_common_1.traceCategories.Navigation);\n        }\n        var animated = this._getIsAnimatedNavigation(backstackEntry.entry);\n        var navigationTransition = this._getNavigationTransition(backstackEntry.entry);\n        if (currentFragment) {\n            transitionModule._clearForwardTransitions(currentFragment);\n            if (animated && navigationTransition) {\n                transitionModule._setAndroidFragmentTransitions(this.android.cachePagesOnNavigate, navigationTransition, currentFragment, newFragment, fragmentTransaction);\n            }\n        }\n        var length = manager.getBackStackEntryCount();\n        var emptyNativeBackStack = clearHistory && length > 0;\n        if (emptyNativeBackStack) {\n            for (var i = 0; i < length; i++) {\n                var fragmentToRemove = manager.findFragmentByTag(manager.getBackStackEntryAt(i).getName());\n                Frame._clearHistory(fragmentToRemove);\n            }\n            if (currentFragment) {\n                transitionModule._prepareCurrentFragmentForClearHistory(currentFragment);\n            }\n            var firstEntryName = manager.getBackStackEntryAt(0).getName();\n            if (frame_common_1.traceEnabled()) {\n                frame_common_1.traceWrite(\"POP BACK STACK \" + firstEntryName, frame_common_1.traceCategories.Navigation);\n            }\n            manager.popBackStackImmediate(firstEntryName, android.app.FragmentManager.POP_BACK_STACK_INCLUSIVE);\n        }\n        if (currentFragment && !emptyNativeBackStack) {\n            if (this.android.cachePagesOnNavigate && !clearHistory) {\n                if (frame_common_1.traceEnabled()) {\n                    frame_common_1.traceWrite(\"\\tHIDE \" + currentFragment, frame_common_1.traceCategories.Navigation);\n                }\n                fragmentTransaction.hide(currentFragment);\n            }\n            else {\n                if (frame_common_1.traceEnabled()) {\n                    frame_common_1.traceWrite(\"\\tREMOVE \" + currentFragment, frame_common_1.traceCategories.Navigation);\n                }\n                fragmentTransaction.remove(currentFragment);\n            }\n        }\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"\\tADD \" + newFragmentTag + \"<\" + callbacks.entry.resolvedPage + \">\", frame_common_1.traceCategories.Navigation);\n        }\n        fragmentTransaction.add(this.containerViewId, newFragment, newFragmentTag);\n        if (this.backStack.length > 0 && currentFragment && !clearHistory) {\n            if (frame_common_1.traceEnabled()) {\n                frame_common_1.traceWrite(\"\\tADD TO BACK STACK \" + currentFragment, frame_common_1.traceCategories.Navigation);\n            }\n            fragmentTransaction.addToBackStack(this._currentEntry.fragmentTag);\n        }\n        if (currentFragment) {\n            ensureAnimationFixed();\n            var trans = void 0;\n            if (this.android.cachePagesOnNavigate && animationFixed < 0 && !navigationTransition) {\n                trans = android.app.FragmentTransaction.TRANSIT_NONE;\n            }\n            else {\n                trans = animated ? android.app.FragmentTransaction.TRANSIT_FRAGMENT_OPEN : android.app.FragmentTransaction.TRANSIT_NONE;\n            }\n            if (frame_common_1.traceEnabled()) {\n                frame_common_1.traceWrite(\"\\tSET TRANSITION \" + (trans === 0 ? \"NONE\" : \"OPEN\"), frame_common_1.traceCategories.Navigation);\n            }\n            fragmentTransaction.setTransition(trans);\n        }\n        fragmentTransaction.commit();\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"END TRANSACTION \" + fragmentTransaction, frame_common_1.traceCategories.Navigation);\n        }\n    };\n    Frame._clearHistory = function (fragment) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"CLEAR HISTORY FOR \" + fragment, frame_common_1.traceCategories.Navigation);\n        }\n        var callbacks = fragment[CALLBACKS];\n        callbacks.clearHistory = true;\n        transitionModule._clearBackwardTransitions(fragment);\n        transitionModule._clearForwardTransitions(fragment);\n        transitionModule._removePageNativeViewFromAndroidParent(callbacks.entry.resolvedPage);\n    };\n    Frame.prototype._goBackCore = function (backstackEntry) {\n        _super.prototype._goBackCore.call(this, backstackEntry);\n        navDepth = backstackEntry.navDepth;\n        backstackEntry.isNavigation = true;\n        if (this._currentEntry) {\n            this._currentEntry.isBack = true;\n            this._currentEntry.isNavigation = true;\n        }\n        var manager = this._android.activity.getFragmentManager();\n        if (manager.getBackStackEntryCount() > 0) {\n            manager.popBackStack(backstackEntry.fragmentTag, android.app.FragmentManager.POP_BACK_STACK_INCLUSIVE);\n        }\n    };\n    Frame.prototype.createNativeView = function () {\n        var root = new org.nativescript.widgets.ContentLayout(this._context);\n        if (this._containerViewId < 0) {\n            this._containerViewId = android.view.View.generateViewId();\n        }\n        return root;\n    };\n    Frame.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this._android.rootViewGroup = this.nativeView;\n        this._android.rootViewGroup.setId(this._containerViewId);\n    };\n    Frame.prototype.disposeNativeView = function () {\n        this._android.rootViewGroup = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    Frame.prototype._popFromFrameStack = function () {\n        if (!this._isInFrameStack) {\n            return;\n        }\n        _super.prototype._popFromFrameStack.call(this);\n        if (this._android.hasOwnActivity) {\n            this._android.activity.finish();\n        }\n    };\n    Frame.prototype._printNativeBackStack = function () {\n        if (!this._android.activity) {\n            return;\n        }\n        var manager = this._android.activity.getFragmentManager();\n        var length = manager.getBackStackEntryCount();\n        var i = length - 1;\n        console.log(\"Fragment Manager Back Stack: \");\n        while (i >= 0) {\n            var fragment = manager.findFragmentByTag(manager.getBackStackEntryAt(i--).getName());\n            console.log(\"\\t\" + fragment);\n        }\n    };\n    Frame.prototype._getNavBarVisible = function (page) {\n        if (page.actionBarHidden !== undefined) {\n            return !page.actionBarHidden;\n        }\n        if (this._android && this._android.showActionBar !== undefined) {\n            return this._android.showActionBar;\n        }\n        return true;\n    };\n    Frame.prototype._processNavigationContext = function (navigationContext) {\n        var _this = this;\n        var activity = this._android.activity;\n        if (activity) {\n            var isForegroundActivity = activity === frame_common_1.application.android.foregroundActivity;\n            var isPaused = frame_common_1.application.android.paused;\n            if (activity && !isForegroundActivity || (isForegroundActivity && isPaused)) {\n                var weakActivity_1 = new WeakRef(activity);\n                var resume_1 = function (args) {\n                    var weakActivityInstance = weakActivity_1.get();\n                    var isCurrent = args.activity === weakActivityInstance;\n                    if (!weakActivityInstance) {\n                        if (frame_common_1.traceEnabled()) {\n                            frame_common_1.traceWrite(\"Frame _processNavigationContext: Drop For Activity GC-ed\", frame_common_1.traceCategories.Navigation);\n                        }\n                        unsubscribe_1();\n                        return;\n                    }\n                    if (isCurrent) {\n                        if (frame_common_1.traceEnabled()) {\n                            frame_common_1.traceWrite(\"Frame _processNavigationContext: Activity.Resumed, Continue\", frame_common_1.traceCategories.Navigation);\n                        }\n                        _super.prototype._processNavigationContext.call(_this, navigationContext);\n                        unsubscribe_1();\n                    }\n                };\n                var unsubscribe_1 = function () {\n                    if (frame_common_1.traceEnabled()) {\n                        frame_common_1.traceWrite(\"Frame _processNavigationContext: Unsubscribe from Activity.Resumed\", frame_common_1.traceCategories.Navigation);\n                    }\n                    frame_common_1.application.android.off(frame_common_1.application.AndroidApplication.activityResumedEvent, resume_1);\n                    frame_common_1.application.android.off(frame_common_1.application.AndroidApplication.activityStoppedEvent, unsubscribe_1);\n                    frame_common_1.application.android.off(frame_common_1.application.AndroidApplication.activityDestroyedEvent, unsubscribe_1);\n                };\n                if (frame_common_1.traceEnabled()) {\n                    frame_common_1.traceWrite(\"Frame._processNavigationContext: Subscribe for Activity.Resumed\", frame_common_1.traceCategories.Navigation);\n                }\n                frame_common_1.application.android.on(frame_common_1.application.AndroidApplication.activityResumedEvent, resume_1);\n                frame_common_1.application.android.on(frame_common_1.application.AndroidApplication.activityStoppedEvent, unsubscribe_1);\n                frame_common_1.application.android.on(frame_common_1.application.AndroidApplication.activityDestroyedEvent, unsubscribe_1);\n                return;\n            }\n        }\n        _super.prototype._processNavigationContext.call(this, navigationContext);\n    };\n    return Frame;\n}(frame_common_1.FrameBase));\nexports.Frame = Frame;\nvar framesCounter = 0;\nvar framesCache = new Array();\nvar AndroidFrame = (function (_super) {\n    __extends(AndroidFrame, _super);\n    function AndroidFrame(owner) {\n        var _this = _super.call(this) || this;\n        _this.hasOwnActivity = false;\n        _this._showActionBar = true;\n        _this._owner = owner;\n        _this.frameId = framesCounter++;\n        framesCache.push(new WeakRef(_this));\n        return _this;\n    }\n    Object.defineProperty(AndroidFrame.prototype, \"showActionBar\", {\n        get: function () {\n            return this._showActionBar;\n        },\n        set: function (value) {\n            if (this._showActionBar !== value) {\n                this._showActionBar = value;\n                if (this.owner.currentPage) {\n                    this.owner.currentPage.actionBar.update();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AndroidFrame.prototype, \"activity\", {\n        get: function () {\n            var activity = this.owner._context;\n            if (activity) {\n                return activity;\n            }\n            var currView = this._owner.parent;\n            while (currView) {\n                if (currView instanceof Frame) {\n                    return currView.android.activity;\n                }\n                currView = currView.parent;\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AndroidFrame.prototype, \"actionBar\", {\n        get: function () {\n            var activity = this.currentActivity;\n            if (!activity) {\n                return undefined;\n            }\n            var bar = activity.getActionBar();\n            if (!bar) {\n                return undefined;\n            }\n            return bar;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AndroidFrame.prototype, \"currentActivity\", {\n        get: function () {\n            var activity = this.activity;\n            if (activity) {\n                return activity;\n            }\n            var frames = frame_common_1.stack();\n            for (var length_1 = frames.length, i = length_1 - 1; i >= 0; i--) {\n                activity = frames[i].android.activity;\n                if (activity) {\n                    return activity;\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AndroidFrame.prototype, \"owner\", {\n        get: function () {\n            return this._owner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AndroidFrame.prototype, \"cachePagesOnNavigate\", {\n        get: function () {\n            return this._cachePagesOnNavigate;\n        },\n        set: function (value) {\n            if (this._cachePagesOnNavigate !== value) {\n                if (this._owner.backStack.length > 0) {\n                    this._owner._printFrameBackStack();\n                    this._owner._printNativeBackStack();\n                    console.log(\"currentPage: \" + this._owner.currentPage);\n                    throw new Error(\"Cannot set cachePagesOnNavigate if there are items in the back stack.\");\n                }\n                this._cachePagesOnNavigate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AndroidFrame.prototype.canGoBack = function () {\n        if (!this.activity) {\n            return false;\n        }\n        return this.activity.getIntent().getAction() !== android.content.Intent.ACTION_MAIN;\n    };\n    AndroidFrame.prototype.fragmentForPage = function (page) {\n        if (!page) {\n            return undefined;\n        }\n        var tag = page._fragmentTag;\n        if (tag) {\n            var manager = this.activity.getFragmentManager();\n            return manager.findFragmentByTag(tag);\n        }\n        return undefined;\n    };\n    return AndroidFrame;\n}(frame_common_1.Observable));\nfunction findPageForFragment(fragment, frame) {\n    var fragmentTag = fragment.getTag();\n    var page;\n    var entry;\n    if (frame_common_1.traceEnabled()) {\n        frame_common_1.traceWrite(\"Finding page for \" + fragmentTag + \".\", frame_common_1.traceCategories.NativeLifecycle);\n    }\n    if (fragmentTag === constants_1.DIALOG_FRAGMENT_TAG) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"No need to find page for dialog fragment.\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        return;\n    }\n    if (frame._currentEntry && frame._currentEntry.fragmentTag === fragmentTag) {\n        page = frame.currentPage;\n        entry = frame._currentEntry;\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"Current page matches fragment \" + fragmentTag + \".\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n    }\n    else {\n        var backStack = frame.backStack;\n        for (var i = 0; i < backStack.length; i++) {\n            if (backStack[i].fragmentTag === fragmentTag) {\n                entry = backStack[i];\n                break;\n            }\n        }\n        if (entry) {\n            page = entry.resolvedPage;\n            if (frame_common_1.traceEnabled()) {\n                frame_common_1.traceWrite(\"Found \" + page + \" for \" + fragmentTag, frame_common_1.traceCategories.NativeLifecycle);\n            }\n        }\n    }\n    if (page) {\n        var callbacks = fragment[CALLBACKS];\n        callbacks.frame = frame;\n        callbacks.entry = entry;\n    }\n    else {\n        throw new Error(\"Could not find a page for \" + fragmentTag + \".\");\n    }\n}\nfunction startActivity(activity, frameId) {\n    var intent = new android.content.Intent(activity, activity.getClass());\n    intent.setAction(android.content.Intent.ACTION_DEFAULT);\n    intent.putExtra(INTENT_EXTRA, frameId);\n    activity.startActivity(intent);\n}\nfunction getFrameById(frameId) {\n    for (var i = 0; i < framesCache.length; i++) {\n        var aliveFrame = framesCache[i].get();\n        if (aliveFrame && aliveFrame.frameId === frameId) {\n            return aliveFrame.owner;\n        }\n    }\n    return null;\n}\nvar animationFixed;\nfunction ensureAnimationFixed() {\n    if (!animationFixed) {\n        animationFixed = android.os.Build.VERSION.SDK_INT >= 19 ? 1 : -1;\n    }\n}\nfunction ensureFragmentClass() {\n    if (fragmentClass) {\n        return;\n    }\n    require(\"ui/frame/fragment\");\n    if (!fragmentClass) {\n        throw new Error(\"Failed to initialize the extended android.app.Fragment class\");\n    }\n}\nvar fragmentClass;\nfunction setFragmentClass(clazz) {\n    if (fragmentClass) {\n        throw new Error(\"Fragment class already initialized\");\n    }\n    fragmentClass = clazz;\n}\nexports.setFragmentClass = setFragmentClass;\nvar FragmentCallbacksImplementation = (function () {\n    function FragmentCallbacksImplementation() {\n    }\n    FragmentCallbacksImplementation.prototype.onHiddenChanged = function (fragment, hidden, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onHiddenChanged(\" + hidden + \")\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        superFunc.call(fragment, hidden);\n        if (hidden) {\n            onFragmentHidden(fragment, false);\n        }\n        else {\n            onFragmentShown(fragment);\n        }\n    };\n    FragmentCallbacksImplementation.prototype.onCreateAnimator = function (fragment, transit, enter, nextAnim, superFunc) {\n        var nextAnimString;\n        switch (nextAnim) {\n            case -10:\n                nextAnimString = \"enter\";\n                break;\n            case -20:\n                nextAnimString = \"exit\";\n                break;\n            case -30:\n                nextAnimString = \"popEnter\";\n                break;\n            case -40:\n                nextAnimString = \"popExit\";\n                break;\n        }\n        var animator = transitionModule._onFragmentCreateAnimator(fragment, nextAnim);\n        if (!animator) {\n            animator = superFunc.call(fragment, transit, enter, nextAnim);\n        }\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onCreateAnimator(\" + transit + \", \" + (enter ? \"enter\" : \"exit\") + \", \" + nextAnimString + \"): \" + animator, frame_common_1.traceCategories.NativeLifecycle);\n        }\n        return animator;\n    };\n    FragmentCallbacksImplementation.prototype.onCreate = function (fragment, savedInstanceState, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onCreate(\" + savedInstanceState + \")\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        superFunc.call(fragment, savedInstanceState);\n        if (!this.entry) {\n            var frameId = fragment.getArguments().getInt(FRAMEID);\n            var frame = getFrameById(frameId);\n            if (frame) {\n                this.frame = frame;\n            }\n            else {\n                throw new Error(\"Cannot find Frame for \" + fragment);\n            }\n            findPageForFragment(fragment, this.frame);\n        }\n    };\n    FragmentCallbacksImplementation.prototype.onCreateView = function (fragment, inflater, container, savedInstanceState, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onCreateView(inflater, container, \" + savedInstanceState + \")\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        var entry = this.entry;\n        var page = entry.resolvedPage;\n        try {\n            if (savedInstanceState && savedInstanceState.getBoolean(HIDDEN, false)) {\n                fragment.getFragmentManager().beginTransaction().hide(fragment).commit();\n                this.frame._addView(page);\n            }\n            else {\n                onFragmentShown(fragment);\n            }\n        }\n        catch (ex) {\n            var label = new android.widget.TextView(container.getContext());\n            label.setText(ex.message + \", \" + ex.stackTrace);\n            return label;\n        }\n        return page.nativeView;\n    };\n    FragmentCallbacksImplementation.prototype.onSaveInstanceState = function (fragment, outState, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onSaveInstanceState(\" + outState + \")\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        superFunc.call(fragment, outState);\n        if (fragment.isHidden()) {\n            outState.putBoolean(HIDDEN, true);\n        }\n    };\n    FragmentCallbacksImplementation.prototype.onDestroyView = function (fragment, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onDestroyView()\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        superFunc.call(fragment);\n        onFragmentHidden(fragment, true);\n    };\n    FragmentCallbacksImplementation.prototype.onDestroy = function (fragment, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(fragment + \".onDestroy()\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        superFunc.call(fragment);\n    };\n    FragmentCallbacksImplementation.prototype.toStringOverride = function (fragment, superFunc) {\n        return fragment.getTag() + \"<\" + (this.entry ? this.entry.resolvedPage : \"\") + \">\";\n    };\n    return FragmentCallbacksImplementation;\n}());\nvar ActivityCallbacksImplementation = (function () {\n    function ActivityCallbacksImplementation() {\n    }\n    ActivityCallbacksImplementation.prototype.onCreate = function (activity, savedInstanceState, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"Activity.onCreate(\" + savedInstanceState + \")\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        var app = frame_common_1.application.android;\n        var intent = activity.getIntent();\n        var launchArgs = { eventName: frame_common_1.application.launchEvent, object: app, android: intent };\n        frame_common_1.application.notify(launchArgs);\n        var frameId = -1;\n        var rootView = launchArgs.root;\n        var extras = intent.getExtras();\n        if (extras) {\n            frameId = extras.getInt(INTENT_EXTRA, -1);\n        }\n        if (savedInstanceState && frameId < 0) {\n            frameId = savedInstanceState.getInt(INTENT_EXTRA, -1);\n        }\n        var frame;\n        var navParam;\n        if (frameId >= 0) {\n            rootView = getFrameById(frameId);\n        }\n        if (!rootView) {\n            navParam = frame_common_1.application.getMainEntry();\n            if (navParam) {\n                frame = new Frame();\n            }\n            else {\n                throw new Error(\"A Frame must be used to navigate to a Page.\");\n            }\n            rootView = frame;\n        }\n        var isRestart = !!savedInstanceState && activityInitialized;\n        superFunc.call(activity, isRestart ? savedInstanceState : null);\n        this._rootView = rootView;\n        rootView._setupUI(activity);\n        activity.setContentView(rootView.nativeView, new org.nativescript.widgets.CommonLayoutParams());\n        if (frame) {\n            frame.navigate(navParam);\n        }\n        activityInitialized = true;\n    };\n    ActivityCallbacksImplementation.prototype.onSaveInstanceState = function (activity, outState, superFunc) {\n        superFunc.call(activity, outState);\n        var view = this._rootView;\n        if (view instanceof Frame) {\n            outState.putInt(INTENT_EXTRA, view.android.frameId);\n        }\n    };\n    ActivityCallbacksImplementation.prototype.onStart = function (activity, superFunc) {\n        superFunc.call(activity);\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"NativeScriptActivity.onStart();\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        var rootView = this._rootView;\n        if (rootView && !rootView.isLoaded) {\n            rootView.onLoaded();\n        }\n    };\n    ActivityCallbacksImplementation.prototype.onStop = function (activity, superFunc) {\n        superFunc.call(activity);\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"NativeScriptActivity.onStop();\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        var rootView = this._rootView;\n        if (rootView && rootView.isLoaded) {\n            rootView.onUnloaded();\n        }\n    };\n    ActivityCallbacksImplementation.prototype.onDestroy = function (activity, superFunc) {\n        var rootView = this._rootView;\n        if (rootView && rootView._context) {\n            rootView._tearDownUI(true);\n        }\n        superFunc.call(activity);\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"NativeScriptActivity.onDestroy();\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        var exitArgs = { eventName: frame_common_1.application.exitEvent, object: frame_common_1.application.android, android: activity };\n        frame_common_1.application.notify(exitArgs);\n    };\n    ActivityCallbacksImplementation.prototype.onBackPressed = function (activity, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"NativeScriptActivity.onBackPressed;\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        var args = {\n            eventName: \"activityBackPressed\",\n            object: frame_common_1.application.android,\n            activity: activity,\n            cancel: false,\n        };\n        frame_common_1.application.android.notify(args);\n        if (args.cancel) {\n            return;\n        }\n        if (!frame_common_1.goBack()) {\n            superFunc.call(activity);\n        }\n    };\n    ActivityCallbacksImplementation.prototype.onRequestPermissionsResult = function (activity, requestCode, permissions, grantResults, superFunc) {\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"NativeScriptActivity.onRequestPermissionsResult;\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        frame_common_1.application.android.notify({\n            eventName: \"activityRequestPermissions\",\n            object: frame_common_1.application.android,\n            activity: activity,\n            requestCode: requestCode,\n            permissions: permissions,\n            grantResults: grantResults\n        });\n    };\n    ActivityCallbacksImplementation.prototype.onActivityResult = function (activity, requestCode, resultCode, data, superFunc) {\n        superFunc.call(activity, requestCode, resultCode, data);\n        if (frame_common_1.traceEnabled()) {\n            frame_common_1.traceWrite(\"NativeScriptActivity.onActivityResult(\" + requestCode + \", \" + resultCode + \", \" + data + \")\", frame_common_1.traceCategories.NativeLifecycle);\n        }\n        frame_common_1.application.android.notify({\n            eventName: \"activityResult\",\n            object: frame_common_1.application.android,\n            activity: activity,\n            requestCode: requestCode,\n            resultCode: resultCode,\n            intent: data\n        });\n    };\n    return ActivityCallbacksImplementation;\n}());\nfunction setActivityCallbacks(activity) {\n    activity[CALLBACKS] = new ActivityCallbacksImplementation();\n}\nexports.setActivityCallbacks = setActivityCallbacks;\nfunction setFragmentCallbacks(fragment) {\n    fragment[CALLBACKS] = new FragmentCallbacksImplementation();\n}\nexports.setFragmentCallbacks = setFragmentCallbacks;\n//# sourceMappingURL=frame.android.js.map"
    },
    {
      "id": 8,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system.js",
      "name": "./~/tns-core-modules/file-system/file-system.js",
      "index": 30,
      "index2": 21,
      "size": 19519,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-module-factory-loader.js",
      "issuerId": 180,
      "issuerName": "./~/nativescript-angular/router/ns-module-factory-loader.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 33,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-source/image-source.android.js",
          "module": "./~/tns-core-modules/image-source/image-source.android.js",
          "moduleName": "./~/tns-core-modules/image-source/image-source.android.js",
          "type": "cjs require",
          "userRequest": "../file-system",
          "loc": "2:20-45"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
          "module": "./~/tns-core-modules/ui/styling/font.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/font.android.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "8:9-37"
        },
        {
          "moduleId": 61,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "module": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "moduleName": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "type": "cjs require",
          "userRequest": "../file-system",
          "loc": "3:20-45"
        },
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "4:20-48"
        },
        {
          "moduleId": 133,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
          "module": "./~/tns-core-modules/ui/frame/frame-common.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame-common.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "7:20-48"
        },
        {
          "moduleId": 138,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image.android.js",
          "module": "./~/tns-core-modules/ui/image/image.android.js",
          "moduleName": "./~/tns-core-modules/ui/image/image.android.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "6:20-48"
        },
        {
          "moduleId": 150,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
          "module": "./~/tns-core-modules/ui/page/page-common.js",
          "moduleName": "./~/tns-core-modules/ui/page/page-common.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "9:20-48"
        },
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "6:20-48"
        },
        {
          "moduleId": 169,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view-common.js",
          "module": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/web-view/web-view-common.js",
          "type": "cjs require",
          "userRequest": "../../file-system",
          "loc": "7:20-48"
        },
        {
          "moduleId": 180,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-module-factory-loader.js",
          "module": "./~/nativescript-angular/router/ns-module-factory-loader.js",
          "moduleName": "./~/nativescript-angular/router/ns-module-factory-loader.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/file-system",
          "loc": "3:20-59"
        },
        {
          "moduleId": 238,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http-request/http-request.android.js",
          "module": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "moduleName": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "type": "cjs require",
          "userRequest": "file-system",
          "loc": "96:25-47"
        },
        {
          "moduleId": 248,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "module": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "type": "cjs require",
          "userRequest": "../../../file-system",
          "loc": "3:20-51"
        },
        {
          "moduleId": 274,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/debug-common.js",
          "module": "./~/tns-core-modules/utils/debug-common.js",
          "moduleName": "./~/tns-core-modules/utils/debug-common.js",
          "type": "cjs require",
          "userRequest": "../file-system",
          "loc": "2:20-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar file_access_module = require(\"./file-system-access\");\nvar fileAccess;\nvar getFileAccess = function () {\n    if (!fileAccess) {\n        fileAccess = new file_access_module.FileSystemAccess();\n    }\n    return fileAccess;\n};\nvar platform;\nfunction ensurePlatform() {\n    if (!platform) {\n        platform = require(\"platform\");\n    }\n}\nvar nameProperty = \"_name\";\nvar pathProperty = \"_path\";\nvar isKnownProperty = \"_isKnown\";\nvar fileLockedProperty = \"_locked\";\nvar extensionProperty = \"_extension\";\nvar lastModifiedProperty = \"_lastModified\";\nvar createFile = function (info) {\n    var file = new File();\n    file[pathProperty] = info.path;\n    file[nameProperty] = info.name;\n    file[extensionProperty] = info.extension;\n    return file;\n};\nvar createFolder = function (info) {\n    var documents = knownFolders.documents();\n    if (info.path === documents.path) {\n        return documents;\n    }\n    var temp = knownFolders.temp();\n    if (info.path === temp.path) {\n        return temp;\n    }\n    var folder = new Folder();\n    folder[pathProperty] = info.path;\n    folder[nameProperty] = info.name;\n    return folder;\n};\nvar FileSystemEntity = (function () {\n    function FileSystemEntity() {\n    }\n    Object.defineProperty(FileSystemEntity.prototype, \"parent\", {\n        get: function () {\n            var onError = function (error) {\n                throw error;\n            };\n            var folderInfo = getFileAccess().getParent(this.path, onError);\n            if (!folderInfo) {\n                return undefined;\n            }\n            return createFolder(folderInfo);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileSystemEntity.prototype.remove = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var hasError = false;\n            var localError = function (error) {\n                hasError = true;\n                reject(error);\n            };\n            _this.removeSync(localError);\n            if (!hasError) {\n                resolve();\n            }\n        });\n    };\n    FileSystemEntity.prototype.removeSync = function (onError) {\n        if (this[isKnownProperty]) {\n            if (onError) {\n                onError({ message: \"Cannot delete known folder.\" });\n            }\n            return;\n        }\n        var fileAccess = getFileAccess();\n        if (this instanceof File) {\n            fileAccess.deleteFile(this.path, onError);\n        }\n        else if (this instanceof Folder) {\n            fileAccess.deleteFolder(this.path, onError);\n        }\n    };\n    FileSystemEntity.prototype.rename = function (newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var hasError = false;\n            var localError = function (error) {\n                hasError = true;\n                reject(error);\n            };\n            _this.renameSync(newName, localError);\n            if (!hasError) {\n                resolve();\n            }\n        });\n    };\n    FileSystemEntity.prototype.renameSync = function (newName, onError) {\n        if (this[isKnownProperty]) {\n            if (onError) {\n                onError(new Error(\"Cannot rename known folder.\"));\n            }\n            return;\n        }\n        var parentFolder = this.parent;\n        if (!parentFolder) {\n            if (onError) {\n                onError(new Error(\"No parent folder.\"));\n            }\n            return;\n        }\n        var fileAccess = getFileAccess();\n        var path = parentFolder.path;\n        var newPath = fileAccess.joinPath(path, newName);\n        var hasError = false;\n        var localError = function (error) {\n            hasError = true;\n            if (onError) {\n                onError(error);\n            }\n            return null;\n        };\n        fileAccess.rename(this.path, newPath, localError);\n        this[pathProperty] = newPath;\n        this[nameProperty] = newName;\n        if (this instanceof File) {\n            this[extensionProperty] = fileAccess.getFileExtension(newPath);\n        }\n    };\n    Object.defineProperty(FileSystemEntity.prototype, \"name\", {\n        get: function () {\n            return this[nameProperty];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileSystemEntity.prototype, \"path\", {\n        get: function () {\n            return this[pathProperty];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileSystemEntity.prototype, \"lastModified\", {\n        get: function () {\n            var value = this[lastModifiedProperty];\n            if (!this[lastModifiedProperty]) {\n                value = this[lastModifiedProperty] = getFileAccess().getLastModified(this.path);\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FileSystemEntity;\n}());\nexports.FileSystemEntity = FileSystemEntity;\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    File.fromPath = function (path) {\n        var onError = function (error) {\n            throw error;\n        };\n        var fileInfo = getFileAccess().getFile(path, onError);\n        if (!fileInfo) {\n            return undefined;\n        }\n        return createFile(fileInfo);\n    };\n    File.exists = function (path) {\n        return getFileAccess().fileExists(path);\n    };\n    Object.defineProperty(File.prototype, \"extension\", {\n        get: function () {\n            return this[extensionProperty];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"isLocked\", {\n        get: function () {\n            return !!this[fileLockedProperty];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    File.prototype.readSync = function (onError) {\n        this.checkAccess();\n        this[fileLockedProperty] = true;\n        var that = this;\n        var localError = function (error) {\n            that[fileLockedProperty] = false;\n            if (onError) {\n                onError(error);\n            }\n        };\n        var content = getFileAccess().read(this.path, localError);\n        this[fileLockedProperty] = false;\n        return content;\n    };\n    File.prototype.writeSync = function (content, onError) {\n        this.checkAccess();\n        try {\n            this[fileLockedProperty] = true;\n            var that = this;\n            var localError = function (error) {\n                that[fileLockedProperty] = false;\n                if (onError) {\n                    onError(error);\n                }\n            };\n            getFileAccess().write(this.path, content, localError);\n        }\n        finally {\n            this[fileLockedProperty] = false;\n        }\n    };\n    File.prototype.readText = function (encoding) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var hasError = false;\n            var localError = function (error) {\n                hasError = true;\n                reject(error);\n            };\n            var content = _this.readTextSync(localError, encoding);\n            if (!hasError) {\n                resolve(content);\n            }\n        });\n    };\n    File.prototype.readTextSync = function (onError, encoding) {\n        this.checkAccess();\n        this[fileLockedProperty] = true;\n        var that = this;\n        var localError = function (error) {\n            that[fileLockedProperty] = false;\n            if (onError) {\n                onError(error);\n            }\n        };\n        var content = getFileAccess().readText(this.path, localError, encoding);\n        this[fileLockedProperty] = false;\n        return content;\n    };\n    File.prototype.writeText = function (content, encoding) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var hasError = false;\n            var localError = function (error) {\n                hasError = true;\n                reject(error);\n            };\n            _this.writeTextSync(content, localError, encoding);\n            if (!hasError) {\n                resolve();\n            }\n        });\n    };\n    File.prototype.writeTextSync = function (content, onError, encoding) {\n        this.checkAccess();\n        try {\n            this[fileLockedProperty] = true;\n            var that = this;\n            var localError = function (error) {\n                that[fileLockedProperty] = false;\n                if (onError) {\n                    onError(error);\n                }\n            };\n            getFileAccess().writeText(this.path, content, localError, encoding);\n        }\n        finally {\n            this[fileLockedProperty] = false;\n        }\n    };\n    File.prototype.checkAccess = function () {\n        if (this.isLocked) {\n            throw new Error(\"Cannot access a locked file.\");\n        }\n    };\n    return File;\n}(FileSystemEntity));\nexports.File = File;\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Folder.fromPath = function (path) {\n        var onError = function (error) {\n            throw error;\n        };\n        var folderInfo = getFileAccess().getFolder(path, onError);\n        if (!folderInfo) {\n            return undefined;\n        }\n        return createFolder(folderInfo);\n    };\n    Folder.exists = function (path) {\n        return getFileAccess().folderExists(path);\n    };\n    Folder.prototype.contains = function (name) {\n        var fileAccess = getFileAccess();\n        var path = fileAccess.joinPath(this.path, name);\n        if (fileAccess.fileExists(path)) {\n            return true;\n        }\n        return fileAccess.folderExists(path);\n    };\n    Folder.prototype.clear = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var hasError = false;\n            var onError = function (error) {\n                hasError = true;\n                reject(error);\n            };\n            _this.clearSync(onError);\n            if (!hasError) {\n                resolve();\n            }\n        });\n    };\n    Folder.prototype.clearSync = function (onError) {\n        getFileAccess().emptyFolder(this.path, onError);\n    };\n    Object.defineProperty(Folder.prototype, \"isKnown\", {\n        get: function () {\n            return this[isKnownProperty];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.getFile = function (name) {\n        var fileAccess = getFileAccess();\n        var path = fileAccess.joinPath(this.path, name);\n        var onError = function (error) {\n            throw error;\n        };\n        var fileInfo = fileAccess.getFile(path, onError);\n        if (!fileInfo) {\n            return undefined;\n        }\n        return createFile(fileInfo);\n    };\n    Folder.prototype.getFolder = function (name) {\n        var fileAccess = getFileAccess();\n        var path = fileAccess.joinPath(this.path, name);\n        var onError = function (error) {\n            throw error;\n        };\n        var folderInfo = fileAccess.getFolder(path, onError);\n        if (!folderInfo) {\n            return undefined;\n        }\n        return createFolder(folderInfo);\n    };\n    Folder.prototype.getEntities = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var hasError = false;\n            var localError = function (error) {\n                hasError = true;\n                reject(error);\n            };\n            var entities = _this.getEntitiesSync(localError);\n            if (!hasError) {\n                resolve(entities);\n            }\n        });\n    };\n    Folder.prototype.getEntitiesSync = function (onError) {\n        var fileInfos = getFileAccess().getEntities(this.path, onError);\n        if (!fileInfos) {\n            return null;\n        }\n        var entities = new Array();\n        var i;\n        for (i = 0; i < fileInfos.length; i++) {\n            if (fileInfos[i].extension) {\n                entities.push(createFile(fileInfos[i]));\n            }\n            else {\n                entities.push(createFolder(fileInfos[i]));\n            }\n        }\n        return entities;\n    };\n    Folder.prototype.eachEntity = function (onEntity) {\n        if (!onEntity) {\n            return;\n        }\n        var onSuccess = function (fileInfo) {\n            var entity;\n            if (fileInfo.extension) {\n                entity = createFile(fileInfo);\n            }\n            else {\n                entity = createFolder(fileInfo);\n            }\n            return onEntity(entity);\n        };\n        var onError = function (error) {\n            throw error;\n        };\n        getFileAccess().eachEntity(this.path, onSuccess, onError);\n    };\n    return Folder;\n}(FileSystemEntity));\nexports.Folder = Folder;\nvar knownFolders;\n(function (knownFolders) {\n    var _documents;\n    var _temp;\n    var _app;\n    knownFolders.documents = function () {\n        if (!_documents) {\n            var path = getFileAccess().getDocumentsFolderPath();\n            _documents = new Folder();\n            _documents[pathProperty] = path;\n            _documents[isKnownProperty] = true;\n        }\n        return _documents;\n    };\n    knownFolders.temp = function () {\n        if (!_temp) {\n            var path = getFileAccess().getTempFolderPath();\n            _temp = new Folder();\n            _temp[pathProperty] = path;\n            _temp[isKnownProperty] = true;\n        }\n        return _temp;\n    };\n    knownFolders.currentApp = function () {\n        if (!_app) {\n            var path = getFileAccess().getCurrentAppPath();\n            _app = new Folder();\n            _app[pathProperty] = path;\n            _app[isKnownProperty] = true;\n        }\n        return _app;\n    };\n    var ios;\n    (function (ios) {\n        function _checkPlatform(knownFolderName) {\n            ensurePlatform();\n            if (!platform.isIOS) {\n                throw new Error(\"The \\\"\" + knownFolderName + \"\\\" known folder is available on iOS only!\");\n            }\n        }\n        var _library;\n        ios.library = function () {\n            _checkPlatform(\"library\");\n            if (!_library) {\n                var existingFolderInfo = getExistingFolderInfo(5);\n                if (existingFolderInfo) {\n                    _library = existingFolderInfo.folder;\n                    _library[pathProperty] = existingFolderInfo.path;\n                    _library[isKnownProperty] = true;\n                }\n            }\n            return _library;\n        };\n        var _developer;\n        ios.developer = function () {\n            _checkPlatform(\"developer\");\n            if (!_developer) {\n                var existingFolderInfo = getExistingFolderInfo(6);\n                if (existingFolderInfo) {\n                    _developer = existingFolderInfo.folder;\n                    _developer[pathProperty] = existingFolderInfo.path;\n                    _developer[isKnownProperty] = true;\n                }\n            }\n            return _developer;\n        };\n        var _desktop;\n        ios.desktop = function () {\n            _checkPlatform(\"desktop\");\n            if (!_desktop) {\n                var existingFolderInfo = getExistingFolderInfo(12);\n                if (existingFolderInfo) {\n                    _desktop = existingFolderInfo.folder;\n                    _desktop[pathProperty] = existingFolderInfo.path;\n                    _desktop[isKnownProperty] = true;\n                }\n            }\n            return _desktop;\n        };\n        var _downloads;\n        ios.downloads = function () {\n            _checkPlatform(\"downloads\");\n            if (!_downloads) {\n                var existingFolderInfo = getExistingFolderInfo(15);\n                if (existingFolderInfo) {\n                    _downloads = existingFolderInfo.folder;\n                    _downloads[pathProperty] = existingFolderInfo.path;\n                    _downloads[isKnownProperty] = true;\n                }\n            }\n            return _downloads;\n        };\n        var _movies;\n        ios.movies = function () {\n            _checkPlatform(\"movies\");\n            if (!_movies) {\n                var existingFolderInfo = getExistingFolderInfo(17);\n                if (existingFolderInfo) {\n                    _movies = existingFolderInfo.folder;\n                    _movies[pathProperty] = existingFolderInfo.path;\n                    _movies[isKnownProperty] = true;\n                }\n            }\n            return _movies;\n        };\n        var _music;\n        ios.music = function () {\n            _checkPlatform(\"music\");\n            if (!_music) {\n                var existingFolderInfo = getExistingFolderInfo(18);\n                if (existingFolderInfo) {\n                    _music = existingFolderInfo.folder;\n                    _music[pathProperty] = existingFolderInfo.path;\n                    _music[isKnownProperty] = true;\n                }\n            }\n            return _music;\n        };\n        var _pictures;\n        ios.pictures = function () {\n            _checkPlatform(\"pictures\");\n            if (!_pictures) {\n                var existingFolderInfo = getExistingFolderInfo(19);\n                if (existingFolderInfo) {\n                    _pictures = existingFolderInfo.folder;\n                    _pictures[pathProperty] = existingFolderInfo.path;\n                    _pictures[isKnownProperty] = true;\n                }\n            }\n            return _pictures;\n        };\n        var _sharedPublic;\n        ios.sharedPublic = function () {\n            _checkPlatform(\"sharedPublic\");\n            if (!_sharedPublic) {\n                var existingFolderInfo = getExistingFolderInfo(21);\n                if (existingFolderInfo) {\n                    _sharedPublic = existingFolderInfo.folder;\n                    _sharedPublic[pathProperty] = existingFolderInfo.path;\n                    _sharedPublic[isKnownProperty] = true;\n                }\n            }\n            return _sharedPublic;\n        };\n        function getExistingFolderInfo(pathDirectory) {\n            var fileAccess = getFileAccess();\n            var folderPath = fileAccess.getKnownPath(pathDirectory);\n            var folderInfo = fileAccess.getExistingFolder(folderPath);\n            if (folderInfo) {\n                return {\n                    folder: createFolder(folderInfo),\n                    path: folderPath\n                };\n            }\n            return undefined;\n        }\n    })(ios = knownFolders.ios || (knownFolders.ios = {}));\n})(knownFolders = exports.knownFolders || (exports.knownFolders = {}));\nvar path;\n(function (path_1) {\n    function normalize(path) {\n        return getFileAccess().normalizePath(path);\n    }\n    path_1.normalize = normalize;\n    function join() {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        var fileAccess = getFileAccess();\n        return fileAccess.joinPaths(paths);\n    }\n    path_1.join = join;\n    path_1.separator = getFileAccess().getPathSeparator();\n})(path = exports.path || (exports.path = {}));\n//# sourceMappingURL=file-system.js.map"
    },
    {
      "id": 9,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/lang-facade.js",
      "name": "./~/nativescript-angular/lang-facade.js",
      "index": 146,
      "index2": 142,
      "size": 2166,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
      "issuerId": 82,
      "issuerName": "./~/nativescript-angular/renderer.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-location-strategy.js",
          "module": "./~/nativescript-angular/router/ns-location-strategy.js",
          "moduleName": "./~/nativescript-angular/router/ns-location-strategy.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "6:20-45"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "7:20-45"
        },
        {
          "moduleId": 73,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/utils.js",
          "module": "./~/nativescript-angular/common/utils.js",
          "moduleName": "./~/nativescript-angular/common/utils.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "2:20-45"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "4:20-45"
        },
        {
          "moduleId": 78,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/tab-view.js",
          "module": "./~/nativescript-angular/directives/tab-view.js",
          "moduleName": "./~/nativescript-angular/directives/tab-view.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "6:20-45"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "./lang-facade",
          "loc": "7:20-44"
        },
        {
          "moduleId": 84,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/checked-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "4:20-45"
        },
        {
          "moduleId": 85,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/date-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "4:20-45"
        },
        {
          "moduleId": 86,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/number-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "4:20-45"
        },
        {
          "moduleId": 88,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/text-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "4:20-45"
        },
        {
          "moduleId": 89,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/time-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "type": "cjs require",
          "userRequest": "../lang-facade",
          "loc": "4:20-45"
        },
        {
          "moduleId": 176,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/collection-facade.js",
          "module": "./~/nativescript-angular/collection-facade.js",
          "moduleName": "./~/nativescript-angular/collection-facade.js",
          "type": "cjs require",
          "userRequest": "./lang-facade",
          "loc": "4:20-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable */\n//Copied unexported functions from @angular/core/src/facade/lang\nvar globalScope = exports.global;\nexports.global = globalScope;\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexports.isPresent = isPresent;\nfunction isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexports.isBlank = isBlank;\nfunction isNumber(obj) {\n    return typeof obj === 'number';\n}\nexports.isNumber = isNumber;\nfunction isDate(obj) {\n    return obj instanceof Date && !isNaN(obj.valueOf());\n}\nexports.isDate = isDate;\nfunction print(obj) {\n    console.log(obj);\n}\nexports.print = print;\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\nexports.isJsObject = isJsObject;\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nexports.isArray = isArray;\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (isBlank(_symbolIterator)) {\n        if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nexports.getSymbolIterator = getSymbolIterator;\nfunction setValueOnPath(global, path, value) {\n    var parts = path.split('.');\n    var obj = global;\n    while (parts.length > 1) {\n        var name_1 = parts.shift();\n        if (obj.hasOwnProperty(name_1) && isPresent(obj[name_1])) {\n            obj = obj[name_1];\n        }\n        else {\n            obj = obj[name_1] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\nexports.setValueOnPath = setValueOnPath;\n//# sourceMappingURL=lang-facade.js.map"
    },
    {
      "id": 10,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscriber.js",
      "name": "./~/rxjs/Subscriber.js",
      "index": 95,
      "index2": 98,
      "size": 9465,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
      "issuerId": 32,
      "issuerName": "./~/rxjs/Subject.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./Subscriber",
          "loc": "8:19-42"
        },
        {
          "moduleId": 39,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/OuterSubscriber.js",
          "module": "./~/rxjs/OuterSubscriber.js",
          "moduleName": "./~/rxjs/OuterSubscriber.js",
          "type": "cjs require",
          "userRequest": "./Subscriber",
          "loc": "7:19-42"
        },
        {
          "moduleId": 103,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/map.js",
          "module": "./~/rxjs/operator/map.js",
          "moduleName": "./~/rxjs/operator/map.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 203,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/InnerSubscriber.js",
          "module": "./~/rxjs/InnerSubscriber.js",
          "moduleName": "./~/rxjs/InnerSubscriber.js",
          "type": "cjs require",
          "userRequest": "./Subscriber",
          "loc": "7:19-42"
        },
        {
          "moduleId": 207,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ConnectableObservable.js",
          "module": "./~/rxjs/observable/ConnectableObservable.js",
          "moduleName": "./~/rxjs/observable/ConnectableObservable.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "9:19-43"
        },
        {
          "moduleId": 218,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/every.js",
          "module": "./~/rxjs/operator/every.js",
          "moduleName": "./~/rxjs/operator/every.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 219,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/filter.js",
          "module": "./~/rxjs/operator/filter.js",
          "moduleName": "./~/rxjs/operator/filter.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 220,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/first.js",
          "module": "./~/rxjs/operator/first.js",
          "moduleName": "./~/rxjs/operator/first.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 221,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/last.js",
          "module": "./~/rxjs/operator/last.js",
          "moduleName": "./~/rxjs/operator/last.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 224,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/observeOn.js",
          "module": "./~/rxjs/operator/observeOn.js",
          "moduleName": "./~/rxjs/operator/observeOn.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 225,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/reduce.js",
          "module": "./~/rxjs/operator/reduce.js",
          "moduleName": "./~/rxjs/operator/reduce.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "7:19-43"
        },
        {
          "moduleId": 228,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/toSubscriber.js",
          "module": "./~/rxjs/util/toSubscriber.js",
          "moduleName": "./~/rxjs/util/toSubscriber.js",
          "type": "cjs require",
          "userRequest": "../Subscriber",
          "loc": "2:19-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map"
    },
    {
      "id": 11,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/module-merge.js",
      "name": "./~/tns-core-modules/utils/module-merge.js",
      "index": 238,
      "index2": 234,
      "size": 252,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "17:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "18:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "19:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "20:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "21:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "22:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "23:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "24:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "25:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "26:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "27:0-29"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "utils/module-merge",
          "loc": "28:0-29"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge = function (sourceExports, destExports) {\n    for (var key in sourceExports) {\n        destExports[key] = sourceExports[key];\n    }\n};\n//# sourceMappingURL=module-merge.js.map"
    },
    {
      "id": 12,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/types.js",
      "name": "./~/tns-core-modules/utils/types.js",
      "index": 12,
      "index2": 2,
      "size": 3510,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/data/observable-array/observable-array.js",
      "issuerId": 14,
      "issuerName": "./~/tns-core-modules/data/observable-array/observable-array.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/data/observable-array/observable-array.js",
          "module": "./~/tns-core-modules/data/observable-array/observable-array.js",
          "moduleName": "./~/tns-core-modules/data/observable-array/observable-array.js",
          "type": "cjs require",
          "userRequest": "../../utils/types",
          "loc": "3:12-40"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/types",
          "loc": "2:14-42"
        },
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "../../utils/types",
          "loc": "5:14-42"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../../utils/types",
          "loc": "16:12-43"
        },
        {
          "moduleId": 71,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/xhr/xhr.js",
          "module": "./~/tns-core-modules/xhr/xhr.js",
          "moduleName": "./~/tns-core-modules/xhr/xhr.js",
          "type": "cjs require",
          "userRequest": "../utils/types",
          "loc": "3:12-37"
        },
        {
          "moduleId": 83,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
          "module": "./~/nativescript-angular/router/ns-router-link.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/types",
          "loc": "7:14-53"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/utils/types",
          "loc": "2:14-53"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../../../utils/types",
          "loc": "13:12-43"
        },
        {
          "moduleId": 157,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
          "module": "./~/tns-core-modules/ui/styling/background.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/background.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/types",
          "loc": "5:14-42"
        },
        {
          "moduleId": 230,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color-common.js",
          "module": "./~/tns-core-modules/color/color-common.js",
          "moduleName": "./~/tns-core-modules/color/color-common.js",
          "type": "cjs require",
          "userRequest": "../utils/types",
          "loc": "2:12-37"
        },
        {
          "moduleId": 267,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "module": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "moduleName": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "type": "cjs require",
          "userRequest": "../../../utils/types",
          "loc": "2:14-45"
        },
        {
          "moduleId": 275,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils-common.js",
          "module": "./~/tns-core-modules/utils/utils-common.js",
          "moduleName": "./~/tns-core-modules/utils/utils-common.js",
          "type": "cjs require",
          "userRequest": "./types",
          "loc": "2:12-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n}\nexports.isString = isString;\nfunction isNumber(value) {\n    return typeof value === \"number\" || value instanceof Number;\n}\nexports.isNumber = isNumber;\nfunction isBoolean(value) {\n    return typeof value === \"boolean\" || value instanceof Boolean;\n}\nexports.isBoolean = isBoolean;\nfunction isFunction(value) {\n    if (!value) {\n        return false;\n    }\n    return typeof value === \"function\";\n}\nexports.isFunction = isFunction;\nfunction isObject(value) {\n    if (!value) {\n        return false;\n    }\n    return typeof value === \"object\";\n}\nexports.isObject = isObject;\nfunction isUndefined(value) {\n    return value === undefined;\n}\nexports.isUndefined = isUndefined;\nfunction isDefined(value) {\n    return typeof value !== \"undefined\";\n}\nexports.isDefined = isDefined;\nfunction isNullOrUndefined(value) {\n    return value === undefined || value === null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\nfunction verifyCallback(value) {\n    if (value && !isFunction(value)) {\n        throw new TypeError(\"Callback must be a valid function.\");\n    }\n}\nexports.verifyCallback = verifyCallback;\nvar classInfosMap = new Map();\nvar funcNameRegex = /function ([_a-zA-Z0-9]{1,})\\(/;\nfunction getClass(object) {\n    return getClassInfo(object).name;\n}\nexports.getClass = getClass;\nfunction getClassInfo(object) {\n    var constructor = object.constructor;\n    var result = classInfosMap.get(constructor);\n    if (!result) {\n        result = new ClassInfo(constructor);\n        classInfosMap.set(constructor, result);\n    }\n    return result;\n}\nexports.getClassInfo = getClassInfo;\nfunction getBaseClasses(object) {\n    var result = [];\n    var info = getClassInfo(object);\n    while (info) {\n        result.push(info.name);\n        info = info.baseClassInfo;\n    }\n    return result;\n}\nexports.getBaseClasses = getBaseClasses;\nvar ClassInfo = (function () {\n    function ClassInfo(typeCosntructor) {\n        this._typeCosntructor = typeCosntructor;\n    }\n    Object.defineProperty(ClassInfo.prototype, \"name\", {\n        get: function () {\n            if (!this._name) {\n                var results = (funcNameRegex).exec(this._typeCosntructor.toString());\n                this._name = (results && results.length > 1) ? results[1] : \"\";\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassInfo.prototype, \"baseClassInfo\", {\n        get: function () {\n            if (isUndefined(this._baseClassInfo)) {\n                this._baseClassInfo = ClassInfo._getBase(this);\n                if (this._baseClassInfo && this._baseClassInfo.name === this.name) {\n                    this._baseClassInfo = ClassInfo._getBase(this._baseClassInfo);\n                }\n            }\n            return this._baseClassInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClassInfo._getBase = function (info) {\n        var result = null;\n        var constructorProto = info._typeCosntructor.prototype;\n        if (constructorProto.__proto__) {\n            result = getClassInfo(constructorProto.__proto__);\n        }\n        return result;\n    };\n    return ClassInfo;\n}());\nexports.ClassInfo = ClassInfo;\nfunction toUIString(obj) {\n    return isNullOrUndefined(obj) ? \"\" : obj + \"\";\n}\nexports.toUIString = toUIString;\n//# sourceMappingURL=types.js.map"
    },
    {
      "id": 13,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/misc/chart-public-enum.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/misc/chart-public-enum.js",
      "index": 223,
      "index2": 216,
      "size": 6008,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "./misc/chart-public-enum",
          "loc": "7:26-61"
        },
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "../misc/chart-public-enum",
          "loc": "6:26-62"
        },
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "../misc/chart-public-enum",
          "loc": "7:26-62"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./misc/chart-public-enum",
          "loc": "5:23-58"
        },
        {
          "moduleId": 95,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
          "type": "cjs require",
          "userRequest": "../../misc/chart-public-enum",
          "loc": "2:26-65"
        },
        {
          "moduleId": 194,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "type": "cjs require",
          "userRequest": "../../misc/chart-public-enum",
          "loc": "6:26-65"
        },
        {
          "moduleId": 198,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
          "type": "cjs require",
          "userRequest": "../../misc/chart-public-enum",
          "loc": "3:26-65"
        },
        {
          "moduleId": 199,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
          "type": "cjs require",
          "userRequest": "../../misc/chart-public-enum",
          "loc": "3:23-62"
        },
        {
          "moduleId": 200,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
          "type": "cjs require",
          "userRequest": "../../misc/chart-public-enum",
          "loc": "3:26-65"
        },
        {
          "moduleId": 201,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "type": "cjs require",
          "userRequest": "../../misc/chart-public-enum",
          "loc": "4:26-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Font styles\n */\nvar FontStyles;\n(function (FontStyles) {\n    FontStyles.Normal = \"Normal\";\n    FontStyles.Bold = \"Bold\";\n    FontStyles.Italic = \"Italic\";\n    FontStyles.BoldItalic = \"BoldItalic\";\n})(FontStyles = exports.FontStyles || (exports.FontStyles = {}));\n/*\n* Lists the possible ways a DateTime value can be interpreted\n* in the context of an axis.\n*/\nvar DateTimeComponent;\n(function (DateTimeComponent) {\n    DateTimeComponent.Second = \"Second\";\n    DateTimeComponent.Minute = \"Minute\";\n    DateTimeComponent.Hour = \"Hour\";\n    DateTimeComponent.Day = \"Day\";\n    DateTimeComponent.Week = \"Week\";\n    DateTimeComponent.Month = \"Week\";\n    DateTimeComponent.Year = \"Year\";\n})(DateTimeComponent = exports.DateTimeComponent || (exports.DateTimeComponent = {}));\n/**\n * Defines whether a single or multiple items (series or points) can be selected in chart.\n */\nvar ChartSelectionMode;\n(function (ChartSelectionMode) {\n    /**\n     *  Only a single item (series or point) can be selected at a time.\n     */\n    ChartSelectionMode.Single = \"Single\";\n    /**\n     * Multiple series/points can be selected.\n     */\n    ChartSelectionMode.Multiple = \"Multiple\";\n    /**\n     * Selection disabled.\n     */\n    ChartSelectionMode.None = \"None\";\n})(ChartSelectionMode = exports.ChartSelectionMode || (exports.ChartSelectionMode = {}));\n;\nvar ChartAnnotationZPosition;\n(function (ChartAnnotationZPosition) {\n    /**\n    * The annotation is rendered below the series (default).\n    */\n    ChartAnnotationZPosition.BelowSeries = \"BelowSeries\";\n    /**\n    * The annotation is rendered above the series.\n    */\n    ChartAnnotationZPosition.AboveSeries = \"AboveSeries\";\n})(ChartAnnotationZPosition = exports.ChartAnnotationZPosition || (exports.ChartAnnotationZPosition = {}));\n/*\n* Lists the possible use cases for palette entries.\n*/\nvar PaletteEntryUseState;\n(function (PaletteEntryUseState) {\n    /**\n     * The palette entry will be used when the series is not selected\n     */\n    PaletteEntryUseState.Normal = \"Normal\";\n    /**\n     * The palette entry will be used when the series is selected\n     */\n    PaletteEntryUseState.Selected = \"Selected\";\n})(PaletteEntryUseState = exports.PaletteEntryUseState || (exports.PaletteEntryUseState = {}));\nvar TrackballSnapMode;\n(function (TrackballSnapMode) {\n    /**\n     Only the closest point is selected.\n     */\n    TrackballSnapMode.ClosestPoint = \"ClosestPoint\";\n    /**\n     All points within the specified range are selected.\n     */\n    TrackballSnapMode.AllClosestPoints = \"AllClosestPoints\";\n})(TrackballSnapMode = exports.TrackballSnapMode || (exports.TrackballSnapMode = {}));\n/*\n* Lists the possible values for label fit modes\n*/\nvar AxisLabelFitMode;\n(function (AxisLabelFitMode) {\n    AxisLabelFitMode.None = \"None\";\n    AxisLabelFitMode.Multiline = \"Multiline\";\n    AxisLabelFitMode.Rotate = \"Rotate\";\n})(AxisLabelFitMode = exports.AxisLabelFitMode || (exports.AxisLabelFitMode = {}));\n/*\n* Lists the possible axis label layout  modes.\n*/\nvar AxisLabelLayoutMode;\n(function (AxisLabelLayoutMode) {\n    AxisLabelLayoutMode.Outer = \"Outer\";\n    AxisLabelLayoutMode.Inner = \"Inner\";\n})(AxisLabelLayoutMode = exports.AxisLabelLayoutMode || (exports.AxisLabelLayoutMode = {}));\n/*\n* Lists the possible location for a horizontal axis.\n*/\nvar AxisHorizontalLocation;\n(function (AxisHorizontalLocation) {\n    AxisHorizontalLocation.Left = \"Left\";\n    AxisHorizontalLocation.Right = \"Right\";\n})(AxisHorizontalLocation = exports.AxisHorizontalLocation || (exports.AxisHorizontalLocation = {}));\n/*\n* Lists the possible locations for a vertical axis.\n*/\nvar AxisVerticalLocation;\n(function (AxisVerticalLocation) {\n    AxisVerticalLocation.Top = \"Top\";\n    AxisVerticalLocation.Bottom = \"Bottom\";\n})(AxisVerticalLocation = exports.AxisVerticalLocation || (exports.AxisVerticalLocation = {}));\n/*\n* Lists the possible axis plot modes.\n*/\nvar AxisPlotMode;\n(function (AxisPlotMode) {\n    AxisPlotMode.BetweenTicks = \"BetweenTicks\";\n    AxisPlotMode.OnTicks = \"OnTicks\";\n    //  OnTicksPadded //NOTE: not supported in iOS\n})(AxisPlotMode = exports.AxisPlotMode || (exports.AxisPlotMode = {}));\n/*\n* Defines the different places where the legend can be positioned.\n*/\nvar ChartLegendPosition;\n(function (ChartLegendPosition) {\n    ChartLegendPosition.Left = \"Left\"; // The legend is positioned at the left side of the chart.\n    ChartLegendPosition.Right = \"Right\"; // The legend is positioned at the right side of the chart.\n    ChartLegendPosition.Top = \"Top\"; // The legend is positioned at the top side of the chart.\n    ChartLegendPosition.Bottom = \"Bottom\"; // The legend is positioned at the bottom side of the chart.\n    ChartLegendPosition.Floating = \"Floating\"; // The legend is floating.\n})(ChartLegendPosition = exports.ChartLegendPosition || (exports.ChartLegendPosition = {}));\n/*\n* Defines the offset origin in case of Floating legend position.\n*/\nvar ChartLegendOffsetOrigin;\n(function (ChartLegendOffsetOrigin) {\n    ChartLegendOffsetOrigin.TopLeft = \"TopLeft\"; // The offset is relative to the top left corner.\n    ChartLegendOffsetOrigin.TopRight = \"TopRight\"; // The offset is relative to the top right corner.\n    ChartLegendOffsetOrigin.BottomLeft = \"BottomLeft\"; // The offset is relative to the bottom left corner.\n    ChartLegendOffsetOrigin.BottomRight = \"BottomRight\"; // The offset is relative to the bottom right corner.\n})(ChartLegendOffsetOrigin = exports.ChartLegendOffsetOrigin || (exports.ChartLegendOffsetOrigin = {}));\n/*\n* Defines the known properties that are collections. This is used by the XML parser.\n*/\nvar knownCollections;\n(function (knownCollections) {\n    knownCollections.series = \"series\";\n    knownCollections.entries = \"entries\";\n    knownCollections.palettes = \"palettes\";\n    knownCollections.annotations = \"annotations\";\n})(knownCollections = exports.knownCollections || (exports.knownCollections = {}));\nexports.seriesName = \"seriesName\";\n"
    },
    {
      "id": 14,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/data/observable-array/observable-array.js",
      "name": "./~/tns-core-modules/data/observable-array/observable-array.js",
      "index": 77,
      "index2": 66,
      "size": 7043,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ts",
      "issuerId": 184,
      "issuerName": "./app/app.component.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable-array",
          "loc": "5:25-74"
        },
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable-array",
          "loc": "3:25-74"
        },
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable-array",
          "loc": "2:25-74"
        },
        {
          "moduleId": 76,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
          "module": "./~/nativescript-angular/directives/list-view-comp.js",
          "moduleName": "./~/nativescript-angular/directives/list-view-comp.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable-array",
          "loc": "4:25-74"
        },
        {
          "moduleId": 96,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable-array",
          "loc": "3:25-74"
        },
        {
          "moduleId": 116,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/formatted-string.js",
          "module": "./~/tns-core-modules/text/formatted-string.js",
          "moduleName": "./~/tns-core-modules/text/formatted-string.js",
          "type": "cjs require",
          "userRequest": "../data/observable-array",
          "loc": "5:25-60"
        },
        {
          "moduleId": 148,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "type": "cjs require",
          "userRequest": "../../data/observable-array",
          "loc": "8:25-63"
        },
        {
          "moduleId": 184,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ts",
          "module": "./app/app.component.ts",
          "moduleName": "./app/app.component.ts",
          "type": "cjs require",
          "userRequest": "data/observable-array",
          "loc": "3:25-57"
        },
        {
          "moduleId": 197,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable-array",
          "loc": "2:25-74"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../../data/observable-array",
          "loc": "8:25-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable = require(\"../observable\");\nvar types = require(\"../../utils/types\");\nvar ChangeType = (function () {\n    function ChangeType() {\n    }\n    return ChangeType;\n}());\nChangeType.Add = \"add\";\nChangeType.Delete = \"delete\";\nChangeType.Update = \"update\";\nChangeType.Splice = \"splice\";\nexports.ChangeType = ChangeType;\nvar CHANGE = \"change\";\nvar ObservableArray = (function (_super) {\n    __extends(ObservableArray, _super);\n    function ObservableArray() {\n        var _this = _super.call(this) || this;\n        if (arguments.length === 1 && Array.isArray(arguments[0])) {\n            _this._array = arguments[0].slice();\n        }\n        else {\n            _this._array = Array.apply(null, arguments);\n        }\n        _this._addArgs = {\n            eventName: CHANGE, object: _this,\n            action: ChangeType.Add,\n            index: null,\n            removed: new Array(),\n            addedCount: 1\n        };\n        _this._deleteArgs = {\n            eventName: CHANGE, object: _this,\n            action: ChangeType.Delete,\n            index: null,\n            removed: null,\n            addedCount: 0\n        };\n        return _this;\n    }\n    ObservableArray.prototype.getItem = function (index) {\n        return this._array[index];\n    };\n    ObservableArray.prototype.setItem = function (index, value) {\n        var oldValue = this._array[index];\n        this._array[index] = value;\n        this.notify({\n            eventName: CHANGE, object: this,\n            action: ChangeType.Update,\n            index: index,\n            removed: [oldValue],\n            addedCount: 1\n        });\n    };\n    Object.defineProperty(ObservableArray.prototype, \"length\", {\n        get: function () {\n            return this._array.length;\n        },\n        set: function (value) {\n            if (types.isNumber(value) && this._array && this._array.length !== value) {\n                this.splice(value, this._array.length - value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableArray.prototype.toString = function () {\n        return this._array.toString();\n    };\n    ObservableArray.prototype.toLocaleString = function () {\n        return this._array.toLocaleString();\n    };\n    ObservableArray.prototype.concat = function () {\n        this._addArgs.index = this._array.length;\n        var result = this._array.concat.apply(this._array, arguments);\n        return result;\n    };\n    ObservableArray.prototype.join = function (separator) {\n        return this._array.join(separator);\n    };\n    ObservableArray.prototype.pop = function () {\n        this._deleteArgs.index = this._array.length - 1;\n        var result = this._array.pop();\n        this._deleteArgs.removed = [result];\n        this.notify(this._deleteArgs);\n        this._notifyLengthChange();\n        return result;\n    };\n    ObservableArray.prototype.push = function () {\n        this._addArgs.index = this._array.length;\n        if (arguments.length === 1 && Array.isArray(arguments[0])) {\n            var source = arguments[0];\n            for (var i = 0, l = source.length; i < l; i++) {\n                this._array.push(source[i]);\n            }\n        }\n        else {\n            this._array.push.apply(this._array, arguments);\n        }\n        this._addArgs.addedCount = this._array.length - this._addArgs.index;\n        this.notify(this._addArgs);\n        this._notifyLengthChange();\n        return this._array.length;\n    };\n    ObservableArray.prototype._notifyLengthChange = function () {\n        var lengthChangedData = this._createPropertyChangeData(\"length\", this._array.length);\n        this.notify(lengthChangedData);\n    };\n    ObservableArray.prototype.reverse = function () {\n        return this._array.reverse();\n    };\n    ObservableArray.prototype.shift = function () {\n        var result = this._array.shift();\n        this._deleteArgs.index = 0;\n        this._deleteArgs.removed = [result];\n        this.notify(this._deleteArgs);\n        this._notifyLengthChange();\n        return result;\n    };\n    ObservableArray.prototype.slice = function (start, end) {\n        return this._array.slice(start, end);\n    };\n    ObservableArray.prototype.sort = function (compareFn) {\n        return this._array.sort(compareFn);\n    };\n    ObservableArray.prototype.splice = function (start, deleteCount) {\n        var length = this._array.length;\n        var result = this._array.splice.apply(this._array, arguments);\n        this.notify({\n            eventName: CHANGE, object: this,\n            action: ChangeType.Splice,\n            index: start,\n            removed: result,\n            addedCount: this._array.length > length ? this._array.length - length : 0\n        });\n        if (this._array.length !== length) {\n            this._notifyLengthChange();\n        }\n        return result;\n    };\n    ObservableArray.prototype.unshift = function () {\n        var length = this._array.length;\n        var result = this._array.unshift.apply(this._array, arguments);\n        this._addArgs.index = 0;\n        this._addArgs.addedCount = result - length;\n        this.notify(this._addArgs);\n        this._notifyLengthChange();\n        return result;\n    };\n    ObservableArray.prototype.indexOf = function (searchElement, fromIndex) {\n        var index = fromIndex ? fromIndex : 0;\n        for (var i = index, l = this._array.length; i < l; i++) {\n            if (this._array[i] === searchElement) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    ObservableArray.prototype.lastIndexOf = function (searchElement, fromIndex) {\n        var index = fromIndex ? fromIndex : this._array.length - 1;\n        for (var i = index; i >= 0; i--) {\n            if (this._array[i] === searchElement) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    ObservableArray.prototype.every = function (callbackfn, thisArg) {\n        return this._array.every(callbackfn, thisArg);\n    };\n    ObservableArray.prototype.some = function (callbackfn, thisArg) {\n        return this._array.some(callbackfn, thisArg);\n    };\n    ObservableArray.prototype.forEach = function (callbackfn, thisArg) {\n        this._array.forEach(callbackfn, thisArg);\n    };\n    ObservableArray.prototype.map = function (callbackfn, thisArg) {\n        return this._array.map(callbackfn, thisArg);\n    };\n    ObservableArray.prototype.filter = function (callbackfn, thisArg) {\n        return this._array.filter(callbackfn, thisArg);\n    };\n    ObservableArray.prototype.reduce = function (callbackfn, initialValue) {\n        return this._array.reduce(callbackfn, initialValue);\n    };\n    ObservableArray.prototype.reduceRight = function (callbackfn, initialValue) {\n        return this._array.reduceRight(callbackfn, initialValue);\n    };\n    return ObservableArray;\n}(observable.Observable));\nObservableArray.changeEvent = CHANGE;\nexports.ObservableArray = ObservableArray;\n//# sourceMappingURL=observable-array.js.map"
    },
    {
      "id": 15,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/data/observable/observable.js",
      "name": "./~/tns-core-modules/data/observable/observable.js",
      "index": 18,
      "index2": 5,
      "size": 7476,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/data/observable-array/observable-array.js",
      "issuerId": 14,
      "issuerName": "./~/tns-core-modules/data/observable-array/observable-array.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/data/observable-array/observable-array.js",
          "module": "./~/tns-core-modules/data/observable-array/observable-array.js",
          "moduleName": "./~/tns-core-modules/data/observable-array/observable-array.js",
          "type": "cjs require",
          "userRequest": "../observable",
          "loc": "2:17-41"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/properties/properties.js",
          "module": "./~/tns-core-modules/ui/core/properties/properties.js",
          "moduleName": "./~/tns-core-modules/ui/core/properties/properties.js",
          "type": "cjs require",
          "userRequest": "../../../data/observable",
          "loc": "2:19-54"
        },
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable",
          "loc": "4:19-62"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../../data/observable",
          "loc": "3:19-54"
        },
        {
          "moduleId": 96,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable",
          "loc": "4:19-62"
        },
        {
          "moduleId": 112,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application-common.js",
          "module": "./~/tns-core-modules/application/application-common.js",
          "moduleName": "./~/tns-core-modules/application/application-common.js",
          "type": "cjs require",
          "userRequest": "../data/observable",
          "loc": "3:19-48"
        },
        {
          "moduleId": 116,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/formatted-string.js",
          "module": "./~/tns-core-modules/text/formatted-string.js",
          "moduleName": "./~/tns-core-modules/text/formatted-string.js",
          "type": "cjs require",
          "userRequest": "../data/observable",
          "loc": "4:19-48"
        },
        {
          "moduleId": 160,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style/style.js",
          "module": "./~/tns-core-modules/ui/styling/style/style.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style/style.js",
          "type": "cjs require",
          "userRequest": "../../../data/observable",
          "loc": "2:19-54"
        },
        {
          "moduleId": 197,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/data/observable",
          "loc": "3:19-62"
        },
        {
          "moduleId": 239,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset-common.js",
          "module": "./~/tns-core-modules/image-asset/image-asset-common.js",
          "moduleName": "./~/tns-core-modules/image-asset/image-asset-common.js",
          "type": "cjs require",
          "userRequest": "../data/observable",
          "loc": "2:17-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar _wrappedIndex = 0;\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    WrappedValue.unwrap = function (value) {\n        return (value && value.wrapped) ? value.wrapped : value;\n    };\n    WrappedValue.wrap = function (value) {\n        var w = _wrappedValues[_wrappedIndex++ % 5];\n        w.wrapped = value;\n        return w;\n    };\n    return WrappedValue;\n}());\nexports.WrappedValue = WrappedValue;\nvar _wrappedValues = [\n    new WrappedValue(null),\n    new WrappedValue(null),\n    new WrappedValue(null),\n    new WrappedValue(null),\n    new WrappedValue(null)\n];\nvar Observable = (function () {\n    function Observable() {\n        this._observers = {};\n    }\n    Observable.prototype.get = function (name) {\n        return this[name];\n    };\n    Observable.prototype.set = function (name, value) {\n        if (this[name] === value) {\n            return;\n        }\n        var newValue = WrappedValue.unwrap(value);\n        this[name] = newValue;\n        this.notifyPropertyChange(name, newValue);\n    };\n    Observable.prototype.on = function (eventNames, callback, thisArg) {\n        this.addEventListener(eventNames, callback, thisArg);\n    };\n    Observable.prototype.off = function (eventNames, callback, thisArg) {\n        this.removeEventListener(eventNames, callback, thisArg);\n    };\n    Observable.prototype.addEventListener = function (eventNames, callback, thisArg) {\n        if (typeof eventNames !== \"string\") {\n            throw new TypeError(\"Events name(s) must be string.\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new TypeError(\"callback must be function.\");\n        }\n        var events = eventNames.split(\",\");\n        for (var i = 0, l = events.length; i < l; i++) {\n            var event_1 = events[i].trim();\n            var list = this._getEventList(event_1, true);\n            list.push({\n                callback: callback,\n                thisArg: thisArg\n            });\n        }\n    };\n    Observable.prototype.removeEventListener = function (eventNames, callback, thisArg) {\n        if (typeof eventNames !== \"string\") {\n            throw new TypeError(\"Events name(s) must be string.\");\n        }\n        if (callback && typeof callback !== \"function\") {\n            throw new TypeError(\"callback must be function.\");\n        }\n        var events = eventNames.split(\",\");\n        for (var i = 0, l = events.length; i < l; i++) {\n            var event_2 = events[i].trim();\n            if (callback) {\n                var list = this._getEventList(event_2, false);\n                if (list) {\n                    var index_1 = this._indexOfListener(list, callback, thisArg);\n                    if (index_1 >= 0) {\n                        list.splice(index_1, 1);\n                    }\n                    if (list.length === 0) {\n                        delete this._observers[event_2];\n                    }\n                }\n            }\n            else {\n                this._observers[event_2] = undefined;\n                delete this._observers[event_2];\n            }\n        }\n    };\n    Observable.prototype.notify = function (data) {\n        var observers = this._observers[data.eventName];\n        if (!observers) {\n            return;\n        }\n        for (var i = observers.length - 1; i >= 0; i--) {\n            var entry = observers[i];\n            if (entry.thisArg) {\n                entry.callback.apply(entry.thisArg, [data]);\n            }\n            else {\n                entry.callback(data);\n            }\n        }\n    };\n    Observable.prototype.notifyPropertyChange = function (name, newValue) {\n        this.notify(this._createPropertyChangeData(name, newValue));\n    };\n    Observable.prototype.hasListeners = function (eventName) {\n        return eventName in this._observers;\n    };\n    Observable.prototype._createPropertyChangeData = function (name, value) {\n        return {\n            eventName: Observable.propertyChangeEvent,\n            propertyName: name,\n            object: this,\n            value: value\n        };\n    };\n    Observable.prototype._emit = function (eventNames) {\n        var events = eventNames.split(\",\");\n        for (var i = 0, l = events.length; i < l; i++) {\n            var event_3 = events[i].trim();\n            this.notify({ eventName: event_3, object: this });\n        }\n    };\n    Observable.prototype._getEventList = function (eventName, createIfNeeded) {\n        if (!eventName) {\n            throw new TypeError(\"EventName must be valid string.\");\n        }\n        var list = this._observers[eventName];\n        if (!list && createIfNeeded) {\n            list = [];\n            this._observers[eventName] = list;\n        }\n        return list;\n    };\n    Observable.prototype._indexOfListener = function (list, callback, thisArg) {\n        for (var i = 0; i < list.length; i++) {\n            var entry = list[i];\n            if (thisArg) {\n                if (entry.callback === callback && entry.thisArg === thisArg) {\n                    return i;\n                }\n            }\n            else {\n                if (entry.callback === callback) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    return Observable;\n}());\nObservable.propertyChangeEvent = \"propertyChange\";\nexports.Observable = Observable;\nvar ObservableFromObject = (function (_super) {\n    __extends(ObservableFromObject, _super);\n    function ObservableFromObject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._map = {};\n        return _this;\n    }\n    ObservableFromObject.prototype.set = function (name, value) {\n        var currentValue = this._map[name];\n        if (currentValue === value) {\n            return;\n        }\n        var newValue = WrappedValue.unwrap(value);\n        this._map[name] = newValue;\n        this.notifyPropertyChange(name, newValue);\n    };\n    return ObservableFromObject;\n}(Observable));\nfunction defineNewProperty(target, propertyName) {\n    Object.defineProperty(target, propertyName, {\n        get: function () {\n            return target._map[propertyName];\n        },\n        set: function (value) {\n            target.set(propertyName, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\nfunction addPropertiesFromObject(observable, source, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    var isRecursive = recursive;\n    for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n            if (isRecursive) {\n                if (!Array.isArray(source[prop]) && source[prop] && typeof source[prop] === 'object' && !(source[prop] instanceof Observable)) {\n                    source[prop] = fromObjectRecursive(source[prop]);\n                }\n            }\n            defineNewProperty(observable, prop);\n            observable.set(prop, source[prop]);\n        }\n    }\n}\nfunction fromObject(source) {\n    var observable = new ObservableFromObject();\n    addPropertiesFromObject(observable, source, false);\n    return observable;\n}\nexports.fromObject = fromObject;\nfunction fromObjectRecursive(source) {\n    var observable = new ObservableFromObject();\n    addPropertiesFromObject(observable, source, true);\n    return observable;\n}\nexports.fromObjectRecursive = fromObjectRecursive;\n//# sourceMappingURL=observable.js.map"
    },
    {
      "id": 16,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/trace/trace.js",
      "name": "./~/tns-core-modules/trace/trace.js",
      "index": 14,
      "index2": 3,
      "size": 5161,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.js",
      "issuerId": 37,
      "issuerName": "./~/nativescript-angular/common/detached-loader.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils.android.js",
          "module": "./~/tns-core-modules/utils/utils.android.js",
          "moduleName": "./~/tns-core-modules/utils/utils.android.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "5:14-33"
        },
        {
          "moduleId": 17,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/trace.js",
          "module": "./~/nativescript-angular/trace.js",
          "moduleName": "./~/nativescript-angular/trace.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/trace",
          "loc": "2:14-47"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
          "module": "./~/tns-core-modules/ui/styling/font.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/font.android.js",
          "type": "cjs require",
          "userRequest": "../../trace",
          "loc": "6:14-36"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.js",
          "module": "./~/nativescript-angular/common/detached-loader.js",
          "moduleName": "./~/nativescript-angular/common/detached-loader.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/trace",
          "loc": "3:14-47"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "../../trace",
          "loc": "6:14-36"
        },
        {
          "moduleId": 61,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "module": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "moduleName": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
          "type": "cjs require",
          "userRequest": "../../trace",
          "loc": "4:12-34"
        },
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "trace",
          "loc": "15:16-32"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../../trace",
          "loc": "9:14-39"
        },
        {
          "moduleId": 121,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation-common.js",
          "module": "./~/tns-core-modules/ui/animation/animation-common.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation-common.js",
          "type": "cjs require",
          "userRequest": "../../trace",
          "loc": "4:14-36"
        },
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "../../trace",
          "loc": "5:14-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar enabled = false;\nvar _categories = {};\nvar _writers = [];\nvar _eventListeners = [];\nfunction enable() {\n    enabled = true;\n}\nexports.enable = enable;\nfunction disable() {\n    enabled = false;\n}\nexports.disable = disable;\nfunction isEnabled() {\n    return enabled;\n}\nexports.isEnabled = isEnabled;\nfunction isCategorySet(category) {\n    return category in _categories;\n}\nexports.isCategorySet = isCategorySet;\nfunction addWriter(writer) {\n    _writers.push(writer);\n}\nexports.addWriter = addWriter;\nfunction removeWriter(writer) {\n    var index = _writers.indexOf(writer);\n    if (index >= 0) {\n        _writers.splice(index, 1);\n    }\n}\nexports.removeWriter = removeWriter;\nfunction clearWriters() {\n    if (_writers.length > 0) {\n        _writers.splice(0, _writers.length);\n    }\n}\nexports.clearWriters = clearWriters;\nfunction setCategories(categories) {\n    _categories = {};\n    addCategories(categories);\n}\nexports.setCategories = setCategories;\nfunction addCategories(categories) {\n    var split = categories.split(\",\");\n    for (var i = 0; i < split.length; i++) {\n        _categories[split[i].trim()] = true;\n    }\n}\nexports.addCategories = addCategories;\nfunction write(message, category, type) {\n    var i;\n    if (type === messageType.error) {\n        for (i = 0; i < _writers.length; i++) {\n            _writers[i].write(message, category, type);\n        }\n        return;\n    }\n    if (!enabled) {\n        return;\n    }\n    if (!(category in _categories)) {\n        return;\n    }\n    for (i = 0; i < _writers.length; i++) {\n        _writers[i].write(message, category, type);\n    }\n}\nexports.write = write;\nfunction notifyEvent(object, name, data) {\n    if (!enabled) {\n        return;\n    }\n    var i, listener, filters;\n    for (i = 0; i < _eventListeners.length; i++) {\n        listener = _eventListeners[i];\n        if (listener.filter) {\n            filters = listener.filter.split(\",\");\n            filters.forEach(function (value) {\n                if (value.trim() === name) {\n                    listener.on(object, name, data);\n                }\n            });\n        }\n        else {\n            listener.on(object, name, data);\n        }\n    }\n}\nexports.notifyEvent = notifyEvent;\nfunction addEventListener(listener) {\n    _eventListeners.push(listener);\n}\nexports.addEventListener = addEventListener;\nfunction removeEventListener(listener) {\n    var index = _eventListeners.indexOf(listener);\n    if (index >= 0) {\n        _eventListeners.splice(index, 1);\n    }\n}\nexports.removeEventListener = removeEventListener;\nvar messageType;\n(function (messageType) {\n    messageType.log = 0;\n    messageType.info = 1;\n    messageType.warn = 2;\n    messageType.error = 3;\n})(messageType = exports.messageType || (exports.messageType = {}));\nvar categories;\n(function (categories) {\n    categories.VisualTreeEvents = \"VisualTreeEvents\";\n    categories.Layout = \"Layout\";\n    categories.Style = \"Style\";\n    categories.ViewHierarchy = \"ViewHierarchy\";\n    categories.NativeLifecycle = \"NativeLifecycle\";\n    categories.Debug = \"Debug\";\n    categories.Navigation = \"Navigation\";\n    categories.Test = \"Test\";\n    categories.Binding = \"Binding\";\n    categories.BindingError = \"BindingError\";\n    categories.Error = \"Error\";\n    categories.Animation = \"Animation\";\n    categories.Transition = \"Transition\";\n    categories.All = categories.VisualTreeEvents + \",\" + categories.Layout + \",\" + categories.Style + \",\" + categories.ViewHierarchy + \",\" + categories.NativeLifecycle + \",\" + categories.Debug + \",\" + categories.Navigation + \",\" + categories.Test + \",\" + categories.Binding + \",\" + categories.Error + \",\" + categories.Animation + \",\" + categories.Transition;\n    categories.separator = \",\";\n    function concat() {\n        var i;\n        var result;\n        for (i = 0; i < arguments.length; i++) {\n            if (!result) {\n                result = arguments[i];\n                continue;\n            }\n            result = result.concat(categories.separator, arguments[i]);\n        }\n        return result;\n    }\n    categories.concat = concat;\n})(categories = exports.categories || (exports.categories = {}));\nvar ConsoleWriter = (function () {\n    function ConsoleWriter() {\n    }\n    ConsoleWriter.prototype.write = function (message, category, type) {\n        if (!console) {\n            return;\n        }\n        var msgType;\n        if (type === undefined) {\n            msgType = messageType.log;\n        }\n        else {\n            msgType = type;\n        }\n        switch (msgType) {\n            case messageType.log:\n                console.log(category + \": \" + message);\n                break;\n            case messageType.info:\n                console.info(category + \": \" + message);\n                break;\n            case messageType.warn:\n                console.warn(category + \": \" + message);\n                break;\n            case messageType.error:\n                console.error(category + \": \" + message);\n                break;\n        }\n    };\n    return ConsoleWriter;\n}());\naddWriter(new ConsoleWriter());\n//# sourceMappingURL=trace.js.map"
    },
    {
      "id": 17,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/trace.js",
      "name": "./~/nativescript-angular/trace.js",
      "index": 126,
      "index2": 123,
      "size": 1120,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
      "issuerId": 82,
      "issuerName": "./~/nativescript-angular/renderer.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-location-strategy.js",
          "module": "./~/nativescript-angular/router/ns-location-strategy.js",
          "moduleName": "./~/nativescript-angular/router/ns-location-strategy.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "4:14-33"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "9:14-33"
        },
        {
          "moduleId": 76,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
          "module": "./~/nativescript-angular/directives/list-view-comp.js",
          "moduleName": "./~/nativescript-angular/directives/list-view-comp.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "6:14-33"
        },
        {
          "moduleId": 78,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/tab-view.js",
          "module": "./~/nativescript-angular/directives/tab-view.js",
          "moduleName": "./~/nativescript-angular/directives/tab-view.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "5:14-33"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "./trace",
          "loc": "9:14-32"
        },
        {
          "moduleId": 83,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
          "module": "./~/nativescript-angular/router/ns-router-link.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "4:14-33"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "./trace",
          "loc": "8:14-32"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "./trace",
          "loc": "17:14-32"
        },
        {
          "moduleId": 181,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-platform-location.js",
          "module": "./~/nativescript-angular/router/ns-platform-location.js",
          "moduleName": "./~/nativescript-angular/router/ns-platform-location.js",
          "type": "cjs require",
          "userRequest": "../trace",
          "loc": "5:14-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar trace_1 = require(\"tns-core-modules/trace\");\nexports.rendererTraceCategory = \"ns-renderer\";\nexports.routerTraceCategory = \"ns-router\";\nexports.listViewTraceCategory = \"ns-list-view\";\nfunction rendererLog(msg) {\n    trace_1.write(msg, exports.rendererTraceCategory);\n}\nexports.rendererLog = rendererLog;\nfunction rendererError(message) {\n    trace_1.write(message, exports.rendererTraceCategory, trace_1.messageType.error);\n}\nexports.rendererError = rendererError;\nfunction routerLog(message) {\n    trace_1.write(message, exports.routerTraceCategory);\n}\nexports.routerLog = routerLog;\nfunction styleError(message) {\n    trace_1.write(message, trace_1.categories.Style, trace_1.messageType.error);\n}\nexports.styleError = styleError;\nfunction listViewLog(message) {\n    trace_1.write(message, exports.listViewTraceCategory);\n}\nexports.listViewLog = listViewLog;\nfunction listViewError(message) {\n    trace_1.write(message, exports.listViewTraceCategory, trace_1.messageType.error);\n}\nexports.listViewError = listViewError;\n//# sourceMappingURL=trace.js.map"
    },
    {
      "id": 18,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color.android.js",
      "name": "./~/tns-core-modules/color/color.android.js",
      "index": 21,
      "index2": 12,
      "size": 558,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
      "issuerId": 21,
      "issuerName": "./~/tns-core-modules/ui/styling/style-properties.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "../../color",
          "loc": "2:14-36"
        },
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/color",
          "loc": "4:14-47"
        },
        {
          "moduleId": 121,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation-common.js",
          "module": "./~/tns-core-modules/ui/animation/animation-common.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation-common.js",
          "type": "cjs require",
          "userRequest": "../../color",
          "loc": "2:14-36"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../../../color",
          "loc": "14:14-39"
        },
        {
          "moduleId": 194,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/color",
          "loc": "5:14-47"
        },
        {
          "moduleId": 195,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/color",
          "loc": "4:14-47"
        },
        {
          "moduleId": 263,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background-common.js",
          "module": "./~/tns-core-modules/ui/styling/background-common.js",
          "moduleName": "./~/tns-core-modules/ui/styling/background-common.js",
          "type": "cjs require",
          "userRequest": "../../color",
          "loc": "2:14-36"
        },
        {
          "moduleId": 264,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/converters.js",
          "module": "./~/tns-core-modules/ui/styling/converters.js",
          "moduleName": "./~/tns-core-modules/ui/styling/converters.js",
          "type": "cjs require",
          "userRequest": "../../color",
          "loc": "2:14-36"
        },
        {
          "moduleId": 265,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-animation-parser.js",
          "module": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
          "moduleName": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
          "type": "cjs require",
          "userRequest": "../../color",
          "loc": "2:14-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar common = require(\"./color-common\");\nvar Color = (function (_super) {\n    __extends(Color, _super);\n    function Color() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Color.prototype, \"android\", {\n        get: function () {\n            return this.argb >> 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Color;\n}(common.Color));\nexports.Color = Color;\n//# sourceMappingURL=color.android.js.map"
    },
    {
      "id": 19,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/common/@angular/common.es5.js",
      "name": "./~/@angular/common/@angular/common.es5.js",
      "index": 143,
      "index2": 141,
      "size": 130563,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/common",
          "loc": "10:4-164"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/platform-browser/@angular/platform-browser.es5.js",
          "module": "./~/@angular/platform-browser/@angular/platform-browser.es5.js",
          "moduleName": "./~/@angular/platform-browser/@angular/platform-browser.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/common",
          "loc": "11:0-87"
        },
        {
          "moduleId": 38,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-location-strategy.js",
          "module": "./~/nativescript-angular/router/ns-location-strategy.js",
          "moduleName": "./~/nativescript-angular/router/ns-location-strategy.js",
          "type": "cjs require",
          "userRequest": "@angular/common",
          "loc": "3:15-41"
        },
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "@angular/common",
          "loc": "9:15-41"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "@angular/common",
          "loc": "4:15-41"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "@angular/common",
          "loc": "11:14-40"
        },
        {
          "moduleId": 181,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-platform-location.js",
          "module": "./~/nativescript-angular/router/ns-platform-location.js",
          "moduleName": "./~/nativescript-angular/router/ns-platform-location.js",
          "type": "cjs require",
          "userRequest": "@angular/common",
          "loc": "3:15-41"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "@angular/common",
          "loc": "7:0-26"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "NgLocaleLocalization",
        "NgLocalization",
        "CommonModule",
        "NgClass",
        "NgFor",
        "NgForOf",
        "NgForOfContext",
        "NgIf",
        "NgIfContext",
        "NgPlural",
        "NgPluralCase",
        "NgStyle",
        "NgSwitch",
        "NgSwitchCase",
        "NgSwitchDefault",
        "NgTemplateOutlet",
        "NgComponentOutlet",
        "AsyncPipe",
        "DatePipe",
        "I18nPluralPipe",
        "I18nSelectPipe",
        "JsonPipe",
        "LowerCasePipe",
        "CurrencyPipe",
        "DecimalPipe",
        "PercentPipe",
        "SlicePipe",
        "UpperCasePipe",
        "TitleCasePipe",
        "ɵPLATFORM_BROWSER_ID",
        "ɵPLATFORM_SERVER_ID",
        "ɵPLATFORM_WORKER_APP_ID",
        "ɵPLATFORM_WORKER_UI_ID",
        "isPlatformBrowser",
        "isPlatformServer",
        "isPlatformWorkerApp",
        "isPlatformWorkerUi",
        "VERSION",
        "PlatformLocation",
        "LOCATION_INITIALIZED",
        "LocationStrategy",
        "APP_BASE_HREF",
        "HashLocationStrategy",
        "PathLocationStrategy",
        "Location",
        "ɵa",
        "ɵb"
      ],
      "depth": 1,
      "source": "var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Attribute, ChangeDetectorRef, ComponentFactoryResolver, Directive, ElementRef, EventEmitter, Host, Inject, Injectable, InjectionToken, Input, IterableDiffers, KeyValueDiffers, LOCALE_ID, NgModule, NgModuleRef, Optional, Pipe, Renderer, TemplateRef, Version, ViewContainerRef, WrappedValue, isDevMode, ɵisListLikeIterable, ɵisObservable, ɵisPromise, ɵstringify } from '@angular/core';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms\n * that angular supports. For example, the default `PlatformLocation` is {\\@link\n * BrowserPlatformLocation},\n * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n *\n * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n * when\n * they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n * by\n * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n * Router} /\n * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class\n * they are all platform independent.\n *\n * \\@stable\n * @abstract\n */\nvar PlatformLocation = (function () {\n    function PlatformLocation() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    PlatformLocation.prototype.getBaseHrefFromDOM = function () { };\n    /**\n     * @abstract\n     * @param {?} fn\n     * @return {?}\n     */\n    PlatformLocation.prototype.onPopState = function (fn) { };\n    /**\n     * @abstract\n     * @param {?} fn\n     * @return {?}\n     */\n    PlatformLocation.prototype.onHashChange = function (fn) { };\n    Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformLocation.prototype, \"search\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    PlatformLocation.prototype.replaceState = function (state, title, url) { };\n    /**\n     * @abstract\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    PlatformLocation.prototype.pushState = function (state, title, url) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    PlatformLocation.prototype.forward = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    PlatformLocation.prototype.back = function () { };\n    return PlatformLocation;\n}());\n/**\n * \\@whatItDoes indicates when a location is initialized\n * \\@experimental\n */\nvar LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n *\n * This is used under the hood of the {\\@link Location} service.\n *\n * Applications should use the {\\@link Router} or {\\@link Location} services to\n * interact with application route state.\n *\n * For instance, {\\@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n *\n * See these two classes for more.\n *\n * \\@stable\n * @abstract\n */\nvar LocationStrategy = (function () {\n    function LocationStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    LocationStrategy.prototype.path = function (includeHash) { };\n    /**\n     * @abstract\n     * @param {?} internal\n     * @return {?}\n     */\n    LocationStrategy.prototype.prepareExternalUrl = function (internal) { };\n    /**\n     * @abstract\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    LocationStrategy.prototype.pushState = function (state, title, url, queryParams) { };\n    /**\n     * @abstract\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    LocationStrategy.prototype.replaceState = function (state, title, url, queryParams) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    LocationStrategy.prototype.forward = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    LocationStrategy.prototype.back = function () { };\n    /**\n     * @abstract\n     * @param {?} fn\n     * @return {?}\n     */\n    LocationStrategy.prototype.onPopState = function (fn) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    LocationStrategy.prototype.getBaseHref = function () { };\n    return LocationStrategy;\n}());\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {\\@link PathLocationStrategy}.\n *\n * If you're using {\\@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n *\n * ### Example\n *\n * ```typescript\n * import {Component, NgModule} from '\\@angular/core';\n * import {APP_BASE_HREF} from '\\@angular/common';\n *\n * \\@NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * \\@stable\n */\nvar APP_BASE_HREF = new InjectionToken('appBaseHref');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n * \\@description\n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \\@stable\n */\nvar Location = (function () {\n    /**\n     * @param {?} platformStrategy\n     */\n    function Location(platformStrategy) {\n        var _this = this;\n        /**\n         * \\@internal\n         */\n        this._subject = new EventEmitter();\n        this._platformStrategy = platformStrategy;\n        var browserBaseHref = this._platformStrategy.getBaseHref();\n        this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState(function (ev) {\n            _this._subject.emit({\n                'url': _this.path(true),\n                'pop': true,\n                'type': ev.type,\n            });\n        });\n    }\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    Location.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.normalize(this._platformStrategy.path(includeHash));\n    };\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     * @param {?} path\n     * @param {?=} query\n     * @return {?}\n     */\n    Location.prototype.isCurrentPathEqualTo = function (path, query) {\n        if (query === void 0) { query = ''; }\n        return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n    };\n    /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     * @param {?} url\n     * @return {?}\n     */\n    Location.prototype.normalize = function (url) {\n        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    };\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     * @param {?} url\n     * @return {?}\n     */\n    Location.prototype.prepareExternalUrl = function (url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    };\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     * @param {?} path\n     * @param {?=} query\n     * @return {?}\n     */\n    Location.prototype.go = function (path, query) {\n        if (query === void 0) { query = ''; }\n        this._platformStrategy.pushState(null, '', path, query);\n    };\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     * @param {?} path\n     * @param {?=} query\n     * @return {?}\n     */\n    Location.prototype.replaceState = function (path, query) {\n        if (query === void 0) { query = ''; }\n        this._platformStrategy.replaceState(null, '', path, query);\n    };\n    /**\n     * Navigates forward in the platform's history.\n     * @return {?}\n     */\n    Location.prototype.forward = function () { this._platformStrategy.forward(); };\n    /**\n     * Navigates back in the platform's history.\n     * @return {?}\n     */\n    Location.prototype.back = function () { this._platformStrategy.back(); };\n    /**\n     * Subscribe to the platform's `popState` events.\n     * @param {?} onNext\n     * @param {?=} onThrow\n     * @param {?=} onReturn\n     * @return {?}\n     */\n    Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n        if (onThrow === void 0) { onThrow = null; }\n        if (onReturn === void 0) { onReturn = null; }\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    /**\n     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n     * is.\n     * @param {?} params\n     * @return {?}\n     */\n    Location.normalizeQueryParams = function (params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    };\n    /**\n     * Given 2 parts of a url, join them with a slash if needed.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    Location.joinWithSlash = function (start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        var /** @type {?} */ slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    };\n    /**\n     * If url has a trailing slash, remove it, otherwise return url as is.\n     * @param {?} url\n     * @return {?}\n     */\n    Location.stripTrailingSlash = function (url) { return url.replace(/\\/$/, ''); };\n    return Location;\n}());\nLocation.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nLocation.ctorParameters = function () { return [\n    { type: LocationStrategy, },\n]; };\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Use URL hash for storing application location data.\n * \\@description\n * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * ### Example\n *\n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * \\@stable\n */\nvar HashLocationStrategy = (function (_super) {\n    __extends(HashLocationStrategy, _super);\n    /**\n     * @param {?} _platformLocation\n     * @param {?=} _baseHref\n     */\n    function HashLocationStrategy(_platformLocation, _baseHref) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        _this._baseHref = '';\n        if (_baseHref != null) {\n            _this._baseHref = _baseHref;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    /**\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        // the hash value is always prefixed with a `#`\n        // and if it is empty then it will stay empty\n        var /** @type {?} */ path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    };\n    /**\n     * @param {?} internal\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        var /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n        var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n        var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    };\n    /**\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    /**\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    return HashLocationStrategy;\n}(LocationStrategy));\nHashLocationStrategy.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHashLocationStrategy.ctorParameters = function () { return [\n    { type: PlatformLocation, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Use URL for storing application location data.\n * \\@description\n * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * ### Example\n *\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * \\@stable\n */\nvar PathLocationStrategy = (function (_super) {\n    __extends(PathLocationStrategy, _super);\n    /**\n     * @param {?} _platformLocation\n     * @param {?=} href\n     */\n    function PathLocationStrategy(_platformLocation, href) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = _this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n        }\n        _this._baseHref = href;\n        return _this;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    /**\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    /**\n     * @param {?} internal\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    };\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        var /** @type {?} */ pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        var /** @type {?} */ hash = this._platformLocation.hash;\n        return hash && includeHash ? \"\" + pathname + hash : pathname;\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n        var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n        var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    };\n    /**\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    /**\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    return PathLocationStrategy;\n}(LocationStrategy));\nPathLocationStrategy.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nPathLocationStrategy.ctorParameters = function () { return [\n    { type: PlatformLocation, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental\n * @abstract\n */\nvar NgLocalization = (function () {\n    function NgLocalization() {\n    }\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    NgLocalization.prototype.getPluralCategory = function (value) { };\n    return NgLocalization;\n}());\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n *\n * \\@internal\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @return {?}\n */\nfunction getPluralCategory(value, cases, ngLocalization) {\n    var /** @type {?} */ key = \"=\" + value;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n}\n/**\n * Returns the plural case based on the locale\n *\n * \\@experimental\n */\nvar NgLocaleLocalization = (function (_super) {\n    __extends(NgLocaleLocalization, _super);\n    /**\n     * @param {?} locale\n     */\n    function NgLocaleLocalization(locale) {\n        var _this = _super.call(this) || this;\n        _this.locale = locale;\n        return _this;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n        var /** @type {?} */ plural = getPluralCase(this.locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    };\n    return NgLocaleLocalization;\n}(NgLocalization));\nNgLocaleLocalization.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNgLocaleLocalization.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },\n]; };\nvar Plural = {};\nPlural.Zero = 0;\nPlural.One = 1;\nPlural.Two = 2;\nPlural.Few = 3;\nPlural.Many = 4;\nPlural.Other = 5;\nPlural[Plural.Zero] = \"Zero\";\nPlural[Plural.One] = \"One\";\nPlural[Plural.Two] = \"Two\";\nPlural[Plural.Few] = \"Few\";\nPlural[Plural.Many] = \"Many\";\nPlural[Plural.Other] = \"Other\";\n/**\n * Returns the plural case based on the locale\n *\n * \\@experimental\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nfunction getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(/** @type {?} */ (nLike), 10);\n    }\n    var /** @type {?} */ n = (nLike);\n    var /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var /** @type {?} */ i = Math.floor(Math.abs(n));\n    var /** @type {?} */ v = nDecimal.length;\n    var /** @type {?} */ f = parseInt(nDecimal, 10);\n    var /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'agq':\n        case 'bas':\n        case 'cu':\n        case 'dav':\n        case 'dje':\n        case 'dua':\n        case 'dyo':\n        case 'ebu':\n        case 'ewo':\n        case 'guz':\n        case 'kam':\n        case 'khq':\n        case 'ki':\n        case 'kln':\n        case 'kok':\n        case 'ksf':\n        case 'lrc':\n        case 'lu':\n        case 'luo':\n        case 'luy':\n        case 'mer':\n        case 'mfe':\n        case 'mgh':\n        case 'mua':\n        case 'mzn':\n        case 'nmg':\n        case 'nus':\n        case 'qu':\n        case 'rn':\n        case 'rw':\n        case 'sbp':\n        case 'twq':\n        case 'vai':\n        case 'yav':\n        case 'yue':\n        case 'zgh':\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        default:\n            return Plural.Other;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n *\n * \\@howToUse\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * \\@description\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * \\@stable\n */\nvar NgClass = (function () {\n    /**\n     * @param {?} _iterableDiffers\n     * @param {?} _keyValueDiffers\n     * @param {?} _ngEl\n     * @param {?} _renderer\n     */\n    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    Object.defineProperty(NgClass.prototype, \"klass\", {\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._applyInitialClasses(true);\n            this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n            this._applyInitialClasses(false);\n            this._applyClasses(this._rawClass, false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgClass.prototype, \"ngClass\", {\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._cleanupClasses(this._rawClass);\n            this._iterableDiffer = null;\n            this._keyValueDiffer = null;\n            this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n            if (this._rawClass) {\n                if (ɵisListLikeIterable(this._rawClass)) {\n                    this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n                }\n                else {\n                    this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgClass.prototype.ngDoCheck = function () {\n        if (this._iterableDiffer) {\n            var /** @type {?} */ iterableChanges = this._iterableDiffer.diff(/** @type {?} */ (this._rawClass));\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            var /** @type {?} */ keyValueChanges = this._keyValueDiffer.diff(/** @type {?} */ (this._rawClass));\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    };\n    /**\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    NgClass.prototype._cleanupClasses = function (rawClassVal) {\n        this._applyClasses(rawClassVal, true);\n        this._applyInitialClasses(false);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgClass.prototype._applyKeyValueChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachRemovedItem(function (record) {\n            if (record.previousValue) {\n                _this._toggleClass(record.key, false);\n            }\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgClass.prototype._applyIterableChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) {\n            if (typeof record.item === 'string') {\n                _this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + ɵstringify(record.item));\n            }\n        });\n        changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n    };\n    /**\n     * @param {?} isCleanup\n     * @return {?}\n     */\n    NgClass.prototype._applyInitialClasses = function (isCleanup) {\n        var _this = this;\n        this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n    };\n    /**\n     * @param {?} rawClassVal\n     * @param {?} isCleanup\n     * @return {?}\n     */\n    NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                ((rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) {\n                    if (rawClassVal[klass] != null)\n                        _this._toggleClass(klass, !isCleanup);\n                });\n            }\n        }\n    };\n    /**\n     * @param {?} klass\n     * @param {?} enabled\n     * @return {?}\n     */\n    NgClass.prototype._toggleClass = function (klass, enabled) {\n        var _this = this;\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, !!enabled); });\n        }\n    };\n    return NgClass;\n}());\nNgClass.decorators = [\n    { type: Directive, args: [{ selector: '[ngClass]' },] },\n];\n/**\n * @nocollapse\n */\nNgClass.ctorParameters = function () { return [\n    { type: IterableDiffers, },\n    { type: KeyValueDiffers, },\n    { type: ElementRef, },\n    { type: Renderer, },\n]; };\nNgClass.propDecorators = {\n    'klass': [{ type: Input, args: ['class',] },],\n    'ngClass': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletProviders`: Optional injectable objects ({\\@link Provider}) that are visible\n * to the component.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * # Example\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * \\@experimental\n */\nvar NgComponentOutlet = (function () {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    function NgComponentOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgComponentOutlet.prototype.ngOnChanges = function (changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            var /** @type {?} */ elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    var /** @type {?} */ parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            var /** @type {?} */ componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            var /** @type {?} */ componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgComponentOutlet.prototype.ngOnDestroy = function () {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    };\n    return NgComponentOutlet;\n}());\nNgComponentOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[ngComponentOutlet]' },] },\n];\n/**\n * @nocollapse\n */\nNgComponentOutlet.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n]; };\nNgComponentOutlet.propDecorators = {\n    'ngComponentOutlet': [{ type: Input },],\n    'ngComponentOutletInjector': [{ type: Input },],\n    'ngComponentOutletContent': [{ type: Input },],\n    'ngComponentOutletNgModuleFactory': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar NgForOfContext = (function () {\n    /**\n     * @param {?} $implicit\n     * @param {?} ngForOf\n     * @param {?} index\n     * @param {?} count\n     */\n    function NgForOfContext($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    Object.defineProperty(NgForOfContext.prototype, \"first\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.index === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"last\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.index === this.count - 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"even\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.index % 2 === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"odd\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.even; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgForOfContext;\n}());\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n *\n * ### Local Variables\n *\n * `NgForOf` provides several exported values that can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * ### Change Propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n *\n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n *\n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * ### Syntax\n *\n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n * - `<li template=\"ngFor let item of items; index as i; trackBy: trackByFn\">...</li>`\n *\n * With `<ng-template>` element:\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * ### Example\n *\n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n *\n * \\@stable\n */\nvar NgForOf = (function () {\n    /**\n     * @param {?} _viewContainer\n     * @param {?} _template\n     * @param {?} _differs\n     */\n    function NgForOf(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._differ = null;\n    }\n    Object.defineProperty(NgForOf.prototype, \"ngForTrackBy\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._trackByFn; },\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (isDevMode() && fn != null && typeof fn !== 'function') {\n                // TODO(vicb): use a log service once there is a public one available\n                if ((console) && (console.warn)) {\n                    console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \" +\n                        \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                }\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTemplate\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n            // The current type is too restrictive; a template that just uses index, for example,\n            // should be acceptable.\n            if (value) {\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgForOf.prototype.ngOnChanges = function (changes) {\n        if ('ngForOf' in changes) {\n            // React on ngForOf changes only once all inputs have been initialized\n            var /** @type {?} */ value = changes['ngForOf'].currentValue;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (e) {\n                    throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgForOf.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            var /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgForOf.prototype._applyChanges = function (changes) {\n        var _this = this;\n        var /** @type {?} */ insertTuples = [];\n        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n            if (item.previousIndex == null) {\n                var /** @type {?} */ view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(null, _this.ngForOf, null, null), currentIndex);\n                var /** @type {?} */ tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                _this._viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                var /** @type {?} */ view = _this._viewContainer.get(adjustedPreviousIndex);\n                _this._viewContainer.move(view, currentIndex);\n                var /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n                insertTuples.push(tuple);\n            }\n        });\n        for (var /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (var /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n            var /** @type {?} */ viewRef = (this._viewContainer.get(i));\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n        }\n        changes.forEachIdentityChange(function (record) {\n            var /** @type {?} */ viewRef = (_this._viewContainer.get(record.currentIndex));\n            viewRef.context.$implicit = record.item;\n        });\n    };\n    /**\n     * @param {?} view\n     * @param {?} record\n     * @return {?}\n     */\n    NgForOf.prototype._perViewChange = function (view, record) {\n        view.context.$implicit = record.item;\n    };\n    return NgForOf;\n}());\nNgForOf.decorators = [\n    { type: Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n];\n/**\n * @nocollapse\n */\nNgForOf.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n    { type: TemplateRef, },\n    { type: IterableDiffers, },\n]; };\nNgForOf.propDecorators = {\n    'ngForOf': [{ type: Input },],\n    'ngForTrackBy': [{ type: Input },],\n    'ngForTemplate': [{ type: Input },],\n};\nvar RecordViewTuple = (function () {\n    /**\n     * @param {?} record\n     * @param {?} view\n     */\n    function RecordViewTuple(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n    return RecordViewTuple;\n}());\n/**\n * @deprecated from v4.0.0 - Use NgForOf instead.\n */\nvar NgFor = NgForOf;\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Conditionally includes a template based on the value of an `expression`.\n *\n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n *\n * # Most common usage\n *\n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * # Showing an alternative template using `else`\n *\n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * # Using non-inlined `then` template\n *\n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * # Storing conditional result in a variable\n *\n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in folowing example:\n *\n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n *\n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n *\n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n *\n * ### Syntax\n *\n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<div template=\"ngIf condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n *\n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * \\@stable\n */\nvar NgIf = (function () {\n    /**\n     * @param {?} _viewContainer\n     * @param {?} templateRef\n     */\n    function NgIf(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    Object.defineProperty(NgIf.prototype, \"ngIf\", {\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        set: function (condition) {\n            this._context.$implicit = this._context.ngIf = condition;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfThen\", {\n        /**\n         * @param {?} templateRef\n         * @return {?}\n         */\n        set: function (templateRef) {\n            this._thenTemplateRef = templateRef;\n            this._thenViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfElse\", {\n        /**\n         * @param {?} templateRef\n         * @return {?}\n         */\n        set: function (templateRef) {\n            this._elseTemplateRef = templateRef;\n            this._elseViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgIf.prototype._updateView = function () {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    };\n    return NgIf;\n}());\nNgIf.decorators = [\n    { type: Directive, args: [{ selector: '[ngIf]' },] },\n];\n/**\n * @nocollapse\n */\nNgIf.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n    { type: TemplateRef, },\n]; };\nNgIf.propDecorators = {\n    'ngIf': [{ type: Input },],\n    'ngIfThen': [{ type: Input },],\n    'ngIfElse': [{ type: Input },],\n};\n/**\n * \\@stable\n */\nvar NgIfContext = (function () {\n    function NgIfContext() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n    return NgIfContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SwitchView = (function () {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _templateRef\n     */\n    function SwitchView(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    /**\n     * @return {?}\n     */\n    SwitchView.prototype.create = function () {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    };\n    /**\n     * @return {?}\n     */\n    SwitchView.prototype.destroy = function () {\n        this._created = false;\n        this._viewContainerRef.clear();\n    };\n    /**\n     * @param {?} created\n     * @return {?}\n     */\n    SwitchView.prototype.enforceState = function (created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    };\n    return SwitchView;\n}());\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n *             expression.\n *\n * \\@howToUse\n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description\n *\n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n *\n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n *\n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n *\n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n *\n * \\@stable\n */\nvar NgSwitch = (function () {\n    function NgSwitch() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        set: function (newValue) {\n            this._ngSwitch = newValue;\n            if (this._caseCount === 0) {\n                this._updateDefaultCases(true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n    /**\n     * \\@internal\n     * @param {?} view\n     * @return {?}\n     */\n    NgSwitch.prototype._addDefault = function (view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSwitch.prototype._matchCase = function (value) {\n        var /** @type {?} */ matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    };\n    /**\n     * @param {?} useDefault\n     * @return {?}\n     */\n    NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (var /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n                var /** @type {?} */ defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    };\n    return NgSwitch;\n}());\nNgSwitch.decorators = [\n    { type: Directive, args: [{ selector: '[ngSwitch]' },] },\n];\n/**\n * @nocollapse\n */\nNgSwitch.ctorParameters = function () { return []; };\nNgSwitch.propDecorators = {\n    'ngSwitch': [{ type: Input },],\n};\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n *             given expression evaluate to respectively the same/different value as the switch\n *             expression.\n *\n * \\@howToUse\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description\n *\n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n *\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * See {\\@link NgSwitch} for more details and example.\n *\n * \\@stable\n */\nvar NgSwitchCase = (function () {\n    /**\n     * @param {?} viewContainer\n     * @param {?} templateRef\n     * @param {?} ngSwitch\n     */\n    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * @return {?}\n     */\n    NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n    return NgSwitchCase;\n}());\nNgSwitchCase.decorators = [\n    { type: Directive, args: [{ selector: '[ngSwitchCase]' },] },\n];\n/**\n * @nocollapse\n */\nNgSwitchCase.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n    { type: TemplateRef, },\n    { type: NgSwitch, decorators: [{ type: Host },] },\n]; };\nNgSwitchCase.propDecorators = {\n    'ngSwitchCase': [{ type: Input },],\n};\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the\n *             switch expression.\n *\n * \\@howToUse\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n *\n * \\@description\n *\n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n *\n * See {\\@link NgSwitch} for more details and example.\n *\n * \\@stable\n */\nvar NgSwitchDefault = (function () {\n    /**\n     * @param {?} viewContainer\n     * @param {?} templateRef\n     * @param {?} ngSwitch\n     */\n    function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    return NgSwitchDefault;\n}());\nNgSwitchDefault.decorators = [\n    { type: Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n];\n/**\n * @nocollapse\n */\nNgSwitchDefault.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n    { type: TemplateRef, },\n    { type: NgSwitch, decorators: [{ type: Host },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * \\@howToUse\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * \\@description\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * \\@experimental\n */\nvar NgPlural = (function () {\n    /**\n     * @param {?} _localization\n     */\n    function NgPlural(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._switchValue = value;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @param {?} switchView\n     * @return {?}\n     */\n    NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n    /**\n     * @return {?}\n     */\n    NgPlural.prototype._updateView = function () {\n        this._clearViews();\n        var /** @type {?} */ cases = Object.keys(this._caseViews);\n        var /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    };\n    /**\n     * @return {?}\n     */\n    NgPlural.prototype._clearViews = function () {\n        if (this._activeView)\n            this._activeView.destroy();\n    };\n    /**\n     * @param {?} view\n     * @return {?}\n     */\n    NgPlural.prototype._activateView = function (view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    };\n    return NgPlural;\n}());\nNgPlural.decorators = [\n    { type: Directive, args: [{ selector: '[ngPlural]' },] },\n];\n/**\n * @nocollapse\n */\nNgPlural.ctorParameters = function () { return [\n    { type: NgLocalization, },\n]; };\nNgPlural.propDecorators = {\n    'ngPlural': [{ type: Input },],\n};\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n *             given expression matches the plural expression according to CLDR rules.\n *\n * \\@howToUse\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n *\n * See {\\@link NgPlural} for more details and example.\n *\n * \\@experimental\n */\nvar NgPluralCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} template\n     * @param {?} viewContainer\n     * @param {?} ngPlural\n     */\n    function NgPluralCase(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        var isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n    }\n    return NgPluralCase;\n}());\nNgPluralCase.decorators = [\n    { type: Directive, args: [{ selector: '[ngPluralCase]' },] },\n];\n/**\n * @nocollapse\n */\nNgPluralCase.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase',] },] },\n    { type: TemplateRef, },\n    { type: ViewContainerRef, },\n    { type: NgPlural, decorators: [{ type: Host },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Update an HTML element styles.\n *\n * \\@howToUse\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * \\@description\n *\n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n *\n * \\@stable\n */\nvar NgStyle = (function () {\n    /**\n     * @param {?} _differs\n     * @param {?} _ngEl\n     * @param {?} _renderer\n     */\n    function NgStyle(_differs, _ngEl, _renderer) {\n        this._differs = _differs;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n    }\n    Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._ngStyle = v;\n            if (!this._differ && v) {\n                this._differ = this._differs.find(v).create();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgStyle.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            var /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgStyle.prototype._applyChanges = function (changes) {\n        var _this = this;\n        changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n        changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n    };\n    /**\n     * @param {?} nameAndUnit\n     * @param {?} value\n     * @return {?}\n     */\n    NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n        var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n        value = value != null && unit ? \"\" + value + unit : value;\n        this._renderer.setElementStyle(this._ngEl.nativeElement, name, /** @type {?} */ (value));\n    };\n    return NgStyle;\n}());\nNgStyle.decorators = [\n    { type: Directive, args: [{ selector: '[ngStyle]' },] },\n];\n/**\n * @nocollapse\n */\nNgStyle.ctorParameters = function () { return [\n    { type: KeyValueDiffers, },\n    { type: ElementRef, },\n    { type: Renderer, },\n]; };\nNgStyle.propDecorators = {\n    'ngStyle': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n *\n * \\@howToUse\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * \\@description\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * Note: using the key `$implicit` in the context object will set it's value as default.\n *\n * # Example\n *\n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * \\@experimental\n */\nvar NgTemplateOutlet = (function () {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    function NgTemplateOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n    }\n    Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n        /**\n         * @deprecated v4.0.0 - Renamed to ngTemplateOutletContext.\n         * @param {?} context\n         * @return {?}\n         */\n        set: function (context) { this.ngTemplateOutletContext = context; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n        if (this._viewRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n        }\n        if (this.ngTemplateOutlet) {\n            this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n        }\n    };\n    return NgTemplateOutlet;\n}());\nNgTemplateOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n];\n/**\n * @nocollapse\n */\nNgTemplateOutlet.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n]; };\nNgTemplateOutlet.propDecorators = {\n    'ngTemplateOutletContext': [{ type: Input },],\n    'ngTemplateOutlet': [{ type: Input },],\n    'ngOutletContext': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nvar COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n/**\n * A collection of deprecated directives that are no longer part of the core module.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @param {?} value\n * @return {?}\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(\"InvalidPipeArgument: '\" + value + \"' for pipe '\" + ɵstringify(type) + \"'\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ObservableStrategy = (function () {\n    function ObservableStrategy() {\n    }\n    /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n    };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n    return ObservableStrategy;\n}());\nvar PromiseStrategy = (function () {\n    function PromiseStrategy() {\n    }\n    /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.then(updateLatestValue, function (e) { throw e; });\n    };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    PromiseStrategy.prototype.dispose = function (subscription) { };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    PromiseStrategy.prototype.onDestroy = function (subscription) { };\n    return PromiseStrategy;\n}());\nvar _promiseStrategy = new PromiseStrategy();\nvar _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n * \\@howToUse `observable_or_promise_expression | async`\n * \\@description\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n *\n * ## Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * \\@stable\n */\nvar AsyncPipe = (function () {\n    /**\n     * @param {?} _ref\n     */\n    function AsyncPipe(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = null;\n    }\n    /**\n     * @return {?}\n     */\n    AsyncPipe.prototype.ngOnDestroy = function () {\n        if (this._subscription) {\n            this._dispose();\n        }\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AsyncPipe.prototype.transform = function (obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(/** @type {?} */ (obj));\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AsyncPipe.prototype._subscribe = function (obj) {\n        var _this = this;\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AsyncPipe.prototype._selectStrategy = function (obj) {\n        if (ɵisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ɵisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe, obj);\n    };\n    /**\n     * @return {?}\n     */\n    AsyncPipe.prototype._dispose = function () {\n        this._strategy.dispose(this._subscription);\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    };\n    /**\n     * @param {?} async\n     * @param {?} value\n     * @return {?}\n     */\n    AsyncPipe.prototype._updateLatestValue = function (async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    };\n    return AsyncPipe;\n}());\nAsyncPipe.decorators = [\n    { type: Pipe, args: [{ name: 'async', pure: false },] },\n];\n/**\n * @nocollapse\n */\nAsyncPipe.ctorParameters = function () { return [\n    { type: ChangeDetectorRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms text to lowercase.\n *\n * {\\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }\n *\n * \\@stable\n */\nvar LowerCasePipe = (function () {\n    function LowerCasePipe() {\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    LowerCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe, value);\n        }\n        return value.toLowerCase();\n    };\n    return LowerCasePipe;\n}());\nLowerCasePipe.decorators = [\n    { type: Pipe, args: [{ name: 'lowercase' },] },\n];\n/**\n * @nocollapse\n */\nLowerCasePipe.ctorParameters = function () { return []; };\n/**\n * Helper method to transform a single word to titlecase.\n *\n * \\@stable\n * @param {?} word\n * @return {?}\n */\nfunction titleCaseWord(word) {\n    if (!word)\n        return word;\n    return word[0].toUpperCase() + word.substr(1).toLowerCase();\n}\n/**\n * Transforms text to titlecase.\n *\n * \\@stable\n */\nvar TitleCasePipe = (function () {\n    function TitleCasePipe() {\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    TitleCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe, value);\n        }\n        return value.split(/\\b/g).map(function (word) { return titleCaseWord(word); }).join('');\n    };\n    return TitleCasePipe;\n}());\nTitleCasePipe.decorators = [\n    { type: Pipe, args: [{ name: 'titlecase' },] },\n];\n/**\n * @nocollapse\n */\nTitleCasePipe.ctorParameters = function () { return []; };\n/**\n * Transforms text to uppercase.\n *\n * \\@stable\n */\nvar UpperCasePipe = (function () {\n    function UpperCasePipe() {\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    UpperCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe, value);\n        }\n        return value.toUpperCase();\n    };\n    return UpperCasePipe;\n}());\nUpperCasePipe.decorators = [\n    { type: Pipe, args: [{ name: 'uppercase' },] },\n];\n/**\n * @nocollapse\n */\nUpperCasePipe.ctorParameters = function () { return []; };\nvar NumberFormatStyle = {};\nNumberFormatStyle.Decimal = 0;\nNumberFormatStyle.Percent = 1;\nNumberFormatStyle.Currency = 2;\nNumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\nNumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\nNumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\nvar NumberFormatter = (function () {\n    function NumberFormatter() {\n    }\n    /**\n     * @param {?} num\n     * @param {?} locale\n     * @param {?} style\n     * @param {?=} __3\n     * @return {?}\n     */\n    NumberFormatter.format = function (num, locale, style, _a) {\n        var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n        var /** @type {?} */ options = {\n            minimumIntegerDigits: minimumIntegerDigits,\n            minimumFractionDigits: minimumFractionDigits,\n            maximumFractionDigits: maximumFractionDigits,\n            style: NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == NumberFormatStyle.Currency) {\n            options.currency = currency;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    };\n    return NumberFormatter;\n}());\nvar DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\nvar PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\nvar DATE_FORMATS = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter('short'),\n    'z': timeZoneGetter('long'),\n    'ww': datePartGetterFactory({}),\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        var /** @type {?} */ result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone) {\n    // To workaround `Intl` API restriction for single timezone let format with 24 hours\n    var /** @type {?} */ options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        var /** @type {?} */ result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop, len) {\n    var /** @type {?} */ result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop, len) {\n    var /** @type {?} */ result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options) {\n    return ((Object)).assign.apply(((Object)), [{}].concat(options));\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret) {\n    return function (date, locale) { return intlDateFormat(date, locale, ret); };\n}\nvar DATE_FORMATTER_CACHE = new Map();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format, date, locale) {\n    var /** @type {?} */ fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    var /** @type {?} */ cacheKey = format;\n    var /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        var /** @type {?} */ match = void 0;\n        DATE_FORMATS_SPLIT.exec(format);\n        while (format) {\n            match = DATE_FORMATS_SPLIT.exec(format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                format = parts.pop();\n            }\n            else {\n                parts.push(format);\n                format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce(function (text, part) {\n        var /** @type {?} */ fn = DATE_FORMATS[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nvar DateFormatter = (function () {\n    function DateFormatter() {\n    }\n    /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} pattern\n     * @return {?}\n     */\n    DateFormatter.format = function (date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    };\n    return DateFormatter;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n    if (currency === void 0) { currency = null; }\n    if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && isNumeric(value) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    var /** @type {?} */ minInt;\n    var /** @type {?} */ minFraction;\n    var /** @type {?} */ maxFraction;\n    if (style !== NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        var /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(digits + \" is not a valid digit info for number pipes\");\n        }\n        if (parts[1] != null) {\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) {\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) {\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number according to locale rules.\n * \\@howToUse `number_expression | number[:digitInfo]`\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n *\n * \\@stable\n */\nvar DecimalPipe = (function () {\n    /**\n     * @param {?} _locale\n     */\n    function DecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    DecimalPipe.prototype.transform = function (value, digits) {\n        if (digits === void 0) { digits = null; }\n        return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n    };\n    return DecimalPipe;\n}());\nDecimalPipe.decorators = [\n    { type: Pipe, args: [{ name: 'number' },] },\n];\n/**\n * @nocollapse\n */\nDecimalPipe.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },\n]; };\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as a percentage according to locale rules.\n * \\@howToUse `number_expression | percent[:digitInfo]`\n *\n * \\@description\n *\n * Formats a number as percentage.\n *\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n *\n * \\@stable\n */\nvar PercentPipe = (function () {\n    /**\n     * @param {?} _locale\n     */\n    function PercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    PercentPipe.prototype.transform = function (value, digits) {\n        if (digits === void 0) { digits = null; }\n        return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n    };\n    return PercentPipe;\n}());\nPercentPipe.decorators = [\n    { type: Pipe, args: [{ name: 'percent' },] },\n];\n/**\n * @nocollapse\n */\nPercentPipe.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },\n]; };\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as currency using locale rules.\n * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n * \\@description\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n *\n * \\@stable\n */\nvar CurrencyPipe = (function () {\n    /**\n     * @param {?} _locale\n     */\n    function CurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} currencyCode\n     * @param {?=} symbolDisplay\n     * @param {?=} digits\n     * @return {?}\n     */\n    CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n        if (currencyCode === void 0) { currencyCode = 'USD'; }\n        if (symbolDisplay === void 0) { symbolDisplay = false; }\n        if (digits === void 0) { digits = null; }\n        return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    };\n    return CurrencyPipe;\n}());\nCurrencyPipe.decorators = [\n    { type: Pipe, args: [{ name: 'currency' },] },\n];\n/**\n * @nocollapse\n */\nCurrencyPipe.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },\n]; };\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNumeric(value) {\n    return !isNaN(value - parseFloat(value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a date according to locale rules.\n * \\@howToUse `date_expression | date[:format]`\n * \\@description\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n * in the _local_ time and locale is 'en-US':\n *\n * ```\n *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n *\n * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n *\n * \\@stable\n */\nvar DatePipe = (function () {\n    /**\n     * @param {?} _locale\n     */\n    function DatePipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} pattern\n     * @return {?}\n     */\n    DatePipe.prototype.transform = function (value, pattern) {\n        if (pattern === void 0) { pattern = 'mediumDate'; }\n        var /** @type {?} */ date;\n        if (isBlank(value) || value !== value)\n            return null;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate(value)) {\n            date = value;\n        }\n        else if (isNumeric(value)) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /**\n            * For ISO Strings without time the day, month and year must be extracted from the ISO String\n            * before Date creation to avoid time offset and errors in the new Date.\n            * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n            * date, some browsers (e.g. IE 9) will throw an invalid Date error\n            * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n            * is applied\n            * Note: ISO months are 0 for January, 1 for February, ...\n            */\n            var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate(date)) {\n            var /** @type {?} */ match = void 0;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DatePipe, value);\n            }\n        }\n        return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n    };\n    return DatePipe;\n}());\n/**\n * \\@internal\n */\nDatePipe._ALIASES = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n};\nDatePipe.decorators = [\n    { type: Pipe, args: [{ name: 'date', pure: true },] },\n];\n/**\n * @nocollapse\n */\nDatePipe.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },\n]; };\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isBlank(obj) {\n    return obj == null || obj === '';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isDate(obj) {\n    return obj instanceof Date && !isNaN(obj.valueOf());\n}\n/**\n * @param {?} match\n * @return {?}\n */\nfunction isoStringToDate(match) {\n    var /** @type {?} */ date = new Date(0);\n    var /** @type {?} */ tzHour = 0;\n    var /** @type {?} */ tzMin = 0;\n    var /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    var /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    if (match[9]) {\n        tzHour = toInt(match[9] + match[10]);\n        tzMin = toInt(match[9] + match[11]);\n    }\n    dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n    var /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n    var /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n    var /** @type {?} */ s = toInt(match[6] || '0');\n    var /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction toInt(str) {\n    return parseInt(str, 10);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _INTERPOLATION_REGEXP = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n * \\@howToUse `expression | i18nPlural:mapping`\n * \\@description\n *\n *  Where:\n *  - `expression` is a number.\n *  - `mapping` is an object that mimics the ICU format, see\n *    http://userguide.icu-project.org/formatparse/messages\n *\n *  ## Example\n *\n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * \\@experimental\n */\nvar I18nPluralPipe = (function () {\n    /**\n     * @param {?} _localization\n     */\n    function I18nPluralPipe(_localization) {\n        this._localization = _localization;\n    }\n    /**\n     * @param {?} value\n     * @param {?} pluralMap\n     * @return {?}\n     */\n    I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n        }\n        var /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    };\n    return I18nPluralPipe;\n}());\nI18nPluralPipe.decorators = [\n    { type: Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n];\n/**\n * @nocollapse\n */\nI18nPluralPipe.ctorParameters = function () { return [\n    { type: NgLocalization, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description\n *\n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n *\n *  ## Example\n *\n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n *  \\@experimental\n */\nvar I18nSelectPipe = (function () {\n    function I18nSelectPipe() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} mapping\n     * @return {?}\n     */\n    I18nSelectPipe.prototype.transform = function (value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    };\n    return I18nSelectPipe;\n}());\nI18nSelectPipe.decorators = [\n    { type: Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n];\n/**\n * @nocollapse\n */\nI18nSelectPipe.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Converts value into JSON string.\n * \\@howToUse `expression | json`\n * \\@description\n *\n * Converts value into string using `JSON.stringify`. Useful for debugging.\n *\n * ### Example\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * \\@stable\n */\nvar JsonPipe = (function () {\n    function JsonPipe() {\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n    return JsonPipe;\n}());\nJsonPipe.decorators = [\n    { type: Pipe, args: [{ name: 'json', pure: false },] },\n];\n/**\n * @nocollapse\n */\nJsonPipe.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n * \\@howToUse `array_or_string_expression | slice:start[:end]`\n * \\@description\n *\n * Where the input expression is a `List` or `String`, and:\n * - `start`: The starting index of the subset to return.\n *   - **a positive integer**: return the item at `start` index and all items after\n *     in the list or string expression.\n *   - **a negative integer**: return the item at `start` index from the end and all items after\n *     in the list or string expression.\n *   - **if positive and greater than the size of the expression**: return an empty list or string.\n *   - **if negative and greater than the size of the expression**: return entire list or string.\n * - `end`: The ending index of the subset to return.\n *   - **omitted**: return all items until the end.\n *   - **if positive**: return all items before `end` index of the list or string.\n *   - **if negative**: return all items before `end` index from the end of the list or string.\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on a [List], the returned list is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ## List Example\n *\n * This `ngFor` example:\n *\n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n *     <li>b</li>\n *     <li>c</li>\n *\n * ## String Examples\n *\n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * \\@stable\n */\nvar SlicePipe = (function () {\n    function SlicePipe() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} start\n     * @param {?=} end\n     * @return {?}\n     */\n    SlicePipe.prototype.transform = function (value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe, value);\n        }\n        return value.slice(start, end);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n    return SlicePipe;\n}());\nSlicePipe.decorators = [\n    { type: Pipe, args: [{ name: 'slice', pure: false },] },\n];\n/**\n * @nocollapse\n */\nSlicePipe.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nvar COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n];\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgForOf}, ...\n *\n * \\@stable\n */\nvar CommonModule = (function () {\n    function CommonModule() {\n    }\n    return CommonModule;\n}());\nCommonModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                providers: [\n                    { provide: NgLocalization, useClass: NgLocaleLocalization },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nCommonModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PLATFORM_BROWSER_ID = 'browser';\nvar PLATFORM_SERVER_ID = 'server';\nvar PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nvar PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { NgLocaleLocalization, NgLocalization, CommonModule, NgClass, NgFor, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet, AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, VERSION, PlatformLocation, LOCATION_INITIALIZED, LocationStrategy, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, Location, COMMON_DIRECTIVES as ɵa, COMMON_PIPES as ɵb };\n//# sourceMappingURL=common.es5.js.map\n"
    },
    {
      "id": 20,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
      "name": "./~/@angular/forms/@angular/forms.es5.js",
      "index": 205,
      "index2": 206,
      "size": 204434,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 84,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/checked-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 85,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/date-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 86,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/number-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 87,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 88,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/text-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 89,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/time-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "3:14-39"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "@angular/forms",
          "loc": "8:0-25"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "AbstractControlDirective",
        "AbstractFormGroupDirective",
        "CheckboxControlValueAccessor",
        "ControlContainer",
        "NG_VALUE_ACCESSOR",
        "COMPOSITION_BUFFER_MODE",
        "DefaultValueAccessor",
        "NgControl",
        "NgControlStatus",
        "NgControlStatusGroup",
        "NgForm",
        "NgModel",
        "NgModelGroup",
        "RadioControlValueAccessor",
        "FormControlDirective",
        "FormControlName",
        "FormGroupDirective",
        "FormArrayName",
        "FormGroupName",
        "NgSelectOption",
        "SelectControlValueAccessor",
        "SelectMultipleControlValueAccessor",
        "CheckboxRequiredValidator",
        "EmailValidator",
        "MaxLengthValidator",
        "MinLengthValidator",
        "PatternValidator",
        "RequiredValidator",
        "FormBuilder",
        "AbstractControl",
        "FormArray",
        "FormControl",
        "FormGroup",
        "NG_ASYNC_VALIDATORS",
        "NG_VALIDATORS",
        "Validators",
        "VERSION",
        "FormsModule",
        "ReactiveFormsModule",
        "ɵba",
        "ɵz",
        "ɵx",
        "ɵy",
        "ɵa",
        "ɵb",
        "ɵc",
        "ɵd",
        "ɵe",
        "ɵf",
        "ɵg",
        "ɵbf",
        "ɵbb",
        "ɵbc",
        "ɵh",
        "ɵi",
        "ɵbd",
        "ɵbe",
        "ɵj",
        "ɵk",
        "ɵl",
        "ɵn",
        "ɵm",
        "ɵo",
        "ɵq",
        "ɵp",
        "ɵs",
        "ɵt",
        "ɵv",
        "ɵu",
        "ɵw",
        "ɵr"
      ],
      "depth": 1,
      "source": "var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Directive, ElementRef, EventEmitter, Host, Inject, Injectable, InjectionToken, Injector, Input, NgModule, Optional, Output, Renderer, Self, SkipSelf, Version, forwardRef, ɵisObservable, ɵisPromise, ɵlooseIdentical } from '@angular/core';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { map } from 'rxjs/operator/map';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { throw new Error('unimplemented'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.statusChanges : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valueChanges : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n */\nvar ControlContainer = (function (_super) {\n    __extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * {\\@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n * \\@stable\n */\nvar NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * Compose multiple validators into a single function that returns the union\n     * of the individual error maps.\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return map.call(forkJoin(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = ɵisPromise(r) ? fromPromise(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? __assign({}, res, errors) : res;\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    __extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: RadioControlRegistry, },\n    { type: Injector, },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: Input },],\n    'formControlName': [{ type: Input },],\n    'value': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = valueString;\n            fn(_this._getOptionValue(valueString));\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return parent.path.concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    // view -> model\n    dir.valueAccessor.registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    });\n    // touched\n    dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n    dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n    }\n    else if (dir.path[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor;\n    var /** @type {?} */ builtinAccessor;\n    var /** @type {?} */ customAccessor;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return this.formDirective.getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    __extends(NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: Self },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    __extends(NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Self },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator;\n}\n/**\n * @param {?} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = true;\n        if (this._parent && !onlySelf) {\n            this._parent.markAsTouched({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = false;\n        if (this._parent && !onlySelf) {\n            this._parent.markAsDirty({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._status = PENDING;\n        if (this._parent && !onlySelf) {\n            this._parent.markAsPending({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        this._updateAncestors(onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(emitEvent);\n            }\n        }\n        if (emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (_a) {\n        var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} __1\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, _a) {\n        var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n        this._errors = errors;\n        this._updateControlsErrors(emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return !!this.getError(errorCode, path);\n    };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new EventEmitter();\n        this._statusChanges = new EventEmitter();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    __extends(FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n        this._value = value;\n        if (this._onChange.length && emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl.setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, _a) {\n        if (formState === void 0) { formState = null; }\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._applyFormState(formState);\n        this.markAsPristine({ onlySelf: onlySelf });\n        this.markAsUntouched({ onlySelf: onlySelf });\n        this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    __extends(FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var _this = _super.call(this, validator, asyncValidator) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup.addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl.get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = {}; }\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    __extends(FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var _this = _super.call(this, validator, asyncValidator) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = []; }\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    __extends(NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new EventEmitter();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    __extends(NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: Input, args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link \\@Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    __extends(NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || (this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: Input },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'options': [{ type: Input, args: ['ngModelOptions',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl.setValue} or\n * {\\@link AbstractControl.patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    __extends(FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new EventEmitter();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formControl',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl.statusChanges} event to be notified when the validation status is\n * re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    __extends(FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = null;\n        _this.ngSubmit = new EventEmitter();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formGroup',] },],\n    'ngSubmit': [{ type: Output },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    __extends(FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: Input, args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl.get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl.valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl.statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray.push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    __extends(FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.formDirective.getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: Input, args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl.get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    __extends(FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: Input, args: ['formControlName',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: Input },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    __extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {@link EmailValidator} to {@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: Input },],\n};\n/**\n * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: Input },],\n};\n/**\n * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: Input },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, RadioControlValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule, InternalFormsSharedModule as ɵba, REACTIVE_DRIVEN_DIRECTIVES as ɵz, SHARED_FORM_DIRECTIVES as ɵx, TEMPLATE_DRIVEN_DIRECTIVES as ɵy, CHECKBOX_VALUE_ACCESSOR as ɵa, DEFAULT_VALUE_ACCESSOR as ɵb, AbstractControlStatus as ɵc, ngControlStatusHost as ɵd, formDirectiveProvider as ɵe, formControlBinding as ɵf, modelGroupProvider as ɵg, NgNoValidate as ɵbf, NUMBER_VALUE_ACCESSOR as ɵbb, NumberValueAccessor as ɵbc, RADIO_VALUE_ACCESSOR as ɵh, RadioControlRegistry as ɵi, RANGE_VALUE_ACCESSOR as ɵbd, RangeValueAccessor as ɵbe, formControlBinding$1 as ɵj, controlNameBinding as ɵk, formDirectiveProvider$1 as ɵl, formArrayNameProvider as ɵn, formGroupNameProvider as ɵm, SELECT_VALUE_ACCESSOR as ɵo, NgSelectMultipleOption as ɵq, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵp, CHECKBOX_REQUIRED_VALIDATOR as ɵs, EMAIL_VALIDATOR as ɵt, MAX_LENGTH_VALIDATOR as ɵv, MIN_LENGTH_VALIDATOR as ɵu, PATTERN_VALIDATOR as ɵw, REQUIRED_VALIDATOR as ɵr };\n//# sourceMappingURL=forms.es5.js.map\n"
    },
    {
      "id": 21,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
      "name": "./~/tns-core-modules/ui/styling/style-properties.js",
      "index": 25,
      "index2": 27,
      "size": 44768,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
      "issuerId": 0,
      "issuerName": "./~/tns-core-modules/ui/core/view/view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
          "module": "./~/tns-core-modules/ui/core/view/view.android.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view.android.js",
          "type": "cjs require",
          "userRequest": "../../styling/style-properties",
          "loc": "7:25-66"
        },
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base.android.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "type": "cjs require",
          "userRequest": "../styling/style-properties",
          "loc": "6:25-63"
        },
        {
          "moduleId": 42,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
          "module": "./~/tns-core-modules/ui/animation/animation.android.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation.android.js",
          "type": "cjs require",
          "userRequest": "../styling/style-properties",
          "loc": "6:25-63"
        },
        {
          "moduleId": 122,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/keyframe-animation.js",
          "module": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
          "moduleName": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
          "type": "cjs require",
          "userRequest": "../styling/style-properties",
          "loc": "4:25-63"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../../styling/style-properties",
          "loc": "12:25-66"
        },
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "../../styling/style-properties",
          "loc": "5:25-66"
        },
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "../../styling/style-properties",
          "loc": "9:9-50"
        },
        {
          "moduleId": 201,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/styling/style-properties",
          "loc": "6:25-80"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../../color\");\nvar font_1 = require(\"./font\");\nvar utils_1 = require(\"../../utils/utils\");\nvar background_1 = require(\"./background\");\nvar platform_1 = require(\"../../platform\");\nvar image_source_1 = require(\"../../image-source\");\nvar style_1 = require(\"./style\");\nvar properties_1 = require(\"../core/properties\");\nfunction equalsCommon(a, b) {\n    if (a == \"auto\") {\n        return b == \"auto\";\n    }\n    if (typeof a === \"number\") {\n        if (b == \"auto\") {\n            return false;\n        }\n        if (typeof b === \"number\") {\n            return a == b;\n        }\n        return b.unit == \"dip\" && a == b.value;\n    }\n    if (b == \"auto\") {\n        return false;\n    }\n    if (typeof b === \"number\") {\n        return a.unit == \"dip\" && a.value == b;\n    }\n    return a.value == b.value && a.unit == b.unit;\n}\nfunction convertToStringCommon(length) {\n    if (length == \"auto\") {\n        return \"auto\";\n    }\n    if (typeof length === \"number\") {\n        return length.toString();\n    }\n    var val = length.value;\n    if (length.unit === \"%\") {\n        val *= 100;\n    }\n    return val + length.unit;\n}\nfunction toDevicePixelsCommon(length, auto, parentAvailableWidth) {\n    if (length == \"auto\") {\n        return auto;\n    }\n    if (typeof length === \"number\") {\n        return utils_1.layout.round(utils_1.layout.toDevicePixels(length));\n    }\n    switch (length.unit) {\n        case \"px\":\n            return utils_1.layout.round(length.value);\n        case \"%\":\n            return utils_1.layout.round(parentAvailableWidth * length.value);\n        case \"dip\":\n        default:\n            return utils_1.layout.round(utils_1.layout.toDevicePixels(length.value));\n    }\n}\nvar PercentLength;\n(function (PercentLength) {\n    function parse(value) {\n        if (value == \"auto\") {\n            return \"auto\";\n        }\n        if (typeof value === \"string\") {\n            var type = void 0;\n            var numberValue = 0;\n            var stringValue = value.trim();\n            var percentIndex = stringValue.indexOf(\"%\");\n            if (percentIndex !== -1) {\n                type = \"%\";\n                if (percentIndex !== (stringValue.length - 1) || percentIndex === 0) {\n                    numberValue = Number.NaN;\n                }\n                else {\n                    numberValue = parseFloat(stringValue.substring(0, stringValue.length - 1).trim()) / 100;\n                }\n            }\n            else {\n                if (stringValue.indexOf(\"px\") !== -1) {\n                    type = \"px\";\n                    stringValue = stringValue.replace(\"px\", \"\").trim();\n                }\n                else {\n                    type = \"dip\";\n                }\n                numberValue = parseFloat(stringValue);\n            }\n            if (isNaN(numberValue) || !isFinite(numberValue)) {\n                throw new Error(\"Invalid value: \" + value);\n            }\n            return {\n                value: numberValue,\n                unit: type\n            };\n        }\n        else {\n            return value;\n        }\n    }\n    PercentLength.parse = parse;\n    PercentLength.equals = equalsCommon;\n    PercentLength.toDevicePixels = toDevicePixelsCommon;\n    PercentLength.convertToString = convertToStringCommon;\n})(PercentLength = exports.PercentLength || (exports.PercentLength = {}));\nvar Length;\n(function (Length) {\n    function parse(value) {\n        if (value == \"auto\") {\n            return \"auto\";\n        }\n        else if (typeof value === \"string\") {\n            var type = void 0;\n            var numberValue = 0;\n            var stringValue = value.trim();\n            if (stringValue.indexOf(\"px\") !== -1) {\n                type = \"px\";\n                stringValue = stringValue.replace(\"px\", \"\").trim();\n            }\n            else {\n                type = \"dip\";\n            }\n            numberValue = parseFloat(stringValue);\n            if (isNaN(numberValue) || !isFinite(numberValue)) {\n                throw new Error(\"Invalid value: \" + value);\n            }\n            return {\n                value: numberValue,\n                unit: type\n            };\n        }\n        else {\n            return value;\n        }\n    }\n    Length.parse = parse;\n    Length.equals = equalsCommon;\n    Length.toDevicePixels = toDevicePixelsCommon;\n    Length.convertToString = convertToStringCommon;\n})(Length = exports.Length || (exports.Length = {}));\nexports.zeroLength = { value: 0, unit: \"px\" };\nexports.minWidthProperty = new properties_1.CssProperty({\n    name: \"minWidth\", cssName: \"min-width\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        target.view.effectiveMinWidth = Length.toDevicePixels(newValue, 0);\n    }, valueConverter: Length.parse\n});\nexports.minWidthProperty.register(style_1.Style);\nexports.minHeightProperty = new properties_1.CssProperty({\n    name: \"minHeight\", cssName: \"min-height\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        target.view.effectiveMinHeight = Length.toDevicePixels(newValue, 0);\n    }, valueConverter: Length.parse\n});\nexports.minHeightProperty.register(style_1.Style);\nexports.widthProperty = new properties_1.CssProperty({ name: \"width\", cssName: \"width\", defaultValue: \"auto\", affectsLayout: platform_1.isIOS, equalityComparer: Length.equals, valueConverter: PercentLength.parse });\nexports.widthProperty.register(style_1.Style);\nexports.heightProperty = new properties_1.CssProperty({ name: \"height\", cssName: \"height\", defaultValue: \"auto\", affectsLayout: platform_1.isIOS, equalityComparer: Length.equals, valueConverter: PercentLength.parse });\nexports.heightProperty.register(style_1.Style);\nvar marginProperty = new properties_1.ShorthandProperty({\n    name: \"margin\", cssName: \"margin\",\n    getter: function () {\n        if (PercentLength.equals(this.marginTop, this.marginRight) &&\n            PercentLength.equals(this.marginTop, this.marginBottom) &&\n            PercentLength.equals(this.marginTop, this.marginLeft)) {\n            return this.marginTop;\n        }\n        return PercentLength.convertToString(this.marginTop) + \" \" + PercentLength.convertToString(this.marginRight) + \" \" + PercentLength.convertToString(this.marginBottom) + \" \" + PercentLength.convertToString(this.marginLeft);\n    },\n    converter: convertToMargins\n});\nmarginProperty.register(style_1.Style);\nexports.marginLeftProperty = new properties_1.CssProperty({ name: \"marginLeft\", cssName: \"margin-left\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals, valueConverter: PercentLength.parse });\nexports.marginLeftProperty.register(style_1.Style);\nexports.marginRightProperty = new properties_1.CssProperty({ name: \"marginRight\", cssName: \"margin-right\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals, valueConverter: PercentLength.parse });\nexports.marginRightProperty.register(style_1.Style);\nexports.marginTopProperty = new properties_1.CssProperty({ name: \"marginTop\", cssName: \"margin-top\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals, valueConverter: PercentLength.parse });\nexports.marginTopProperty.register(style_1.Style);\nexports.marginBottomProperty = new properties_1.CssProperty({ name: \"marginBottom\", cssName: \"margin-bottom\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals, valueConverter: PercentLength.parse });\nexports.marginBottomProperty.register(style_1.Style);\nvar paddingProperty = new properties_1.ShorthandProperty({\n    name: \"padding\", cssName: \"padding\",\n    getter: function () {\n        if (Length.equals(this.paddingTop, this.paddingRight) &&\n            Length.equals(this.paddingTop, this.paddingBottom) &&\n            Length.equals(this.paddingTop, this.paddingLeft)) {\n            return this.paddingTop;\n        }\n        return Length.convertToString(this.paddingTop) + \" \" + Length.convertToString(this.paddingRight) + \" \" + Length.convertToString(this.paddingBottom) + \" \" + Length.convertToString(this.paddingLeft);\n    },\n    converter: convertToPaddings\n});\npaddingProperty.register(style_1.Style);\nexports.paddingLeftProperty = new properties_1.CssProperty({\n    name: \"paddingLeft\", cssName: \"padding-left\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        target.view.effectivePaddingLeft = Length.toDevicePixels(newValue, 0);\n    }, valueConverter: Length.parse\n});\nexports.paddingLeftProperty.register(style_1.Style);\nexports.paddingRightProperty = new properties_1.CssProperty({\n    name: \"paddingRight\", cssName: \"padding-right\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        target.view.effectivePaddingRight = Length.toDevicePixels(newValue, 0);\n    }, valueConverter: Length.parse\n});\nexports.paddingRightProperty.register(style_1.Style);\nexports.paddingTopProperty = new properties_1.CssProperty({\n    name: \"paddingTop\", cssName: \"padding-top\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        target.view.effectivePaddingTop = Length.toDevicePixels(newValue, 0);\n    }, valueConverter: Length.parse\n});\nexports.paddingTopProperty.register(style_1.Style);\nexports.paddingBottomProperty = new properties_1.CssProperty({\n    name: \"paddingBottom\", cssName: \"padding-bottom\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        target.view.effectivePaddingBottom = Length.toDevicePixels(newValue, 0);\n    }, valueConverter: Length.parse\n});\nexports.paddingBottomProperty.register(style_1.Style);\nvar HorizontalAlignment;\n(function (HorizontalAlignment) {\n    HorizontalAlignment.LEFT = \"left\";\n    HorizontalAlignment.CENTER = \"center\";\n    HorizontalAlignment.RIGHT = \"right\";\n    HorizontalAlignment.STRETCH = \"stretch\";\n    HorizontalAlignment.isValid = properties_1.makeValidator(HorizontalAlignment.LEFT, HorizontalAlignment.CENTER, HorizontalAlignment.RIGHT, HorizontalAlignment.STRETCH);\n    HorizontalAlignment.parse = properties_1.makeParser(HorizontalAlignment.isValid);\n})(HorizontalAlignment = exports.HorizontalAlignment || (exports.HorizontalAlignment = {}));\nexports.horizontalAlignmentProperty = new properties_1.CssProperty({ name: \"horizontalAlignment\", cssName: \"horizontal-align\", defaultValue: HorizontalAlignment.STRETCH, affectsLayout: platform_1.isIOS, valueConverter: HorizontalAlignment.parse });\nexports.horizontalAlignmentProperty.register(style_1.Style);\nvar VerticalAlignment;\n(function (VerticalAlignment) {\n    VerticalAlignment.TOP = \"top\";\n    VerticalAlignment.MIDDLE = \"middle\";\n    VerticalAlignment.BOTTOM = \"bottom\";\n    VerticalAlignment.STRETCH = \"stretch\";\n    VerticalAlignment.isValid = properties_1.makeValidator(VerticalAlignment.TOP, VerticalAlignment.MIDDLE, VerticalAlignment.BOTTOM, VerticalAlignment.STRETCH);\n    VerticalAlignment.parse = function (value) { return value.toLowerCase() === \"center\" ? VerticalAlignment.MIDDLE : parseStrict(value); };\n    var parseStrict = properties_1.makeParser(VerticalAlignment.isValid);\n})(VerticalAlignment = exports.VerticalAlignment || (exports.VerticalAlignment = {}));\nexports.verticalAlignmentProperty = new properties_1.CssProperty({ name: \"verticalAlignment\", cssName: \"vertical-align\", defaultValue: VerticalAlignment.STRETCH, affectsLayout: platform_1.isIOS, valueConverter: VerticalAlignment.parse });\nexports.verticalAlignmentProperty.register(style_1.Style);\nfunction parseThickness(value) {\n    if (typeof value === \"string\") {\n        var arr = value.split(/[ ,]+/);\n        var top_1;\n        var right = void 0;\n        var bottom = void 0;\n        var left = void 0;\n        if (arr.length === 1) {\n            top_1 = arr[0];\n            right = arr[0];\n            bottom = arr[0];\n            left = arr[0];\n        }\n        else if (arr.length === 2) {\n            top_1 = arr[0];\n            bottom = arr[0];\n            right = arr[1];\n            left = arr[1];\n        }\n        else if (arr.length === 3) {\n            top_1 = arr[0];\n            right = arr[1];\n            left = arr[1];\n            bottom = arr[2];\n        }\n        else if (arr.length === 4) {\n            top_1 = arr[0];\n            right = arr[1];\n            bottom = arr[2];\n            left = arr[3];\n        }\n        else {\n            throw new Error(\"Expected 1, 2, 3 or 4 parameters. Actual: \" + value);\n        }\n        return {\n            top: top_1,\n            right: right,\n            bottom: bottom,\n            left: left\n        };\n    }\n    else {\n        return value;\n    }\n}\nfunction convertToMargins(value) {\n    if (typeof value === \"string\" && value !== \"auto\") {\n        var thickness = parseThickness(value);\n        return [\n            [exports.marginTopProperty, PercentLength.parse(thickness.top)],\n            [exports.marginRightProperty, PercentLength.parse(thickness.right)],\n            [exports.marginBottomProperty, PercentLength.parse(thickness.bottom)],\n            [exports.marginLeftProperty, PercentLength.parse(thickness.left)]\n        ];\n    }\n    else {\n        return [\n            [exports.marginTopProperty, value],\n            [exports.marginRightProperty, value],\n            [exports.marginBottomProperty, value],\n            [exports.marginLeftProperty, value]\n        ];\n    }\n}\nfunction convertToPaddings(value) {\n    if (typeof value === \"string\" && value !== \"auto\") {\n        var thickness = parseThickness(value);\n        return [\n            [exports.paddingTopProperty, Length.parse(thickness.top)],\n            [exports.paddingRightProperty, Length.parse(thickness.right)],\n            [exports.paddingBottomProperty, Length.parse(thickness.bottom)],\n            [exports.paddingLeftProperty, Length.parse(thickness.left)]\n        ];\n    }\n    else {\n        return [\n            [exports.paddingTopProperty, value],\n            [exports.paddingRightProperty, value],\n            [exports.paddingBottomProperty, value],\n            [exports.paddingLeftProperty, value]\n        ];\n    }\n}\nexports.rotateProperty = new properties_1.CssAnimationProperty({ name: \"rotate\", cssName: \"rotate\", defaultValue: 0, valueConverter: parseFloat });\nexports.rotateProperty.register(style_1.Style);\nexports.scaleXProperty = new properties_1.CssAnimationProperty({ name: \"scaleX\", cssName: \"scaleX\", defaultValue: 1, valueConverter: parseFloat });\nexports.scaleXProperty.register(style_1.Style);\nexports.scaleYProperty = new properties_1.CssAnimationProperty({ name: \"scaleY\", cssName: \"scaleY\", defaultValue: 1, valueConverter: parseFloat });\nexports.scaleYProperty.register(style_1.Style);\nexports.translateXProperty = new properties_1.CssAnimationProperty({ name: \"translateX\", cssName: \"translateX\", defaultValue: 0, valueConverter: Length.parse, equalityComparer: Length.equals });\nexports.translateXProperty.register(style_1.Style);\nexports.translateYProperty = new properties_1.CssAnimationProperty({ name: \"translateY\", cssName: \"translateY\", defaultValue: 0, valueConverter: Length.parse, equalityComparer: Length.equals });\nexports.translateYProperty.register(style_1.Style);\nvar transformProperty = new properties_1.ShorthandProperty({\n    name: \"transform\", cssName: \"transform\",\n    getter: function () {\n        var scaleX = this.scaleX;\n        var scaleY = this.scaleY;\n        var translateX = this.translateX;\n        var translateY = this.translateY;\n        var rotate = this.rotate;\n        var result = \"\";\n        if (translateX !== 0 || translateY !== 0) {\n            result += \"translate(\" + translateX + \", \" + translateY + \") \";\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            result += \"scale(\" + scaleX + \", \" + scaleY + \") \";\n        }\n        if (rotate !== 0) {\n            result += \"rotate (\" + rotate + \")\";\n        }\n        return result.trim();\n    },\n    converter: convertToTransform\n});\ntransformProperty.register(style_1.Style);\nfunction transformConverter(value) {\n    if (value.indexOf(\"none\") !== -1) {\n        var operations_1 = {};\n        operations_1[value] = value;\n        return operations_1;\n    }\n    var operations = {};\n    var operator = \"\";\n    var pos = 0;\n    while (pos < value.length) {\n        if (value[pos] === \" \" || value[pos] === \",\") {\n            pos++;\n        }\n        else if (value[pos] === \"(\") {\n            var start = pos + 1;\n            while (pos < value.length && value[pos] !== \")\") {\n                pos++;\n            }\n            var operand = value.substring(start, pos);\n            operations[operator] = operand.trim();\n            operator = \"\";\n            pos++;\n        }\n        else {\n            operator += value[pos++];\n        }\n    }\n    return operations;\n}\nfunction convertToTransform(value) {\n    var newTransform = value === properties_1.unsetValue ? { \"none\": \"none\" } : transformConverter(value);\n    var array = [];\n    var values;\n    for (var transform in newTransform) {\n        switch (transform) {\n            case \"scaleX\":\n                array.push([exports.scaleXProperty, newTransform[transform]]);\n                break;\n            case \"scaleY\":\n                array.push([exports.scaleYProperty, newTransform[transform]]);\n                break;\n            case \"scale\":\n            case \"scale3d\":\n                values = newTransform[transform].split(\",\");\n                if (values.length >= 2) {\n                    array.push([exports.scaleXProperty, values[0]]);\n                    array.push([exports.scaleYProperty, values[1]]);\n                }\n                else if (values.length === 1) {\n                    array.push([exports.scaleXProperty, values[0]]);\n                    array.push([exports.scaleYProperty, values[0]]);\n                }\n                break;\n            case \"translateX\":\n                array.push([exports.translateXProperty, newTransform[transform]]);\n                break;\n            case \"translateY\":\n                array.push([exports.translateYProperty, newTransform[transform]]);\n                break;\n            case \"translate\":\n            case \"translate3d\":\n                values = newTransform[transform].split(\",\");\n                if (values.length >= 2) {\n                    array.push([exports.translateXProperty, values[0]]);\n                    array.push([exports.translateYProperty, values[1]]);\n                }\n                else if (values.length === 1) {\n                    array.push([exports.translateXProperty, values[0]]);\n                    array.push([exports.translateYProperty, values[0]]);\n                }\n                break;\n            case \"rotate\":\n                var text = newTransform[transform];\n                var val = parseFloat(text);\n                if (text.slice(-3) === \"rad\") {\n                    val = val * (180.0 / Math.PI);\n                }\n                array.push([exports.rotateProperty, val]);\n                break;\n            case \"none\":\n                array.push([exports.scaleXProperty, 1]);\n                array.push([exports.scaleYProperty, 1]);\n                array.push([exports.translateXProperty, 0]);\n                array.push([exports.translateYProperty, 0]);\n                array.push([exports.rotateProperty, 0]);\n                break;\n        }\n    }\n    return array;\n}\nexports.backgroundInternalProperty = new properties_1.CssProperty({\n    name: \"backgroundInternal\",\n    cssName: \"_backgroundInternal\",\n    defaultValue: background_1.Background.default\n});\nexports.backgroundInternalProperty.register(style_1.Style);\nvar pattern = /url\\(('|\")(.*?)\\1\\)/;\nexports.backgroundImageProperty = new properties_1.CssProperty({\n    name: \"backgroundImage\", cssName: \"background-image\", valueChanged: function (target, oldValue, newValue) {\n        var style = target;\n        var currentBackground = target.backgroundInternal;\n        var url = newValue;\n        var isValid = false;\n        if (url === undefined) {\n            style.backgroundInternal = currentBackground.withImage(undefined);\n            return;\n        }\n        var match = url.match(pattern);\n        if (match && match[2]) {\n            url = match[2];\n        }\n        if (utils_1.isDataURI(url)) {\n            var base64Data = url.split(\",\")[1];\n            if (typeof base64Data !== \"undefined\") {\n                style.backgroundInternal = currentBackground.withImage(image_source_1.fromBase64(base64Data));\n                isValid = true;\n            }\n            else {\n                style.backgroundInternal = currentBackground.withImage(undefined);\n            }\n        }\n        else if (utils_1.isFileOrResourcePath(url)) {\n            style.backgroundInternal = currentBackground.withImage(image_source_1.fromFileOrResource(url));\n            isValid = true;\n        }\n        else if (url.indexOf(\"http\") !== -1) {\n            style[\"_url\"] = url;\n            style.backgroundInternal = currentBackground.withImage(undefined);\n            image_source_1.fromUrl(url).then(function (r) {\n                if (style && style[\"_url\"] === url) {\n                    currentBackground = target.backgroundInternal;\n                    target.backgroundInternal = currentBackground.withImage(r);\n                }\n            });\n            isValid = true;\n        }\n        if (!isValid) {\n            style.backgroundInternal = currentBackground.withImage(undefined);\n        }\n    }\n});\nexports.backgroundImageProperty.register(style_1.Style);\nexports.backgroundColorProperty = new properties_1.CssAnimationProperty({\n    name: \"backgroundColor\", cssName: \"background-color\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withColor(newValue);\n    }, equalityComparer: color_1.Color.equals, valueConverter: function (value) { return new color_1.Color(value); }\n});\nexports.backgroundColorProperty.register(style_1.Style);\nvar BackgroundRepeat;\n(function (BackgroundRepeat) {\n    BackgroundRepeat.REPEAT = \"repeat\";\n    BackgroundRepeat.REPEAT_X = \"repeat-x\";\n    BackgroundRepeat.REPEAT_Y = \"repeat-y\";\n    BackgroundRepeat.NO_REPEAT = \"no-repeat\";\n    BackgroundRepeat.isValid = properties_1.makeValidator(BackgroundRepeat.REPEAT, BackgroundRepeat.REPEAT_X, BackgroundRepeat.REPEAT_Y, BackgroundRepeat.NO_REPEAT);\n    BackgroundRepeat.parse = properties_1.makeParser(BackgroundRepeat.isValid);\n})(BackgroundRepeat = exports.BackgroundRepeat || (exports.BackgroundRepeat = {}));\nexports.backgroundRepeatProperty = new properties_1.CssProperty({\n    name: \"backgroundRepeat\", cssName: \"background-repeat\", valueConverter: BackgroundRepeat.parse,\n    valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withRepeat(newValue);\n    }\n});\nexports.backgroundRepeatProperty.register(style_1.Style);\nexports.backgroundSizeProperty = new properties_1.CssProperty({\n    name: \"backgroundSize\", cssName: \"background-size\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withSize(newValue);\n    }\n});\nexports.backgroundSizeProperty.register(style_1.Style);\nexports.backgroundPositionProperty = new properties_1.CssProperty({\n    name: \"backgroundPosition\", cssName: \"background-position\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withPosition(newValue);\n    }\n});\nexports.backgroundPositionProperty.register(style_1.Style);\nfunction parseBorderColor(value) {\n    var result = { top: undefined, right: undefined, bottom: undefined, left: undefined };\n    if (value.indexOf(\"rgb\") === 0) {\n        result.top = result.right = result.bottom = result.left = new color_1.Color(value);\n        return result;\n    }\n    var arr = value.split(/[ ,]+/);\n    if (arr.length === 1) {\n        var arr0 = new color_1.Color(arr[0]);\n        result.top = arr0;\n        result.right = arr0;\n        result.bottom = arr0;\n        result.left = arr0;\n    }\n    else if (arr.length === 2) {\n        var arr0 = new color_1.Color(arr[0]);\n        var arr1 = new color_1.Color(arr[1]);\n        result.top = arr0;\n        result.right = arr1;\n        result.bottom = arr0;\n        result.left = arr1;\n    }\n    else if (arr.length === 3) {\n        var arr0 = new color_1.Color(arr[0]);\n        var arr1 = new color_1.Color(arr[1]);\n        var arr2 = new color_1.Color(arr[2]);\n        result.top = arr0;\n        result.right = arr1;\n        result.bottom = arr2;\n        result.left = arr1;\n    }\n    else if (arr.length === 4) {\n        var arr0 = new color_1.Color(arr[0]);\n        var arr1 = new color_1.Color(arr[1]);\n        var arr2 = new color_1.Color(arr[2]);\n        var arr3 = new color_1.Color(arr[3]);\n        result.top = arr0;\n        result.right = arr1;\n        result.bottom = arr2;\n        result.left = arr3;\n    }\n    else {\n        throw new Error(\"Expected 1, 2, 3 or 4 parameters. Actual: \" + value);\n    }\n    return result;\n}\nvar borderColorProperty = new properties_1.ShorthandProperty({\n    name: \"borderColor\", cssName: \"border-color\",\n    getter: function () {\n        if (color_1.Color.equals(this.borderTopColor, this.borderRightColor) &&\n            color_1.Color.equals(this.borderTopColor, this.borderBottomColor) &&\n            color_1.Color.equals(this.borderTopColor, this.borderLeftColor)) {\n            return this.borderTopColor;\n        }\n        else {\n            return this.borderTopColor + \" \" + this.borderRightColor + \" \" + this.borderBottomColor + \" \" + this.borderLeftColor;\n        }\n    },\n    converter: function (value) {\n        if (typeof value === \"string\") {\n            var fourColors = parseBorderColor(value);\n            return [\n                [exports.borderTopColorProperty, fourColors.top],\n                [exports.borderRightColorProperty, fourColors.right],\n                [exports.borderBottomColorProperty, fourColors.bottom],\n                [exports.borderLeftColorProperty, fourColors.left]\n            ];\n        }\n        else {\n            return [\n                [exports.borderTopColorProperty, value],\n                [exports.borderRightColorProperty, value],\n                [exports.borderBottomColorProperty, value],\n                [exports.borderLeftColorProperty, value]\n            ];\n        }\n    }\n});\nborderColorProperty.register(style_1.Style);\nexports.borderTopColorProperty = new properties_1.CssProperty({\n    name: \"borderTopColor\", cssName: \"border-top-color\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderTopColor(newValue);\n    }, equalityComparer: color_1.Color.equals, valueConverter: function (value) { return new color_1.Color(value); }\n});\nexports.borderTopColorProperty.register(style_1.Style);\nexports.borderRightColorProperty = new properties_1.CssProperty({\n    name: \"borderRightColor\", cssName: \"border-right-color\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderRightColor(newValue);\n    }, equalityComparer: color_1.Color.equals, valueConverter: function (value) { return new color_1.Color(value); }\n});\nexports.borderRightColorProperty.register(style_1.Style);\nexports.borderBottomColorProperty = new properties_1.CssProperty({\n    name: \"borderBottomColor\", cssName: \"border-bottom-color\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderBottomColor(newValue);\n    }, equalityComparer: color_1.Color.equals, valueConverter: function (value) { return new color_1.Color(value); }\n});\nexports.borderBottomColorProperty.register(style_1.Style);\nexports.borderLeftColorProperty = new properties_1.CssProperty({\n    name: \"borderLeftColor\", cssName: \"border-left-color\", valueChanged: function (target, oldValue, newValue) {\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderLeftColor(newValue);\n    }, equalityComparer: color_1.Color.equals, valueConverter: function (value) { return new color_1.Color(value); }\n});\nexports.borderLeftColorProperty.register(style_1.Style);\nvar borderWidthProperty = new properties_1.ShorthandProperty({\n    name: \"borderWidth\", cssName: \"border-width\",\n    getter: function () {\n        if (Length.equals(this.borderTopWidth, this.borderRightWidth) &&\n            Length.equals(this.borderTopWidth, this.borderBottomWidth) &&\n            Length.equals(this.borderTopWidth, this.borderLeftWidth)) {\n            return this.borderTopWidth;\n        }\n        else {\n            return Length.convertToString(this.borderTopWidth) + \" \" + Length.convertToString(this.borderRightWidth) + \" \" + Length.convertToString(this.borderBottomWidth) + \" \" + Length.convertToString(this.borderLeftWidth);\n        }\n    },\n    converter: function (value) {\n        if (typeof value === \"string\" && value !== \"auto\") {\n            var borderWidths = parseThickness(value);\n            return [\n                [exports.borderTopWidthProperty, borderWidths.top],\n                [exports.borderRightWidthProperty, borderWidths.right],\n                [exports.borderBottomWidthProperty, borderWidths.bottom],\n                [exports.borderLeftWidthProperty, borderWidths.left]\n            ];\n        }\n        else {\n            return [\n                [exports.borderTopWidthProperty, value],\n                [exports.borderRightWidthProperty, value],\n                [exports.borderBottomWidthProperty, value],\n                [exports.borderLeftWidthProperty, value]\n            ];\n        }\n    }\n});\nborderWidthProperty.register(style_1.Style);\nexports.borderTopWidthProperty = new properties_1.CssProperty({\n    name: \"borderTopWidth\", cssName: \"border-top-width\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-top-width should be Non-Negative Finite number. Value: \" + value);\n        }\n        target.view.effectiveBorderTopWidth = value;\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderTopWidth(value);\n    }, valueConverter: Length.parse\n});\nexports.borderTopWidthProperty.register(style_1.Style);\nexports.borderRightWidthProperty = new properties_1.CssProperty({\n    name: \"borderRightWidth\", cssName: \"border-right-width\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-right-width should be Non-Negative Finite number. Value: \" + value);\n        }\n        target.view.effectiveBorderRightWidth = value;\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderRightWidth(value);\n    }, valueConverter: Length.parse\n});\nexports.borderRightWidthProperty.register(style_1.Style);\nexports.borderBottomWidthProperty = new properties_1.CssProperty({\n    name: \"borderBottomWidth\", cssName: \"border-bottom-width\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-bottom-width should be Non-Negative Finite number. Value: \" + value);\n        }\n        target.view.effectiveBorderBottomWidth = value;\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderBottomWidth(value);\n    }, valueConverter: Length.parse\n});\nexports.borderBottomWidthProperty.register(style_1.Style);\nexports.borderLeftWidthProperty = new properties_1.CssProperty({\n    name: \"borderLeftWidth\", cssName: \"border-left-width\", defaultValue: exports.zeroLength, affectsLayout: platform_1.isIOS, equalityComparer: Length.equals,\n    valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-left-width should be Non-Negative Finite number. Value: \" + value);\n        }\n        target.view.effectiveBorderLeftWidth = value;\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderLeftWidth(value);\n    }, valueConverter: Length.parse\n});\nexports.borderLeftWidthProperty.register(style_1.Style);\nvar borderRadiusProperty = new properties_1.ShorthandProperty({\n    name: \"borderRadius\", cssName: \"border-radius\",\n    getter: function () {\n        if (Length.equals(this.borderTopLeftRadius, this.borderTopRightRadius) &&\n            Length.equals(this.borderTopLeftRadius, this.borderBottomRightRadius) &&\n            Length.equals(this.borderTopLeftRadius, this.borderBottomLeftRadius)) {\n            return this.borderTopLeftRadius;\n        }\n        return Length.convertToString(this.borderTopLeftRadius) + \" \" + Length.convertToString(this.borderTopRightRadius) + \" \" + Length.convertToString(this.borderBottomRightRadius) + \" \" + Length.convertToString(this.borderBottomLeftRadius);\n    },\n    converter: function (value) {\n        if (typeof value === \"string\") {\n            var borderRadius = parseThickness(value);\n            return [\n                [exports.borderTopLeftRadiusProperty, borderRadius.top],\n                [exports.borderTopRightRadiusProperty, borderRadius.right],\n                [exports.borderBottomRightRadiusProperty, borderRadius.bottom],\n                [exports.borderBottomLeftRadiusProperty, borderRadius.left]\n            ];\n        }\n        else {\n            return [\n                [exports.borderTopLeftRadiusProperty, value],\n                [exports.borderTopRightRadiusProperty, value],\n                [exports.borderBottomRightRadiusProperty, value],\n                [exports.borderBottomLeftRadiusProperty, value]\n            ];\n        }\n    }\n});\nborderRadiusProperty.register(style_1.Style);\nexports.borderTopLeftRadiusProperty = new properties_1.CssProperty({\n    name: \"borderTopLeftRadius\", cssName: \"border-top-left-radius\", defaultValue: 0, affectsLayout: platform_1.isIOS, valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-top-left-radius should be Non-Negative Finite number. Value: \" + value);\n        }\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderTopLeftRadius(value);\n    }, valueConverter: Length.parse\n});\nexports.borderTopLeftRadiusProperty.register(style_1.Style);\nexports.borderTopRightRadiusProperty = new properties_1.CssProperty({\n    name: \"borderTopRightRadius\", cssName: \"border-top-right-radius\", defaultValue: 0, affectsLayout: platform_1.isIOS, valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-top-right-radius should be Non-Negative Finite number. Value: \" + value);\n        }\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderTopRightRadius(value);\n    }, valueConverter: Length.parse\n});\nexports.borderTopRightRadiusProperty.register(style_1.Style);\nexports.borderBottomRightRadiusProperty = new properties_1.CssProperty({\n    name: \"borderBottomRightRadius\", cssName: \"border-bottom-right-radius\", defaultValue: 0, affectsLayout: platform_1.isIOS, valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-bottom-right-radius should be Non-Negative Finite number. Value: \" + value);\n        }\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderBottomRightRadius(value);\n    }, valueConverter: Length.parse\n});\nexports.borderBottomRightRadiusProperty.register(style_1.Style);\nexports.borderBottomLeftRadiusProperty = new properties_1.CssProperty({\n    name: \"borderBottomLeftRadius\", cssName: \"border-bottom-left-radius\", defaultValue: 0, affectsLayout: platform_1.isIOS, valueChanged: function (target, oldValue, newValue) {\n        var value = Length.toDevicePixels(newValue, 0);\n        if (!isNonNegativeFiniteNumber(value)) {\n            throw new Error(\"border-bottom-left-radius should be Non-Negative Finite number. Value: \" + value);\n        }\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withBorderBottomLeftRadius(value);\n    }, valueConverter: Length.parse\n});\nexports.borderBottomLeftRadiusProperty.register(style_1.Style);\nfunction isNonNegativeFiniteNumber(value) {\n    return isFinite(value) && !isNaN(value) && value >= 0;\n}\nvar supportedPaths = [\"rect\", \"circle\", \"ellipse\", \"polygon\", \"inset\"];\nfunction isClipPathValid(value) {\n    if (!value) {\n        return true;\n    }\n    var functionName = value.substring(0, value.indexOf(\"(\")).trim();\n    return supportedPaths.indexOf(functionName) !== -1;\n}\nexports.clipPathProperty = new properties_1.CssProperty({\n    name: \"clipPath\", cssName: \"clip-path\", valueChanged: function (target, oldValue, newValue) {\n        if (!isClipPathValid(newValue)) {\n            throw new Error(\"clip-path is not valid.\");\n        }\n        var background = target.backgroundInternal;\n        target.backgroundInternal = background.withClipPath(newValue);\n    }\n});\nexports.clipPathProperty.register(style_1.Style);\nfunction isFloatValueConverter(value) {\n    var newValue = parseFloat(value);\n    if (isNaN(newValue)) {\n        throw new Error(\"Invalid value: \" + newValue);\n    }\n    return newValue;\n}\nexports.zIndexProperty = new properties_1.CssProperty({ name: \"zIndex\", cssName: \"z-index\", defaultValue: Number.NaN, valueConverter: isFloatValueConverter });\nexports.zIndexProperty.register(style_1.Style);\nfunction opacityConverter(value) {\n    var newValue = parseFloat(value);\n    if (!isNaN(newValue) && 0 <= newValue && newValue <= 1) {\n        return newValue;\n    }\n    throw new Error(\"Opacity should be between [0, 1]. Value: \" + newValue);\n}\nexports.opacityProperty = new properties_1.CssAnimationProperty({ name: \"opacity\", cssName: \"opacity\", defaultValue: 1, valueConverter: opacityConverter });\nexports.opacityProperty.register(style_1.Style);\nexports.colorProperty = new properties_1.InheritedCssProperty({ name: \"color\", cssName: \"color\", equalityComparer: color_1.Color.equals, valueConverter: function (v) { return new color_1.Color(v); } });\nexports.colorProperty.register(style_1.Style);\nexports.fontInternalProperty = new properties_1.CssProperty({ name: \"fontInternal\", cssName: \"_fontInternal\", defaultValue: font_1.Font.default });\nexports.fontInternalProperty.register(style_1.Style);\nexports.fontFamilyProperty = new properties_1.InheritedCssProperty({\n    name: \"fontFamily\", cssName: \"font-family\", affectsLayout: platform_1.isIOS, valueChanged: function (target, oldValue, newValue) {\n        var currentFont = target.fontInternal;\n        if (currentFont.fontFamily !== newValue) {\n            var newFont = currentFont.withFontFamily(newValue);\n            target.fontInternal = font_1.Font.equals(font_1.Font.default, newFont) ? properties_1.unsetValue : newFont;\n        }\n    }\n});\nexports.fontFamilyProperty.register(style_1.Style);\nexports.fontSizeProperty = new properties_1.InheritedCssProperty({\n    name: \"fontSize\", cssName: \"font-size\", affectsLayout: platform_1.isIOS, valueChanged: function (target, oldValue, newValue) {\n        var currentFont = target.fontInternal;\n        if (currentFont.fontSize !== newValue) {\n            var newFont = currentFont.withFontSize(newValue);\n            target.fontInternal = font_1.Font.equals(font_1.Font.default, newFont) ? properties_1.unsetValue : newFont;\n        }\n    },\n    valueConverter: function (v) { return parseFloat(v); }\n});\nexports.fontSizeProperty.register(style_1.Style);\nexports.fontStyleProperty = new properties_1.InheritedCssProperty({\n    name: \"fontStyle\", cssName: \"font-style\", affectsLayout: platform_1.isIOS, defaultValue: font_1.FontStyle.NORMAL, valueConverter: font_1.FontStyle.parse, valueChanged: function (target, oldValue, newValue) {\n        var currentFont = target.fontInternal;\n        if (currentFont.fontStyle !== newValue) {\n            var newFont = currentFont.withFontStyle(newValue);\n            target.fontInternal = font_1.Font.equals(font_1.Font.default, newFont) ? properties_1.unsetValue : newFont;\n        }\n    }\n});\nexports.fontStyleProperty.register(style_1.Style);\nexports.fontWeightProperty = new properties_1.InheritedCssProperty({\n    name: \"fontWeight\", cssName: \"font-weight\", affectsLayout: platform_1.isIOS, defaultValue: font_1.FontWeight.NORMAL, valueConverter: font_1.FontWeight.parse, valueChanged: function (target, oldValue, newValue) {\n        var currentFont = target.fontInternal;\n        if (currentFont.fontWeight !== newValue) {\n            var newFont = currentFont.withFontWeight(newValue);\n            target.fontInternal = font_1.Font.equals(font_1.Font.default, newFont) ? properties_1.unsetValue : newFont;\n        }\n    }\n});\nexports.fontWeightProperty.register(style_1.Style);\nvar fontProperty = new properties_1.ShorthandProperty({\n    name: \"font\", cssName: \"font\",\n    getter: function () {\n        return this.fontStyle + \" \" + this.fontWeight + \" \" + this.fontSize + \" \" + this.fontFamily;\n    },\n    converter: function (value) {\n        if (value === properties_1.unsetValue) {\n            return [\n                [exports.fontStyleProperty, properties_1.unsetValue],\n                [exports.fontWeightProperty, properties_1.unsetValue],\n                [exports.fontSizeProperty, properties_1.unsetValue],\n                [exports.fontFamilyProperty, properties_1.unsetValue]\n            ];\n        }\n        else {\n            var font = font_1.parseFont(value);\n            var fontSize = parseFloat(font.fontSize);\n            return [\n                [exports.fontStyleProperty, font.fontStyle],\n                [exports.fontWeightProperty, font.fontWeight],\n                [exports.fontSizeProperty, fontSize],\n                [exports.fontFamilyProperty, font.fontFamily]\n            ];\n        }\n    }\n});\nfontProperty.register(style_1.Style);\nvar Visibility;\n(function (Visibility) {\n    Visibility.VISIBLE = \"visible\";\n    Visibility.HIDDEN = \"hidden\";\n    Visibility.COLLAPSE = \"collapse\";\n    Visibility.isValid = properties_1.makeValidator(Visibility.VISIBLE, Visibility.HIDDEN, Visibility.COLLAPSE);\n    Visibility.parse = function (value) { return value.toLowerCase() === \"collapsed\" ? Visibility.COLLAPSE : parseStrict(value); };\n    var parseStrict = properties_1.makeParser(Visibility.isValid);\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\nexports.visibilityProperty = new properties_1.CssProperty({\n    name: \"visibility\", cssName: \"visibility\", defaultValue: Visibility.VISIBLE, affectsLayout: platform_1.isIOS, valueConverter: Visibility.parse, valueChanged: function (target, oldValue, newValue) {\n        target.view.isCollapsed = (newValue === Visibility.COLLAPSE);\n    }\n});\nexports.visibilityProperty.register(style_1.Style);\n//# sourceMappingURL=style-properties.js.map"
    },
    {
      "id": 22,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base.android.js",
      "name": "./~/tns-core-modules/ui/text-base/text-base.android.js",
      "index": 73,
      "index2": 69,
      "size": 16698,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-view/text-view.android.js",
      "issuerId": 167,
      "issuerName": "./~/tns-core-modules/ui/text-view/text-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 43,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/label/label.android.js",
          "module": "./~/tns-core-modules/ui/label/label.android.js",
          "moduleName": "./~/tns-core-modules/ui/label/label.android.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "5:18-41"
        },
        {
          "moduleId": 43,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/label/label.android.js",
          "module": "./~/tns-core-modules/ui/label/label.android.js",
          "moduleName": "./~/tns-core-modules/ui/label/label.android.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "6:9-32"
        },
        {
          "moduleId": 124,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button-common.js",
          "module": "./~/tns-core-modules/ui/button/button-common.js",
          "moduleName": "./~/tns-core-modules/ui/button/button-common.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "5:18-41"
        },
        {
          "moduleId": 124,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button-common.js",
          "module": "./~/tns-core-modules/ui/button/button-common.js",
          "moduleName": "./~/tns-core-modules/ui/button/button-common.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "6:9-32"
        },
        {
          "moduleId": 131,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
          "module": "./~/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "5:18-41"
        },
        {
          "moduleId": 131,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
          "module": "./~/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "6:9-32"
        },
        {
          "moduleId": 163,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "7:18-41"
        },
        {
          "moduleId": 167,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-view/text-view.android.js",
          "module": "./~/tns-core-modules/ui/text-view/text-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-view/text-view.android.js",
          "type": "cjs require",
          "userRequest": "../text-base",
          "loc": "6:9-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar font_1 = require(\"../styling/font\");\nvar style_properties_1 = require(\"../styling/style-properties\");\nvar text_base_common_1 = require(\"./text-base-common\");\n__export(require(\"./text-base-common\"));\nvar TextTransformation;\nfunction initializeTextTransformation() {\n    if (TextTransformation) {\n        return;\n    }\n    var TextTransformationImpl = (function (_super) {\n        __extends(TextTransformationImpl, _super);\n        function TextTransformationImpl(textBase) {\n            var _this = _super.call(this) || this;\n            _this.textBase = textBase;\n            return global.__native(_this);\n        }\n        TextTransformationImpl.prototype.getTransformation = function (charSeq, view) {\n            var formattedText = this.textBase.formattedText;\n            if (formattedText) {\n                return createSpannableStringBuilder(formattedText);\n            }\n            else {\n                return getTransformedText(this.textBase.text, this.textBase.textTransform);\n            }\n        };\n        TextTransformationImpl.prototype.onFocusChanged = function (view, sourceText, focused, direction, previouslyFocusedRect) {\n        };\n        return TextTransformationImpl;\n    }(java.lang.Object));\n    TextTransformationImpl = __decorate([\n        Interfaces([android.text.method.TransformationMethod])\n    ], TextTransformationImpl);\n    TextTransformation = TextTransformationImpl;\n}\nvar TextBase = (function (_super) {\n    __extends(TextBase, _super);\n    function TextBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextBase.prototype.initNativeView = function () {\n        this._defaultTransformationMethod = this.nativeView.getTransformationMethod();\n        _super.prototype.initNativeView.call(this);\n    };\n    TextBase.prototype.resetNativeView = function () {\n        _super.prototype.resetNativeView.call(this);\n        this.nativeView.setTransformationMethod(this._defaultTransformationMethod);\n        this._defaultTransformationMethod = null;\n    };\n    TextBase.prototype[text_base_common_1.textProperty.getDefault] = function () {\n        return '';\n    };\n    TextBase.prototype[text_base_common_1.textProperty.setNative] = function (value) {\n        if (this.formattedText) {\n            return;\n        }\n        this._setNativeText();\n    };\n    TextBase.prototype[text_base_common_1.formattedTextProperty.getDefault] = function () {\n        return null;\n    };\n    TextBase.prototype[text_base_common_1.formattedTextProperty.setNative] = function (value) {\n        if (this.secure) {\n            return;\n        }\n        initializeTextTransformation();\n        var spannableStringBuilder = createSpannableStringBuilder(value);\n        this.nativeView.setText(spannableStringBuilder);\n        text_base_common_1.textProperty.nativeValueChange(this, (value === null || value === undefined) ? '' : value.toString());\n        if (spannableStringBuilder && this.nativeView instanceof android.widget.Button &&\n            !(this.nativeView.getTransformationMethod() instanceof TextTransformation)) {\n            this.nativeView.setTransformationMethod(new TextTransformation(this));\n        }\n    };\n    TextBase.prototype[text_base_common_1.textTransformProperty.getDefault] = function () {\n        return \"default\";\n    };\n    TextBase.prototype[text_base_common_1.textTransformProperty.setNative] = function (value) {\n        if (value === \"default\") {\n            this.nativeView.setTransformationMethod(this._defaultTransformationMethod);\n            return;\n        }\n        if (this.secure) {\n            return;\n        }\n        initializeTextTransformation();\n        if (typeof value === \"string\") {\n            this.nativeView.setTransformationMethod(new TextTransformation(this));\n        }\n        else {\n            this.nativeView.setTransformationMethod(value);\n        }\n    };\n    TextBase.prototype[text_base_common_1.colorProperty.getDefault] = function () {\n        return this.nativeView.getTextColors();\n    };\n    TextBase.prototype[text_base_common_1.colorProperty.setNative] = function (value) {\n        if (!this.formattedText || !(value instanceof text_base_common_1.Color)) {\n            if (value instanceof text_base_common_1.Color) {\n                this.nativeView.setTextColor(value.android);\n            }\n            else {\n                this.nativeView.setTextColor(value);\n            }\n        }\n    };\n    TextBase.prototype[text_base_common_1.fontSizeProperty.getDefault] = function () {\n        return { nativeSize: this.nativeView.getTextSize() };\n    };\n    TextBase.prototype[text_base_common_1.fontSizeProperty.setNative] = function (value) {\n        if (!this.formattedText || (typeof value !== \"number\")) {\n            if (typeof value === \"number\") {\n                this.nativeView.setTextSize(value);\n            }\n            else {\n                this.nativeView.setTextSize(android.util.TypedValue.COMPLEX_UNIT_PX, value.nativeSize);\n            }\n        }\n    };\n    TextBase.prototype[text_base_common_1.fontInternalProperty.getDefault] = function () {\n        return this.nativeView.getTypeface();\n    };\n    TextBase.prototype[text_base_common_1.fontInternalProperty.setNative] = function (value) {\n        if (!this.formattedText || !(value instanceof font_1.Font)) {\n            this.nativeView.setTypeface(value instanceof font_1.Font ? value.getAndroidTypeface() : value);\n        }\n    };\n    TextBase.prototype[text_base_common_1.textAlignmentProperty.getDefault] = function () {\n        var textAlignmentGravity = this.nativeView.getGravity() & android.view.Gravity.HORIZONTAL_GRAVITY_MASK;\n        switch (textAlignmentGravity) {\n            case android.view.Gravity.CENTER_HORIZONTAL:\n                return \"center\";\n            case android.view.Gravity.RIGHT:\n                return \"right\";\n            case android.view.Gravity.LEFT:\n            default:\n                return \"left\";\n        }\n    };\n    TextBase.prototype[text_base_common_1.textAlignmentProperty.setNative] = function (value) {\n        var verticalGravity = this.nativeView.getGravity() & android.view.Gravity.VERTICAL_GRAVITY_MASK;\n        switch (value) {\n            case \"left\":\n                this.nativeView.setGravity(android.view.Gravity.LEFT | verticalGravity);\n                break;\n            case \"center\":\n                this.nativeView.setGravity(android.view.Gravity.CENTER_HORIZONTAL | verticalGravity);\n                break;\n            case \"right\":\n                this.nativeView.setGravity(android.view.Gravity.RIGHT | verticalGravity);\n                break;\n            default:\n                throw new Error(\"Invalid text alignment value: \" + value + \". Valid values are: 'left', 'center', 'right'.\");\n        }\n    };\n    TextBase.prototype[text_base_common_1.textDecorationProperty.getDefault] = function () {\n        return -1;\n    };\n    TextBase.prototype[text_base_common_1.textDecorationProperty.setNative] = function (value) {\n        var isReset = typeof value === \"number\";\n        if (!this.formattedText || isReset) {\n            value = isReset ? \"none\" : value;\n            var flags = void 0;\n            switch (value) {\n                case \"none\":\n                    flags = 0;\n                    break;\n                case \"underline\":\n                    flags = android.graphics.Paint.UNDERLINE_TEXT_FLAG;\n                    break;\n                case \"line-through\":\n                    flags = android.graphics.Paint.STRIKE_THRU_TEXT_FLAG;\n                    break;\n                case \"underline line-through\":\n                    flags = android.graphics.Paint.UNDERLINE_TEXT_FLAG | android.graphics.Paint.STRIKE_THRU_TEXT_FLAG;\n                    break;\n                default:\n                    throw new Error(\"Invalid text decoration value: \" + value + \". Valid values are: 'none', 'underline', 'line-through', 'underline line-through'.\");\n            }\n            this.nativeView.setPaintFlags(flags);\n        }\n        else {\n            this._setNativeText();\n        }\n    };\n    TextBase.prototype[text_base_common_1.whiteSpaceProperty.getDefault] = function () {\n        return \"normal\";\n    };\n    TextBase.prototype[text_base_common_1.whiteSpaceProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        switch (value) {\n            case \"normal\":\n                nativeView.setSingleLine(false);\n                nativeView.setEllipsize(null);\n                break;\n            case \"nowrap\":\n                nativeView.setSingleLine(true);\n                nativeView.setEllipsize(android.text.TextUtils.TruncateAt.END);\n                break;\n            default:\n                throw new Error(\"Invalid whitespace value: \" + value + \". Valid values are: 'normal', nowrap'.\");\n        }\n    };\n    TextBase.prototype[text_base_common_1.letterSpacingProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getLetterspacing(this.nativeView);\n    };\n    TextBase.prototype[text_base_common_1.letterSpacingProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setLetterspacing(this.nativeView, value);\n    };\n    TextBase.prototype[text_base_common_1.paddingTopProperty.getDefault] = function () {\n        return { value: this._defaultPaddingTop, unit: \"px\" };\n    };\n    TextBase.prototype[text_base_common_1.paddingTopProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingTop(this.nativeView, text_base_common_1.Length.toDevicePixels(value, 0) + text_base_common_1.Length.toDevicePixels(this.style.borderTopWidth, 0));\n    };\n    TextBase.prototype[text_base_common_1.paddingRightProperty.getDefault] = function () {\n        return { value: this._defaultPaddingRight, unit: \"px\" };\n    };\n    TextBase.prototype[text_base_common_1.paddingRightProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingRight(this.nativeView, text_base_common_1.Length.toDevicePixels(value, 0) + text_base_common_1.Length.toDevicePixels(this.style.borderRightWidth, 0));\n    };\n    TextBase.prototype[text_base_common_1.paddingBottomProperty.getDefault] = function () {\n        return { value: this._defaultPaddingBottom, unit: \"px\" };\n    };\n    TextBase.prototype[text_base_common_1.paddingBottomProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingBottom(this.nativeView, text_base_common_1.Length.toDevicePixels(value, 0) + text_base_common_1.Length.toDevicePixels(this.style.borderBottomWidth, 0));\n    };\n    TextBase.prototype[text_base_common_1.paddingLeftProperty.getDefault] = function () {\n        return { value: this._defaultPaddingLeft, unit: \"px\" };\n    };\n    TextBase.prototype[text_base_common_1.paddingLeftProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingLeft(this.nativeView, text_base_common_1.Length.toDevicePixels(value, 0) + text_base_common_1.Length.toDevicePixels(this.style.borderLeftWidth, 0));\n    };\n    TextBase.prototype._setNativeText = function () {\n        var transformedText;\n        if (this.formattedText) {\n            transformedText = createSpannableStringBuilder(this.formattedText);\n        }\n        else {\n            var text = this.text;\n            var stringValue = (text === null || text === undefined) ? '' : text.toString();\n            transformedText = getTransformedText(stringValue, this.textTransform);\n        }\n        this.nativeView.setText(transformedText);\n    };\n    return TextBase;\n}(text_base_common_1.TextBaseCommon));\nexports.TextBase = TextBase;\nfunction getCapitalizedString(str) {\n    var words = str.split(\" \");\n    var newWords = [];\n    for (var i = 0, length_1 = words.length; i < length_1; i++) {\n        var word = words[i].toLowerCase();\n        newWords.push(word.substr(0, 1).toUpperCase() + word.substring(1));\n    }\n    return newWords.join(\" \");\n}\nfunction getTransformedText(text, textTransform) {\n    switch (textTransform) {\n        case \"uppercase\":\n            return text.toUpperCase();\n        case \"lowercase\":\n            return text.toLowerCase();\n        case \"capitalize\":\n            return getCapitalizedString(text);\n        case \"none\":\n        default:\n            return text;\n    }\n}\nexports.getTransformedText = getTransformedText;\nfunction createSpannableStringBuilder(formattedString) {\n    if (!formattedString) {\n        return null;\n    }\n    var ssb = new android.text.SpannableStringBuilder();\n    for (var i = 0, spanStart = 0, spanLength = 0, length_2 = formattedString.spans.length; i < length_2; i++) {\n        var span = formattedString.spans.getItem(i);\n        var text = span.text;\n        var textTransform = formattedString.parent.textTransform;\n        var spanText = (text === null || text === undefined) ? '' : text.toString();\n        if (textTransform && textTransform !== \"none\") {\n            spanText = getTransformedText(spanText, textTransform);\n        }\n        spanLength = spanText.length;\n        if (spanLength > 0) {\n            ssb.insert(spanStart, spanText);\n            setSpanModifiers(ssb, span, spanStart, spanStart + spanLength);\n            spanStart += spanLength;\n        }\n    }\n    return ssb;\n}\nfunction setSpanModifiers(ssb, span, start, end) {\n    var spanStyle = span.style;\n    var bold = text_base_common_1.isBold(spanStyle.fontWeight);\n    var italic = spanStyle.fontStyle === \"italic\";\n    if (bold && italic) {\n        ssb.setSpan(new android.text.style.StyleSpan(android.graphics.Typeface.BOLD_ITALIC), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    else if (bold) {\n        ssb.setSpan(new android.text.style.StyleSpan(android.graphics.Typeface.BOLD), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    else if (italic) {\n        ssb.setSpan(new android.text.style.StyleSpan(android.graphics.Typeface.ITALIC), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    var fontFamily = span.fontFamily;\n    if (fontFamily) {\n        var font = new font_1.Font(fontFamily, 0, (italic) ? \"italic\" : \"normal\", (bold) ? \"bold\" : \"normal\");\n        var typefaceSpan = new org.nativescript.widgets.CustomTypefaceSpan(fontFamily, font.getAndroidTypeface());\n        ssb.setSpan(typefaceSpan, start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    var realFontSize = span.fontSize;\n    if (realFontSize) {\n        ssb.setSpan(new android.text.style.AbsoluteSizeSpan(realFontSize * text_base_common_1.layout.getDisplayDensity()), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    var color = span.color;\n    if (color) {\n        ssb.setSpan(new android.text.style.ForegroundColorSpan(color.android), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    var backgroundColor;\n    if (style_properties_1.backgroundColorProperty.isSet(spanStyle)) {\n        backgroundColor = spanStyle.backgroundColor;\n    }\n    else if (style_properties_1.backgroundColorProperty.isSet(span.parent.style)) {\n        backgroundColor = span.parent.style.backgroundColor;\n    }\n    else if (style_properties_1.backgroundColorProperty.isSet(span.parent.parent.style)) {\n        backgroundColor = span.parent.parent.style.backgroundColor;\n    }\n    if (backgroundColor) {\n        ssb.setSpan(new android.text.style.BackgroundColorSpan(backgroundColor.android), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n    var valueSource;\n    if (text_base_common_1.textDecorationProperty.isSet(spanStyle)) {\n        valueSource = spanStyle;\n    }\n    else if (text_base_common_1.textDecorationProperty.isSet(span.parent.style)) {\n        valueSource = span.parent.style;\n    }\n    else if (text_base_common_1.textDecorationProperty.isSet(span.parent.parent.style)) {\n        valueSource = span.parent.parent.style;\n    }\n    if (valueSource) {\n        var textDecorations = valueSource.textDecoration;\n        var underline_1 = textDecorations.indexOf('underline') !== -1;\n        if (underline_1) {\n            ssb.setSpan(new android.text.style.UnderlineSpan(), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        }\n        var strikethrough = textDecorations.indexOf('line-through') !== -1;\n        if (strikethrough) {\n            ssb.setSpan(new android.text.style.StrikethroughSpan(), start, end, android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        }\n    }\n}\n//# sourceMappingURL=text-base.android.js.map"
    },
    {
      "id": 23,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "name": "./~/@angular/router/@angular/router.es5.js",
      "index": 247,
      "index2": 264,
      "size": 209631,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "3:15-41"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/router-extensions.js",
          "module": "./~/nativescript-angular/router/router-extensions.js",
          "moduleName": "./~/nativescript-angular/router/router-extensions.js",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "3:15-41"
        },
        {
          "moduleId": 83,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
          "module": "./~/nativescript-angular/router/ns-router-link.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link.js",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "3:15-41"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "3:15-41"
        },
        {
          "moduleId": 179,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router-url-tree.js",
          "module": "./~/nativescript-angular/router-url-tree.js",
          "moduleName": "./~/nativescript-angular/router-url-tree.js",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "4:15-41"
        },
        {
          "moduleId": 182,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link-active.js",
          "module": "./~/nativescript-angular/router/ns-router-link-active.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link-active.js",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "3:15-41"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "@angular/router",
          "loc": "10:0-26"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "RouterLink",
        "RouterLinkWithHref",
        "RouterLinkActive",
        "RouterOutlet",
        "NavigationCancel",
        "NavigationEnd",
        "NavigationError",
        "NavigationStart",
        "RouteConfigLoadEnd",
        "RouteConfigLoadStart",
        "RoutesRecognized",
        "RouteReuseStrategy",
        "Router",
        "ROUTES",
        "ROUTER_CONFIGURATION",
        "ROUTER_INITIALIZER",
        "RouterModule",
        "provideRoutes",
        "RouterOutletMap",
        "NoPreloading",
        "PreloadAllModules",
        "PreloadingStrategy",
        "RouterPreloader",
        "ActivatedRoute",
        "ActivatedRouteSnapshot",
        "RouterState",
        "RouterStateSnapshot",
        "PRIMARY_OUTLET",
        "convertToParamMap",
        "UrlHandlingStrategy",
        "DefaultUrlSerializer",
        "UrlSegment",
        "UrlSegmentGroup",
        "UrlSerializer",
        "UrlTree",
        "VERSION",
        "ɵROUTER_PROVIDERS",
        "ɵflatten",
        "ɵa",
        "ɵg",
        "ɵh",
        "ɵi",
        "ɵd",
        "ɵc",
        "ɵj",
        "ɵf",
        "ɵb",
        "ɵe",
        "ɵk",
        "ɵl"
      ],
      "depth": 1,
      "source": "var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */ import { APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Attribute, ChangeDetectorRef, Compiler, ComponentFactoryResolver, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, Optional, Output, ReflectiveInjector, Renderer, SkipSelf, SystemJsNgModuleLoader, Version, ViewContainerRef, isDevMode, ɵisObservable, ɵisPromise } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { every } from 'rxjs/operator/every';\nimport { first } from 'rxjs/operator/first';\nimport { map } from 'rxjs/operator/map';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { reduce } from 'rxjs/operator/reduce';\nimport { Observable } from 'rxjs/Observable';\nimport { _catch } from 'rxjs/operator/catch';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { EmptyError } from 'rxjs/util/EmptyError';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { last } from 'rxjs/operator/last';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { ɵgetDOM } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operator/filter';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = concatAll.call(of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = last.call(concat$);\n    return map.call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = mergeAll.call(observables);\n    return every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        return fromPromise(value);\n    }\n    return of(value);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Wether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(tree.fragment) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s);\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () { return this.consumeOptional('#') ? decodeURI(this.remaining) : null; };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = void 0;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign$1 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        if (segmentGroup === void 0) { segmentGroup = null; }\n        this.segmentGroup = segmentGroup;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); });\n        return _catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment); });\n        return _catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return _catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return _catch.call(first$, function (e, _) {\n            if (e instanceof EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet$1(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, /** @type {?} */ (positionalParamSegments));\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            res[k] = v.startsWith(':') ? actualParams[v.substring(1)] : v;\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var /** @type {?} */ obs = map.call(from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false, consumedSegments: /** @type {?} */ ([]), lastChild: 0, positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            res[getOutlet$1(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return __assign$1({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            res[getOutlet$1(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root, []);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root, []).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} expected\n * @param {?} c\n * @return {?}\n */\nfunction findNode(expected, c) {\n    if (expected === c.value)\n        return c;\n    for (var _i = 0, _a = c.children; _i < _a.length; _i++) {\n        var cc = _a[_i];\n        var /** @type {?} */ r = findNode(expected, cc);\n        if (r)\n            return r;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} expected\n * @param {?} c\n * @param {?} collected\n * @return {?}\n */\nfunction findPath(expected, c, collected) {\n    collected.push(c);\n    if (expected === c.value)\n        return collected;\n    for (var _i = 0, _a = c.children; _i < _a.length; _i++) {\n        var cc = _a[_i];\n        var /** @type {?} */ cloned = collected.slice(0);\n        var /** @type {?} */ r = findPath(expected, cc, cloned);\n        if (r.length > 0)\n            return r;\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign$2 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __extends(RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterStateSnapshot(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new BehaviorSubject({});\n    var /** @type {?} */ emptyData = new BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new BehaviorSubject({});\n    var /** @type {?} */ fragment = new BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = __assign$2({}, res.params, curr.params);\n        var /** @type {?} */ data = __assign$2({}, res.data, curr.data);\n        var /** @type {?} */ resolve = __assign$2({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterStateSnapshot(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterStateSnapshot(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterStateSnapshot(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        route.snapshot = route._futureSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, route._futureSnapshot.queryParams)) {\n            ((route.queryParams)).next(route._futureSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== route._futureSnapshot.fragment) {\n            ((route.fragment)).next(route._futureSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, route._futureSnapshot.params)) {\n            ((route.params)).next(route._futureSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, route._futureSnapshot.url)) {\n            ((route.url)).next(route._futureSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, route._futureSnapshot.data)) {\n            ((route.data)).next(route._futureSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign$3 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheriteParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheriteParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheriteParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? last$1(segments).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = __assign$3({}, posParams, res.consumed[res.consumed.length - 1].parameters);\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$2(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$2(r)] = s;\n        }\n    }\n    return __assign$3({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$2(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$2(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$2(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$2(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains all the router outlets created in a component.\n *\n * \\@stable\n */\nvar RouterOutletMap = (function () {\n    function RouterOutletMap() {\n        /**\n         * \\@internal\n         */\n        this._outlets = {};\n    }\n    /**\n     * Adds an outlet to this map.\n     * @param {?} name\n     * @param {?} outlet\n     * @return {?}\n     */\n    RouterOutletMap.prototype.registerOutlet = function (name, outlet) { this._outlets[name] = outlet; };\n    /**\n     * Removes an outlet from this map.\n     * @param {?} name\n     * @return {?}\n     */\n    RouterOutletMap.prototype.removeOutlet = function (name) { this._outlets[name] = undefined; };\n    return RouterOutletMap;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return of(null);\n}\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} outletMap\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, outletMap, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.outletMap = outletMap;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(null);\n        this.routerEvents = new Subject();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} __1\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, _a) {\n        var _b = _a === void 0 ? {} : _a, relativeTo = _b.relativeTo, queryParams = _b.queryParams, fragment = _b.fragment, preserveQueryParams = _b.preserveQueryParams, queryParamsHandling = _b.queryParamsHandling, preserveFragment = _b.preserveFragment;\n        if (isDevMode() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        else {\n            var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        }\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return null; // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return null; // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, extras.skipLocationChange, extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = mergeMap.call(urlAndSnapshot$, function (p) {\n                return map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.outletMap);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = mergeMap.call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return of(false);\n                return map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate) {\n                    return map.call(preActivation.resolveData(), function () { return p; });\n                }\n                else {\n                    return of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = mergeMap.call(preactivationResolveData$, function (p) {\n                return map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.outletMap);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentOutletMap) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentOutletMap, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (this.canDeactivateChecks.length === 0 && this.canActivateChecks.length === 0) {\n            return of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (this.canActivateChecks.length === 0)\n            return of(null);\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} outletMap\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, outletMap, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], outletMap, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        forEach(prevChildren, function (v, k) { return _this.deactiveRouteAndItsChildren(v, outletMap._outlets[k]); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentOutletMap\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentOutletMap, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ outlet = parentOutletMap ? parentOutletMap._outlets[futureNode.value.outlet] : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            if (this.shouldRunGuardsAndResolvers(curr, future, future._routeConfig.runGuardsAndResolvers)) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, outlet ? outlet.outletMap : null, futurePath);\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentOutletMap, futurePath);\n            }\n        }\n        else {\n            if (curr) {\n                this.deactiveRouteAndItsChildren(currNode, outlet);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, outlet ? outlet.outletMap : null, futurePath);\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentOutletMap, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    PreActivation.prototype.deactiveRouteAndItsChildren = function (route, outlet) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(prevChildren, function (v, k) {\n            if (!r.component) {\n                _this.deactiveRouteAndItsChildren(v, outlet);\n            }\n            else if (!!outlet) {\n                _this.deactiveRouteAndItsChildren(v, outlet.outletMap._outlets[k]);\n            }\n            else {\n                _this.deactiveRouteAndItsChildren(v, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (outlet && outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = mergeMap.call(checks$, function (check) { return andObservables(from([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        var /** @type {?} */ obs = map.call(from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(map.call(from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = map.call(from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        var /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return first.call(observable);\n        });\n        return every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        return waitForMap(resolve, function (k, v) {\n            var /** @type {?} */ resolver = _this.getToken(v, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, _this.future)) :\n                wrapIntoObservable(resolver(future, _this.future));\n        });\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentOutletMap) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentOutletMap);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentOutletMap);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} outletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, outletMap) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.deactivateRoutes(c, prevChildren[c.value.outlet], outletMap);\n            delete prevChildren[c.value.outlet];\n        });\n        forEach(prevChildren, function (v, k) { return _this.deactiveRouteAndItsChildren(v, outletMap); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} outletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, outletMap) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, prevChildren[c.value.outlet], outletMap); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentOutletMap) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        // reusing the node\n        if (future === curr) {\n            // If we have a normal route, we need to go through an outlet.\n            if (future.component) {\n                var /** @type {?} */ outlet = getOutlet(parentOutletMap, future);\n                this.deactivateChildRoutes(futureNode, currNode, outlet.outletMap);\n            }\n            else {\n                this.deactivateChildRoutes(futureNode, currNode, parentOutletMap);\n            }\n        }\n        else {\n            if (curr) {\n                this.deactiveRouteAndItsChildren(currNode, parentOutletMap);\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentOutletMap) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        // reusing the node\n        if (future === curr) {\n            // advance the route to push the parameters\n            advanceActivatedRoute(future);\n            // If we have a normal route, we need to go through an outlet.\n            if (future.component) {\n                var /** @type {?} */ outlet = getOutlet(parentOutletMap, future);\n                this.activateChildRoutes(futureNode, currNode, outlet.outletMap);\n            }\n            else {\n                this.activateChildRoutes(futureNode, currNode, parentOutletMap);\n            }\n        }\n        else {\n            // if we have a normal route, we need to advance the route\n            // and place the component into the outlet. After that recurse.\n            if (future.component) {\n                advanceActivatedRoute(future);\n                var /** @type {?} */ outlet = getOutlet(parentOutletMap, futureNode.value);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    outlet.attach(stored.componentRef, stored.route.value);\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ outletMap = new RouterOutletMap();\n                    this.placeComponentIntoOutlet(outletMap, future, outlet);\n                    this.activateChildRoutes(futureNode, null, outletMap);\n                }\n            }\n            else {\n                advanceActivatedRoute(future);\n                this.activateChildRoutes(futureNode, null, parentOutletMap);\n            }\n        }\n    };\n    /**\n     * @param {?} outletMap\n     * @param {?} future\n     * @param {?} outlet\n     * @return {?}\n     */\n    ActivateRoutes.prototype.placeComponentIntoOutlet = function (outletMap, future, outlet) {\n        var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n        var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n        outlet.activateWith(future, cmpFactoryResolver, outletMap);\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactiveRouteAndItsChildren = function (route, parentOutletMap) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentOutletMap);\n        }\n        else {\n            this.deactiveRouteAndOutlet(route, parentOutletMap);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentOutletMap) {\n        var /** @type {?} */ outlet = getOutlet(parentOutletMap, route.value);\n        var /** @type {?} */ componentRef = outlet.detach();\n        this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route });\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentOutletMap\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactiveRouteAndOutlet = function (route, parentOutletMap) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(route);\n        var /** @type {?} */ outlet = null;\n        // getOutlet throws when cannot find the right outlet,\n        // which can happen if an outlet was in an NgIf and was removed\n        try {\n            outlet = getOutlet(parentOutletMap, route.value);\n        }\n        catch (e) {\n            return;\n        }\n        var /** @type {?} */ childOutletMap = outlet.outletMap;\n        forEach(prevChildren, function (v, k) {\n            if (route.value.component) {\n                _this.deactiveRouteAndItsChildren(v, childOutletMap);\n            }\n            else {\n                _this.deactiveRouteAndItsChildren(v, parentOutletMap);\n            }\n        });\n        if (outlet && outlet.isActivated) {\n            outlet.deactivate();\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} outletMap\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(outletMap, route) {\n    var /** @type {?} */ outlet = outletMap._outlets[route.outlet];\n    if (!outlet) {\n        var /** @type {?} */ componentName = ((route.component)).name;\n        if (route.outlet === PRIMARY_OUTLET) {\n            throw new Error(\"Cannot find primary outlet to load '\" + componentName + \"'\");\n        }\n        else {\n            throw new Error(\"Cannot find the outlet \" + route.outlet + \" to load '\" + componentName + \"'\");\n        }\n    }\n    return outlet;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' prserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras.queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router.createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setElementAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey) {\n        if (button !== 0 || ctrlKey || metaKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: LocationStrategy, },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: HostBinding, args: ['attr.target',] }, { type: Input },],\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'href': [{ type: HostBinding },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) { return _this.renderer.setElementClass(_this.element.nativeElement, c, hasActiveLinks); });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: ChangeDetectorRef, },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: ContentChildren, args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: Input },],\n    'routerLinkActive': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentOutletMap\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     */\n    function RouterOutlet(parentOutletMap, location, resolver, name) {\n        this.parentOutletMap = parentOutletMap;\n        this.location = location;\n        this.resolver = resolver;\n        this.name = name;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        parentOutletMap.registerOutlet(name ? name : PRIMARY_OUTLET, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentOutletMap.removeOutlet(this.name ? this.name : PRIMARY_OUTLET); };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ r = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return r;\n    };\n    /**\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @deprecated since v4, use {\\@link activateWith}\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @param {?} injector\n     * @param {?} providers\n     * @param {?} outletMap\n     * @return {?}\n     */\n    RouterOutlet.prototype.activate = function (activatedRoute, resolver, injector, providers, outletMap) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this.outletMap = outletMap;\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (snapshot._routeConfig.component);\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ inj = ReflectiveInjector.fromResolvedProviders(providers, injector);\n        this.activated = this.location.createComponent(factory, this.location.length, inj, []);\n        this.activated.changeDetectorRef.detectChanges();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @param {?} outletMap\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver, outletMap) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this.outletMap = outletMap;\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (snapshot._routeConfig.component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, outletMap, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector, []);\n        this.activated.changeDetectorRef.detectChanges();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: RouterOutletMap, },\n    { type: ViewContainerRef, },\n    { type: ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['name',] },] },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: Output, args: ['activate',] },],\n    'deactivateEvents': [{ type: Output, args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} map\n     * @param {?} parent\n     */\n    function OutletInjector(route, map$$1, parent) {\n        this.route = route;\n        this.map = map$$1;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === RouterOutletMap) {\n            return this.map;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return _catch.call(fn(), function () { return of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return mergeAll.call(from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: NgModuleFactoryLoader, },\n    { type: Compiler, },\n    { type: Injector, },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, RouterOutletMap, Location, Injector, NgModuleFactoryLoader,\n            Compiler, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n            [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    RouterOutletMap,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} outletMap\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, outletMap, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, outletMap, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = null;\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                    }\n                    else {\n                        return of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, RouteConfigLoadEnd, RouteConfigLoadStart, RoutesRecognized, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, RouterOutletMap, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten, ROUTER_FORROOT_GUARD as ɵa, RouterInitializer as ɵg, getAppInitializer as ɵh, getBootstrapListener as ɵi, provideForRootGuard as ɵd, provideLocationStrategy as ɵc, provideRouterInitializer as ɵj, rootRoute as ɵf, routerNgProbeToken as ɵb, setupRouter as ɵe, Tree as ɵk, TreeNode as ɵl };\n//# sourceMappingURL=router.es5.js.map\n"
    },
    {
      "id": 24,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
      "name": "./~/nativescript-angular/platform-providers.js",
      "index": 127,
      "index2": 133,
      "size": 1949,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "../platform-providers",
          "loc": "8:27-59"
        },
        {
          "moduleId": 75,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/dialogs.js",
          "module": "./~/nativescript-angular/directives/dialogs.js",
          "moduleName": "./~/nativescript-angular/directives/dialogs.js",
          "type": "cjs require",
          "userRequest": "../platform-providers",
          "loc": "5:27-59"
        },
        {
          "moduleId": 77,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/platform-filters.js",
          "module": "./~/nativescript-angular/directives/platform-filters.js",
          "moduleName": "./~/nativescript-angular/directives/platform-filters.js",
          "type": "cjs require",
          "userRequest": "../platform-providers",
          "loc": "4:27-59"
        },
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./platform-providers",
          "loc": "14:27-58"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "./platform-providers",
          "loc": "6:27-58"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/platform-providers",
          "loc": "18:14-64"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "./platform-providers",
          "loc": "18:27-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar page_1 = require(\"tns-core-modules/ui/page\");\nvar core_1 = require(\"@angular/core\");\nvar platform_1 = require(\"tns-core-modules/platform\");\nvar platform = require(\"tns-core-modules/platform\");\nexports.APP_ROOT_VIEW = new core_1.OpaqueToken(\"App Root View\");\nexports.DEVICE = new core_1.OpaqueToken(\"platfrom device\");\nexports.PAGE_FACTORY = new core_1.OpaqueToken(\"page factory\");\n// Work around a TS bug requiring an import of platform.Device without using it\nif (global.___TS_UNUSED) {\n    (function () {\n        return platform;\n    })();\n}\nvar _rootPageRef;\nfunction setRootPage(page) {\n    _rootPageRef = new WeakRef(page);\n}\nexports.setRootPage = setRootPage;\nfunction getRootPage() {\n    return _rootPageRef && _rootPageRef.get();\n}\nexports.getRootPage = getRootPage;\n// Use an exported function to make the AoT compiler happy.\nfunction getDefaultPage() {\n    var frame = frame_1.topmost();\n    return getRootPage() || (frame && frame.currentPage);\n}\nexports.getDefaultPage = getDefaultPage;\nexports.defaultPageProvider = { provide: page_1.Page, useFactory: getDefaultPage };\n// Use an exported function to make the AoT compiler happy.\nfunction getDefaultFrame() {\n    return frame_1.topmost();\n}\nexports.getDefaultFrame = getDefaultFrame;\nexports.defaultFrameProvider = { provide: frame_1.Frame, useFactory: getDefaultFrame };\n// Use an exported function to make the AoT compiler happy.\nfunction getDefaultDevice() {\n    return platform_1.device;\n}\nexports.getDefaultDevice = getDefaultDevice;\nexports.defaultDeviceProvider = { provide: exports.DEVICE, useFactory: getDefaultDevice };\nexports.defaultPageFactory = function (_opts) {\n    return new page_1.Page();\n};\nexports.defaultPageFactoryProvider = { provide: exports.PAGE_FACTORY, useValue: exports.defaultPageFactory };\n//# sourceMappingURL=platform-providers.js.map"
    },
    {
      "id": 25,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/root.js",
      "name": "./~/rxjs/util/root.js",
      "index": 93,
      "index2": 88,
      "size": 470,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
      "issuerId": 5,
      "issuerName": "./~/rxjs/Observable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
          "module": "./~/rxjs/Observable.js",
          "moduleName": "./~/rxjs/Observable.js",
          "type": "cjs require",
          "userRequest": "./util/root",
          "loc": "2:13-35"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./root",
          "loc": "2:13-30"
        },
        {
          "moduleId": 56,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/symbol/iterator.js",
          "module": "./~/rxjs/symbol/iterator.js",
          "moduleName": "./~/rxjs/symbol/iterator.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "2:13-36"
        },
        {
          "moduleId": 57,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/symbol/observable.js",
          "module": "./~/rxjs/symbol/observable.js",
          "moduleName": "./~/rxjs/symbol/observable.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "2:13-36"
        },
        {
          "moduleId": 58,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/symbol/rxSubscriber.js",
          "module": "./~/rxjs/symbol/rxSubscriber.js",
          "moduleName": "./~/rxjs/symbol/rxSubscriber.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "2:13-36"
        },
        {
          "moduleId": 100,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/PromiseObservable.js",
          "module": "./~/rxjs/observable/PromiseObservable.js",
          "moduleName": "./~/rxjs/observable/PromiseObservable.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "7:13-36"
        },
        {
          "moduleId": 210,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/IteratorObservable.js",
          "module": "./~/rxjs/observable/IteratorObservable.js",
          "moduleName": "./~/rxjs/observable/IteratorObservable.js",
          "type": "cjs require",
          "userRequest": "../util/root",
          "loc": "7:13-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\n/**\n * window: browser in DOM main thread\n * self: browser in WebWorker\n * global: Node.js/other\n */\nexports.root = (typeof window == 'object' && window.window === window && window\n    || typeof self == 'object' && self.self === self && self\n    || typeof global == 'object' && global.global === global && global);\nif (!exports.root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n}\n//# sourceMappingURL=root.js.map"
    },
    {
      "id": 26,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/content-view/content-view.js",
      "name": "./~/tns-core-modules/ui/content-view/content-view.js",
      "index": 130,
      "index2": 124,
      "size": 3552,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
      "issuerId": 90,
      "issuerName": "./~/nativescript-angular/view-util.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/content-view",
          "loc": "53:52-95"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/content-view",
          "loc": "4:21-64"
        },
        {
          "moduleId": 150,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
          "module": "./~/tns-core-modules/ui/page/page-common.js",
          "moduleName": "./~/tns-core-modules/ui/page/page-common.js",
          "type": "cjs require",
          "userRequest": "../content-view",
          "loc": "5:21-47"
        },
        {
          "moduleId": 150,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
          "module": "./~/tns-core-modules/ui/page/page-common.js",
          "moduleName": "./~/tns-core-modules/ui/page/page-common.js",
          "type": "cjs require",
          "userRequest": "../content-view",
          "loc": "10:9-35"
        },
        {
          "moduleId": 152,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view-common.js",
          "module": "./~/tns-core-modules/ui/scroll-view/scroll-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/scroll-view/scroll-view-common.js",
          "type": "cjs require",
          "userRequest": "../content-view",
          "loc": "5:21-47"
        },
        {
          "moduleId": 152,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view-common.js",
          "module": "./~/tns-core-modules/ui/scroll-view/scroll-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/scroll-view/scroll-view-common.js",
          "type": "cjs require",
          "userRequest": "../content-view",
          "loc": "6:9-35"
        },
        {
          "moduleId": 247,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/border/border.js",
          "module": "./~/tns-core-modules/ui/border/border.js",
          "moduleName": "./~/tns-core-modules/ui/border/border.js",
          "type": "cjs require",
          "userRequest": "../content-view",
          "loc": "2:21-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar ContentView = (function (_super) {\n    __extends(ContentView, _super);\n    function ContentView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentView.prototype, \"content\", {\n        get: function () {\n            return this._content;\n        },\n        set: function (value) {\n            var oldView = this._content;\n            if (this._content) {\n                this._removeView(this._content);\n            }\n            this._content = value;\n            if (this._content) {\n                this._addView(this._content);\n            }\n            this._onContentChanged(oldView, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentView.prototype, \"layoutView\", {\n        get: function () {\n            var result;\n            if (this._content) {\n                var first_1 = true;\n                this._content._eachLayoutView(function (child) {\n                    if (first_1) {\n                        first_1 = false;\n                        result = child;\n                    }\n                    else {\n                        throw new Error(\"More than one layout child inside a ContentView\");\n                    }\n                });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentView.prototype, \"_childrenCount\", {\n        get: function () {\n            if (this._content) {\n                return 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContentView.prototype._onContentChanged = function (oldView, newView) {\n    };\n    ContentView.prototype._addChildFromBuilder = function (name, value) {\n        if (value instanceof view_1.View) {\n            this.content = value;\n        }\n    };\n    ContentView.prototype.eachChildView = function (callback) {\n        var content = this._content;\n        if (content) {\n            callback(content);\n        }\n    };\n    ContentView.prototype.onMeasure = function (widthMeasureSpec, heightMeasureSpec) {\n        var result = view_1.View.measureChild(this, this.layoutView, widthMeasureSpec, heightMeasureSpec);\n        var width = view_1.layout.getMeasureSpecSize(widthMeasureSpec);\n        var widthMode = view_1.layout.getMeasureSpecMode(widthMeasureSpec);\n        var height = view_1.layout.getMeasureSpecSize(heightMeasureSpec);\n        var heightMode = view_1.layout.getMeasureSpecMode(heightMeasureSpec);\n        var measureWidth = Math.max(result.measuredWidth, this.effectiveMinWidth);\n        var measureHeight = Math.max(result.measuredHeight, this.effectiveMinHeight);\n        var widthAndState = view_1.View.resolveSizeAndState(measureWidth, width, widthMode, 0);\n        var heightAndState = view_1.View.resolveSizeAndState(measureHeight, height, heightMode, 0);\n        this.setMeasuredDimension(widthAndState, heightAndState);\n    };\n    ContentView.prototype.onLayout = function (left, top, right, bottom) {\n        view_1.View.layoutChild(this, this.layoutView, 0, 0, right - left, bottom - top);\n    };\n    return ContentView;\n}(view_1.CustomLayoutView));\nexports.ContentView = ContentView;\n//# sourceMappingURL=content-view.js.map"
    },
    {
      "id": 27,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/properties/properties.js",
      "name": "./~/tns-core-modules/ui/core/properties/properties.js",
      "index": 28,
      "index2": 16,
      "size": 38454,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
      "issuerId": 21,
      "issuerName": "./~/tns-core-modules/ui/styling/style-properties.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "../core/properties",
          "loc": "9:19-48"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../properties",
          "loc": "2:19-43"
        },
        {
          "moduleId": 122,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/keyframe-animation.js",
          "module": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
          "moduleName": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
          "type": "cjs require",
          "userRequest": "../core/properties",
          "loc": "2:19-48"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../properties",
          "loc": "5:19-43"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../properties",
          "loc": "17:9-33"
        },
        {
          "moduleId": 158,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font-common.js",
          "module": "./~/tns-core-modules/ui/styling/font-common.js",
          "moduleName": "./~/tns-core-modules/ui/styling/font-common.js",
          "type": "cjs require",
          "userRequest": "../core/properties",
          "loc": "2:19-48"
        },
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "../core/properties",
          "loc": "2:19-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_1 = require(\"../../../data/observable\");\nvar style_1 = require(\"../../styling/style\");\nexports.Style = style_1.Style;\nexports.unsetValue = new Object();\nvar symbolPropertyMap = {};\nvar cssSymbolPropertyMap = {};\nvar inheritableProperties = new Array();\nvar inheritableCssProperties = new Array();\nfunction print(map) {\n    var symbols = Object.getOwnPropertySymbols(map);\n    for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n        var symbol = symbols_1[_i];\n        var prop = map[symbol];\n        if (!prop.registered) {\n            console.log(\"Property \" + prop.name + \" not Registered!!!!!\");\n        }\n    }\n}\nfunction _printUnregisteredProperties() {\n    print(symbolPropertyMap);\n    print(cssSymbolPropertyMap);\n}\nexports._printUnregisteredProperties = _printUnregisteredProperties;\nvar Property = (function () {\n    function Property(options) {\n        this.enumerable = true;\n        this.configurable = true;\n        var name = options.name;\n        this.name = name;\n        var key = Symbol(name + \":propertyKey\");\n        this.key = key;\n        var getDefault = Symbol(name + \":getDefault\");\n        this.getDefault = getDefault;\n        var setNative = Symbol(name + \":setNative\");\n        this.setNative = setNative;\n        var defaultValueKey = Symbol(name + \":nativeDefaultValue\");\n        this.defaultValueKey = defaultValueKey;\n        var defaultValue = options.defaultValue;\n        this.defaultValue = defaultValue;\n        var eventName = name + \"Change\";\n        var equalityComparer = options.equalityComparer;\n        var affectsLayout = options.affectsLayout;\n        var valueChanged = options.valueChanged;\n        var valueConverter = options.valueConverter;\n        this.set = function (value) {\n            var reset = value === exports.unsetValue;\n            var unboxedValue;\n            var wrapped;\n            if (reset) {\n                unboxedValue = defaultValue;\n            }\n            else {\n                wrapped = value && value.wrapped;\n                unboxedValue = wrapped ? observable_1.WrappedValue.unwrap(value) : value;\n                if (valueConverter && typeof unboxedValue === \"string\") {\n                    unboxedValue = valueConverter(unboxedValue);\n                }\n            }\n            var currentValue = key in this ? this[key] : defaultValue;\n            var changed = equalityComparer ? !equalityComparer(currentValue, unboxedValue) : currentValue !== unboxedValue;\n            if (wrapped || changed) {\n                var setNativeValue = this.nativeView && this[setNative];\n                if (reset) {\n                    delete this[key];\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, unboxedValue);\n                    }\n                    if (setNativeValue) {\n                        if (defaultValueKey in this) {\n                            this[setNative](this[defaultValueKey]);\n                            delete this[defaultValueKey];\n                        }\n                        else {\n                            this[setNative](defaultValue);\n                        }\n                    }\n                }\n                else {\n                    this[key] = unboxedValue;\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, unboxedValue);\n                    }\n                    if (setNativeValue) {\n                        if (!(defaultValueKey in this)) {\n                            this[defaultValueKey] = this[getDefault] ? this[getDefault]() : defaultValue;\n                        }\n                        this[setNative](unboxedValue);\n                    }\n                }\n                if (this.hasListeners(eventName)) {\n                    this.notify({\n                        eventName: eventName,\n                        propertyName: name,\n                        object: this,\n                        value: unboxedValue\n                    });\n                }\n                if (affectsLayout) {\n                    this.requestLayout();\n                }\n            }\n        };\n        this.get = function () {\n            return key in this ? this[key] : defaultValue;\n        };\n        this.nativeValueChange = function (owner, value) {\n            var currentValue = key in owner ? owner[key] : defaultValue;\n            var changed = equalityComparer ? !equalityComparer(currentValue, value) : currentValue !== value;\n            if (changed) {\n                owner[key] = value;\n                if (valueChanged) {\n                    valueChanged(owner, currentValue, value);\n                }\n                if (owner.nativeView && !(defaultValueKey in owner)) {\n                    owner[defaultValueKey] = owner[getDefault] ? owner[getDefault]() : defaultValue;\n                }\n                if (owner.hasListeners(eventName)) {\n                    owner.notify({\n                        eventName: eventName,\n                        propertyName: name,\n                        object: owner,\n                        value: value\n                    });\n                }\n                if (affectsLayout) {\n                    owner.requestLayout();\n                }\n            }\n        };\n        symbolPropertyMap[key] = this;\n    }\n    Property.prototype.register = function (cls) {\n        if (this.registered) {\n            throw new Error(\"Property \" + this.name + \" already registered.\");\n        }\n        this.registered = true;\n        Object.defineProperty(cls.prototype, this.name, this);\n    };\n    Property.prototype.isSet = function (instance) {\n        return this.key in instance;\n    };\n    return Property;\n}());\nexports.Property = Property;\nvar CoercibleProperty = (function (_super) {\n    __extends(CoercibleProperty, _super);\n    function CoercibleProperty(options) {\n        var _this = _super.call(this, options) || this;\n        var name = options.name;\n        var key = _this.key;\n        var getDefault = _this.getDefault;\n        var setNative = _this.setNative;\n        var defaultValueKey = _this.defaultValueKey;\n        var defaultValue = _this.defaultValue;\n        var coerceKey = Symbol(name + \":coerceKey\");\n        var eventName = name + \"Change\";\n        var affectsLayout = options.affectsLayout;\n        var equalityComparer = options.equalityComparer;\n        var valueChanged = options.valueChanged;\n        var valueConverter = options.valueConverter;\n        var coerceCallback = options.coerceValue;\n        _this.coerce = function (target) {\n            var originalValue = coerceKey in target ? target[coerceKey] : defaultValue;\n            target[name] = originalValue;\n        };\n        _this.set = function (value) {\n            var reset = value === exports.unsetValue;\n            var unboxedValue;\n            var wrapped;\n            if (reset) {\n                unboxedValue = defaultValue;\n                delete this[coerceKey];\n            }\n            else {\n                wrapped = value && value.wrapped;\n                unboxedValue = wrapped ? observable_1.WrappedValue.unwrap(value) : value;\n                if (valueConverter && typeof unboxedValue === \"string\") {\n                    unboxedValue = valueConverter(unboxedValue);\n                }\n                this[coerceKey] = unboxedValue;\n                unboxedValue = coerceCallback(this, unboxedValue);\n            }\n            var currentValue = key in this ? this[key] : defaultValue;\n            var changed = equalityComparer ? !equalityComparer(currentValue, unboxedValue) : currentValue !== unboxedValue;\n            if (wrapped || changed) {\n                var setNativeValue = this.nativeView && this[setNative];\n                if (reset) {\n                    delete this[key];\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, unboxedValue);\n                    }\n                    if (setNativeValue) {\n                        if (defaultValueKey in this) {\n                            this[setNative](this[defaultValueKey]);\n                            delete this[defaultValueKey];\n                        }\n                        else {\n                            this[setNative](defaultValue);\n                        }\n                    }\n                }\n                else {\n                    this[key] = unboxedValue;\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, unboxedValue);\n                    }\n                    if (setNativeValue) {\n                        if (!(defaultValueKey in this)) {\n                            this[defaultValueKey] = this[getDefault] ? this[getDefault]() : defaultValue;\n                        }\n                        this[setNative](unboxedValue);\n                    }\n                }\n                if (this.hasListeners(eventName)) {\n                    this.notify({\n                        eventName: eventName,\n                        propertyName: name,\n                        object: this,\n                        value: unboxedValue\n                    });\n                }\n                if (affectsLayout) {\n                    this.requestLayout();\n                }\n            }\n        };\n        return _this;\n    }\n    return CoercibleProperty;\n}(Property));\nexports.CoercibleProperty = CoercibleProperty;\nvar InheritedProperty = (function (_super) {\n    __extends(InheritedProperty, _super);\n    function InheritedProperty(options) {\n        var _this = _super.call(this, options) || this;\n        var name = options.name;\n        var key = _this.key;\n        var defaultValue = options.defaultValue;\n        var sourceKey = Symbol(name + \":valueSourceKey\");\n        _this.sourceKey = sourceKey;\n        var setBase = _this.set;\n        var setFunc = function (valueSource) { return function (value) {\n            var that = this;\n            var unboxedValue;\n            var newValueSource;\n            if (value === exports.unsetValue) {\n                var parent_1 = that.parent;\n                if (parent_1 && parent_1[sourceKey] !== 0) {\n                    unboxedValue = parent_1[name];\n                    newValueSource = 1;\n                }\n                else {\n                    unboxedValue = defaultValue;\n                    newValueSource = 0;\n                }\n            }\n            else {\n                unboxedValue = value;\n                newValueSource = valueSource;\n            }\n            var currentValue = that[key];\n            setBase.call(that, unboxedValue);\n            var newValue = that[key];\n            that[sourceKey] = newValueSource;\n            if (currentValue !== newValue) {\n                var reset_1 = newValueSource === 0;\n                that.eachChild(function (child) {\n                    var childValueSource = child[sourceKey] || 0;\n                    if (reset_1) {\n                        if (childValueSource === 1) {\n                            setFunc.call(child, exports.unsetValue);\n                        }\n                    }\n                    else {\n                        if (childValueSource <= 1) {\n                            setInheritedValue.call(child, newValue);\n                        }\n                    }\n                    return true;\n                });\n            }\n        }; };\n        var setInheritedValue = setFunc(1);\n        _this.setInheritedValue = setInheritedValue;\n        _this.set = setFunc(3);\n        inheritableProperties.push(_this);\n        return _this;\n    }\n    return InheritedProperty;\n}(Property));\nexports.InheritedProperty = InheritedProperty;\nvar CssProperty = (function () {\n    function CssProperty(options) {\n        var name = options.name;\n        this.name = name;\n        this.cssName = \"css:\" + options.cssName;\n        this.cssLocalName = options.cssName;\n        var key = Symbol(name + \":propertyKey\");\n        this.key = key;\n        var sourceKey = Symbol(name + \":valueSourceKey\");\n        this.sourceKey = sourceKey;\n        var getDefault = Symbol(name + \":getDefault\");\n        this.getDefault = getDefault;\n        var setNative = Symbol(name + \":setNative\");\n        this.setNative = setNative;\n        var defaultValueKey = Symbol(name + \":nativeDefaultValue\");\n        this.defaultValueKey = defaultValueKey;\n        var defaultValue = options.defaultValue;\n        this.defaultValue = defaultValue;\n        var eventName = name + \"Change\";\n        var affectsLayout = options.affectsLayout;\n        var equalityComparer = options.equalityComparer;\n        var valueChanged = options.valueChanged;\n        var valueConverter = options.valueConverter;\n        function setLocalValue(value) {\n            var reset = value === exports.unsetValue;\n            if (reset) {\n                value = defaultValue;\n                delete this[sourceKey];\n            }\n            else {\n                this[sourceKey] = 3;\n                if (valueConverter && typeof value === \"string\") {\n                    value = valueConverter(value);\n                }\n            }\n            var currentValue = key in this ? this[key] : defaultValue;\n            var changed = equalityComparer ? !equalityComparer(currentValue, value) : currentValue !== value;\n            if (changed) {\n                var view = this.view;\n                var setNativeValue = view.nativeView && view[setNative];\n                if (reset) {\n                    delete this[key];\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, value);\n                    }\n                    if (setNativeValue) {\n                        if (defaultValueKey in this) {\n                            view[setNative](this[defaultValueKey]);\n                            delete this[defaultValueKey];\n                        }\n                        else {\n                            view[setNative](defaultValue);\n                        }\n                    }\n                }\n                else {\n                    this[key] = value;\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, value);\n                    }\n                    if (setNativeValue) {\n                        if (!(defaultValueKey in this)) {\n                            this[defaultValueKey] = view[getDefault] ? view[getDefault]() : defaultValue;\n                        }\n                        view[setNative](value);\n                    }\n                }\n                if (this.hasListeners(eventName)) {\n                    this.notify({\n                        eventName: eventName,\n                        propertyName: name,\n                        object: this,\n                        value: value\n                    });\n                }\n                if (affectsLayout) {\n                    view.requestLayout();\n                }\n            }\n        }\n        function setCssValue(value) {\n            var reset = value === exports.unsetValue;\n            var currentValueSource = this[sourceKey] || 0;\n            if (currentValueSource === 3) {\n                return;\n            }\n            if (reset) {\n                value = defaultValue;\n                delete this[sourceKey];\n            }\n            else {\n                if (valueConverter && typeof value === \"string\") {\n                    value = valueConverter(value);\n                }\n                this[sourceKey] = 2;\n            }\n            var currentValue = key in this ? this[key] : defaultValue;\n            var changed = equalityComparer ? !equalityComparer(currentValue, value) : currentValue !== value;\n            if (changed) {\n                var view = this.view;\n                var setNativeValue = view.nativeView && view[setNative];\n                if (reset) {\n                    delete this[key];\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, value);\n                    }\n                    if (setNativeValue) {\n                        if (defaultValueKey in this) {\n                            view[setNative](this[defaultValueKey]);\n                            delete this[defaultValueKey];\n                        }\n                        else {\n                            view[setNative](defaultValue);\n                        }\n                    }\n                }\n                else {\n                    this[key] = value;\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, value);\n                    }\n                    if (setNativeValue) {\n                        if (!(defaultValueKey in this)) {\n                            this[defaultValueKey] = view[getDefault] ? view[getDefault]() : defaultValue;\n                        }\n                        view[setNative](value);\n                    }\n                }\n                if (this.hasListeners(eventName)) {\n                    this.notify({\n                        eventName: eventName,\n                        propertyName: name,\n                        object: this,\n                        value: value\n                    });\n                }\n                if (affectsLayout) {\n                    view.requestLayout();\n                }\n            }\n        }\n        function get() {\n            return key in this ? this[key] : defaultValue;\n        }\n        this.cssValueDescriptor = {\n            enumerable: true,\n            configurable: true,\n            get: get,\n            set: setCssValue\n        };\n        this.localValueDescriptor = {\n            enumerable: true,\n            configurable: true,\n            get: get,\n            set: setLocalValue\n        };\n        cssSymbolPropertyMap[key] = this;\n    }\n    CssProperty.prototype.register = function (cls) {\n        if (this.registered) {\n            throw new Error(\"Property \" + this.name + \" already registered.\");\n        }\n        this.registered = true;\n        Object.defineProperty(cls.prototype, this.name, this.localValueDescriptor);\n        Object.defineProperty(cls.prototype, this.cssName, this.cssValueDescriptor);\n        if (this.cssLocalName !== this.cssName) {\n            Object.defineProperty(cls.prototype, this.cssLocalName, this.localValueDescriptor);\n        }\n    };\n    CssProperty.prototype.isSet = function (instance) {\n        return this.key in instance;\n    };\n    return CssProperty;\n}());\nexports.CssProperty = CssProperty;\nvar CssAnimationProperty = (function () {\n    function CssAnimationProperty(options) {\n        this.options = options;\n        var valueConverter = options.valueConverter, equalityComparer = options.equalityComparer, valueChanged = options.valueChanged, defaultValue = options.defaultValue;\n        var propertyName = options.name;\n        this.name = propertyName;\n        CssAnimationProperty.properties[propertyName] = this;\n        if (options.cssName && options.cssName !== propertyName) {\n            CssAnimationProperty.properties[options.cssName] = this;\n        }\n        this._valueConverter = options.valueConverter;\n        var cssName = \"css:\" + (options.cssName || propertyName);\n        this.cssName = cssName;\n        var keyframeName = \"keyframe:\" + propertyName;\n        this.keyframe = keyframeName;\n        var defaultName = \"default:\" + propertyName;\n        var defaultValueKey = Symbol(defaultName);\n        this.defaultValueKey = defaultValueKey;\n        this.defaultValue = defaultValue;\n        var cssValue = Symbol(cssName);\n        var styleValue = Symbol(propertyName);\n        var keyframeValue = Symbol(keyframeName);\n        var computedValue = Symbol(\"computed-value:\" + propertyName);\n        this.computedValueKey = computedValue;\n        var computedSource = Symbol(\"computed-source:\" + propertyName);\n        this.getDefault = Symbol(propertyName + \":getDefault\");\n        var setNative = this.setNative = Symbol(propertyName + \":setNative\");\n        var eventName = propertyName + \"Change\";\n        function descriptor(symbol, propertySource, enumerable, configurable, getsComputed) {\n            return {\n                enumerable: enumerable, configurable: configurable,\n                get: getsComputed ? function () { return this[computedValue]; } : function () { return this[symbol]; },\n                set: function (value) {\n                    var prev = this[computedValue];\n                    if (value === exports.unsetValue) {\n                        this[symbol] = exports.unsetValue;\n                        if (this[computedSource] === propertySource) {\n                            if (this[styleValue] !== exports.unsetValue) {\n                                this[computedSource] = 3;\n                                this[computedValue] = this[styleValue];\n                            }\n                            else if (this[cssValue] !== exports.unsetValue) {\n                                this[computedSource] = 2;\n                                this[computedValue] = this[cssValue];\n                            }\n                            else {\n                                this[computedSource] = 0;\n                                this[computedValue] = defaultValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (valueConverter && typeof value === \"string\") {\n                            value = valueConverter(value);\n                        }\n                        this[symbol] = value;\n                        if (this[computedSource] <= propertySource) {\n                            this[computedSource] = propertySource;\n                            this[computedValue] = value;\n                        }\n                    }\n                    var next = this[computedValue];\n                    if (prev !== next && (!equalityComparer || !equalityComparer(prev, next))) {\n                        if (valueChanged) {\n                            valueChanged(this, prev, next);\n                        }\n                        if (this.view.nativeView && this.view[setNative]) {\n                            this.view[setNative](next);\n                        }\n                        if (this.hasListeners(eventName)) {\n                            this.notify({ eventName: eventName, object: this, propertyName: propertyName, value: value });\n                        }\n                    }\n                }\n            };\n        }\n        var defaultPropertyDescriptor = descriptor(defaultValueKey, 0, false, false, false);\n        var cssPropertyDescriptor = descriptor(cssValue, 2, false, false, false);\n        var stylePropertyDescriptor = descriptor(styleValue, 3, true, true, true);\n        var keyframePropertyDescriptor = descriptor(keyframeValue, 4, false, false, false);\n        symbolPropertyMap[computedValue] = this;\n        cssSymbolPropertyMap[computedValue] = this;\n        this.register = function (cls) {\n            cls.prototype[defaultValueKey] = options.defaultValue;\n            cls.prototype[computedValue] = options.defaultValue;\n            cls.prototype[computedSource] = 0;\n            cls.prototype[cssValue] = exports.unsetValue;\n            cls.prototype[styleValue] = exports.unsetValue;\n            cls.prototype[keyframeValue] = exports.unsetValue;\n            Object.defineProperty(cls.prototype, defaultName, defaultPropertyDescriptor);\n            Object.defineProperty(cls.prototype, cssName, cssPropertyDescriptor);\n            Object.defineProperty(cls.prototype, propertyName, stylePropertyDescriptor);\n            if (options.cssName && options.cssName !== options.name) {\n                Object.defineProperty(cls.prototype, options.cssName, stylePropertyDescriptor);\n            }\n            Object.defineProperty(cls.prototype, keyframeName, keyframePropertyDescriptor);\n        };\n    }\n    CssAnimationProperty._getByCssName = function (name) {\n        return this.properties[name];\n    };\n    CssAnimationProperty.prototype.isSet = function (instance) {\n        return instance[this.computedValueKey] !== exports.unsetValue;\n    };\n    return CssAnimationProperty;\n}());\nCssAnimationProperty.properties = {};\nexports.CssAnimationProperty = CssAnimationProperty;\nvar InheritedCssProperty = (function (_super) {\n    __extends(InheritedCssProperty, _super);\n    function InheritedCssProperty(options) {\n        var _this = _super.call(this, options) || this;\n        var name = options.name;\n        var key = _this.key;\n        var sourceKey = _this.sourceKey;\n        var getDefault = _this.getDefault;\n        var setNative = _this.setNative;\n        var defaultValueKey = _this.defaultValueKey;\n        var eventName = name + \"Change\";\n        var defaultValue = options.defaultValue;\n        var affectsLayout = options.affectsLayout;\n        var equalityComparer = options.equalityComparer;\n        var valueChanged = options.valueChanged;\n        var valueConverter = options.valueConverter;\n        var setFunc = function (valueSource) { return function (value) {\n            var reset = value === exports.unsetValue;\n            var currentValueSource = this[sourceKey] || 0;\n            if (reset) {\n                if (valueSource === 2 && currentValueSource === 3) {\n                    return;\n                }\n            }\n            else {\n                if (currentValueSource > valueSource) {\n                    return;\n                }\n            }\n            var view = this.view;\n            var newValue;\n            if (reset) {\n                var parent_2 = view.parent;\n                var style = parent_2 ? parent_2.style : null;\n                if (style && style[sourceKey] > 0) {\n                    newValue = style[name];\n                    this[sourceKey] = 1;\n                }\n                else {\n                    newValue = defaultValue;\n                    delete this[sourceKey];\n                }\n            }\n            else {\n                this[sourceKey] = valueSource;\n                if (valueConverter && typeof value === \"string\") {\n                    newValue = valueConverter(value);\n                }\n                else {\n                    newValue = value;\n                }\n            }\n            var currentValue = key in this ? this[key] : defaultValue;\n            var changed = equalityComparer ? !equalityComparer(currentValue, newValue) : currentValue !== newValue;\n            if (changed) {\n                var view_1 = this.view;\n                var setNativeValue = view_1.nativeView && view_1[setNative];\n                if (reset) {\n                    delete this[key];\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, newValue);\n                    }\n                    if (setNativeValue) {\n                        if (defaultValueKey in this) {\n                            view_1[setNative](this[defaultValueKey]);\n                            delete this[defaultValueKey];\n                        }\n                        else {\n                            view_1[setNative](defaultValue);\n                        }\n                    }\n                }\n                else {\n                    this[key] = newValue;\n                    if (valueChanged) {\n                        valueChanged(this, currentValue, newValue);\n                    }\n                    if (setNativeValue) {\n                        if (!(defaultValueKey in this)) {\n                            this[defaultValueKey] = view_1[getDefault] ? view_1[getDefault]() : defaultValue;\n                        }\n                        view_1[setNative](newValue);\n                    }\n                }\n                if (this.hasListeners(eventName)) {\n                    this.notify({\n                        eventName: eventName,\n                        propertyName: name,\n                        object: this,\n                        value: newValue\n                    });\n                }\n                if (affectsLayout) {\n                    view_1.requestLayout();\n                }\n                view_1.eachChild(function (child) {\n                    var childStyle = child.style;\n                    var childValueSource = childStyle[sourceKey] || 0;\n                    if (reset) {\n                        if (childValueSource === 1) {\n                            setDefaultFunc.call(childStyle, exports.unsetValue);\n                        }\n                    }\n                    else {\n                        if (childValueSource <= 1) {\n                            setInheritedFunc.call(childStyle, newValue);\n                        }\n                    }\n                    return true;\n                });\n            }\n        }; };\n        var setDefaultFunc = setFunc(0);\n        var setInheritedFunc = setFunc(1);\n        _this.setInheritedValue = setInheritedFunc;\n        _this.cssValueDescriptor.set = setFunc(2);\n        _this.localValueDescriptor.set = setFunc(3);\n        inheritableCssProperties.push(_this);\n        return _this;\n    }\n    return InheritedCssProperty;\n}(CssProperty));\nexports.InheritedCssProperty = InheritedCssProperty;\nvar ShorthandProperty = (function () {\n    function ShorthandProperty(options) {\n        this.name = options.name;\n        var key = Symbol(this.name + \":propertyKey\");\n        this.key = key;\n        this.cssName = \"css:\" + options.cssName;\n        this.cssLocalName = \"\" + options.cssName;\n        var converter = options.converter;\n        function setLocalValue(value) {\n            if (this[key] !== value) {\n                this[key] = value;\n                for (var _i = 0, _a = converter(value); _i < _a.length; _i++) {\n                    var _b = _a[_i], p = _b[0], v = _b[1];\n                    this[p.name] = v;\n                }\n            }\n        }\n        function setCssValue(value) {\n            if (this[key] !== value) {\n                this[key] = value;\n                for (var _i = 0, _a = converter(value); _i < _a.length; _i++) {\n                    var _b = _a[_i], p = _b[0], v = _b[1];\n                    this[p.cssName] = v;\n                }\n            }\n        }\n        this.cssValueDescriptor = {\n            enumerable: true,\n            configurable: true,\n            get: options.getter,\n            set: setCssValue\n        };\n        this.localValueDescriptor = {\n            enumerable: true,\n            configurable: true,\n            get: options.getter,\n            set: setLocalValue\n        };\n        cssSymbolPropertyMap[key] = this;\n    }\n    ShorthandProperty.prototype.register = function (cls) {\n        if (this.registered) {\n            throw new Error(\"Property \" + this.name + \" already registered.\");\n        }\n        this.registered = true;\n        Object.defineProperty(cls.prototype, this.name, this.localValueDescriptor);\n        Object.defineProperty(cls.prototype, this.cssName, this.cssValueDescriptor);\n        if (this.cssLocalName !== this.cssName) {\n            Object.defineProperty(cls.prototype, this.cssLocalName, this.localValueDescriptor);\n        }\n    };\n    return ShorthandProperty;\n}());\nexports.ShorthandProperty = ShorthandProperty;\nfunction inheritablePropertyValuesOn(view) {\n    var array = new Array();\n    for (var _i = 0, inheritableProperties_1 = inheritableProperties; _i < inheritableProperties_1.length; _i++) {\n        var prop = inheritableProperties_1[_i];\n        var sourceKey = prop.sourceKey;\n        var valueSource = view[sourceKey] || 0;\n        if (valueSource !== 0) {\n            array.push({ property: prop, value: view[prop.name] });\n        }\n    }\n    return array;\n}\nfunction inheritableCssPropertyValuesOn(style) {\n    var array = new Array();\n    for (var _i = 0, inheritableCssProperties_1 = inheritableCssProperties; _i < inheritableCssProperties_1.length; _i++) {\n        var prop = inheritableCssProperties_1[_i];\n        var sourceKey = prop.sourceKey;\n        var valueSource = style[sourceKey] || 0;\n        if (valueSource !== 0) {\n            array.push({ property: prop, value: style[prop.name] });\n        }\n    }\n    return array;\n}\nfunction initNativeView(view) {\n    var symbols = Object.getOwnPropertySymbols(view);\n    for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n        var symbol = symbols_2[_i];\n        var property = symbolPropertyMap[symbol];\n        if (!property) {\n            continue;\n        }\n        var setNative = property.setNative;\n        var getDefault = property.getDefault;\n        if (setNative in view) {\n            var defaultValueKey = property.defaultValueKey;\n            if (!(defaultValueKey in view)) {\n                view[defaultValueKey] = view[getDefault] ? view[getDefault]() : property.defaultValue;\n            }\n            var value = view[symbol];\n            view[setNative](value);\n        }\n    }\n    var style = view.style;\n    symbols = Object.getOwnPropertySymbols(style);\n    for (var _a = 0, symbols_3 = symbols; _a < symbols_3.length; _a++) {\n        var symbol = symbols_3[_a];\n        var property = cssSymbolPropertyMap[symbol];\n        if (!property) {\n            continue;\n        }\n        if (view[property.setNative]) {\n            if (view[property.getDefault]) {\n                var defaultValueKey = property.defaultValueKey;\n                if (!(defaultValueKey in style)) {\n                    style[defaultValueKey] = view[property.getDefault] ? view[property.getDefault]() : property.defaultValue;\n                }\n            }\n            var value = style[symbol];\n            view[property.setNative](value);\n        }\n    }\n}\nexports.initNativeView = initNativeView;\nfunction resetNativeView(view) {\n    var symbols = Object.getOwnPropertySymbols(view);\n    for (var _i = 0, symbols_4 = symbols; _i < symbols_4.length; _i++) {\n        var symbol = symbols_4[_i];\n        var property = symbolPropertyMap[symbol];\n        if (!property) {\n            continue;\n        }\n        if (view[property.setNative]) {\n            if (property.defaultValueKey in view) {\n                view[property.setNative](view[property.defaultValueKey]);\n                delete view[property.defaultValueKey];\n            }\n            else {\n                view[property.setNative](property.defaultValue);\n            }\n        }\n    }\n    var style = view.style;\n    symbols = Object.getOwnPropertySymbols(style);\n    for (var _a = 0, symbols_5 = symbols; _a < symbols_5.length; _a++) {\n        var symbol = symbols_5[_a];\n        var property = cssSymbolPropertyMap[symbol];\n        if (!property) {\n            continue;\n        }\n        if (view[property.setNative]) {\n            if (property.defaultValueKey in style) {\n                view[property.setNative](style[property.defaultValueKey]);\n                delete style[property.defaultValueKey];\n            }\n            else {\n                view[property.setNative](property.defaultValue);\n            }\n        }\n    }\n}\nexports.resetNativeView = resetNativeView;\nfunction clearInheritedProperties(view) {\n    for (var _i = 0, inheritableProperties_2 = inheritableProperties; _i < inheritableProperties_2.length; _i++) {\n        var prop = inheritableProperties_2[_i];\n        var sourceKey = prop.sourceKey;\n        if (view[sourceKey] === 1) {\n            prop.set.call(view, exports.unsetValue);\n        }\n    }\n    var style = view.style;\n    for (var _a = 0, inheritableCssProperties_2 = inheritableCssProperties; _a < inheritableCssProperties_2.length; _a++) {\n        var prop = inheritableCssProperties_2[_a];\n        var sourceKey = prop.sourceKey;\n        if (style[sourceKey] === 1) {\n            prop.setInheritedValue.call(style, exports.unsetValue);\n        }\n    }\n}\nexports.clearInheritedProperties = clearInheritedProperties;\nfunction resetCSSProperties(style) {\n    var symbols = Object.getOwnPropertySymbols(style);\n    for (var _i = 0, symbols_6 = symbols; _i < symbols_6.length; _i++) {\n        var symbol = symbols_6[_i];\n        var cssProperty = void 0;\n        if (cssProperty = cssSymbolPropertyMap[symbol]) {\n            style[cssProperty.cssName] = exports.unsetValue;\n            if (cssProperty instanceof CssAnimationProperty) {\n                style[cssProperty.keyframe] = exports.unsetValue;\n            }\n        }\n    }\n}\nexports.resetCSSProperties = resetCSSProperties;\nfunction propagateInheritableProperties(view, child) {\n    var inheritablePropertyValues = inheritablePropertyValuesOn(view);\n    for (var _i = 0, inheritablePropertyValues_1 = inheritablePropertyValues; _i < inheritablePropertyValues_1.length; _i++) {\n        var pair = inheritablePropertyValues_1[_i];\n        var prop = pair.property;\n        var sourceKey = prop.sourceKey;\n        var currentValueSource = child[sourceKey] || 0;\n        if (currentValueSource <= 1) {\n            prop.setInheritedValue.call(child, pair.value);\n        }\n    }\n}\nexports.propagateInheritableProperties = propagateInheritableProperties;\nfunction propagateInheritableCssProperties(parentStyle, childStyle) {\n    var inheritableCssPropertyValues = inheritableCssPropertyValuesOn(parentStyle);\n    for (var _i = 0, inheritableCssPropertyValues_1 = inheritableCssPropertyValues; _i < inheritableCssPropertyValues_1.length; _i++) {\n        var pair = inheritableCssPropertyValues_1[_i];\n        var prop = pair.property;\n        var sourceKey = prop.sourceKey;\n        var currentValueSource = childStyle[sourceKey] || 0;\n        if (currentValueSource <= 1) {\n            prop.setInheritedValue.call(childStyle, pair.value, 1);\n        }\n    }\n}\nexports.propagateInheritableCssProperties = propagateInheritableCssProperties;\nfunction makeValidator() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    var set = new Set(values);\n    return function (value) { return set.has(value); };\n}\nexports.makeValidator = makeValidator;\nfunction makeParser(isValid) {\n    return function (value) {\n        var lower = value && value.toLowerCase();\n        if (isValid(lower)) {\n            return lower;\n        }\n        else {\n            throw new Error(\"Invalid value: \" + value);\n        }\n    };\n}\nexports.makeParser = makeParser;\n//# sourceMappingURL=properties.js.map"
    },
    {
      "id": 28,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
      "name": "./~/tns-core-modules/ui/page/page.android.js",
      "index": 128,
      "index2": 132,
      "size": 8719,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-providers.js",
          "module": "./~/nativescript-angular/platform-providers.js",
          "moduleName": "./~/nativescript-angular/platform-providers.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page",
          "loc": "3:13-48"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page",
          "loc": "64:45-80"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page",
          "loc": "5:13-48"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page",
          "loc": "5:13-48"
        },
        {
          "moduleId": 75,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/dialogs.js",
          "module": "./~/nativescript-angular/directives/dialogs.js",
          "moduleName": "./~/nativescript-angular/directives/dialogs.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page",
          "loc": "3:13-48"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page/page",
          "loc": "20:15-55"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/page",
          "loc": "21:13-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar page_common_1 = require(\"./page-common\");\nvar action_bar_1 = require(\"../action-bar\");\nvar grid_layout_1 = require(\"../layouts/grid-layout\");\nvar constants_1 = require(\"./constants\");\nvar platform_1 = require(\"../../platform\");\n__export(require(\"./page-common\"));\nvar SYSTEM_UI_FLAG_LIGHT_STATUS_BAR = 0x00002000;\nvar STATUS_BAR_LIGHT_BCKG = -657931;\nvar STATUS_BAR_DARK_BCKG = 1711276032;\nvar DialogFragment;\nfunction initializeDialogFragment() {\n    if (DialogFragment) {\n        return;\n    }\n    var DialogFragmentImpl = (function (_super) {\n        __extends(DialogFragmentImpl, _super);\n        function DialogFragmentImpl(_owner, _fullscreen, _shownCallback, _dismissCallback) {\n            var _this = _super.call(this) || this;\n            _this._owner = _owner;\n            _this._fullscreen = _fullscreen;\n            _this._shownCallback = _shownCallback;\n            _this._dismissCallback = _dismissCallback;\n            return global.__native(_this);\n        }\n        DialogFragmentImpl.prototype.onCreateDialog = function (savedInstanceState) {\n            var dialog = new android.app.Dialog(this._owner._context);\n            dialog.requestWindowFeature(android.view.Window.FEATURE_NO_TITLE);\n            this._owner.horizontalAlignment = this._fullscreen ? \"stretch\" : \"center\";\n            this._owner.verticalAlignment = this._fullscreen ? \"stretch\" : \"middle\";\n            this._owner.actionBarHidden = true;\n            var nativeView = this._owner.nativeView;\n            var layoutParams = nativeView.getLayoutParams();\n            if (!layoutParams) {\n                layoutParams = new org.nativescript.widgets.CommonLayoutParams();\n                nativeView.setLayoutParams(layoutParams);\n            }\n            dialog.setContentView(this._owner.nativeView, layoutParams);\n            var window = dialog.getWindow();\n            window.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));\n            if (this._fullscreen) {\n                window.setLayout(android.view.ViewGroup.LayoutParams.FILL_PARENT, android.view.ViewGroup.LayoutParams.FILL_PARENT);\n            }\n            return dialog;\n        };\n        DialogFragmentImpl.prototype.onStart = function () {\n            _super.prototype.onStart.call(this);\n            if (!this._owner.isLoaded) {\n                this._owner.onLoaded();\n            }\n            this._shownCallback();\n        };\n        DialogFragmentImpl.prototype.onDestroyView = function () {\n            _super.prototype.onDestroyView.call(this);\n            if (this._owner.isLoaded) {\n                this._owner.onUnloaded();\n            }\n            this._owner._isAddedToNativeVisualTree = false;\n            this._owner._tearDownUI(true);\n        };\n        DialogFragmentImpl.prototype.onDismiss = function (dialog) {\n            _super.prototype.onDismiss.call(this, dialog);\n            this._dismissCallback();\n        };\n        return DialogFragmentImpl;\n    }(android.app.DialogFragment));\n    ;\n    DialogFragment = DialogFragmentImpl;\n}\nvar Page = (function (_super) {\n    __extends(Page, _super);\n    function Page() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._isBackNavigation = false;\n        return _this;\n    }\n    Page.prototype.createNativeView = function () {\n        var layout = new org.nativescript.widgets.GridLayout(this._context);\n        layout.addRow(new org.nativescript.widgets.ItemSpec(1, org.nativescript.widgets.GridUnitType.auto));\n        layout.addRow(new org.nativescript.widgets.ItemSpec(1, org.nativescript.widgets.GridUnitType.star));\n        layout.setBackgroundColor(-1);\n        return layout;\n    };\n    Page.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.setBackgroundColor(-1);\n    };\n    Page.prototype._addViewToNativeVisualTree = function (child, atIndex) {\n        if (this.nativeView && child.nativeView) {\n            if (child instanceof action_bar_1.ActionBar) {\n                grid_layout_1.GridLayout.setRow(child, 0);\n                child.horizontalAlignment = \"stretch\";\n                child.verticalAlignment = \"top\";\n            }\n            else {\n                grid_layout_1.GridLayout.setRow(child, 1);\n            }\n        }\n        return _super.prototype._addViewToNativeVisualTree.call(this, child, atIndex);\n    };\n    Page.prototype.onLoaded = function () {\n        _super.prototype.onLoaded.call(this);\n        if (this.actionBarHidden !== undefined) {\n            this.updateActionBar();\n        }\n    };\n    Page.prototype._tearDownUI = function (force) {\n        var skipDetached = !force && this.frame.android.cachePagesOnNavigate && !this._isBackNavigation;\n        if (!skipDetached) {\n            _super.prototype._tearDownUI.call(this);\n            this._isAddedToNativeVisualTree = false;\n        }\n    };\n    Page.prototype.onNavigatedFrom = function (isBackNavigation) {\n        this._isBackNavigation = isBackNavigation;\n        _super.prototype.onNavigatedFrom.call(this, isBackNavigation);\n    };\n    Page.prototype._showNativeModalView = function (parent, context, closeCallback, fullscreen) {\n        var _this = this;\n        _super.prototype._showNativeModalView.call(this, parent, context, closeCallback, fullscreen);\n        if (!this.backgroundColor) {\n            this.backgroundColor = new page_common_1.Color(\"White\");\n        }\n        this._setupUI(parent._context);\n        this._isAddedToNativeVisualTree = true;\n        initializeDialogFragment();\n        this._dialogFragment = new DialogFragment(this, !!fullscreen, function () { return _this._raiseShownModallyEvent(); }, function () { return _this.closeModal(); });\n        _super.prototype._raiseShowingModallyEvent.call(this);\n        this._dialogFragment.show(parent.frame.android.activity.getFragmentManager(), constants_1.DIALOG_FRAGMENT_TAG);\n    };\n    Page.prototype._hideNativeModalView = function (parent) {\n        this._dialogFragment.dismissAllowingStateLoss();\n        this._dialogFragment = null;\n        parent._modal = undefined;\n        _super.prototype._hideNativeModalView.call(this, parent);\n    };\n    Page.prototype.updateActionBar = function () {\n        this.actionBar.update();\n    };\n    Page.prototype[page_common_1.actionBarHiddenProperty.getDefault] = function () {\n        return undefined;\n    };\n    Page.prototype[page_common_1.actionBarHiddenProperty.setNative] = function (value) {\n        this.updateActionBar();\n    };\n    Page.prototype[page_common_1.statusBarStyleProperty.getDefault] = function () {\n        if (platform_1.device.sdkVersion >= \"21\") {\n            var window_1 = this._context.getWindow();\n            var decorView = window_1.getDecorView();\n            return {\n                color: window_1.getStatusBarColor(),\n                systemUiVisibility: decorView.getSystemUiVisibility()\n            };\n        }\n        return null;\n    };\n    Page.prototype[page_common_1.statusBarStyleProperty.setNative] = function (value) {\n        if (platform_1.device.sdkVersion >= \"21\") {\n            var window_2 = this._context.getWindow();\n            var decorView = window_2.getDecorView();\n            if (value === \"light\") {\n                window_2.setStatusBarColor(STATUS_BAR_LIGHT_BCKG);\n                decorView.setSystemUiVisibility(SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);\n            }\n            else if (value === \"dark\") {\n                window_2.setStatusBarColor(STATUS_BAR_DARK_BCKG);\n                decorView.setSystemUiVisibility(0);\n            }\n            else {\n                window_2.setStatusBarColor(value.color);\n                decorView.setSystemUiVisibility(value.systemUiVisibility);\n            }\n        }\n    };\n    Page.prototype[page_common_1.androidStatusBarBackgroundProperty.getDefault] = function () {\n        if (platform_1.device.sdkVersion >= \"21\") {\n            var window_3 = this._context.getWindow();\n            return window_3.getStatusBarColor();\n        }\n        return null;\n    };\n    Page.prototype[page_common_1.androidStatusBarBackgroundProperty.setNative] = function (value) {\n        if (platform_1.device.sdkVersion >= \"21\") {\n            var window_4 = this._context.getWindow();\n            var color = value instanceof page_common_1.Color ? value.android : value;\n            window_4.setStatusBarColor(color);\n        }\n    };\n    return Page;\n}(page_common_1.PageBase));\nexports.Page = Page;\n//# sourceMappingURL=page.android.js.map"
    },
    {
      "id": 29,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/base-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/base-value-accessor.js",
      "index": 212,
      "index2": 207,
      "size": 1001,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/text-value-accessor.js",
      "issuerId": 88,
      "issuerName": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 84,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/checked-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
          "type": "cjs require",
          "userRequest": "./base-value-accessor",
          "loc": "5:28-60"
        },
        {
          "moduleId": 85,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/date-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
          "type": "cjs require",
          "userRequest": "./base-value-accessor",
          "loc": "5:28-60"
        },
        {
          "moduleId": 86,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/number-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
          "type": "cjs require",
          "userRequest": "./base-value-accessor",
          "loc": "5:28-60"
        },
        {
          "moduleId": 87,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "type": "cjs require",
          "userRequest": "./base-value-accessor",
          "loc": "4:28-60"
        },
        {
          "moduleId": 88,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/text-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
          "type": "cjs require",
          "userRequest": "./base-value-accessor",
          "loc": "5:28-60"
        },
        {
          "moduleId": 89,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/time-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
          "type": "cjs require",
          "userRequest": "./base-value-accessor",
          "loc": "5:28-60"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseValueAccessor = (function () {\n    function BaseValueAccessor(view) {\n        this.view = view;\n        this.onChange = function (_) { };\n        this.pendingChangeNotification = 0;\n    }\n    BaseValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (arg) {\n            if (_this.pendingChangeNotification) {\n                clearTimeout(_this.pendingChangeNotification);\n            }\n            _this.pendingChangeNotification = setTimeout(function () {\n                _this.pendingChangeNotification = 0;\n                fn(arg);\n            }, 20);\n        };\n    };\n    BaseValueAccessor.prototype.writeValue = function (_) {\n        //\n    };\n    BaseValueAccessor.prototype.registerOnTouched = function (_) {\n        //\n    };\n    return BaseValueAccessor;\n}());\nexports.BaseValueAccessor = BaseValueAccessor;\n//# sourceMappingURL=base-value-accessor.js.map"
    },
    {
      "id": 30,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
      "name": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
      "index": 131,
      "index2": 126,
      "size": 14017,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
      "issuerId": 28,
      "issuerName": "./~/tns-core-modules/ui/page/page.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
          "module": "./~/tns-core-modules/ui/page/page.android.js",
          "moduleName": "./~/tns-core-modules/ui/page/page.android.js",
          "type": "cjs require",
          "userRequest": "../action-bar",
          "loc": "6:19-43"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/action-bar",
          "loc": "3:19-60"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "ui/action-bar",
          "loc": "46:69-93"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "ui/action-bar",
          "loc": "47:70-94"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "ui/action-bar",
          "loc": "48:76-100"
        },
        {
          "moduleId": 150,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
          "module": "./~/tns-core-modules/ui/page/page-common.js",
          "moduleName": "./~/tns-core-modules/ui/page/page-common.js",
          "type": "cjs require",
          "userRequest": "../action-bar",
          "loc": "7:19-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar action_bar_common_1 = require(\"./action-bar-common\");\nvar utils_1 = require(\"../../utils/utils\");\nvar image_source_1 = require(\"../../image-source\");\nvar application = require(\"../../application\");\n__export(require(\"./action-bar-common\"));\nvar R_ID_HOME = 0x0102002c;\nvar ACTION_ITEM_ID_OFFSET = 10000;\nvar actionItemIdGenerator = ACTION_ITEM_ID_OFFSET;\nfunction generateItemId() {\n    actionItemIdGenerator++;\n    return actionItemIdGenerator;\n}\nvar appResources;\nvar MenuItemClickListener;\nfunction initializeMenuItemClickListener() {\n    if (MenuItemClickListener) {\n        return;\n    }\n    var MenuItemClickListenerImpl = (function (_super) {\n        __extends(MenuItemClickListenerImpl, _super);\n        function MenuItemClickListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        MenuItemClickListenerImpl.prototype.onMenuItemClick = function (item) {\n            var itemId = item.getItemId();\n            return this.owner._onAndroidItemSelected(itemId);\n        };\n        return MenuItemClickListenerImpl;\n    }(java.lang.Object));\n    MenuItemClickListenerImpl = __decorate([\n        Interfaces([android.support.v7.widget.Toolbar.OnMenuItemClickListener])\n    ], MenuItemClickListenerImpl);\n    MenuItemClickListener = MenuItemClickListenerImpl;\n    appResources = application.android.context.getResources();\n}\nvar ActionItem = (function (_super) {\n    __extends(ActionItem, _super);\n    function ActionItem() {\n        var _this = _super.call(this) || this;\n        _this._androidPosition = {\n            position: \"actionBar\",\n            systemIcon: undefined\n        };\n        _this._itemId = generateItemId();\n        return _this;\n    }\n    Object.defineProperty(ActionItem.prototype, \"android\", {\n        get: function () {\n            return this._androidPosition;\n        },\n        set: function (value) {\n            throw new Error(\"ActionItem.android is read-only\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActionItem.prototype._getItemId = function () {\n        return this._itemId;\n    };\n    return ActionItem;\n}(action_bar_common_1.ActionItemBase));\nexports.ActionItem = ActionItem;\nvar AndroidActionBarSettings = (function () {\n    function AndroidActionBarSettings(actionBar) {\n        this._iconVisibility = \"auto\";\n        this._actionBar = actionBar;\n    }\n    Object.defineProperty(AndroidActionBarSettings.prototype, \"icon\", {\n        get: function () {\n            return this._icon;\n        },\n        set: function (value) {\n            if (value !== this._icon) {\n                this._icon = value;\n                this._actionBar._onIconPropertyChanged();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AndroidActionBarSettings.prototype, \"iconVisibility\", {\n        get: function () {\n            return this._iconVisibility;\n        },\n        set: function (value) {\n            if (value !== this._iconVisibility) {\n                this._iconVisibility = value;\n                this._actionBar._onIconPropertyChanged();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AndroidActionBarSettings;\n}());\nexports.AndroidActionBarSettings = AndroidActionBarSettings;\nvar NavigationButton = (function (_super) {\n    __extends(NavigationButton, _super);\n    function NavigationButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NavigationButton;\n}(ActionItem));\nexports.NavigationButton = NavigationButton;\nvar ActionBar = (function (_super) {\n    __extends(ActionBar, _super);\n    function ActionBar() {\n        var _this = _super.call(this) || this;\n        _this._android = new AndroidActionBarSettings(_this);\n        return _this;\n    }\n    Object.defineProperty(ActionBar.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActionBar.prototype._addChildFromBuilder = function (name, value) {\n        if (value instanceof NavigationButton) {\n            this.navigationButton = value;\n        }\n        else if (value instanceof ActionItem) {\n            this.actionItems.addItem(value);\n        }\n        else if (value instanceof action_bar_common_1.View) {\n            this.titleView = value;\n        }\n    };\n    ActionBar.prototype.createNativeView = function () {\n        initializeMenuItemClickListener();\n        var toolbar = new android.support.v7.widget.Toolbar(this._context);\n        var menuItemClickListener = new MenuItemClickListener(this);\n        toolbar.setOnMenuItemClickListener(menuItemClickListener);\n        toolbar.menuItemClickListener = menuItemClickListener;\n        return toolbar;\n    };\n    ActionBar.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.menuItemClickListener.owner = this;\n    };\n    ActionBar.prototype.disposeNativeView = function () {\n        this.nativeView.menuItemClickListener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    ActionBar.prototype.onLoaded = function () {\n        _super.prototype.onLoaded.call(this);\n        this.update();\n    };\n    ActionBar.prototype.update = function () {\n        if (!this.nativeView) {\n            return;\n        }\n        var page = this.page;\n        if (!page.frame || !page.frame._getNavBarVisible(page)) {\n            this.nativeView.setVisibility(android.view.View.GONE);\n            return;\n        }\n        this.nativeView.setVisibility(android.view.View.VISIBLE);\n        this._addActionItems();\n        this._updateTitleAndTitleView();\n        this._updateIcon();\n        this._updateNavigationButton();\n    };\n    ActionBar.prototype._onAndroidItemSelected = function (itemId) {\n        if (this.navigationButton && itemId === R_ID_HOME) {\n            this.navigationButton._raiseTap();\n            return true;\n        }\n        var menuItem = undefined;\n        var items = this.actionItems.getItems();\n        for (var i = 0; i < items.length; i++) {\n            if (items[i]._getItemId() === itemId) {\n                menuItem = items[i];\n                break;\n            }\n        }\n        if (menuItem) {\n            menuItem._raiseTap();\n            return true;\n        }\n        return false;\n    };\n    ActionBar.prototype._updateNavigationButton = function () {\n        var navButton = this.navigationButton;\n        if (navButton && action_bar_common_1.isVisible(navButton)) {\n            var systemIcon = navButton.android.systemIcon;\n            if (systemIcon !== undefined) {\n                var systemResourceId = getSystemResourceId(systemIcon);\n                if (systemResourceId) {\n                    this.nativeView.setNavigationIcon(systemResourceId);\n                }\n            }\n            else if (navButton.icon) {\n                var drawableOrId = getDrawableOrResourceId(navButton.icon, appResources);\n                this.nativeView.setNavigationIcon(drawableOrId);\n            }\n            var navBtn_1 = new WeakRef(navButton);\n            this.nativeView.setNavigationOnClickListener(new android.view.View.OnClickListener({\n                onClick: function (v) {\n                    var owner = navBtn_1.get();\n                    if (owner) {\n                        owner._raiseTap();\n                    }\n                }\n            }));\n        }\n        else {\n            this.nativeView.setNavigationIcon(null);\n        }\n    };\n    ActionBar.prototype._updateIcon = function () {\n        var visibility = getIconVisibility(this.android.iconVisibility);\n        if (visibility) {\n            var icon = this.android.icon;\n            if (icon !== undefined) {\n                var drawableOrId = getDrawableOrResourceId(icon, appResources);\n                if (drawableOrId) {\n                    this.nativeView.setLogo(drawableOrId);\n                }\n            }\n            else {\n                var defaultIcon = application.android.nativeApp.getApplicationInfo().icon;\n                this.nativeView.setLogo(defaultIcon);\n            }\n        }\n        else {\n            this.nativeView.setLogo(null);\n        }\n    };\n    ActionBar.prototype._updateTitleAndTitleView = function () {\n        if (!this.titleView) {\n            var title = this.title;\n            if (title !== undefined) {\n                this.nativeView.setTitle(title);\n            }\n            else {\n                var appContext = application.android.context;\n                var appInfo = appContext.getApplicationInfo();\n                var appLabel = appContext.getPackageManager().getApplicationLabel(appInfo);\n                if (appLabel) {\n                    this.nativeView.setTitle(appLabel);\n                }\n            }\n        }\n    };\n    ActionBar.prototype._addActionItems = function () {\n        var menu = this.nativeView.getMenu();\n        var items = this.actionItems.getVisibleItems();\n        menu.clear();\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var menuItem = menu.add(android.view.Menu.NONE, item._getItemId(), android.view.Menu.NONE, item.text + \"\");\n            if (item.actionView && item.actionView.android) {\n                item.android.position = \"actionBar\";\n                menuItem.setActionView(item.actionView.android);\n                ActionBar._setOnClickListener(item);\n            }\n            else if (item.android.systemIcon) {\n                var systemResourceId = getSystemResourceId(item.android.systemIcon);\n                if (systemResourceId) {\n                    menuItem.setIcon(systemResourceId);\n                }\n            }\n            else if (item.icon) {\n                var drawableOrId = getDrawableOrResourceId(item.icon, appResources);\n                if (drawableOrId) {\n                    menuItem.setIcon(drawableOrId);\n                }\n                else {\n                    throw new Error(\"Error loading icon from \" + item.icon);\n                }\n            }\n            var showAsAction = getShowAsAction(item);\n            menuItem.setShowAsAction(showAsAction);\n        }\n    };\n    ActionBar._setOnClickListener = function (item) {\n        item.actionView.android.setOnClickListener(new android.view.View.OnClickListener({\n            onClick: function (v) {\n                item._raiseTap();\n            }\n        }));\n    };\n    ActionBar.prototype._onTitlePropertyChanged = function () {\n        if (this.nativeView) {\n            this._updateTitleAndTitleView();\n        }\n    };\n    ActionBar.prototype._onIconPropertyChanged = function () {\n        if (this.nativeView) {\n            this._updateIcon();\n        }\n    };\n    ActionBar.prototype._addViewToNativeVisualTree = function (child, atIndex) {\n        if (atIndex === void 0) { atIndex = Number.MAX_VALUE; }\n        _super.prototype._addViewToNativeVisualTree.call(this, child);\n        if (this.nativeView && child.nativeView) {\n            if (atIndex >= this.nativeView.getChildCount()) {\n                this.nativeView.addView(child.nativeView);\n            }\n            else {\n                this.nativeView.addView(child.nativeView, atIndex);\n            }\n            return true;\n        }\n        return false;\n    };\n    ActionBar.prototype._removeViewFromNativeVisualTree = function (child) {\n        _super.prototype._removeViewFromNativeVisualTree.call(this, child);\n        if (this.nativeView && child.nativeView) {\n            this.nativeView.removeView(child.nativeView);\n        }\n    };\n    ActionBar.prototype[action_bar_common_1.colorProperty.getDefault] = function () {\n        if (!defaultTitleTextColor) {\n            var textView = new android.widget.TextView(this._context);\n            defaultTitleTextColor = textView.getTextColors().getDefaultColor();\n        }\n        return defaultTitleTextColor;\n    };\n    ActionBar.prototype[action_bar_common_1.colorProperty.setNative] = function (value) {\n        var color = value instanceof action_bar_common_1.Color ? value.android : value;\n        this.nativeView.setTitleTextColor(color);\n    };\n    return ActionBar;\n}(action_bar_common_1.ActionBarBase));\nexports.ActionBar = ActionBar;\nvar defaultTitleTextColor;\nfunction getDrawableOrResourceId(icon, resources) {\n    if (typeof icon !== \"string\") {\n        return undefined;\n    }\n    if (icon.indexOf(utils_1.RESOURCE_PREFIX) === 0) {\n        var resourceId = resources.getIdentifier(icon.substr(utils_1.RESOURCE_PREFIX.length), 'drawable', application.android.packageName);\n        if (resourceId > 0) {\n            return resourceId;\n        }\n    }\n    else {\n        var drawable = void 0;\n        var is = image_source_1.fromFileOrResource(icon);\n        if (is) {\n            drawable = new android.graphics.drawable.BitmapDrawable(is.android);\n        }\n        return drawable;\n    }\n    return undefined;\n}\nfunction getShowAsAction(menuItem) {\n    switch (menuItem.android.position) {\n        case \"actionBarIfRoom\":\n            return android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM;\n        case \"popup\":\n            return android.view.MenuItem.SHOW_AS_ACTION_NEVER;\n        case \"actionBar\":\n        default:\n            return android.view.MenuItem.SHOW_AS_ACTION_ALWAYS;\n    }\n}\nfunction getIconVisibility(iconVisibility) {\n    switch (iconVisibility) {\n        case \"always\":\n            return true;\n        case \"auto\":\n        case \"never\":\n        default:\n            return false;\n    }\n}\nfunction getSystemResourceId(systemIcon) {\n    return android.content.res.Resources.getSystem().getIdentifier(systemIcon, \"drawable\", \"android\");\n}\n//# sourceMappingURL=action-bar.android.js.map"
    },
    {
      "id": 31,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/weak-event-listener/weak-event-listener.js",
      "name": "./~/tns-core-modules/ui/core/weak-event-listener/weak-event-listener.js",
      "index": 42,
      "index2": 30,
      "size": 4354,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
      "issuerId": 50,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/weak-event-listener",
          "loc": "5:17-72"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../weak-event-listener",
          "loc": "6:28-61"
        },
        {
          "moduleId": 96,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/weak-event-listener",
          "loc": "5:17-72"
        },
        {
          "moduleId": 148,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "type": "cjs require",
          "userRequest": "../core/weak-event-listener",
          "loc": "9:28-66"
        },
        {
          "moduleId": 197,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/core/weak-event-listener",
          "loc": "4:17-72"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../core/weak-event-listener",
          "loc": "9:28-66"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar handlersForEventName = new Map();\nvar sourcesMap = new WeakMap();\nvar TargetHandlerPair = (function () {\n    function TargetHandlerPair(target, handler) {\n        this.tagetRef = new WeakRef(target);\n        this.handler = handler;\n    }\n    return TargetHandlerPair;\n}());\nfunction getHandlerForEventName(eventName) {\n    var handler = handlersForEventName.get(eventName);\n    if (!handler) {\n        handler = function (eventData) {\n            var source = eventData.object;\n            var sourceEventMap = sourcesMap.get(source);\n            if (!sourceEventMap) {\n                source.removeEventListener(eventName, handlersForEventName.get(eventName));\n                return;\n            }\n            var targetHandlerPairList = sourceEventMap.get(eventName);\n            if (!targetHandlerPairList) {\n                return;\n            }\n            var deadPairsIndexes = [];\n            for (var i = 0; i < targetHandlerPairList.length; i++) {\n                var pair = targetHandlerPairList[i];\n                var target = pair.tagetRef.get();\n                if (target) {\n                    pair.handler.call(target, eventData);\n                }\n                else {\n                    deadPairsIndexes.push(i);\n                }\n            }\n            if (deadPairsIndexes.length === targetHandlerPairList.length) {\n                source.removeEventListener(eventName, handlersForEventName.get(eventName));\n                sourceEventMap.delete(eventName);\n            }\n            else {\n                for (var j = deadPairsIndexes.length - 1; j >= 0; j--) {\n                    targetHandlerPairList.splice(deadPairsIndexes[j], 1);\n                }\n            }\n        };\n        handlersForEventName.set(eventName, handler);\n    }\n    return handler;\n}\nfunction validateArgs(source, eventName, handler, target) {\n    if (!source) {\n        throw new Error(\"source is null or undefined\");\n    }\n    if (!target) {\n        throw new Error(\"target is null or undefined\");\n    }\n    if (typeof eventName !== \"string\") {\n        throw new Error(\"eventName is not a string\");\n    }\n    if (typeof handler !== \"function\") {\n        throw new Error(\"handler is not a function\");\n    }\n}\nfunction addWeakEventListener(source, eventName, handler, target) {\n    validateArgs(source, eventName, handler, target);\n    var shouldAttach = false;\n    var sourceEventMap = sourcesMap.get(source);\n    if (!sourceEventMap) {\n        sourceEventMap = new Map();\n        sourcesMap.set(source, sourceEventMap);\n        shouldAttach = true;\n    }\n    var pairList = sourceEventMap.get(eventName);\n    if (!pairList) {\n        pairList = new Array();\n        sourceEventMap.set(eventName, pairList);\n        shouldAttach = true;\n    }\n    pairList.push(new TargetHandlerPair(target, handler));\n    if (shouldAttach) {\n        source.addEventListener(eventName, getHandlerForEventName(eventName));\n    }\n}\nexports.addWeakEventListener = addWeakEventListener;\nfunction removeWeakEventListener(source, eventName, handler, target) {\n    validateArgs(source, eventName, handler, target);\n    var handlerForEventWithName = handlersForEventName.get(eventName);\n    if (!handlerForEventWithName) {\n        return;\n    }\n    var sourceEventMap = sourcesMap.get(source);\n    if (!sourceEventMap) {\n        return;\n    }\n    var targetHandlerPairList = sourceEventMap.get(eventName);\n    if (!targetHandlerPairList) {\n        return;\n    }\n    var targetHandlerPairsToRemove = [];\n    for (var i = 0; i < targetHandlerPairList.length; i++) {\n        var pair = targetHandlerPairList[i];\n        var registeredTarget = pair.tagetRef.get();\n        if (!registeredTarget || (registeredTarget === target && handler === pair.handler)) {\n            targetHandlerPairsToRemove.push(i);\n        }\n    }\n    if (targetHandlerPairsToRemove.length === targetHandlerPairList.length) {\n        source.removeEventListener(eventName, handlerForEventWithName);\n        sourceEventMap.delete(eventName);\n    }\n    else {\n        for (var j = targetHandlerPairsToRemove.length - 1; j >= 0; j--) {\n            targetHandlerPairList.splice(targetHandlerPairsToRemove[j], 1);\n        }\n    }\n}\nexports.removeWeakEventListener = removeWeakEventListener;\n//# sourceMappingURL=weak-event-listener.js.map"
    },
    {
      "id": 32,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
      "name": "./~/rxjs/Subject.js",
      "index": 122,
      "index2": 117,
      "size": 5615,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
      "issuerId": 1,
      "issuerName": "./~/@angular/core/@angular/core.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
          "module": "./~/@angular/core/@angular/core.es5.js",
          "moduleName": "./~/@angular/core/@angular/core.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/Subject",
          "loc": "14:0-39"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/Subject",
          "loc": "13:0-39"
        },
        {
          "moduleId": 98,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/BehaviorSubject.js",
          "module": "./~/rxjs/BehaviorSubject.js",
          "moduleName": "./~/rxjs/BehaviorSubject.js",
          "type": "cjs require",
          "userRequest": "./Subject",
          "loc": "7:16-36"
        },
        {
          "moduleId": 207,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ConnectableObservable.js",
          "module": "./~/rxjs/observable/ConnectableObservable.js",
          "moduleName": "./~/rxjs/observable/ConnectableObservable.js",
          "type": "cjs require",
          "userRequest": "../Subject",
          "loc": "7:16-37"
        },
        {
          "moduleId": 226,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/share.js",
          "module": "./~/rxjs/operator/share.js",
          "moduleName": "./~/rxjs/operator/share.js",
          "type": "cjs require",
          "userRequest": "../Subject",
          "loc": "3:16-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map"
    },
    {
      "id": 33,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-source/image-source.android.js",
      "name": "./~/tns-core-modules/image-source/image-source.android.js",
      "index": 34,
      "index2": 26,
      "size": 8154,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
      "issuerId": 30,
      "issuerName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "../../image-source",
          "loc": "7:21-50"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "type": "cjs require",
          "userRequest": "../../image-source",
          "loc": "7:21-50"
        },
        {
          "moduleId": 137,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
          "module": "./~/tns-core-modules/ui/image/image-common.js",
          "moduleName": "./~/tns-core-modules/ui/image/image-common.js",
          "type": "cjs require",
          "userRequest": "../../image-source",
          "loc": "7:21-50"
        },
        {
          "moduleId": 163,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "type": "cjs require",
          "userRequest": "../../image-source",
          "loc": "8:21-50"
        },
        {
          "moduleId": 238,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http-request/http-request.android.js",
          "module": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "moduleName": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "type": "cjs require",
          "userRequest": "image-source",
          "loc": "15:22-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar file_system_1 = require(\"../file-system\");\nvar utils_1 = require(\"../utils/utils\");\nexports.isFileOrResourcePath = utils_1.isFileOrResourcePath;\nvar application_1 = require(\"../application\");\nvar http;\nfunction ensureHttp() {\n    if (!http) {\n        http = require(\"../http\");\n    }\n}\nvar application;\nvar resources;\nfunction getApplication() {\n    if (!application) {\n        application = application_1.getNativeApplication();\n    }\n    return application;\n}\nfunction getResources() {\n    if (!resources) {\n        resources = getApplication().getResources();\n    }\n    return resources;\n}\nvar ImageSource = (function () {\n    function ImageSource() {\n    }\n    ImageSource.prototype.fromAsset = function (asset) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            asset.getImageAsync(function (image, err) {\n                if (image) {\n                    _this.setRotationAngleFromFile(asset.android);\n                    _this.setNativeSource(image);\n                    resolve(_this);\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    };\n    ImageSource.prototype.loadFromResource = function (name) {\n        this.android = null;\n        var res = getResources();\n        if (res) {\n            var identifier = res.getIdentifier(name, 'drawable', getApplication().getPackageName());\n            if (0 < identifier) {\n                var bitmapDrawable = res.getDrawable(identifier);\n                if (bitmapDrawable && bitmapDrawable.getBitmap) {\n                    this.android = bitmapDrawable.getBitmap();\n                }\n            }\n        }\n        return this.android != null;\n    };\n    ImageSource.prototype.fromResource = function (name) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.loadFromResource(name));\n        });\n    };\n    ImageSource.prototype.setRotationAngleFromFile = function (filename) {\n        this.rotationAngle = 0;\n        var ei = new android.media.ExifInterface(filename);\n        var orientation = ei.getAttributeInt(android.media.ExifInterface.TAG_ORIENTATION, android.media.ExifInterface.ORIENTATION_NORMAL);\n        switch (orientation) {\n            case android.media.ExifInterface.ORIENTATION_ROTATE_90:\n                this.rotationAngle = 90;\n                break;\n            case android.media.ExifInterface.ORIENTATION_ROTATE_180:\n                this.rotationAngle = 180;\n                break;\n            case android.media.ExifInterface.ORIENTATION_ROTATE_270:\n                this.rotationAngle = 270;\n                break;\n        }\n    };\n    ImageSource.prototype.loadFromFile = function (path) {\n        var fileName = typeof path === \"string\" ? path.trim() : \"\";\n        if (fileName.indexOf(\"~/\") === 0) {\n            fileName = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, fileName.replace(\"~/\", \"\"));\n        }\n        this.setRotationAngleFromFile(fileName);\n        this.android = android.graphics.BitmapFactory.decodeFile(fileName, null);\n        return this.android != null;\n    };\n    ImageSource.prototype.fromFile = function (path) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.loadFromFile(path));\n        });\n    };\n    ImageSource.prototype.loadFromData = function (data) {\n        this.android = android.graphics.BitmapFactory.decodeStream(data);\n        return this.android != null;\n    };\n    ImageSource.prototype.fromData = function (data) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.loadFromData(data));\n        });\n    };\n    ImageSource.prototype.loadFromBase64 = function (source) {\n        if (typeof source === \"string\") {\n            var bytes = android.util.Base64.decode(source, android.util.Base64.DEFAULT);\n            this.android = android.graphics.BitmapFactory.decodeByteArray(bytes, 0, bytes.length);\n        }\n        return this.android != null;\n    };\n    ImageSource.prototype.fromBase64 = function (data) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.loadFromBase64(data));\n        });\n    };\n    ImageSource.prototype.setNativeSource = function (source) {\n        this.android = source;\n        return source != null;\n    };\n    ImageSource.prototype.saveToFile = function (path, format, quality) {\n        if (quality === void 0) { quality = 100; }\n        if (!this.android) {\n            return false;\n        }\n        var targetFormat = getTargetFormat(format);\n        var outputStream = new java.io.BufferedOutputStream(new java.io.FileOutputStream(path));\n        var res = this.android.compress(targetFormat, quality, outputStream);\n        outputStream.close();\n        return res;\n    };\n    ImageSource.prototype.toBase64String = function (format, quality) {\n        if (quality === void 0) { quality = 100; }\n        if (!this.android) {\n            return null;\n        }\n        var targetFormat = getTargetFormat(format);\n        var outputStream = new java.io.ByteArrayOutputStream();\n        var base64Stream = new android.util.Base64OutputStream(outputStream, android.util.Base64.NO_WRAP);\n        this.android.compress(targetFormat, quality, base64Stream);\n        base64Stream.close();\n        outputStream.close();\n        return outputStream.toString();\n    };\n    Object.defineProperty(ImageSource.prototype, \"height\", {\n        get: function () {\n            if (this.android) {\n                return this.android.getHeight();\n            }\n            return NaN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageSource.prototype, \"width\", {\n        get: function () {\n            if (this.android) {\n                return this.android.getWidth();\n            }\n            return NaN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageSource.prototype, \"rotationAngle\", {\n        get: function () {\n            return this._rotationAngle;\n        },\n        set: function (value) {\n            this._rotationAngle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ImageSource;\n}());\nexports.ImageSource = ImageSource;\nfunction getTargetFormat(format) {\n    switch (format) {\n        case \"jpeg\" || \"jpg\":\n            return android.graphics.Bitmap.CompressFormat.JPEG;\n        default:\n            return android.graphics.Bitmap.CompressFormat.PNG;\n    }\n}\nfunction fromAsset(asset) {\n    var image = new ImageSource();\n    return image.fromAsset(asset);\n}\nexports.fromAsset = fromAsset;\nfunction fromResource(name) {\n    var image = new ImageSource();\n    return image.loadFromResource(name) ? image : null;\n}\nexports.fromResource = fromResource;\nfunction fromFile(path) {\n    var image = new ImageSource();\n    return image.loadFromFile(path) ? image : null;\n}\nexports.fromFile = fromFile;\nfunction fromData(data) {\n    var image = new ImageSource();\n    return image.loadFromData(data) ? image : null;\n}\nexports.fromData = fromData;\nfunction fromBase64(source) {\n    var image = new ImageSource();\n    return image.loadFromBase64(source) ? image : null;\n}\nexports.fromBase64 = fromBase64;\nfunction fromNativeSource(source) {\n    var image = new ImageSource();\n    return image.setNativeSource(source) ? image : null;\n}\nexports.fromNativeSource = fromNativeSource;\nfunction fromUrl(url) {\n    ensureHttp();\n    return http.getImage(url);\n}\nexports.fromUrl = fromUrl;\nfunction fromFileOrResource(path) {\n    if (!utils_1.isFileOrResourcePath(path)) {\n        throw new Error(\"Path \\\"\" + \"\\\" is not a valid file or resource.\");\n    }\n    if (path.indexOf(utils_1.RESOURCE_PREFIX) === 0) {\n        return fromResource(path.substr(utils_1.RESOURCE_PREFIX.length));\n    }\n    return fromFile(path);\n}\nexports.fromFileOrResource = fromFileOrResource;\n//# sourceMappingURL=image-source.android.js.map"
    },
    {
      "id": 34,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
      "name": "./~/tns-core-modules/ui/styling/font.android.js",
      "index": 26,
      "index2": 22,
      "size": 5614,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
      "issuerId": 21,
      "issuerName": "./~/tns-core-modules/ui/styling/style-properties.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "./font",
          "loc": "3:13-30"
        },
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base.android.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "type": "cjs require",
          "userRequest": "../styling/font",
          "loc": "5:13-39"
        },
        {
          "moduleId": 155,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "module": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "type": "cjs require",
          "userRequest": "../styling/font",
          "loc": "5:13-39"
        },
        {
          "moduleId": 163,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "type": "cjs require",
          "userRequest": "../styling/font",
          "loc": "5:13-39"
        },
        {
          "moduleId": 261,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar.android.js",
          "module": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "type": "cjs require",
          "userRequest": "../styling/font",
          "loc": "5:13-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar font_common_1 = require(\"./font-common\");\nvar trace_1 = require(\"../../trace\");\nvar application = require(\"../../application\");\nvar fs = require(\"../../file-system\");\n__export(require(\"./font-common\"));\nvar FONTS_BASE_PATH = \"/fonts/\";\nvar typefaceCache = new Map();\nvar appAssets;\nvar Font = (function (_super) {\n    __extends(Font, _super);\n    function Font(family, size, style, weight) {\n        return _super.call(this, family, size, style, weight) || this;\n    }\n    Font.prototype.withFontFamily = function (family) {\n        return new Font(family, this.fontSize, this.fontStyle, this.fontWeight);\n    };\n    Font.prototype.withFontStyle = function (style) {\n        return new Font(this.fontFamily, this.fontSize, style, this.fontWeight);\n    };\n    Font.prototype.withFontWeight = function (weight) {\n        return new Font(this.fontFamily, this.fontSize, this.fontStyle, weight);\n    };\n    Font.prototype.withFontSize = function (size) {\n        return new Font(this.fontFamily, size, this.fontStyle, this.fontWeight);\n    };\n    Font.prototype.getAndroidTypeface = function () {\n        if (!this._typeface) {\n            var fontStyle = 0;\n            if (this.isBold) {\n                fontStyle |= android.graphics.Typeface.BOLD;\n            }\n            if (this.isItalic) {\n                fontStyle |= android.graphics.Typeface.ITALIC;\n            }\n            this._typeface = createTypeface(this, fontStyle);\n        }\n        return this._typeface;\n    };\n    Font.prototype.getUIFont = function (defaultFont) {\n        return undefined;\n    };\n    return Font;\n}(font_common_1.FontBase));\nFont.default = new Font(undefined, undefined, \"normal\", \"normal\");\nexports.Font = Font;\nfunction loadFontFromFile(fontFamily) {\n    appAssets = appAssets || application.android.context.getAssets();\n    if (!appAssets) {\n        return null;\n    }\n    var result = typefaceCache.get(fontFamily);\n    if (result === undefined) {\n        result = null;\n        var fontAssetPath = void 0;\n        var basePath = fs.path.join(fs.knownFolders.currentApp().path, \"fonts\", fontFamily);\n        if (fs.File.exists(basePath + \".ttf\")) {\n            fontAssetPath = FONTS_BASE_PATH + fontFamily + \".ttf\";\n        }\n        else if (fs.File.exists(basePath + \".otf\")) {\n            fontAssetPath = FONTS_BASE_PATH + fontFamily + \".otf\";\n        }\n        else {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"Could not find font file for \" + fontFamily, trace_1.categories.Error, trace_1.messageType.error);\n            }\n        }\n        if (fontAssetPath) {\n            try {\n                fontAssetPath = fs.path.join(fs.knownFolders.currentApp().path, fontAssetPath);\n                result = android.graphics.Typeface.createFromFile(fontAssetPath);\n            }\n            catch (e) {\n                if (trace_1.isEnabled()) {\n                    trace_1.write(\"Error loading font asset: \" + fontAssetPath, trace_1.categories.Error, trace_1.messageType.error);\n                }\n            }\n        }\n        typefaceCache.set(fontFamily, result);\n    }\n    return result;\n}\nfunction createTypeface(font, fontStyle) {\n    var fonts = font_common_1.parseFontFamily(font.fontFamily);\n    var result = null;\n    for (var i = 0; i < fonts.length && !result; i++) {\n        switch (fonts[i].toLowerCase()) {\n            case font_common_1.genericFontFamilies.serif:\n                result = android.graphics.Typeface.create(\"serif\" + getFontWeightSuffix(font.fontWeight), fontStyle);\n                break;\n            case font_common_1.genericFontFamilies.sansSerif:\n            case font_common_1.genericFontFamilies.system:\n                result = android.graphics.Typeface.create(\"sans-serif\" + getFontWeightSuffix(font.fontWeight), fontStyle);\n                break;\n            case font_common_1.genericFontFamilies.monospace:\n                result = android.graphics.Typeface.create(\"monospace\" + getFontWeightSuffix(font.fontWeight), fontStyle);\n                break;\n            default:\n                result = loadFontFromFile(fonts[i]);\n                if (fontStyle) {\n                    result = android.graphics.Typeface.create(result, fontStyle);\n                }\n                break;\n        }\n    }\n    if (fontStyle && !result) {\n        result = android.graphics.Typeface.create(result, fontStyle);\n    }\n    return result;\n}\nfunction getFontWeightSuffix(fontWeight) {\n    switch (fontWeight) {\n        case font_common_1.FontWeight.THIN:\n            return android.os.Build.VERSION.SDK_INT >= 16 ? \"-thin\" : \"\";\n        case font_common_1.FontWeight.EXTRA_LIGHT:\n        case font_common_1.FontWeight.LIGHT:\n            return android.os.Build.VERSION.SDK_INT >= 16 ? \"-light\" : \"\";\n        case font_common_1.FontWeight.NORMAL:\n        case \"400\":\n        case undefined:\n        case null:\n            return \"\";\n        case font_common_1.FontWeight.MEDIUM:\n        case font_common_1.FontWeight.SEMI_BOLD:\n            return android.os.Build.VERSION.SDK_INT >= 21 ? \"-medium\" : \"\";\n        case font_common_1.FontWeight.BOLD:\n        case \"700\":\n        case font_common_1.FontWeight.EXTRA_BOLD:\n            return \"\";\n        case font_common_1.FontWeight.BLACK:\n            return android.os.Build.VERSION.SDK_INT >= 21 ? \"-black\" : \"\";\n        default:\n            throw new Error(\"Invalid font weight: \\\"\" + fontWeight + \"\\\"\");\n    }\n}\n//# sourceMappingURL=font.android.js.map"
    },
    {
      "id": 35,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/platform-browser/@angular/platform-browser.es5.js",
      "name": "./~/@angular/platform-browser/@angular/platform-browser.es5.js",
      "index": 211,
      "index2": 205,
      "size": 141524,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 20,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
          "module": "./~/@angular/forms/@angular/forms.es5.js",
          "moduleName": "./~/@angular/forms/@angular/forms.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/platform-browser",
          "loc": "15:0-52"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/platform-browser",
          "loc": "29:0-52"
        },
        {
          "moduleId": 170,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/http/@angular/http.es5.js",
          "module": "./~/@angular/http/@angular/http.es5.js",
          "moduleName": "./~/@angular/http/@angular/http.es5.js",
          "type": "harmony import",
          "userRequest": "@angular/platform-browser",
          "loc": "13:0-52"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "@angular/platform-browser",
          "loc": "5:0-36"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "BrowserModule",
        "platformBrowser",
        "Meta",
        "Title",
        "disableDebugTools",
        "enableDebugTools",
        "By",
        "NgProbeToken",
        "DOCUMENT",
        "EVENT_MANAGER_PLUGINS",
        "EventManager",
        "HAMMER_GESTURE_CONFIG",
        "HammerGestureConfig",
        "DomSanitizer",
        "VERSION",
        "ɵBROWSER_SANITIZATION_PROVIDERS",
        "ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS",
        "ɵinitDomAdapter",
        "ɵBrowserDomAdapter",
        "ɵsetValueOnPath",
        "ɵBrowserPlatformLocation",
        "ɵTRANSITION_ID",
        "ɵBrowserGetTestability",
        "ɵELEMENT_PROBE_PROVIDERS",
        "ɵDomAdapter",
        "ɵgetDOM",
        "ɵsetRootDomAdapter",
        "ɵDomRendererFactory2",
        "ɵNAMESPACE_URIS",
        "ɵflattenStyles",
        "ɵshimContentAttribute",
        "ɵshimHostAttribute",
        "ɵDomEventsPlugin",
        "ɵHammerGesturesPlugin",
        "ɵKeyEventsPlugin",
        "ɵDomSharedStylesHost",
        "ɵSharedStylesHost",
        "ɵb",
        "ɵa",
        "ɵh",
        "ɵg",
        "ɵf",
        "ɵc",
        "ɵd",
        "ɵe"
      ],
      "depth": 1,
      "source": "var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { CommonModule, PlatformLocation, ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { APP_ID, APP_INITIALIZER, ApplicationModule, ApplicationRef, ErrorHandler, Inject, Injectable, InjectionToken, NgModule, NgProbeToken, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, RendererFactory2, RendererStyleFlags2, Sanitizer, SecurityContext, SkipSelf, Testability, Version, ViewEncapsulation, createPlatformFactory, getDebugNode, isDevMode, platformCore, setTestabilityGetter, ɵglobal } from '@angular/core';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _DOM = null;\n/**\n * @return {?}\n */\nfunction getDOM() {\n    return _DOM;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\n/**\n * @param {?} adapter\n * @return {?}\n */\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nvar DomAdapter = (function () {\n    function DomAdapter() {\n        this.resourceLoaderType = null;\n    }\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    DomAdapter.prototype.hasProperty = function (element, name) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setProperty = function (el, name, value) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DomAdapter.prototype.getProperty = function (el, name) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    DomAdapter.prototype.invoke = function (el, methodName, args) { };\n    /**\n     * @abstract\n     * @param {?} error\n     * @return {?}\n     */\n    DomAdapter.prototype.logError = function (error) { };\n    /**\n     * @abstract\n     * @param {?} error\n     * @return {?}\n     */\n    DomAdapter.prototype.log = function (error) { };\n    /**\n     * @abstract\n     * @param {?} error\n     * @return {?}\n     */\n    DomAdapter.prototype.logGroup = function (error) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.logGroupEnd = function () { };\n    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n        /**\n         * Maps attribute names to their corresponding property names for cases\n         * where attribute name doesn't match property name.\n         * @return {?}\n         */\n        get: function () { return this._attrToPropMap; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._attrToPropMap = value; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    ;\n    /**\n     * @abstract\n     * @param {?} nodeA\n     * @param {?} nodeB\n     * @return {?}\n     */\n    DomAdapter.prototype.contains = function (nodeA, nodeB) { };\n    /**\n     * @abstract\n     * @param {?} templateHtml\n     * @return {?}\n     */\n    DomAdapter.prototype.parse = function (templateHtml) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    DomAdapter.prototype.querySelector = function (el, selector) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    DomAdapter.prototype.querySelectorAll = function (el, selector) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    DomAdapter.prototype.on = function (el, evt, listener) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    DomAdapter.prototype.onAndCancel = function (el, evt, listener) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} evt\n     * @return {?}\n     */\n    DomAdapter.prototype.dispatchEvent = function (el, evt) { };\n    /**\n     * @abstract\n     * @param {?} eventType\n     * @return {?}\n     */\n    DomAdapter.prototype.createMouseEvent = function (eventType) { };\n    /**\n     * @abstract\n     * @param {?} eventType\n     * @return {?}\n     */\n    DomAdapter.prototype.createEvent = function (eventType) { };\n    /**\n     * @abstract\n     * @param {?} evt\n     * @return {?}\n     */\n    DomAdapter.prototype.preventDefault = function (evt) { };\n    /**\n     * @abstract\n     * @param {?} evt\n     * @return {?}\n     */\n    DomAdapter.prototype.isPrevented = function (evt) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getInnerHTML = function (el) { };\n    /**\n     * Returns content if el is a <template> element, null otherwise.\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getTemplateContent = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getOuterHTML = function (el) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.nodeName = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.nodeValue = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.type = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.content = function (node) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.firstChild = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.nextSibling = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.parentElement = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.childNodes = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.childNodesAsList = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.clearNodes = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.appendChild = function (el, node) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.removeChild = function (el, node) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} newNode\n     * @param {?} oldNode\n     * @return {?}\n     */\n    DomAdapter.prototype.replaceChild = function (el, newNode, oldNode) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.remove = function (el) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.insertBefore = function (parent, ref, node) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} nodes\n     * @return {?}\n     */\n    DomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.insertAfter = function (parent, el, node) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setInnerHTML = function (el, value) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getText = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setText = function (el, value) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getValue = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setValue = function (el, value) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getChecked = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setChecked = function (el, value) { };\n    /**\n     * @abstract\n     * @param {?} text\n     * @return {?}\n     */\n    DomAdapter.prototype.createComment = function (text) { };\n    /**\n     * @abstract\n     * @param {?} html\n     * @return {?}\n     */\n    DomAdapter.prototype.createTemplate = function (html) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.createElement = function (tagName, doc) { };\n    /**\n     * @abstract\n     * @param {?} ns\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.createElementNS = function (ns, tagName, doc) { };\n    /**\n     * @abstract\n     * @param {?} text\n     * @param {?=} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.createTextNode = function (text, doc) { };\n    /**\n     * @abstract\n     * @param {?} attrName\n     * @param {?} attrValue\n     * @param {?=} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) { };\n    /**\n     * @abstract\n     * @param {?} css\n     * @param {?=} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.createStyleElement = function (css, doc) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.createShadowRoot = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getShadowRoot = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getHost = function (el) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getDistributedNodes = function (el) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.clone /*<T extends Node>*/ = function (node) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    DomAdapter.prototype.getElementsByClassName = function (element, name) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    DomAdapter.prototype.getElementsByTagName = function (element, name) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @return {?}\n     */\n    DomAdapter.prototype.classList = function (element) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    DomAdapter.prototype.addClass = function (element, className) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    DomAdapter.prototype.removeClass = function (element, className) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    DomAdapter.prototype.hasClass = function (element, className) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    DomAdapter.prototype.setStyle = function (element, styleName, styleValue) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    DomAdapter.prototype.removeStyle = function (element, styleName) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    DomAdapter.prototype.getStyle = function (element, styleName) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    DomAdapter.prototype.hasStyle = function (element, styleName, styleValue) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @return {?}\n     */\n    DomAdapter.prototype.tagName = function (element) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @return {?}\n     */\n    DomAdapter.prototype.attributeMap = function (element) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    DomAdapter.prototype.hasAttribute = function (element, attribute) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    DomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    DomAdapter.prototype.getAttribute = function (element, attribute) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    DomAdapter.prototype.getAttributeNS = function (element, ns, attribute) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setAttribute = function (element, name, value) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setAttributeNS = function (element, ns, name, value) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    DomAdapter.prototype.removeAttribute = function (element, attribute) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    DomAdapter.prototype.removeAttributeNS = function (element, ns, attribute) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.templateAwareRoot = function (el) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.createHtmlDocument = function () { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.getBoundingClientRect = function (el) { };\n    /**\n     * @abstract\n     * @param {?} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.getTitle = function (doc) { };\n    /**\n     * @abstract\n     * @param {?} doc\n     * @param {?} newTitle\n     * @return {?}\n     */\n    DomAdapter.prototype.setTitle = function (doc, newTitle) { };\n    /**\n     * @abstract\n     * @param {?} n\n     * @param {?} selector\n     * @return {?}\n     */\n    DomAdapter.prototype.elementMatches = function (n, selector) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @return {?}\n     */\n    DomAdapter.prototype.isTemplateElement = function (el) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.isTextNode = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.isCommentNode = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.isElementNode = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.hasShadowRoot = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.isShadowRoot = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.importIntoDoc /*<T extends Node>*/ = function (node) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    DomAdapter.prototype.adoptNode /*<T extends Node>*/ = function (node) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @return {?}\n     */\n    DomAdapter.prototype.getHref = function (element) { };\n    /**\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    DomAdapter.prototype.getEventKey = function (event) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} baseUrl\n     * @param {?} href\n     * @return {?}\n     */\n    DomAdapter.prototype.resolveAndSetHref = function (element, baseUrl, href) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.supportsDOMEvents = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.supportsNativeShadowDOM = function () { };\n    /**\n     * @abstract\n     * @param {?} doc\n     * @param {?} target\n     * @return {?}\n     */\n    DomAdapter.prototype.getGlobalEventTarget = function (doc, target) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.getHistory = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.getLocation = function () { };\n    /**\n     * @abstract\n     * @param {?} doc\n     * @return {?}\n     */\n    DomAdapter.prototype.getBaseHref = function (doc) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.resetBaseElement = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.getUserAgent = function () { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setData = function (element, name, value) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @return {?}\n     */\n    DomAdapter.prototype.getComputedStyle = function (element) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    DomAdapter.prototype.getData = function (element, name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setGlobalVar = function (name, value) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.supportsWebAnimation = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.performanceNow = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.getAnimationPrefix = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.getTransitionEnd = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.supportsAnimation = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DomAdapter.prototype.supportsCookies = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    DomAdapter.prototype.getCookie = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DomAdapter.prototype.setCookie = function (name, value) { };\n    return DomAdapter;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nvar GenericBrowserDomAdapter = (function (_super) {\n    __extends(GenericBrowserDomAdapter, _super);\n    function GenericBrowserDomAdapter() {\n        var _this = _super.call(this) || this;\n        _this._animationPrefix = null;\n        _this._transitionEnd = null;\n        try {\n            var element_1 = _this.createElement('div', document);\n            if (_this.getStyle(element_1, 'animationName') != null) {\n                _this._animationPrefix = '';\n            }\n            else {\n                var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                for (var i = 0; i < domPrefixes.length; i++) {\n                    if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {\n                        _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                        break;\n                    }\n                }\n            }\n            var transEndEventNames_1 = {\n                WebkitTransition: 'webkitTransitionEnd',\n                MozTransition: 'transitionend',\n                OTransition: 'oTransitionEnd otransitionend',\n                transition: 'transitionend'\n            };\n            Object.keys(transEndEventNames_1).forEach(function (key) {\n                if (_this.getStyle(element_1, key) != null) {\n                    _this._transitionEnd = transEndEventNames_1[key];\n                }\n            });\n        }\n        catch (e) {\n            _this._animationPrefix = null;\n            _this._transitionEnd = null;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return ((el)).getDistributedNodes(); };\n    /**\n     * @param {?} el\n     * @param {?} baseUrl\n     * @param {?} href\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n        return typeof ((document.body)).createShadowRoot === 'function';\n    };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n        return this._animationPrefix != null && this._transitionEnd != null;\n    };\n    return GenericBrowserDomAdapter;\n}(DomAdapter));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _attrToPropMap = {\n    'class': 'className',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nvar _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nvar _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nvar nodeContains;\nif (ɵglobal['Node']) {\n    nodeContains = ɵglobal['Node'].prototype.contains || function (node) {\n        return !!(this.compareDocumentPosition(node) & 16);\n    };\n}\nvar BrowserDomAdapter = (function (_super) {\n    __extends(BrowserDomAdapter, _super);\n    function BrowserDomAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} templateHtml\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setProperty = function (el, name, value) { ((el))[name] = value; };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getProperty = function (el, name) { return ((el))[name]; };\n    /**\n     * @param {?} el\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { ((el))[methodName].apply(((el)), args); };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.logError = function (error) {\n        if (window.console) {\n            if (console.error) {\n                console.error(error);\n            }\n            else {\n                console.log(error);\n            }\n        }\n    };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.log = function (error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.logGroup = function (error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.logGroupEnd = function () {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    };\n    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return _attrToPropMap; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} nodeA\n     * @param {?} nodeB\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); };\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return function () { el.removeEventListener(evt, listener, false); };\n    };\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n        var /** @type {?} */ evt = document.createEvent('MouseEvent');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createEvent = function (eventType) {\n        var /** @type {?} */ evt = document.createEvent('Event');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.preventDefault = function (evt) {\n        evt.preventDefault();\n        evt.returnValue = false;\n    };\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isPrevented = function (evt) {\n        return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n        return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.content = function (node) {\n        if (this.hasProperty(node, 'content')) {\n            return ((node)).content;\n        }\n        else {\n            return node;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n        var /** @type {?} */ childNodes = el.childNodes;\n        var /** @type {?} */ res = new Array(childNodes.length);\n        for (var /** @type {?} */ i = 0; i < childNodes.length; i++) {\n            res[i] = childNodes[i];\n        }\n        return res;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.clearNodes = function (el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n    /**\n     * @param {?} el\n     * @param {?} newChild\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.remove = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) { parent.insertBefore(node, ref); };\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} nodes\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {\n        nodes.forEach(function (n) { return parent.insertBefore(n, ref); });\n    };\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) { parent.insertBefore(node, ref.nextSibling); };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createTemplate = function (html) {\n        var /** @type {?} */ t = document.createElement('template');\n        t.innerHTML = html;\n        return t;\n    };\n    /**\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n        if (doc === void 0) { doc = document; }\n        return doc.createElement(tagName);\n    };\n    /**\n     * @param {?} ns\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n        if (doc === void 0) { doc = document; }\n        return doc.createElementNS(ns, tagName);\n    };\n    /**\n     * @param {?} text\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n        if (doc === void 0) { doc = document; }\n        return doc.createTextNode(text);\n    };\n    /**\n     * @param {?} attrName\n     * @param {?} attrValue\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n        if (doc === void 0) { doc = document; }\n        var /** @type {?} */ el = (doc.createElement('SCRIPT'));\n        el.setAttribute(attrName, attrValue);\n        return el;\n    };\n    /**\n     * @param {?} css\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n        if (doc === void 0) { doc = document; }\n        var /** @type {?} */ style = (doc.createElement('style'));\n        this.appendChild(style, this.createTextNode(css));\n        return style;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createShadowRoot = function (el) { return ((el)).createShadowRoot(); };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getShadowRoot = function (el) { return ((el)).shadowRoot; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getHost = function (el) { return ((el)).host; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n        return element.getElementsByClassName(name);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n        return element.getElementsByTagName(name);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasClass = function (element, className) {\n        return element.classList.contains(className);\n    };\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n        element.style[styleName] = styleValue;\n    };\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        element.style[stylename] = '';\n    };\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n        if (styleValue === void 0) { styleValue = null; }\n        var /** @type {?} */ value = this.getStyle(element, styleName) || '';\n        return styleValue ? value == styleValue : value.length > 0;\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.attributeMap = function (element) {\n        var /** @type {?} */ res = new Map();\n        var /** @type {?} */ elAttrs = element.attributes;\n        for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n            var /** @type {?} */ attrib = elAttrs[i];\n            res.set(attrib.name, attrib.value);\n        }\n        return res;\n    };\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n        return element.hasAttribute(attribute);\n    };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n        return element.hasAttributeNS(ns, attribute);\n    };\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n        return element.getAttribute(attribute);\n    };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n        return element.getAttributeNS(ns, name);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n        element.setAttributeNS(ns, name, value);\n    };\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n        element.removeAttributeNS(ns, name);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createHtmlDocument = function () {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n        try {\n            return el.getBoundingClientRect();\n        }\n        catch (e) {\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n        }\n    };\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getTitle = function (doc) { return document.title; };\n    /**\n     * @param {?} doc\n     * @param {?} newTitle\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) { document.title = newTitle || ''; };\n    /**\n     * @param {?} n\n     * @param {?} selector\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n        if (n instanceof HTMLElement) {\n            return n.matches && n.matches(selector) ||\n                n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n        }\n        return false;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n        return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n        return node.shadowRoot != null && node instanceof HTMLElement;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getHref = function (el) { return ((el)).href; };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getEventKey = function (event) {\n        var /** @type {?} */ key = event.key;\n        if (key == null) {\n            key = event.keyIdentifier;\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n            // Safari cf\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n            if (key == null) {\n                return 'Unidentified';\n            }\n            if (key.startsWith('U+')) {\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                    // There is a bug in Chrome for numeric keypad keys:\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\n                    // 1, 2, 3 ... are reported as A, B, C ...\n                    key = ((_chromeNumKeyPadMap))[key];\n                }\n            }\n        }\n        return _keyMap[key] || key;\n    };\n    /**\n     * @param {?} doc\n     * @param {?} target\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return document;\n        }\n        if (target === 'body') {\n            return document.body;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getBaseHref = function (doc) {\n        var /** @type {?} */ href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setData = function (element, name, value) {\n        this.setAttribute(element, 'data-' + name, value);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getData = function (element, name) {\n        return this.getAttribute(element, 'data-' + name);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n    /**\n     * @param {?} path\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(ɵglobal, path, value); };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n        return typeof ((Element)).prototype['animate'] === 'function';\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.performanceNow = function () {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setCookie = function (name, value) {\n        // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n        // not clear other cookies.\n        document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    };\n    return BrowserDomAdapter;\n}(GenericBrowserDomAdapter));\nvar baseElement = null;\n/**\n * @return {?}\n */\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = document.querySelector('base');\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n/**\n * @param {?} cookieStr\n * @param {?} name\n * @return {?}\n */\nfunction parseCookieValue(cookieStr, name) {\n    name = encodeURIComponent(name);\n    for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n        var cookie = _a[_i];\n        var /** @type {?} */ eqIndex = cookie.indexOf('=');\n        var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n        if (cookieName.trim() === name) {\n            return decodeURIComponent(cookieValue);\n        }\n    }\n    return null;\n}\n/**\n * @param {?} global\n * @param {?} path\n * @param {?} value\n * @return {?}\n */\nfunction setValueOnPath(global, path, value) {\n    var /** @type {?} */ parts = path.split('.');\n    var /** @type {?} */ obj = global;\n    while (parts.length > 1) {\n        var /** @type {?} */ name = parts.shift();\n        if (obj.hasOwnProperty(name) && obj[name] != null) {\n            obj = obj[name];\n        }\n        else {\n            obj = obj[name] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * \\@stable\n */\nvar DOCUMENT = new InjectionToken('DocumentToken');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @return {?}\n */\nfunction supportsState() {\n    return !!window.history.pushState;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n */\nvar BrowserPlatformLocation = (function (_super) {\n    __extends(BrowserPlatformLocation, _super);\n    /**\n     * @param {?} _doc\n     */\n    function BrowserPlatformLocation(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._init();\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype._init = function () {\n        this._location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    };\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._location; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(this._doc); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.onPopState = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    };\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._location.pathname; },\n        /**\n         * @param {?} newPath\n         * @return {?}\n         */\n        set: function (newPath) { this._location.pathname = newPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._location.search; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._location.hash; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this._location.hash = url;\n        }\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this._location.hash = url;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n    /**\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n    return BrowserPlatformLocation;\n}(PlatformLocation));\nBrowserPlatformLocation.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserPlatformLocation.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service that can be used to get and add meta tags.\n *\n * \\@experimental\n */\nvar Meta = (function () {\n    /**\n     * @param {?} _doc\n     */\n    function Meta(_doc) {\n        this._doc = _doc;\n        this._dom = getDOM();\n    }\n    /**\n     * @param {?} tag\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    Meta.prototype.addTag = function (tag, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    };\n    /**\n     * @param {?} tags\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    Meta.prototype.addTags = function (tags, forceCreation) {\n        var _this = this;\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tags)\n            return [];\n        return tags.reduce(function (result, tag) {\n            if (tag) {\n                result.push(_this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    };\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    Meta.prototype.getTag = function (attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._dom.querySelector(this._doc, \"meta[\" + attrSelector + \"]\");\n    };\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    Meta.prototype.getTags = function (attrSelector) {\n        if (!attrSelector)\n            return [];\n        var /** @type {?} */ list /*NodeList*/ = this._dom.querySelectorAll(this._doc, \"meta[\" + attrSelector + \"]\");\n        return list ? [].slice.call(list) : [];\n    };\n    /**\n     * @param {?} tag\n     * @param {?=} selector\n     * @return {?}\n     */\n    Meta.prototype.updateTag = function (tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        var /** @type {?} */ meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    };\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    Meta.prototype.removeTag = function (attrSelector) { this.removeTagElement(this.getTag(attrSelector)); };\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    Meta.prototype.removeTagElement = function (meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    };\n    /**\n     * @param {?} meta\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    Meta.prototype._getOrCreateElement = function (meta, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!forceCreation) {\n            var /** @type {?} */ selector = this._parseSelector(meta);\n            var /** @type {?} */ elem = this.getTag(selector);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        var /** @type {?} */ element = (this._dom.createElement('meta'));\n        this._setMetaElementAttributes(meta, element);\n        var /** @type {?} */ head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n        this._dom.appendChild(head, element);\n        return element;\n    };\n    /**\n     * @param {?} tag\n     * @param {?} el\n     * @return {?}\n     */\n    Meta.prototype._setMetaElementAttributes = function (tag, el) {\n        var _this = this;\n        Object.keys(tag).forEach(function (prop) { return _this._dom.setAttribute(el, prop, tag[prop]); });\n        return el;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    Meta.prototype._parseSelector = function (tag) {\n        var /** @type {?} */ attr = tag.name ? 'name' : 'property';\n        return attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n    };\n    /**\n     * @param {?} tag\n     * @param {?} elem\n     * @return {?}\n     */\n    Meta.prototype._containsAttributes = function (tag, elem) {\n        var _this = this;\n        return Object.keys(tag).every(function (key) { return _this._dom.getAttribute(elem, key) === tag[key]; });\n    };\n    return Meta;\n}());\nMeta.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nMeta.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n/**\n * @param {?} transitionId\n * @param {?} document\n * @return {?}\n */\nfunction bootstrapListenerFactory(transitionId, document) {\n    var /** @type {?} */ factory = function () {\n        var /** @type {?} */ dom = getDOM();\n        var /** @type {?} */ styles = Array.prototype.slice.apply(dom.querySelectorAll(document, \"style[ng-transition]\"));\n        styles.filter(function (el) { return dom.getAttribute(el, 'ng-transition') === transitionId; })\n            .forEach(function (el) { return dom.remove(el); });\n    };\n    return factory;\n}\nvar SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: bootstrapListenerFactory,\n        deps: [TRANSITION_ID, DOCUMENT],\n        multi: true\n    },\n];\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = (function () {\n    function BrowserGetTestability() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserGetTestability.init = function () { setTestabilityGetter(new BrowserGetTestability()); };\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    BrowserGetTestability.prototype.addToWindow = function (registry) {\n        ɵglobal['getAngularTestability'] = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            var /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = function () { return registry.getAllTestabilities(); };\n        ɵglobal['getAllAngularRootElements'] = function () { return registry.getAllRootElements(); };\n        var /** @type {?} */ whenAllStable = function (callback /** TODO #9100 */) {\n            var /** @type {?} */ testabilities = ɵglobal['getAllAngularTestabilities']();\n            var /** @type {?} */ count = testabilities.length;\n            var /** @type {?} */ didWork = false;\n            var /** @type {?} */ decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        var /** @type {?} */ t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n        }\n        return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    };\n    return BrowserGetTestability;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * \\@experimental\n */\nvar Title = (function () {\n    /**\n     * @param {?} _doc\n     */\n    function Title(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     * @return {?}\n     */\n    Title.prototype.getTitle = function () { return getDOM().getTitle(this._doc); };\n    /**\n     * Set the title of the current HTML document.\n     * @param {?} newTitle\n     * @return {?}\n     */\n    Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(this._doc, newTitle); };\n    return Title;\n}());\nTitle.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nTitle.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar CORE_TOKENS = {\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n};\nvar INSPECT_GLOBAL_NAME = 'ng.probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\nfunction inspectNativeElement(element) {\n    return getDebugNode(element);\n}\n/**\n * Deprecated. Use the one from '\\@angular/core'.\n * @deprecated\n */\nvar NgProbeToken$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    function NgProbeToken$1(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken$1;\n}());\n/**\n * @param {?} extraTokens\n * @param {?} coreTokens\n * @return {?}\n */\nfunction _createNgProbe(extraTokens, coreTokens) {\n    var /** @type {?} */ tokens = (extraTokens || []).concat(coreTokens || []);\n    getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n    getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, __assign({}, CORE_TOKENS, _ngProbeTokensToMap(tokens || [])));\n    return function () { return inspectNativeElement; };\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nvar ELEMENT_PROBE_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbe,\n        deps: [\n            [NgProbeToken$1, new Optional()],\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * \\@stable\n */\nvar EventManager = (function () {\n    /**\n     * @param {?} plugins\n     * @param {?} _zone\n     */\n    function EventManager(plugins, _zone) {\n        var _this = this;\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(function (p) { return p.manager = _this; });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManager.prototype.addEventListener = function (element, eventName, handler) {\n        var /** @type {?} */ plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n        var /** @type {?} */ plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    };\n    /**\n     * @return {?}\n     */\n    EventManager.prototype.getZone = function () { return this._zone; };\n    /**\n     * \\@internal\n     * @param {?} eventName\n     * @return {?}\n     */\n    EventManager.prototype._findPluginFor = function (eventName) {\n        var /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        var /** @type {?} */ plugins = this._plugins;\n        for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n            var /** @type {?} */ plugin_1 = plugins[i];\n            if (plugin_1.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin_1);\n                return plugin_1;\n            }\n        }\n        throw new Error(\"No event manager plugin found for event \" + eventName);\n    };\n    return EventManager;\n}());\nEventManager.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nEventManager.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n    { type: NgZone, },\n]; };\n/**\n * @abstract\n */\nvar EventManagerPlugin = (function () {\n    /**\n     * @param {?} _doc\n     */\n    function EventManagerPlugin(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * @abstract\n     * @param {?} eventName\n     * @return {?}\n     */\n    EventManagerPlugin.prototype.supports = function (eventName) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) { };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n        var /** @type {?} */ target = getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n        }\n        return this.addEventListener(target, eventName, handler);\n    };\n    ;\n    return EventManagerPlugin;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = (function () {\n    function SharedStylesHost() {\n        /**\n         * \\@internal\n         */\n        this._stylesSet = new Set();\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    SharedStylesHost.prototype.addStyles = function (styles) {\n        var _this = this;\n        var /** @type {?} */ additions = new Set();\n        styles.forEach(function (style) {\n            if (!_this._stylesSet.has(style)) {\n                _this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    };\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n    SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n    /**\n     * @return {?}\n     */\n    SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n    return SharedStylesHost;\n}());\nSharedStylesHost.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSharedStylesHost.ctorParameters = function () { return []; };\nvar DomSharedStylesHost = (function (_super) {\n    __extends(DomSharedStylesHost, _super);\n    /**\n     * @param {?} _doc\n     */\n    function DomSharedStylesHost(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._hostNodes = new Set();\n        _this._styleNodes = new Set();\n        _this._hostNodes.add(_doc.head);\n        return _this;\n    }\n    /**\n     * @param {?} styles\n     * @param {?} host\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n        var _this = this;\n        styles.forEach(function (style) {\n            var /** @type {?} */ styleEl = _this._doc.createElement('style');\n            styleEl.textContent = style;\n            _this._styleNodes.add(host.appendChild(styleEl));\n        });\n    };\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.addHost = function (hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    };\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n        var _this = this;\n        this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n    };\n    /**\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n    return DomSharedStylesHost;\n}(SharedStylesHost));\nDomSharedStylesHost.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nDomSharedStylesHost.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\nfunction flattenStyles(compId, styles, target) {\n    for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n        var /** @type {?} */ style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\nfunction decoratePreventDefault(eventHandler) {\n    return function (event) {\n        var /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n    };\n}\nvar DomRendererFactory2 = (function () {\n    /**\n     * @param {?} eventManager\n     * @param {?} sharedStylesHost\n     */\n    function DomRendererFactory2(eventManager, sharedStylesHost) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    ;\n    /**\n     * @param {?} element\n     * @param {?} type\n     * @return {?}\n     */\n    DomRendererFactory2.prototype.createRenderer = function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                var /** @type {?} */ renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer =\n                        new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                ((renderer)).applyToHost(element);\n                return renderer;\n            }\n            case ViewEncapsulation.Native:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    var /** @type {?} */ styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    };\n    return DomRendererFactory2;\n}());\nDomRendererFactory2.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nDomRendererFactory2.ctorParameters = function () { return [\n    { type: EventManager, },\n    { type: DomSharedStylesHost, },\n]; };\nvar DefaultDomRenderer2 = (function () {\n    /**\n     * @param {?} eventManager\n     */\n    function DefaultDomRenderer2(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    /**\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.destroy = function () { };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.createElement = function (name, namespace) {\n        if (namespace) {\n            return document.createElementNS(NAMESPACE_URIS[namespace], name);\n        }\n        return document.createElement(name);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.createComment = function (value) { return document.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.createText = function (value) { return document.createTextNode(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) { parent.appendChild(newChild); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var /** @type {?} */ el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n        }\n        el.textContent = '';\n        return el;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.parentNode = function (node) { return node.parentNode; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.nextSibling = function (node) { return node.nextSibling; };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + \":\" + name;\n            var /** @type {?} */ namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        if (namespace) {\n            var /** @type {?} */ namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(namespace + \":\" + name);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.addClass = function (el, name) { el.classList.add(name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeClass = function (el, name) { el.classList.remove(name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {\n        checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setValue = function (node, value) { node.nodeValue = value; };\n    /**\n     * @param {?} target\n     * @param {?} event\n     * @param {?} callback\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.listen = function (target, event, callback) {\n        checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return (this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback)));\n        }\n        return ((this.eventManager.addEventListener(target, event, decoratePreventDefault(callback))));\n    };\n    return DefaultDomRenderer2;\n}());\nvar AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(\"Found the synthetic \" + nameKind + \" \" + name + \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\");\n    }\n}\nvar EmulatedEncapsulationDomRenderer2 = (function (_super) {\n    __extends(EmulatedEncapsulationDomRenderer2, _super);\n    /**\n     * @param {?} eventManager\n     * @param {?} sharedStylesHost\n     * @param {?} component\n     */\n    function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.component = component;\n        var styles = flattenStyles(component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        _this.contentAttr = shimContentAttribute(component.id);\n        _this.hostAttr = shimHostAttribute(component.id);\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element) { _super.prototype.setAttribute.call(this, element, this.hostAttr, ''); };\n    /**\n     * @param {?} parent\n     * @param {?} name\n     * @return {?}\n     */\n    EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {\n        var /** @type {?} */ el = _super.prototype.createElement.call(this, parent, name);\n        _super.prototype.setAttribute.call(this, el, this.contentAttr, '');\n        return el;\n    };\n    return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2));\nvar ShadowDomRenderer = (function (_super) {\n    __extends(ShadowDomRenderer, _super);\n    /**\n     * @param {?} eventManager\n     * @param {?} sharedStylesHost\n     * @param {?} hostEl\n     * @param {?} component\n     */\n    function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.sharedStylesHost = sharedStylesHost;\n        _this.hostEl = hostEl;\n        _this.component = component;\n        _this.shadowRoot = hostEl.createShadowRoot();\n        _this.sharedStylesHost.addHost(_this.shadowRoot);\n        var styles = flattenStyles(component.id, component.styles, []);\n        for (var i = 0; i < styles.length; i++) {\n            var styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            _this.shadowRoot.appendChild(styleEl);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) { return node === this.hostEl ? this.shadowRoot : node; };\n    /**\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.destroy = function () { this.sharedStylesHost.removeHost(this.shadowRoot); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {\n        return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {\n        return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.parentNode = function (node) {\n        return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));\n    };\n    return ShadowDomRenderer;\n}(DefaultDomRenderer2));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DomEventsPlugin = (function (_super) {\n    __extends(DomEventsPlugin, _super);\n    /**\n     * @param {?} doc\n     */\n    function DomEventsPlugin(doc) {\n        return _super.call(this, doc) || this;\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        element.addEventListener(eventName, /** @type {?} */ (handler), false);\n        return function () { return element.removeEventListener(eventName, /** @type {?} */ (handler), false); };\n    };\n    return DomEventsPlugin;\n}(EventManagerPlugin));\nDomEventsPlugin.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nDomEventsPlugin.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * A DI token that you can use to provide{\\@link HammerGestureConfig} to Angular. Use it to configure\n * Hammer gestures.\n *\n * \\@experimental\n */\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * \\@experimental\n */\nvar HammerGestureConfig = (function () {\n    function HammerGestureConfig() {\n        this.events = [];\n        this.overrides = {};\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    HammerGestureConfig.prototype.buildHammer = function (element) {\n        var /** @type {?} */ mc = new Hammer(element);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (var /** @type {?} */ eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    };\n    return HammerGestureConfig;\n}());\nHammerGestureConfig.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHammerGestureConfig.ctorParameters = function () { return []; };\nvar HammerGesturesPlugin = (function (_super) {\n    __extends(HammerGesturesPlugin, _super);\n    /**\n     * @param {?} doc\n     * @param {?} _config\n     */\n    function HammerGesturesPlugin(doc, _config) {\n        var _this = _super.call(this, doc) || this;\n        _this._config = _config;\n        return _this;\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    HammerGesturesPlugin.prototype.supports = function (eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!((window)).Hammer) {\n            throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n        }\n        return true;\n    };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var /** @type {?} */ zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        return zone.runOutsideAngular(function () {\n            // Creating the manager bind events, must be done outside of angular\n            var /** @type {?} */ mc = _this._config.buildHammer(element);\n            var /** @type {?} */ callback = function (eventObj) {\n                zone.runGuarded(function () { handler(eventObj); });\n            };\n            mc.on(eventName, callback);\n            return function () { return mc.off(eventName, callback); };\n        });\n    };\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n    return HammerGesturesPlugin;\n}(EventManagerPlugin));\nHammerGesturesPlugin.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHammerGesturesPlugin.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar MODIFIER_KEY_GETTERS = {\n    'alt': function (event) { return event.altKey; },\n    'control': function (event) { return event.ctrlKey; },\n    'meta': function (event) { return event.metaKey; },\n    'shift': function (event) { return event.shiftKey; }\n};\n/**\n * \\@experimental\n */\nvar KeyEventsPlugin = (function (_super) {\n    __extends(KeyEventsPlugin, _super);\n    /**\n     * @param {?} doc\n     */\n    function KeyEventsPlugin(doc) {\n        return _super.call(this, doc) || this;\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var /** @type {?} */ parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        var /** @type {?} */ outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(function () {\n            return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    };\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    KeyEventsPlugin.parseEventName = function (eventName) {\n        var /** @type {?} */ parts = eventName.toLowerCase().split('.');\n        var /** @type {?} */ domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        var /** @type {?} */ key = KeyEventsPlugin._normalizeKey(parts.pop());\n        var /** @type {?} */ fullKey = '';\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            var /** @type {?} */ index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        var /** @type {?} */ result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    KeyEventsPlugin.getEventFullKey = function (event) {\n        var /** @type {?} */ fullKey = '';\n        var /** @type {?} */ key = getDOM().getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            if (modifierName != key) {\n                var /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    };\n    /**\n     * @param {?} fullKey\n     * @param {?} handler\n     * @param {?} zone\n     * @return {?}\n     */\n    KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n        return function (event /** TODO #9100 */) {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(function () { return handler(event); });\n            }\n        };\n    };\n    /**\n     * \\@internal\n     * @param {?} keyName\n     * @return {?}\n     */\n    KeyEventsPlugin._normalizeKey = function (keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    };\n    return KeyEventsPlugin;\n}(EventManagerPlugin));\nKeyEventsPlugin.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nKeyEventsPlugin.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\nvar inertElement = null;\n/** Lazily initialized to make sure the DOM adapter gets set before use. */\nvar DOM = null;\n/**\n * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n * @return {?}\n */\nfunction getInertElement() {\n    if (inertElement)\n        return inertElement;\n    DOM = getDOM();\n    // Prefer using <template> element if supported.\n    var /** @type {?} */ templateEl = DOM.createElement('template');\n    if ('content' in templateEl)\n        return templateEl;\n    var /** @type {?} */ doc = DOM.createHtmlDocument();\n    inertElement = DOM.querySelector(doc, 'body');\n    if (inertElement == null) {\n        // usually there should be only one body element in the document, but IE doesn't have any, so we\n        // need to create one.\n        var /** @type {?} */ html = DOM.createElement('html', doc);\n        inertElement = DOM.createElement('body', doc);\n        DOM.appendChild(html, inertElement);\n        DOM.appendChild(doc, html);\n    }\n    return inertElement;\n}\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n        var t = _a[_i];\n        res[t] = true;\n    }\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var /** @type {?} */ res = {};\n    for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n        var s = sets_1[_a];\n        for (var /** @type {?} */ v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = (function () {\n    function SanitizingHtmlSerializer() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var /** @type {?} */ current = el.firstChild;\n        while (current) {\n            if (DOM.isElementNode(current)) {\n                this.startElement(/** @type {?} */ (current));\n            }\n            else if (DOM.isTextNode(current)) {\n                this.chars(DOM.nodeValue(current));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (DOM.firstChild(current)) {\n                current = DOM.firstChild(current);\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (DOM.isElementNode(current)) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                var /** @type {?} */ next = checkClobberedElement(current, DOM.nextSibling(current));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = checkClobberedElement(current, DOM.parentElement(current));\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var _this = this;\n        var /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        DOM.attributeMap(element).forEach(function (value, attrName) {\n            var /** @type {?} */ lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                _this.sanitizedSomething = true;\n                return;\n            }\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            _this.buf.push(' ');\n            _this.buf.push(attrName);\n            _this.buf.push('=\"');\n            _this.buf.push(encodeEntities(value));\n            _this.buf.push('\"');\n        });\n        this.buf.push('>');\n    };\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    return SanitizingHtmlSerializer;\n}());\n/**\n * @param {?} node\n * @param {?} nextNode\n * @return {?}\n */\nfunction checkClobberedElement(node, nextNode) {\n    if (nextNode && DOM.contains(node, nextNode)) {\n        throw new Error(\"Failed to sanitize html because the element is clobbered: \" + DOM.getOuterHTML(node));\n    }\n    return nextNode;\n}\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var /** @type {?} */ hi = match.charCodeAt(0);\n        var /** @type {?} */ low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n/**\n * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n *\n * This is undesirable since we don't want to allow any of these custom attributes. This method\n * strips them all.\n * @param {?} el\n * @return {?}\n */\nfunction stripCustomNsAttrs(el) {\n    DOM.attributeMap(el).forEach(function (_, attrName) {\n        if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n            DOM.removeAttribute(el, attrName);\n        }\n    });\n    for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n        var n = _a[_i];\n        if (DOM.isElementNode(n))\n            stripCustomNsAttrs(/** @type {?} */ (n));\n    }\n}\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nfunction sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    try {\n        var /** @type {?} */ containerEl = getInertElement();\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var /** @type {?} */ mXSSAttempts = 5;\n        var /** @type {?} */ parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            DOM.setInnerHTML(containerEl, unsafeHtml);\n            if (defaultDoc.documentMode) {\n                // strip custom-namespaced attributes on IE<=11\n                stripCustomNsAttrs(containerEl);\n            }\n            parsedHtml = DOM.getInnerHTML(containerEl);\n        } while (unsafeHtml !== parsedHtml);\n        var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n        var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n        // Clear out the body element.\n        var /** @type {?} */ parent = DOM.getTemplateContent(containerEl) || containerEl;\n        for (var _i = 0, _a = DOM.childNodesAsList(parent); _i < _a.length; _i++) {\n            var child = _a[_i];\n            DOM.removeChild(parent, child);\n        }\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    catch (e) {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        inertElement = null;\n        throw e;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    var /** @type {?} */ outsideSingle = true;\n    var /** @type {?} */ outsideDouble = true;\n    for (var /** @type {?} */ i = 0; i < value.length; i++) {\n        var /** @type {?} */ c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nfunction sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var /** @type {?} */ urlMatch = value.match(URL_RE);\n    if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n * @abstract\n */\nvar DomSanitizer = (function () {\n    function DomSanitizer() {\n    }\n    /**\n     * Sanitizes a value for use in the given SecurityContext.\n     *\n     * If value is trusted for the context, this method will unwrap the contained safe value and use\n     * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n     * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n     * is responsible to make sure that the value can definitely be safely used in the given context.\n     * @abstract\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizer.prototype.sanitize = function (context, value) { };\n    /**\n     * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n     * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n     * leave safe HTML intact, so in most situations this method should not be used.\n     *\n     * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n     * security risks!\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizer.prototype.bypassSecurityTrustHtml = function (value) { };\n    /**\n     * Bypass security and trust the given value to be safe style value (CSS).\n     *\n     * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n     * security risks!\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizer.prototype.bypassSecurityTrustStyle = function (value) { };\n    /**\n     * Bypass security and trust the given value to be safe JavaScript.\n     *\n     * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n     * security risks!\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizer.prototype.bypassSecurityTrustScript = function (value) { };\n    /**\n     * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n     * in hyperlinks or `<img src>`.\n     *\n     * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n     * security risks!\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizer.prototype.bypassSecurityTrustUrl = function (value) { };\n    /**\n     * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n     * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n     *\n     * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n     * security risks!\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizer.prototype.bypassSecurityTrustResourceUrl = function (value) { };\n    return DomSanitizer;\n}());\nvar DomSanitizerImpl = (function (_super) {\n    __extends(DomSanitizerImpl, _super);\n    /**\n     * @param {?} _doc\n     */\n    function DomSanitizerImpl(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (value instanceof SafeHtmlImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'HTML');\n                return sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (value instanceof SafeStyleImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Style');\n                return sanitizeStyle(value);\n            case SecurityContext.SCRIPT:\n                if (value instanceof SafeScriptImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Script');\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                    // Allow resource URLs in URL contexts, they are strictly more trusted.\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'URL');\n                return sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (value instanceof SafeResourceUrlImpl) {\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'ResourceURL');\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n        }\n    };\n    /**\n     * @param {?} value\n     * @param {?} expectedType\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n        if (value instanceof SafeValueImpl) {\n            throw new Error(\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \" +\n                \"(see http://g.co/ng/security#xss)\");\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n        return new SafeResourceUrlImpl(value);\n    };\n    return DomSanitizerImpl;\n}(DomSanitizer));\nDomSanitizerImpl.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nDomSanitizerImpl.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * @abstract\n */\nvar SafeValueImpl = (function () {\n    /**\n     * @param {?} changingThisBreaksApplicationSecurity\n     */\n    function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        // empty\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    SafeValueImpl.prototype.getTypeName = function () { };\n    /**\n     * @return {?}\n     */\n    SafeValueImpl.prototype.toString = function () {\n        return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n            \" (see http://g.co/ng/security#xss)\";\n    };\n    return SafeValueImpl;\n}());\nvar SafeHtmlImpl = (function (_super) {\n    __extends(SafeHtmlImpl, _super);\n    function SafeHtmlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n    return SafeHtmlImpl;\n}(SafeValueImpl));\nvar SafeStyleImpl = (function (_super) {\n    __extends(SafeStyleImpl, _super);\n    function SafeStyleImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n    return SafeStyleImpl;\n}(SafeValueImpl));\nvar SafeScriptImpl = (function (_super) {\n    __extends(SafeScriptImpl, _super);\n    function SafeScriptImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n    return SafeScriptImpl;\n}(SafeValueImpl));\nvar SafeUrlImpl = (function (_super) {\n    __extends(SafeUrlImpl, _super);\n    function SafeUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n    return SafeUrlImpl;\n}(SafeValueImpl));\nvar SafeResourceUrlImpl = (function (_super) {\n    __extends(SafeResourceUrlImpl, _super);\n    function SafeResourceUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n    return SafeResourceUrlImpl;\n}(SafeValueImpl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: PlatformLocation, useClass: BrowserPlatformLocation },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@experimental\n */\nvar BROWSER_SANITIZATION_PROVIDERS = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl },\n];\n/**\n * \\@stable\n */\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\nfunction errorHandler() {\n    return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document() {\n    return document;\n}\n/**\n * The ng module for the browser.\n *\n * \\@stable\n */\nvar BrowserModule = (function () {\n    /**\n     * @param {?} parentModule\n     */\n    function BrowserModule(parentModule) {\n        if (parentModule) {\n            throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n        }\n    }\n    /**\n     * Configures a browser-based application to transition from a server-rendered app, if\n     * one is present on the page. The specified parameters must include an application id,\n     * which must match between the client and server applications.\n     *\n     * \\@experimental\n     * @param {?} params\n     * @return {?}\n     */\n    BrowserModule.withServerTransition = function (params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    };\n    return BrowserModule;\n}());\nBrowserModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    BROWSER_SANITIZATION_PROVIDERS,\n                    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n                    { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n                    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n                    { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n                    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n                    DomRendererFactory2,\n                    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n                    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n                    DomSharedStylesHost,\n                    Testability,\n                    EventManager,\n                    ELEMENT_PROBE_PROVIDERS,\n                    Meta,\n                    Title,\n                ],\n                exports: [CommonModule, ApplicationModule]\n            },] },\n];\n/**\n * @nocollapse\n */\nBrowserModule.ctorParameters = function () { return [\n    { type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = (function () {\n    /**\n     * @param {?} msPerTick\n     * @param {?} numTicks\n     */\n    function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n    return ChangeDetectionPerfRecord;\n}());\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = (function () {\n    /**\n     * @param {?} ref\n     */\n    function AngularProfiler(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    AngularProfiler.prototype.timeChangeDetection = function (config) {\n        var /** @type {?} */ record = config && config['record'];\n        var /** @type {?} */ profileName = 'Change Detection';\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n        var /** @type {?} */ isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        var /** @type {?} */ start = getDOM().performanceNow();\n        var /** @type {?} */ numTicks = 0;\n        while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        var /** @type {?} */ end = getDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            // need to cast to <any> because type checker thinks there's no argument\n            // while in fact there is:\n            //\n            // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n            ((win.console.profileEnd))(profileName);\n        }\n        var /** @type {?} */ msPerTick = (end - start) / numTicks;\n        win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n        win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    };\n    return AngularProfiler;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROFILER_GLOBAL_NAME = 'ng.profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @template T\n * @param {?} ref\n * @return {?}\n */\nfunction enableDebugTools(ref) {\n    getDOM().setGlobalVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @return {?}\n */\nfunction disableDebugTools() {\n    getDOM().setGlobalVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n *\n * \\@experimental All debugging apis are currently experimental.\n */\nvar By = (function () {\n    function By() {\n    }\n    /**\n     * Match all elements.\n     *\n     * ## Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     * @return {?}\n     */\n    By.all = function () { return function (debugElement) { return true; }; };\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * ## Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     * @param {?} selector\n     * @return {?}\n     */\n    By.css = function (selector) {\n        return function (debugElement) {\n            return debugElement.nativeElement != null ?\n                getDOM().elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    };\n    /**\n     * Match elements that have the given directive present.\n     *\n     * ## Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     * @param {?} type\n     * @return {?}\n     */\n    By.directive = function (type) {\n        return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n    };\n    return By;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, By, NgProbeToken$1 as NgProbeToken, DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig, DomSanitizer, VERSION, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ɵinitDomAdapter, BrowserDomAdapter as ɵBrowserDomAdapter, setValueOnPath as ɵsetValueOnPath, BrowserPlatformLocation as ɵBrowserPlatformLocation, TRANSITION_ID as ɵTRANSITION_ID, BrowserGetTestability as ɵBrowserGetTestability, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, setRootDomAdapter as ɵsetRootDomAdapter, DomRendererFactory2 as ɵDomRendererFactory2, NAMESPACE_URIS as ɵNAMESPACE_URIS, flattenStyles as ɵflattenStyles, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute, DomEventsPlugin as ɵDomEventsPlugin, HammerGesturesPlugin as ɵHammerGesturesPlugin, KeyEventsPlugin as ɵKeyEventsPlugin, DomSharedStylesHost as ɵDomSharedStylesHost, SharedStylesHost as ɵSharedStylesHost, _document as ɵb, errorHandler as ɵa, GenericBrowserDomAdapter as ɵh, SERVER_TRANSITION_PROVIDERS as ɵg, bootstrapListenerFactory as ɵf, _createNgProbe as ɵc, EventManagerPlugin as ɵd, DomSanitizerImpl as ɵe };\n//# sourceMappingURL=platform-browser.es5.js.map\n"
    },
    {
      "id": 36,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
      "index": 218,
      "index2": 236,
      "size": 65522,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-telerik-ui-pro/chart/angular/chart-directives",
          "loc": "13:14-83"
        },
        {
          "moduleId": 183,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
          "module": "./app/app.component.ngfactory.ts",
          "moduleName": "./app/app.component.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-telerik-ui-pro/chart/angular/chart-directives",
          "loc": "11:14-83"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "nativescript-telerik-ui-pro/chart/angular",
          "loc": "14:0-52"
        },
        {
          "moduleId": 189,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
          "module": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-telerik-ui-pro/chart/angular/chart-directives",
          "loc": "10:14-83"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar elementRegistryModule = require(\"nativescript-angular/element-registry\");\nvar chartModule = require(\"./../\");\nvar observable_array_1 = require(\"tns-core-modules/data/observable-array\");\nvar SeriesComponentBase = (function () {\n    function SeriesComponentBase() {\n    }\n    Object.defineProperty(SeriesComponentBase.prototype, \"nativeSeries\", {\n        get: function () {\n            return this._nativeSeries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SeriesComponentBase;\n}());\nexports.SeriesComponentBase = SeriesComponentBase;\nvar RadCartesianChartComponent = (function () {\n    function RadCartesianChartComponent(_elementRef) {\n        this._elementRef = _elementRef;\n        this._nativeChart = _elementRef.nativeElement;\n    }\n    Object.defineProperty(RadCartesianChartComponent.prototype, \"cartesianChart\", {\n        get: function () {\n            return this._nativeChart;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RadCartesianChartComponent;\n}());\nRadCartesianChartComponent = __decorate([\n    core_1.Component({\n        selector: \"RadCartesianChart\",\n        template: \"\",\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], RadCartesianChartComponent);\nexports.RadCartesianChartComponent = RadCartesianChartComponent;\nvar RadPieChartComponent = (function () {\n    function RadPieChartComponent(_elementRef) {\n        this._elementRef = _elementRef;\n        this._nativeChart = _elementRef.nativeElement;\n    }\n    Object.defineProperty(RadPieChartComponent.prototype, \"pieChart\", {\n        get: function () {\n            return this._nativeChart;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RadPieChartComponent;\n}());\nRadPieChartComponent = __decorate([\n    core_1.Component({\n        selector: \"RadPieChart\",\n        template: \"\",\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], RadPieChartComponent);\nexports.RadPieChartComponent = RadPieChartComponent;\nvar RadLegendViewDirective = (function () {\n    function RadLegendViewDirective() {\n    }\n    return RadLegendViewDirective;\n}());\nRadLegendViewDirective = __decorate([\n    core_1.Directive({\n        selector: \"RadLegendView\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], RadLegendViewDirective);\nexports.RadLegendViewDirective = RadLegendViewDirective;\nvar CategoricalAxisDirective = (function () {\n    function CategoricalAxisDirective() {\n    }\n    return CategoricalAxisDirective;\n}());\nCategoricalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"CategoricalAxis\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], CategoricalAxisDirective);\nexports.CategoricalAxisDirective = CategoricalAxisDirective;\nvar LinearAxisDirective = (function () {\n    function LinearAxisDirective() {\n    }\n    return LinearAxisDirective;\n}());\nLinearAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"LinearAxis\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], LinearAxisDirective);\nexports.LinearAxisDirective = LinearAxisDirective;\nvar DateTimeCategoricalAxisDirective = (function () {\n    function DateTimeCategoricalAxisDirective() {\n    }\n    return DateTimeCategoricalAxisDirective;\n}());\nDateTimeCategoricalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"DateTimeCategoricalAxis\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], DateTimeCategoricalAxisDirective);\nexports.DateTimeCategoricalAxisDirective = DateTimeCategoricalAxisDirective;\nvar DateTimeContinuousAxisDirective = (function () {\n    function DateTimeContinuousAxisDirective() {\n    }\n    return DateTimeContinuousAxisDirective;\n}());\nDateTimeContinuousAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"DateTimeContinuousAxis\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], DateTimeContinuousAxisDirective);\nexports.DateTimeContinuousAxisDirective = DateTimeContinuousAxisDirective;\nvar LogarithmicAxisDirective = (function () {\n    function LogarithmicAxisDirective() {\n    }\n    return LogarithmicAxisDirective;\n}());\nLogarithmicAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"LogarithmicAxis\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], LogarithmicAxisDirective);\nexports.LogarithmicAxisDirective = LogarithmicAxisDirective;\nvar LineSeriesDirective = (function (_super) {\n    __extends(LineSeriesDirective, _super);\n    function LineSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return LineSeriesDirective;\n}(SeriesComponentBase));\nLineSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"LineSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], LineSeriesDirective);\nexports.LineSeriesDirective = LineSeriesDirective;\nvar AreaSeriesDirective = (function (_super) {\n    __extends(AreaSeriesDirective, _super);\n    function AreaSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return AreaSeriesDirective;\n}(SeriesComponentBase));\nAreaSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"AreaSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], AreaSeriesDirective);\nexports.AreaSeriesDirective = AreaSeriesDirective;\nvar SplineSeriesDirective = (function (_super) {\n    __extends(SplineSeriesDirective, _super);\n    function SplineSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return SplineSeriesDirective;\n}(SeriesComponentBase));\nSplineSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"SplineSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], SplineSeriesDirective);\nexports.SplineSeriesDirective = SplineSeriesDirective;\nvar SplineAreaSeriesDirective = (function (_super) {\n    __extends(SplineAreaSeriesDirective, _super);\n    function SplineAreaSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return SplineAreaSeriesDirective;\n}(SeriesComponentBase));\nSplineAreaSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"SplineAreaSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], SplineAreaSeriesDirective);\nexports.SplineAreaSeriesDirective = SplineAreaSeriesDirective;\nvar BarSeriesDirective = (function (_super) {\n    __extends(BarSeriesDirective, _super);\n    function BarSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return BarSeriesDirective;\n}(SeriesComponentBase));\nBarSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"BarSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], BarSeriesDirective);\nexports.BarSeriesDirective = BarSeriesDirective;\nvar RangeBarSeriesDirective = (function (_super) {\n    __extends(RangeBarSeriesDirective, _super);\n    function RangeBarSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return RangeBarSeriesDirective;\n}(SeriesComponentBase));\nRangeBarSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"RangeBarSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], RangeBarSeriesDirective);\nexports.RangeBarSeriesDirective = RangeBarSeriesDirective;\nvar BubbleSeriesDirective = (function (_super) {\n    __extends(BubbleSeriesDirective, _super);\n    function BubbleSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return BubbleSeriesDirective;\n}(SeriesComponentBase));\nBubbleSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"BubbleSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], BubbleSeriesDirective);\nexports.BubbleSeriesDirective = BubbleSeriesDirective;\nvar ScatterBubbleSeriesDirective = (function (_super) {\n    __extends(ScatterBubbleSeriesDirective, _super);\n    function ScatterBubbleSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return ScatterBubbleSeriesDirective;\n}(SeriesComponentBase));\nScatterBubbleSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"ScatterBubbleSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], ScatterBubbleSeriesDirective);\nexports.ScatterBubbleSeriesDirective = ScatterBubbleSeriesDirective;\nvar ScatterSeriesDirective = (function (_super) {\n    __extends(ScatterSeriesDirective, _super);\n    function ScatterSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return ScatterSeriesDirective;\n}(SeriesComponentBase));\nScatterSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"ScatterSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], ScatterSeriesDirective);\nexports.ScatterSeriesDirective = ScatterSeriesDirective;\nvar PaletteDirective = (function (_super) {\n    __extends(PaletteDirective, _super);\n    function PaletteDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return PaletteDirective;\n}(SeriesComponentBase));\nPaletteDirective = __decorate([\n    core_1.Directive({\n        selector: \"Palette\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], PaletteDirective);\nexports.PaletteDirective = PaletteDirective;\nvar PieSeriesDirective = (function (_super) {\n    __extends(PieSeriesDirective, _super);\n    function PieSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return PieSeriesDirective;\n}(SeriesComponentBase));\nPieSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"PieSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], PieSeriesDirective);\nexports.PieSeriesDirective = PieSeriesDirective;\nvar DonutSeriesDirective = (function (_super) {\n    __extends(DonutSeriesDirective, _super);\n    function DonutSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return DonutSeriesDirective;\n}(SeriesComponentBase));\nDonutSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"DonutSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], DonutSeriesDirective);\nexports.DonutSeriesDirective = DonutSeriesDirective;\nvar CandlestickSeriesDirective = (function (_super) {\n    __extends(CandlestickSeriesDirective, _super);\n    function CandlestickSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return CandlestickSeriesDirective;\n}(SeriesComponentBase));\nCandlestickSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"CandlestickSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], CandlestickSeriesDirective);\nexports.CandlestickSeriesDirective = CandlestickSeriesDirective;\nvar OhlcSeriesDirective = (function (_super) {\n    __extends(OhlcSeriesDirective, _super);\n    function OhlcSeriesDirective(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._nativeSeries = _this._elementRef.nativeElement;\n        return _this;\n    }\n    return OhlcSeriesDirective;\n}(SeriesComponentBase));\nOhlcSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"OhlcSeries\"\n    }),\n    __param(0, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], OhlcSeriesDirective);\nexports.OhlcSeriesDirective = OhlcSeriesDirective;\nvar RadCartesianChartGridDirective = (function () {\n    function RadCartesianChartGridDirective() {\n    }\n    return RadCartesianChartGridDirective;\n}());\nRadCartesianChartGridDirective = __decorate([\n    core_1.Directive({\n        selector: \"RadCartesianChartGrid\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], RadCartesianChartGridDirective);\nexports.RadCartesianChartGridDirective = RadCartesianChartGridDirective;\nvar ChartGridLineAnnotationDirective = (function () {\n    function ChartGridLineAnnotationDirective() {\n    }\n    return ChartGridLineAnnotationDirective;\n}());\nChartGridLineAnnotationDirective = __decorate([\n    core_1.Directive({\n        selector: \"ChartGridLineAnnotation\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], ChartGridLineAnnotationDirective);\nexports.ChartGridLineAnnotationDirective = ChartGridLineAnnotationDirective;\nvar ChartPlotBandAnnotationDirective = (function () {\n    function ChartPlotBandAnnotationDirective() {\n    }\n    return ChartPlotBandAnnotationDirective;\n}());\nChartPlotBandAnnotationDirective = __decorate([\n    core_1.Directive({\n        selector: \"ChartPlotBandAnnotation\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], ChartPlotBandAnnotationDirective);\nexports.ChartPlotBandAnnotationDirective = ChartPlotBandAnnotationDirective;\nvar TrackballDirective = (function () {\n    function TrackballDirective() {\n    }\n    return TrackballDirective;\n}());\nTrackballDirective = __decorate([\n    core_1.Directive({\n        selector: \"Trackball\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], TrackballDirective);\nexports.TrackballDirective = TrackballDirective;\nvar PointLabelStyleDirective = (function () {\n    function PointLabelStyleDirective() {\n    }\n    return PointLabelStyleDirective;\n}());\nPointLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"PointLabelStyle\"\n    }),\n    __metadata(\"design:paramtypes\", [])\n], PointLabelStyleDirective);\nexports.PointLabelStyleDirective = PointLabelStyleDirective;\nvar TKPieLabelStyleDirective = (function () {\n    function TKPieLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKPieLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKPieLabelStyleDirective;\n}());\nTKPieLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkPieLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(PieSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [PieSeriesDirective,\n        core_1.ElementRef])\n], TKPieLabelStyleDirective);\nexports.TKPieLabelStyleDirective = TKPieLabelStyleDirective;\nvar TKDonutLabelStyleDirective = (function () {\n    function TKDonutLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKDonutLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKDonutLabelStyleDirective;\n}());\nTKDonutLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkDonutLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(DonutSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [DonutSeriesDirective,\n        core_1.ElementRef])\n], TKDonutLabelStyleDirective);\nexports.TKDonutLabelStyleDirective = TKDonutLabelStyleDirective;\nvar TKLineLabelStyleDirective = (function () {\n    function TKLineLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKLineLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKLineLabelStyleDirective;\n}());\nTKLineLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkLineLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(LineSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [LineSeriesDirective,\n        core_1.ElementRef])\n], TKLineLabelStyleDirective);\nexports.TKLineLabelStyleDirective = TKLineLabelStyleDirective;\nvar TKBarLabelStyleDirective = (function () {\n    function TKBarLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKBarLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKBarLabelStyleDirective;\n}());\nTKBarLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkBarLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(BarSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [BarSeriesDirective,\n        core_1.ElementRef])\n], TKBarLabelStyleDirective);\nexports.TKBarLabelStyleDirective = TKBarLabelStyleDirective;\nvar TKRangeBarLabelStyleDirective = (function () {\n    function TKRangeBarLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKRangeBarLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKRangeBarLabelStyleDirective;\n}());\nTKRangeBarLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkRangeBarLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(RangeBarSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RangeBarSeriesDirective,\n        core_1.ElementRef])\n], TKRangeBarLabelStyleDirective);\nexports.TKRangeBarLabelStyleDirective = TKRangeBarLabelStyleDirective;\nvar TKAreaLabelStyleDirective = (function () {\n    function TKAreaLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKAreaLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKAreaLabelStyleDirective;\n}());\nTKAreaLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkAreaLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(AreaSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [AreaSeriesDirective,\n        core_1.ElementRef])\n], TKAreaLabelStyleDirective);\nexports.TKAreaLabelStyleDirective = TKAreaLabelStyleDirective;\nvar TKSplineLabelStyleDirective = (function () {\n    function TKSplineLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKSplineLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKSplineLabelStyleDirective;\n}());\nTKSplineLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkSplineLabelStyle]\",\n    }),\n    __param(0, core_1.Inject(SplineSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [SplineSeriesDirective,\n        core_1.ElementRef])\n], TKSplineLabelStyleDirective);\nexports.TKSplineLabelStyleDirective = TKSplineLabelStyleDirective;\nvar TKSplineAreaLabelStyleDirective = (function () {\n    function TKSplineAreaLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKSplineAreaLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKSplineAreaLabelStyleDirective;\n}());\nTKSplineAreaLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkSplineAreaLabelStyle]\",\n    }),\n    __param(0, core_1.Inject(SplineAreaSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [SplineAreaSeriesDirective,\n        core_1.ElementRef])\n], TKSplineAreaLabelStyleDirective);\nexports.TKSplineAreaLabelStyleDirective = TKSplineAreaLabelStyleDirective;\nvar TKBubbleLabelStyleDirective = (function () {\n    function TKBubbleLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKBubbleLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKBubbleLabelStyleDirective;\n}());\nTKBubbleLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkBubbleLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(BubbleSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [BubbleSeriesDirective,\n        core_1.ElementRef])\n], TKBubbleLabelStyleDirective);\nexports.TKBubbleLabelStyleDirective = TKBubbleLabelStyleDirective;\nvar TKScatterBubbleLabelStyleDirective = (function () {\n    function TKScatterBubbleLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKScatterBubbleLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKScatterBubbleLabelStyleDirective;\n}());\nTKScatterBubbleLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkScatterBubbleLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(ScatterBubbleSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [ScatterBubbleSeriesDirective,\n        core_1.ElementRef])\n], TKScatterBubbleLabelStyleDirective);\nexports.TKScatterBubbleLabelStyleDirective = TKScatterBubbleLabelStyleDirective;\nvar TKCandlestickLabelStyleDirective = (function () {\n    function TKCandlestickLabelStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCandlestickLabelStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKCandlestickLabelStyleDirective;\n}());\nTKCandlestickLabelStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCandlestickLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(CandlestickSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [CandlestickSeriesDirective,\n        core_1.ElementRef])\n], TKCandlestickLabelStyleDirective);\nexports.TKCandlestickLabelStyleDirective = TKCandlestickLabelStyleDirective;\nvar TKOhlcStyleDirective = (function () {\n    function TKOhlcStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKOhlcStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKOhlcStyleDirective;\n}());\nTKOhlcStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkOhlcLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(OhlcSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [OhlcSeriesDirective,\n        core_1.ElementRef])\n], TKOhlcStyleDirective);\nexports.TKOhlcStyleDirective = TKOhlcStyleDirective;\nvar TKScatterStyleDirective = (function () {\n    function TKScatterStyleDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKScatterStyleDirective.prototype.ngOnInit = function () {\n        var labelStyle = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.labelStyle = labelStyle;\n    };\n    return TKScatterStyleDirective;\n}());\nTKScatterStyleDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkScatterLabelStyle]\"\n    }),\n    __param(0, core_1.Inject(ScatterSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [ScatterSeriesDirective,\n        core_1.ElementRef])\n], TKScatterStyleDirective);\nexports.TKScatterStyleDirective = TKScatterStyleDirective;\nvar TKCartesianGridDirective = (function () {\n    function TKCartesianGridDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianGridDirective.prototype.ngOnInit = function () {\n        var grid = this._elementRef.nativeElement;\n        var cartesianChart = this.owner.cartesianChart;\n        cartesianChart.grid = grid;\n    };\n    return TKCartesianGridDirective;\n}());\nTKCartesianGridDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianGrid]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianGridDirective);\nexports.TKCartesianGridDirective = TKCartesianGridDirective;\nvar TKCartesianSeriesDirective = (function () {\n    function TKCartesianSeriesDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianSeriesDirective.prototype.ngOnInit = function () {\n        var series = this._elementRef.nativeElement;\n        if (this.owner.cartesianChart.series) {\n            this.owner.cartesianChart.series.push(series);\n        }\n        else {\n            this.owner.cartesianChart.series = new observable_array_1.ObservableArray([series]);\n        }\n    };\n    return TKCartesianSeriesDirective;\n}());\nTKCartesianSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianSeries]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianSeriesDirective);\nexports.TKCartesianSeriesDirective = TKCartesianSeriesDirective;\nvar TKPieChartSeriesDirective = (function () {\n    function TKPieChartSeriesDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKPieChartSeriesDirective.prototype.ngOnInit = function () {\n        var series = this._elementRef.nativeElement;\n        if (this.owner.pieChart.series) {\n            this.owner.pieChart.series.push(series);\n        }\n        else {\n            this.owner.pieChart.series = new observable_array_1.ObservableArray([series]);\n        }\n    };\n    return TKPieChartSeriesDirective;\n}());\nTKPieChartSeriesDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkPieSeries]\"\n    }),\n    __param(0, core_1.Inject(RadPieChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadPieChartComponent,\n        core_1.ElementRef])\n], TKPieChartSeriesDirective);\nexports.TKPieChartSeriesDirective = TKPieChartSeriesDirective;\nvar TKCartesianPaletteDirective = (function () {\n    function TKCartesianPaletteDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianPaletteDirective.prototype.ngOnInit = function () {\n        this._nativePalette = this._elementRef.nativeElement;\n        if (this.owner.cartesianChart.palettes) {\n            this.owner.cartesianChart.palettes.push(this._nativePalette);\n        }\n        else {\n            this.owner.cartesianChart.palettes = new observable_array_1.ObservableArray([this._nativePalette]);\n        }\n    };\n    Object.defineProperty(TKCartesianPaletteDirective.prototype, \"nativePalette\", {\n        get: function () {\n            return this._nativePalette;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TKCartesianPaletteDirective;\n}());\nTKCartesianPaletteDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianPalette]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianPaletteDirective);\nexports.TKCartesianPaletteDirective = TKCartesianPaletteDirective;\nvar TKPiePaletteDirective = (function () {\n    function TKPiePaletteDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKPiePaletteDirective.prototype.ngOnInit = function () {\n        this._nativePalette = this._elementRef.nativeElement;\n        if (this.owner.pieChart.palettes) {\n            this.owner.pieChart.palettes.push(this._nativePalette);\n        }\n        else {\n            this.owner.pieChart.palettes = new observable_array_1.ObservableArray([this._nativePalette]);\n        }\n    };\n    Object.defineProperty(TKPiePaletteDirective.prototype, \"nativePalette\", {\n        get: function () {\n            return this._nativePalette;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TKPiePaletteDirective;\n}());\nTKPiePaletteDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkPiePalette]\"\n    }),\n    __param(0, core_1.Inject(RadPieChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadPieChartComponent,\n        core_1.ElementRef])\n], TKPiePaletteDirective);\nexports.TKPiePaletteDirective = TKPiePaletteDirective;\nvar TKCartesianPaletteEntryDirective = (function () {\n    function TKCartesianPaletteEntryDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianPaletteEntryDirective.prototype.ngOnInit = function () {\n        var entry = this._elementRef.nativeElement;\n        if (this.owner.nativePalette.entries) {\n            this.owner.nativePalette.entries.push(entry);\n            this.owner.nativePalette.updateOwner();\n        }\n        else {\n            this.owner.nativePalette.entries = new observable_array_1.ObservableArray([entry]);\n        }\n    };\n    return TKCartesianPaletteEntryDirective;\n}());\nTKCartesianPaletteEntryDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianPaletteEntry]\"\n    }),\n    __param(0, core_1.Inject(TKCartesianPaletteDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [TKCartesianPaletteDirective,\n        core_1.ElementRef])\n], TKCartesianPaletteEntryDirective);\nexports.TKCartesianPaletteEntryDirective = TKCartesianPaletteEntryDirective;\nvar TKPiePaletteEntryDirective = (function () {\n    function TKPiePaletteEntryDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKPiePaletteEntryDirective.prototype.ngOnInit = function () {\n        var entry = this._elementRef.nativeElement;\n        if (this.owner.nativePalette.entries) {\n            this.owner.nativePalette.entries.push(entry);\n            this.owner.nativePalette.updateOwner();\n        }\n        else {\n            this.owner.nativePalette.entries = new observable_array_1.ObservableArray([entry]);\n        }\n    };\n    return TKPiePaletteEntryDirective;\n}());\nTKPiePaletteEntryDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkPiePaletteEntry]\"\n    }),\n    __param(0, core_1.Inject(TKPiePaletteDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [TKPiePaletteDirective,\n        core_1.ElementRef])\n], TKPiePaletteEntryDirective);\nexports.TKPiePaletteEntryDirective = TKPiePaletteEntryDirective;\nvar TKCartesianHorizontalAxisDirective = (function () {\n    function TKCartesianHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var axis = this._elementRef.nativeElement;\n        var cartesianChart = this.owner.cartesianChart;\n        cartesianChart.horizontalAxis = axis;\n    };\n    return TKCartesianHorizontalAxisDirective;\n}());\nTKCartesianHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianHorizontalAxisDirective);\nexports.TKCartesianHorizontalAxisDirective = TKCartesianHorizontalAxisDirective;\nvar TKCartesianVerticalAxisDirective = (function () {\n    function TKCartesianVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianVerticalAxisDirective.prototype.ngOnInit = function () {\n        var axis = this._elementRef.nativeElement;\n        var cartesianChart = this.owner.cartesianChart;\n        cartesianChart.verticalAxis = axis;\n    };\n    return TKCartesianVerticalAxisDirective;\n}());\nTKCartesianVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianVerticalAxisDirective);\nexports.TKCartesianVerticalAxisDirective = TKCartesianVerticalAxisDirective;\nvar TKLineVerticalAxisDirective = (function () {\n    function TKLineVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKLineVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKLineVerticalAxisDirective;\n}());\nTKLineVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkLineVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(LineSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [LineSeriesDirective,\n        core_1.ElementRef])\n], TKLineVerticalAxisDirective);\nexports.TKLineVerticalAxisDirective = TKLineVerticalAxisDirective;\nvar TKLineHorizontalAxisDirective = (function () {\n    function TKLineHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKLineHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKLineHorizontalAxisDirective;\n}());\nTKLineHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkLineHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(LineSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [LineSeriesDirective,\n        core_1.ElementRef])\n], TKLineHorizontalAxisDirective);\nexports.TKLineHorizontalAxisDirective = TKLineHorizontalAxisDirective;\nvar TKBarVerticalAxisDirective = (function () {\n    function TKBarVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKBarVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKBarVerticalAxisDirective;\n}());\nTKBarVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkBarVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(BarSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [BarSeriesDirective,\n        core_1.ElementRef])\n], TKBarVerticalAxisDirective);\nexports.TKBarVerticalAxisDirective = TKBarVerticalAxisDirective;\nvar TKBarHorizontalAxisDirective = (function () {\n    function TKBarHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKBarHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKBarHorizontalAxisDirective;\n}());\nTKBarHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkBarHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(BarSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [BarSeriesDirective,\n        core_1.ElementRef])\n], TKBarHorizontalAxisDirective);\nexports.TKBarHorizontalAxisDirective = TKBarHorizontalAxisDirective;\nvar TKRangeBarVerticalAxisDirective = (function () {\n    function TKRangeBarVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKRangeBarVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKRangeBarVerticalAxisDirective;\n}());\nTKRangeBarVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkRangeBarVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(RangeBarSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RangeBarSeriesDirective,\n        core_1.ElementRef])\n], TKRangeBarVerticalAxisDirective);\nexports.TKRangeBarVerticalAxisDirective = TKRangeBarVerticalAxisDirective;\nvar TKRangeBarHorizontalAxisDirective = (function () {\n    function TKRangeBarHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKRangeBarHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKRangeBarHorizontalAxisDirective;\n}());\nTKRangeBarHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkRangeBarHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(RangeBarSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RangeBarSeriesDirective,\n        core_1.ElementRef])\n], TKRangeBarHorizontalAxisDirective);\nexports.TKRangeBarHorizontalAxisDirective = TKRangeBarHorizontalAxisDirective;\nvar TKAreaVerticalAxisDirective = (function () {\n    function TKAreaVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKAreaVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKAreaVerticalAxisDirective;\n}());\nTKAreaVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkAreaVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(AreaSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [AreaSeriesDirective,\n        core_1.ElementRef])\n], TKAreaVerticalAxisDirective);\nexports.TKAreaVerticalAxisDirective = TKAreaVerticalAxisDirective;\nvar TKAreaHorizontalAxisDirective = (function () {\n    function TKAreaHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKAreaHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKAreaHorizontalAxisDirective;\n}());\nTKAreaHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkAreaHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(AreaSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [AreaSeriesDirective,\n        core_1.ElementRef])\n], TKAreaHorizontalAxisDirective);\nexports.TKAreaHorizontalAxisDirective = TKAreaHorizontalAxisDirective;\nvar TKSplineVerticalAxisDirective = (function () {\n    function TKSplineVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKSplineVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKSplineVerticalAxisDirective;\n}());\nTKSplineVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkSplineVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(SplineSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [SplineSeriesDirective,\n        core_1.ElementRef])\n], TKSplineVerticalAxisDirective);\nexports.TKSplineVerticalAxisDirective = TKSplineVerticalAxisDirective;\nvar TKSplineHorizontalAxisDirective = (function () {\n    function TKSplineHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKSplineHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKSplineHorizontalAxisDirective;\n}());\nTKSplineHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkSplineHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(SplineSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [SplineSeriesDirective,\n        core_1.ElementRef])\n], TKSplineHorizontalAxisDirective);\nexports.TKSplineHorizontalAxisDirective = TKSplineHorizontalAxisDirective;\nvar TKSplineAreaVerticalAxisDirective = (function () {\n    function TKSplineAreaVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKSplineAreaVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKSplineAreaVerticalAxisDirective;\n}());\nTKSplineAreaVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkSplineAreaVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(SplineAreaSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [SplineAreaSeriesDirective,\n        core_1.ElementRef])\n], TKSplineAreaVerticalAxisDirective);\nexports.TKSplineAreaVerticalAxisDirective = TKSplineAreaVerticalAxisDirective;\nvar TKSplineAreaHorizontalAxisDirective = (function () {\n    function TKSplineAreaHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKSplineAreaHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKSplineAreaHorizontalAxisDirective;\n}());\nTKSplineAreaHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkSplineAreaHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(SplineAreaSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [SplineAreaSeriesDirective,\n        core_1.ElementRef])\n], TKSplineAreaHorizontalAxisDirective);\nexports.TKSplineAreaHorizontalAxisDirective = TKSplineAreaHorizontalAxisDirective;\nvar TKBubbleVerticalAxisDirective = (function () {\n    function TKBubbleVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKBubbleVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKBubbleVerticalAxisDirective;\n}());\nTKBubbleVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkBubbleVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(BubbleSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [BubbleSeriesDirective,\n        core_1.ElementRef])\n], TKBubbleVerticalAxisDirective);\nexports.TKBubbleVerticalAxisDirective = TKBubbleVerticalAxisDirective;\nvar TKBubbleHorizontalAxisDirective = (function () {\n    function TKBubbleHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKBubbleHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKBubbleHorizontalAxisDirective;\n}());\nTKBubbleHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkBubbleHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(BubbleSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [BubbleSeriesDirective,\n        core_1.ElementRef])\n], TKBubbleHorizontalAxisDirective);\nexports.TKBubbleHorizontalAxisDirective = TKBubbleHorizontalAxisDirective;\nvar TKScatterBubbleVerticalAxisDirective = (function () {\n    function TKScatterBubbleVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKScatterBubbleVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKScatterBubbleVerticalAxisDirective;\n}());\nTKScatterBubbleVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkScatterBubbleVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(ScatterBubbleSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [ScatterBubbleSeriesDirective,\n        core_1.ElementRef])\n], TKScatterBubbleVerticalAxisDirective);\nexports.TKScatterBubbleVerticalAxisDirective = TKScatterBubbleVerticalAxisDirective;\nvar TKScatterBubbleHorizontalAxisDirective = (function () {\n    function TKScatterBubbleHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKScatterBubbleHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKScatterBubbleHorizontalAxisDirective;\n}());\nTKScatterBubbleHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkScatterBubbleHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(ScatterBubbleSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [ScatterBubbleSeriesDirective,\n        core_1.ElementRef])\n], TKScatterBubbleHorizontalAxisDirective);\nexports.TKScatterBubbleHorizontalAxisDirective = TKScatterBubbleHorizontalAxisDirective;\nvar TKCandlestickVerticalAxisDirective = (function () {\n    function TKCandlestickVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCandlestickVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKCandlestickVerticalAxisDirective;\n}());\nTKCandlestickVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCandlestickVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(CandlestickSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [CandlestickSeriesDirective,\n        core_1.ElementRef])\n], TKCandlestickVerticalAxisDirective);\nexports.TKCandlestickVerticalAxisDirective = TKCandlestickVerticalAxisDirective;\nvar TKCandlestickHorizontalAxisDirective = (function () {\n    function TKCandlestickHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCandlestickHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKCandlestickHorizontalAxisDirective;\n}());\nTKCandlestickHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCandlestickHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(CandlestickSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [CandlestickSeriesDirective,\n        core_1.ElementRef])\n], TKCandlestickHorizontalAxisDirective);\nexports.TKCandlestickHorizontalAxisDirective = TKCandlestickHorizontalAxisDirective;\nvar TKOhlcVerticalAxisDirective = (function () {\n    function TKOhlcVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKOhlcVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKOhlcVerticalAxisDirective;\n}());\nTKOhlcVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkOhlcVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(OhlcSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [OhlcSeriesDirective,\n        core_1.ElementRef])\n], TKOhlcVerticalAxisDirective);\nexports.TKOhlcVerticalAxisDirective = TKOhlcVerticalAxisDirective;\nvar TKOhlcHorizontalAxisDirective = (function () {\n    function TKOhlcHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKOhlcHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKOhlcHorizontalAxisDirective;\n}());\nTKOhlcHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkOhlcHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(OhlcSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [OhlcSeriesDirective,\n        core_1.ElementRef])\n], TKOhlcHorizontalAxisDirective);\nexports.TKOhlcHorizontalAxisDirective = TKOhlcHorizontalAxisDirective;\nvar TKScatterVerticalAxisDirective = (function () {\n    function TKScatterVerticalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKScatterVerticalAxisDirective.prototype.ngOnInit = function () {\n        var verticalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.verticalAxis = verticalAxis;\n    };\n    return TKScatterVerticalAxisDirective;\n}());\nTKScatterVerticalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkScatterVerticalAxis]\"\n    }),\n    __param(0, core_1.Inject(ScatterSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [ScatterSeriesDirective,\n        core_1.ElementRef])\n], TKScatterVerticalAxisDirective);\nexports.TKScatterVerticalAxisDirective = TKScatterVerticalAxisDirective;\nvar TKScatterHorizontalAxisDirective = (function () {\n    function TKScatterHorizontalAxisDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKScatterHorizontalAxisDirective.prototype.ngOnInit = function () {\n        var horizontalAxis = this._elementRef.nativeElement;\n        var series = this.owner.nativeSeries;\n        series.horizontalAxis = horizontalAxis;\n    };\n    return TKScatterHorizontalAxisDirective;\n}());\nTKScatterHorizontalAxisDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkScatterHorizontalAxis]\"\n    }),\n    __param(0, core_1.Inject(ScatterSeriesDirective)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [ScatterSeriesDirective,\n        core_1.ElementRef])\n], TKScatterHorizontalAxisDirective);\nexports.TKScatterHorizontalAxisDirective = TKScatterHorizontalAxisDirective;\nvar TKPieLegendDirective = (function () {\n    function TKPieLegendDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKPieLegendDirective.prototype.ngOnInit = function () {\n        var legend = this._elementRef.nativeElement;\n        var pieChart = this.owner.pieChart;\n        pieChart.legend = legend;\n    };\n    return TKPieLegendDirective;\n}());\nTKPieLegendDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkPieLegend]\",\n    }),\n    __param(0, core_1.Inject(RadPieChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadPieChartComponent,\n        core_1.ElementRef])\n], TKPieLegendDirective);\nexports.TKPieLegendDirective = TKPieLegendDirective;\nvar TKCartesianLegendDirective = (function () {\n    function TKCartesianLegendDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianLegendDirective.prototype.ngOnInit = function () {\n        var legend = this._elementRef.nativeElement;\n        var cartesianChart = this.owner.cartesianChart;\n        cartesianChart.legend = legend;\n    };\n    return TKCartesianLegendDirective;\n}());\nTKCartesianLegendDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianLegend]\",\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianLegendDirective);\nexports.TKCartesianLegendDirective = TKCartesianLegendDirective;\nvar TKCartesianTrackballDirective = (function () {\n    function TKCartesianTrackballDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianTrackballDirective.prototype.ngOnInit = function () {\n        var trackball = this._elementRef.nativeElement;\n        var cartesianChart = this.owner.cartesianChart;\n        cartesianChart.trackball = trackball;\n    };\n    return TKCartesianTrackballDirective;\n}());\nTKCartesianTrackballDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianTrackball]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianTrackballDirective);\nexports.TKCartesianTrackballDirective = TKCartesianTrackballDirective;\nvar TKCartesianAnnotationsDirective = (function () {\n    function TKCartesianAnnotationsDirective(owner, _elementRef) {\n        this.owner = owner;\n        this._elementRef = _elementRef;\n    }\n    TKCartesianAnnotationsDirective.prototype.ngOnInit = function () {\n        var annotation = this._elementRef.nativeElement;\n        if (this.owner.cartesianChart.annotations) {\n            this.owner.cartesianChart.annotations.push(annotation);\n        }\n        else {\n            this.owner.cartesianChart.annotations = new observable_array_1.ObservableArray([annotation]);\n        }\n    };\n    return TKCartesianAnnotationsDirective;\n}());\nTKCartesianAnnotationsDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tkCartesianAnnotations]\"\n    }),\n    __param(0, core_1.Inject(RadCartesianChartComponent)),\n    __param(1, core_1.Inject(core_1.ElementRef)),\n    __metadata(\"design:paramtypes\", [RadCartesianChartComponent,\n        core_1.ElementRef])\n], TKCartesianAnnotationsDirective);\nexports.TKCartesianAnnotationsDirective = TKCartesianAnnotationsDirective;\nexports.CHART_DIRECTIVES = [RadCartesianChartComponent, RadPieChartComponent, LineSeriesDirective, AreaSeriesDirective, SplineSeriesDirective, SplineAreaSeriesDirective, BarSeriesDirective, RangeBarSeriesDirective, BubbleSeriesDirective, ScatterBubbleSeriesDirective, ScatterSeriesDirective, PieSeriesDirective, TKPieChartSeriesDirective, TKCartesianSeriesDirective, PieSeriesDirective, TKCartesianHorizontalAxisDirective, TKCartesianVerticalAxisDirective, LinearAxisDirective, DateTimeCategoricalAxisDirective, CategoricalAxisDirective, RadCartesianChartGridDirective, TKCartesianGridDirective, PaletteDirective, TKCartesianPaletteDirective, CandlestickSeriesDirective, OhlcSeriesDirective, RadLegendViewDirective, DonutSeriesDirective, TKPieLegendDirective, TKCartesianLegendDirective, ChartGridLineAnnotationDirective, TKCartesianAnnotationsDirective, ChartPlotBandAnnotationDirective, TKCartesianTrackballDirective, TrackballDirective, PointLabelStyleDirective, TKPieLabelStyleDirective, TKLineLabelStyleDirective, TKBarLabelStyleDirective, TKRangeBarLabelStyleDirective, TKAreaLabelStyleDirective, TKSplineLabelStyleDirective, TKBubbleLabelStyleDirective, TKScatterBubbleLabelStyleDirective, TKCandlestickLabelStyleDirective, TKOhlcStyleDirective, TKScatterStyleDirective, TKDonutLabelStyleDirective, DateTimeContinuousAxisDirective, TKCartesianPaletteEntryDirective, LogarithmicAxisDirective, TKLineVerticalAxisDirective, TKLineHorizontalAxisDirective, TKBarVerticalAxisDirective, TKBarHorizontalAxisDirective, TKRangeBarVerticalAxisDirective, TKRangeBarHorizontalAxisDirective, TKAreaVerticalAxisDirective, TKAreaHorizontalAxisDirective, TKSplineVerticalAxisDirective, TKSplineHorizontalAxisDirective, TKSplineAreaVerticalAxisDirective, TKSplineAreaHorizontalAxisDirective, TKBubbleVerticalAxisDirective, TKBubbleHorizontalAxisDirective, TKScatterBubbleVerticalAxisDirective, TKScatterBubbleHorizontalAxisDirective, TKCandlestickVerticalAxisDirective, TKCandlestickHorizontalAxisDirective, TKOhlcVerticalAxisDirective, TKOhlcHorizontalAxisDirective, TKScatterVerticalAxisDirective, TKScatterHorizontalAxisDirective, TKPiePaletteDirective, TKPiePaletteEntryDirective, TKSplineAreaLabelStyleDirective];\nelementRegistryModule.registerElement(\"RadCartesianChart\", function () { return chartModule.RadCartesianChart; });\nelementRegistryModule.registerElement(\"RadPieChart\", function () { return chartModule.RadPieChart; });\nelementRegistryModule.registerElement(\"RadLegendView\", function () { return chartModule.RadLegendView; });\nelementRegistryModule.registerElement(\"LineSeries\", function () { return chartModule.LineSeries; });\nelementRegistryModule.registerElement(\"PieSeries\", function () { return chartModule.PieSeries; });\nelementRegistryModule.registerElement(\"DonutSeries\", function () { return chartModule.DonutSeries; });\nelementRegistryModule.registerElement(\"AreaSeries\", function () { return chartModule.AreaSeries; });\nelementRegistryModule.registerElement(\"CategoricalAxis\", function () { return chartModule.CategoricalAxis; });\nelementRegistryModule.registerElement(\"LinearAxis\", function () { return chartModule.LinearAxis; });\nelementRegistryModule.registerElement(\"DateTimeCategoricalAxis\", function () { return chartModule.DateTimeCategoricalAxis; });\nelementRegistryModule.registerElement(\"SplineSeries\", function () { return chartModule.SplineSeries; });\nelementRegistryModule.registerElement(\"BarSeries\", function () { return chartModule.BarSeries; });\nelementRegistryModule.registerElement(\"RangeBarSeries\", function () { return chartModule.RangeBarSeries; });\nelementRegistryModule.registerElement(\"BubbleSeries\", function () { return chartModule.BubbleSeries; });\nelementRegistryModule.registerElement(\"ScatterBubbleSeries\", function () { return chartModule.ScatterBubbleSeries; });\nelementRegistryModule.registerElement(\"ScatterSeries\", function () { return chartModule.ScatterSeries; });\nelementRegistryModule.registerElement(\"OhlcSeries\", function () { return chartModule.OhlcSeries; });\nelementRegistryModule.registerElement(\"CandlestickSeries\", function () { return chartModule.CandlestickSeries; });\nelementRegistryModule.registerElement(\"RadCartesianChartGrid\", function () { return chartModule.RadCartesianChartGrid; });\nelementRegistryModule.registerElement(\"Palette\", function () { return chartModule.Palette; });\nelementRegistryModule.registerElement(\"PaletteEntry\", function () { return chartModule.PaletteEntry; });\nelementRegistryModule.registerElement(\"ChartGridLineAnnotation\", function () { return chartModule.ChartGridLineAnnotation; });\nelementRegistryModule.registerElement(\"ChartPlotBandAnnotation\", function () { return chartModule.ChartPlotBandAnnotation; });\nelementRegistryModule.registerElement(\"Trackball\", function () { return chartModule.Trackball; });\nelementRegistryModule.registerElement(\"PointLabelStyle\", function () { return chartModule.PointLabelStyle; });\nelementRegistryModule.registerElement(\"DateTimeContinuousAxis\", function () { return chartModule.DateTimeContinuousAxis; });\nelementRegistryModule.registerElement(\"LogarithmicAxis\", function () { return chartModule.LogarithmicAxis; });\nelementRegistryModule.registerElement(\"SplineAreaSeries\", function () { return chartModule.SplineAreaSeries; });\nvar NativeScriptUIChartModule = (function () {\n    function NativeScriptUIChartModule() {\n    }\n    return NativeScriptUIChartModule;\n}());\nNativeScriptUIChartModule = __decorate([\n    core_1.NgModule({\n        declarations: [exports.CHART_DIRECTIVES],\n        exports: [exports.CHART_DIRECTIVES]\n    })\n], NativeScriptUIChartModule);\nexports.NativeScriptUIChartModule = NativeScriptUIChartModule;\n"
    },
    {
      "id": 37,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.js",
      "name": "./~/nativescript-angular/common/detached-loader.js",
      "index": 195,
      "index2": 192,
      "size": 2366,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.ngfactory.ts",
      "issuerId": 188,
      "issuerName": "./~/nativescript-angular/common/detached-loader.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "../common/detached-loader",
          "loc": "10:24-60"
        },
        {
          "moduleId": 75,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/dialogs.js",
          "module": "./~/nativescript-angular/directives/dialogs.js",
          "moduleName": "./~/nativescript-angular/directives/dialogs.js",
          "type": "cjs require",
          "userRequest": "../common/detached-loader",
          "loc": "4:24-60"
        },
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./common/detached-loader",
          "loc": "11:24-59"
        },
        {
          "moduleId": 188,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.ngfactory.ts",
          "module": "./~/nativescript-angular/common/detached-loader.ngfactory.ts",
          "moduleName": "./~/nativescript-angular/common/detached-loader.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/common/detached-loader",
          "loc": "10:14-68"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar trace_1 = require(\"tns-core-modules/trace\");\nexports.CATEGORY = \"detached-loader\";\nfunction log(message) {\n    trace_1.write(message, exports.CATEGORY);\n}\n/**\n * Wrapper component used for loading components when navigating\n * It uses DetachedContainer as selector so that it is containerRef is not attached to\n * the visual tree.\n */\nvar DetachedLoader = (function () {\n    function DetachedLoader(resolver, changeDetector, containerRef) {\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.containerRef = containerRef;\n    }\n    DetachedLoader.prototype.loadInLocation = function (componentType) {\n        var factory = this.resolver.resolveComponentFactory(componentType);\n        var componentRef = this.containerRef.createComponent(factory, this.containerRef.length, this.containerRef.parentInjector);\n        // Component is created, buit may not be checked if we are loading\n        // inside component with OnPush CD strategy. Mark us for check to be sure CD will reach us.\n        // We are inside a promise here so no need for setTimeout - CD should trigger\n        // after the promise.\n        log(\"DetachedLoader.loadInLocation component loaded -> markForCheck\");\n        return Promise.resolve(componentRef);\n    };\n    DetachedLoader.prototype.detectChanges = function () {\n        this.changeDetector.markForCheck();\n    };\n    // TODO: change this API -- async promises not needed here anymore.\n    DetachedLoader.prototype.loadComponent = function (componentType) {\n        log(\"DetachedLoader.loadComponent\");\n        return this.loadInLocation(componentType);\n    };\n    DetachedLoader.prototype.loadWithFactory = function (factory) {\n        return this.containerRef.createComponent(factory, this.containerRef.length, this.containerRef.parentInjector, null);\n    };\n    return DetachedLoader;\n}());\nDetachedLoader = __decorate([\n    core_1.Component({\n        selector: \"DetachedContainer\",\n        template: \"<Placeholder #loader></Placeholder>\"\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver,\n        core_1.ChangeDetectorRef,\n        core_1.ViewContainerRef])\n], DetachedLoader);\nexports.DetachedLoader = DetachedLoader;\n//# sourceMappingURL=detached-loader.js.map"
    },
    {
      "id": 38,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-location-strategy.js",
      "name": "./~/nativescript-angular/router/ns-location-strategy.js",
      "index": 270,
      "index2": 266,
      "size": 7677,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "./ns-location-strategy",
          "loc": "12:29-62"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/router-extensions.js",
          "module": "./~/nativescript-angular/router/router-extensions.js",
          "moduleName": "./~/nativescript-angular/router/router-extensions.js",
          "type": "cjs require",
          "userRequest": "./ns-location-strategy",
          "loc": "4:29-62"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/ns-location-strategy",
          "loc": "9:29-69"
        },
        {
          "moduleId": 181,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-platform-location.js",
          "module": "./~/nativescript-angular/router/ns-platform-location.js",
          "moduleName": "./~/nativescript-angular/router/ns-platform-location.js",
          "type": "cjs require",
          "userRequest": "./ns-location-strategy",
          "loc": "2:29-62"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar trace_1 = require(\"../trace\");\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar defaultNavOptions = {\n    clearHistory: false,\n    animated: true\n};\nvar NSLocationStrategy = (function (_super) {\n    __extends(NSLocationStrategy, _super);\n    function NSLocationStrategy(frame) {\n        var _this = _super.call(this) || this;\n        _this.frame = frame;\n        _this.states = new Array();\n        _this.popStateCallbacks = new Array();\n        _this._isPageNavigationBack = false;\n        trace_1.routerLog(\"NSLocationStrategy.constructor()\");\n        return _this;\n    }\n    NSLocationStrategy.prototype.path = function () {\n        var state = this.peekState();\n        var result = state ? state.url : \"/\";\n        trace_1.routerLog(\"NSLocationStrategy.path(): \" + result);\n        return result;\n    };\n    NSLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        trace_1.routerLog(\"NSLocationStrategy.prepareExternalUrl() internal: \" + internal);\n        return internal;\n    };\n    NSLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n        trace_1.routerLog(\"NSLocationStrategy.pushState state: \" +\n            (state + \", title: \" + title + \", url: \" + url + \", queryParams: \" + queryParams));\n        this.pushStateInternal(state, title, url, queryParams);\n    };\n    NSLocationStrategy.prototype.pushStateInternal = function (state, title, url, queryParams) {\n        var isNewPage = this.states.length === 0;\n        this.states.push({\n            state: state,\n            title: title,\n            url: url,\n            queryParams: queryParams,\n            isPageNavigation: isNewPage\n        });\n    };\n    NSLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n        if (this.states.length > 0) {\n            trace_1.routerLog(\"NSLocationStrategy.replaceState changing exisitng state: \" +\n                (state + \", title: \" + title + \", url: \" + url + \", queryParams: \" + queryParams));\n            var topState = this.peekState();\n            topState.state = state;\n            topState.title = title;\n            topState.url = url;\n            topState.queryParams = queryParams;\n        }\n        else {\n            trace_1.routerLog(\"NSLocationStrategy.replaceState pushing new state: \" +\n                (state + \", title: \" + title + \", url: \" + url + \", queryParams: \" + queryParams));\n            this.pushStateInternal(state, title, url, queryParams);\n        }\n    };\n    NSLocationStrategy.prototype.forward = function () {\n        throw new Error(\"NSLocationStrategy.forward() - not implemented\");\n    };\n    NSLocationStrategy.prototype.back = function () {\n        if (this._isPageNavigationBack) {\n            // We are navigating to the previous page\n            // clear the stack until we get to a page navigation state\n            var state = this.states.pop();\n            var count = 1;\n            while (!(state.isPageNavigation)) {\n                state = this.states.pop();\n                count++;\n            }\n            trace_1.routerLog(\"NSLocationStrategy.back() while navigating back. States popped: \" + count);\n            this.callPopState(state, true);\n        }\n        else {\n            var state = this.peekState();\n            if (state.isPageNavigation) {\n                // This was a page navigation - so navigate through frame.\n                trace_1.routerLog(\"NSLocationStrategy.back() while not navigating back but top\" +\n                    \" state is page - will call frame.goback()\");\n                this.frame.goBack();\n            }\n            else {\n                // Nested navigation - just pop the state\n                trace_1.routerLog(\"NSLocationStrategy.back() while not navigating back but top\" +\n                    \" state is not page - just pop\");\n                this.callPopState(this.states.pop(), true);\n            }\n        }\n    };\n    NSLocationStrategy.prototype.canGoBack = function () {\n        return this.states.length > 1;\n    };\n    NSLocationStrategy.prototype.onPopState = function (fn) {\n        trace_1.routerLog(\"NSLocationStrategy.onPopState\");\n        this.popStateCallbacks.push(fn);\n    };\n    NSLocationStrategy.prototype.getBaseHref = function () {\n        trace_1.routerLog(\"NSLocationStrategy.getBaseHref()\");\n        return \"\";\n    };\n    NSLocationStrategy.prototype.callPopState = function (state, pop) {\n        if (pop === void 0) { pop = true; }\n        var change = { url: state.url, pop: pop };\n        for (var _i = 0, _a = this.popStateCallbacks; _i < _a.length; _i++) {\n            var fn = _a[_i];\n            fn(change);\n        }\n    };\n    NSLocationStrategy.prototype.peekState = function () {\n        if (this.states.length > 0) {\n            return this.states[this.states.length - 1];\n        }\n        return null;\n    };\n    NSLocationStrategy.prototype.toString = function () {\n        return this.states\n            .map(function (v, i) { return i + \".[\" + (v.isPageNavigation ? \"PAGE\" : \"INTERNAL\") + \"] \\\"\" + v.url + \"\\\"\"; })\n            .reverse()\n            .join(\"\\n\");\n    };\n    // Methods for syncing with page navigation in PageRouterOutlet\n    NSLocationStrategy.prototype._beginBackPageNavigation = function () {\n        trace_1.routerLog(\"NSLocationStrategy.startGoBack()\");\n        if (this._isPageNavigationBack) {\n            throw new Error(\"Calling startGoBack while going back.\");\n        }\n        this._isPageNavigationBack = true;\n    };\n    NSLocationStrategy.prototype._finishBackPageNavigation = function () {\n        trace_1.routerLog(\"NSLocationStrategy.finishBackPageNavigation()\");\n        if (!this._isPageNavigationBack) {\n            throw new Error(\"Calling endGoBack while not going back.\");\n        }\n        this._isPageNavigationBack = false;\n    };\n    NSLocationStrategy.prototype._isPageNavigatingBack = function () {\n        return this._isPageNavigationBack;\n    };\n    NSLocationStrategy.prototype._beginPageNavigation = function () {\n        trace_1.routerLog(\"NSLocationStrategy._beginPageNavigation()\");\n        var lastState = this.peekState();\n        if (lastState) {\n            lastState.isPageNavigation = true;\n        }\n        var navOptions = this._currentNavigationOptions || defaultNavOptions;\n        if (navOptions.clearHistory) {\n            trace_1.routerLog(\"NSLocationStrategy._beginPageNavigation clearing states history\");\n            this.states = [lastState];\n        }\n        this._currentNavigationOptions = undefined;\n        return navOptions;\n    };\n    NSLocationStrategy.prototype._setNavigationOptions = function (options) {\n        this._currentNavigationOptions = {\n            clearHistory: lang_facade_1.isPresent(options.clearHistory) ? options.clearHistory : false,\n            animated: lang_facade_1.isPresent(options.animated) ? options.animated : true,\n            transition: options.transition\n        };\n        trace_1.routerLog(\"NSLocationStrategy._setNavigationOptions(\" +\n            (JSON.stringify(this._currentNavigationOptions) + \")\"));\n    };\n    NSLocationStrategy.prototype._getStates = function () {\n        return this.states.slice();\n    };\n    return NSLocationStrategy;\n}(common_1.LocationStrategy));\nNSLocationStrategy = __decorate([\n    core_1.Injectable(),\n    __metadata(\"design:paramtypes\", [frame_1.Frame])\n], NSLocationStrategy);\nexports.NSLocationStrategy = NSLocationStrategy;\n//# sourceMappingURL=ns-location-strategy.js.map"
    },
    {
      "id": 39,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/OuterSubscriber.js",
      "name": "./~/rxjs/OuterSubscriber.js",
      "index": 113,
      "index2": 106,
      "size": 1107,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeMap.js",
      "issuerId": 104,
      "issuerName": "./~/rxjs/operator/mergeMap.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 55,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeAll.js",
          "module": "./~/rxjs/operator/mergeAll.js",
          "moduleName": "./~/rxjs/operator/mergeAll.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "7:24-53"
        },
        {
          "moduleId": 104,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeMap.js",
          "module": "./~/rxjs/operator/mergeMap.js",
          "moduleName": "./~/rxjs/operator/mergeMap.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "8:24-53"
        },
        {
          "moduleId": 208,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
          "module": "./~/rxjs/observable/ForkJoinObservable.js",
          "moduleName": "./~/rxjs/observable/ForkJoinObservable.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "11:24-53"
        },
        {
          "moduleId": 215,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/catch.js",
          "module": "./~/rxjs/operator/catch.js",
          "moduleName": "./~/rxjs/operator/catch.js",
          "type": "cjs require",
          "userRequest": "../OuterSubscriber",
          "loc": "7:24-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map"
    },
    {
      "id": 40,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "name": "./~/rxjs/Subscription.js",
      "index": 97,
      "index2": 95,
      "size": 8183,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
      "issuerId": 32,
      "issuerName": "./~/rxjs/Subject.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./Subscription",
          "loc": "8:21-46"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./Subscription",
          "loc": "9:21-46"
        },
        {
          "moduleId": 205,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/SubjectSubscription.js",
          "module": "./~/rxjs/SubjectSubscription.js",
          "moduleName": "./~/rxjs/SubjectSubscription.js",
          "type": "cjs require",
          "userRequest": "./Subscription",
          "loc": "7:21-46"
        },
        {
          "moduleId": 207,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ConnectableObservable.js",
          "module": "./~/rxjs/observable/ConnectableObservable.js",
          "moduleName": "./~/rxjs/observable/ConnectableObservable.js",
          "type": "cjs require",
          "userRequest": "../Subscription",
          "loc": "10:21-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map"
    },
    {
      "id": 41,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
      "name": "./~/rxjs/util/subscribeToResult.js",
      "index": 114,
      "index2": 111,
      "size": 2988,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeMap.js",
      "issuerId": 104,
      "issuerName": "./~/rxjs/operator/mergeMap.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 55,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeAll.js",
          "module": "./~/rxjs/operator/mergeAll.js",
          "moduleName": "./~/rxjs/operator/mergeAll.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "8:26-62"
        },
        {
          "moduleId": 104,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeMap.js",
          "module": "./~/rxjs/operator/mergeMap.js",
          "moduleName": "./~/rxjs/operator/mergeMap.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "7:26-62"
        },
        {
          "moduleId": 208,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
          "module": "./~/rxjs/observable/ForkJoinObservable.js",
          "moduleName": "./~/rxjs/observable/ForkJoinObservable.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "10:26-62"
        },
        {
          "moduleId": 215,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/catch.js",
          "module": "./~/rxjs/operator/catch.js",
          "moduleName": "./~/rxjs/operator/catch.js",
          "type": "cjs require",
          "userRequest": "../util/subscribeToResult",
          "loc": "8:26-62"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar root_1 = require('./root');\nvar isArrayLike_1 = require('./isArrayLike');\nvar isPromise_1 = require('./isPromise');\nvar isObject_1 = require('./isObject');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.$$iterator] === 'function') {\n        var iterator = result[iterator_1.$$iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.$$observable] === 'function') {\n        var obs = result[observable_1.$$observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map"
    },
    {
      "id": 42,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
      "name": "./~/tns-core-modules/ui/animation/animation.android.js",
      "index": 53,
      "index2": 42,
      "size": 23818,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
      "issuerId": 44,
      "issuerName": "./~/tns-core-modules/ui/transition/transition.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "../animation",
          "loc": "4:18-41"
        },
        {
          "moduleId": 122,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/keyframe-animation.js",
          "module": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
          "moduleName": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
          "type": "cjs require",
          "userRequest": "./animation",
          "loc": "3:18-40"
        },
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "ui/animation",
          "loc": "14:26-49"
        },
        {
          "moduleId": 264,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/converters.js",
          "module": "./~/tns-core-modules/ui/styling/converters.js",
          "moduleName": "./~/tns-core-modules/ui/styling/converters.js",
          "type": "cjs require",
          "userRequest": "../animation",
          "loc": "3:18-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animation_common_1 = require(\"./animation-common\");\nvar style_properties_1 = require(\"../styling/style-properties\");\nvar utils_1 = require(\"../../utils/utils\");\nvar lazy_1 = require(\"../../utils/lazy\");\n__export(require(\"./animation-common\"));\nvar argbEvaluator;\nfunction ensureArgbEvaluator() {\n    if (!argbEvaluator) {\n        argbEvaluator = new android.animation.ArgbEvaluator();\n    }\n}\nvar easeIn = lazy_1.default(function () { return new android.view.animation.AccelerateInterpolator(1); });\nvar easeOut = lazy_1.default(function () { return new android.view.animation.DecelerateInterpolator(1); });\nvar easeInOut = lazy_1.default(function () { return new android.view.animation.AccelerateDecelerateInterpolator(); });\nvar linear = lazy_1.default(function () { return new android.view.animation.LinearInterpolator(); });\nvar bounce = lazy_1.default(function () { return new android.view.animation.BounceInterpolator(); });\nvar keyPrefix = \"ui.animation.\";\nvar propertyKeys = {};\npropertyKeys[animation_common_1.Properties.backgroundColor] = Symbol(keyPrefix + animation_common_1.Properties.backgroundColor);\npropertyKeys[animation_common_1.Properties.opacity] = Symbol(keyPrefix + animation_common_1.Properties.opacity);\npropertyKeys[animation_common_1.Properties.rotate] = Symbol(keyPrefix + animation_common_1.Properties.rotate);\npropertyKeys[animation_common_1.Properties.scale] = Symbol(keyPrefix + animation_common_1.Properties.scale);\npropertyKeys[animation_common_1.Properties.translate] = Symbol(keyPrefix + animation_common_1.Properties.translate);\nfunction _resolveAnimationCurve(curve) {\n    switch (curve) {\n        case \"easeIn\":\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animation curve resolved to android.view.animation.AccelerateInterpolator(1).\", animation_common_1.traceCategories.Animation);\n            }\n            return easeIn();\n        case \"easeOut\":\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animation curve resolved to android.view.animation.DecelerateInterpolator(1).\", animation_common_1.traceCategories.Animation);\n            }\n            return easeOut();\n        case \"easeInOut\":\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animation curve resolved to android.view.animation.AccelerateDecelerateInterpolator().\", animation_common_1.traceCategories.Animation);\n            }\n            return easeInOut();\n        case \"linear\":\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animation curve resolved to android.view.animation.LinearInterpolator().\", animation_common_1.traceCategories.Animation);\n            }\n            return linear();\n        case \"spring\":\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animation curve resolved to android.view.animation.BounceInterpolator().\", animation_common_1.traceCategories.Animation);\n            }\n            return bounce();\n        case \"ease\":\n            return android.support.v4.view.animation.PathInterpolatorCompat.create(0.25, 0.1, 0.25, 1.0);\n        default:\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animation curve resolved to original: \" + curve, animation_common_1.traceCategories.Animation);\n            }\n            if (curve instanceof animation_common_1.CubicBezierAnimationCurve) {\n                return android.support.v4.view.animation.PathInterpolatorCompat.create(curve.x1, curve.y1, curve.x2, curve.y2);\n            }\n            else if (curve instanceof android.view.animation.Interpolator) {\n                return curve;\n            }\n            else if (curve instanceof android.view.animation.LinearInterpolator) {\n                return curve;\n            }\n            else {\n                throw new Error(\"Invalid animation curve: \" + curve);\n            }\n    }\n}\nexports._resolveAnimationCurve = _resolveAnimationCurve;\nvar Animation = (function (_super) {\n    __extends(Animation, _super);\n    function Animation(animationDefinitions, playSequentially) {\n        var _this = _super.call(this, animationDefinitions, playSequentially) || this;\n        if (animationDefinitions.length > 0 && animationDefinitions[0].valueSource !== undefined) {\n            _this._valueSource = animationDefinitions[0].valueSource;\n        }\n        var that = new WeakRef(_this);\n        _this._animatorListener = new android.animation.Animator.AnimatorListener({\n            onAnimationStart: function (animator) {\n                if (animation_common_1.traceEnabled()) {\n                    animation_common_1.traceWrite(\"MainAnimatorListener.onAndroidAnimationStart(\" + animator + \")\", animation_common_1.traceCategories.Animation);\n                }\n            },\n            onAnimationRepeat: function (animator) {\n                if (animation_common_1.traceEnabled()) {\n                    animation_common_1.traceWrite(\"MainAnimatorListener.onAnimationRepeat(\" + animator + \")\", animation_common_1.traceCategories.Animation);\n                }\n            },\n            onAnimationEnd: function (animator) {\n                if (animation_common_1.traceEnabled()) {\n                    animation_common_1.traceWrite(\"MainAnimatorListener.onAnimationEnd(\" + animator + \")\", animation_common_1.traceCategories.Animation);\n                }\n                that.get()._onAndroidAnimationEnd();\n            },\n            onAnimationCancel: function (animator) {\n                if (animation_common_1.traceEnabled()) {\n                    animation_common_1.traceWrite(\"MainAnimatorListener.onAnimationCancel(\" + animator + \")\", animation_common_1.traceCategories.Animation);\n                }\n                that.get()._onAndroidAnimationCancel();\n            }\n        });\n        return _this;\n    }\n    Animation.prototype.play = function () {\n        var animationFinishedPromise = _super.prototype.play.call(this);\n        this._animators = new Array();\n        this._propertyUpdateCallbacks = new Array();\n        this._propertyResetCallbacks = new Array();\n        for (var i = 0, length_1 = this._propertyAnimations.length; i < length_1; i++) {\n            this._createAnimators(this._propertyAnimations[i]);\n        }\n        this._nativeAnimatorsArray = Array.create(android.animation.Animator, this._animators.length);\n        for (var i = 0, length_2 = this._animators.length; i < length_2; i++) {\n            this._nativeAnimatorsArray[i] = this._animators[i];\n        }\n        this._animatorSet = new android.animation.AnimatorSet();\n        this._animatorSet.addListener(this._animatorListener);\n        if (this._animators.length > 0) {\n            if (this._playSequentially) {\n                this._animatorSet.playSequentially(this._nativeAnimatorsArray);\n            }\n            else {\n                this._animatorSet.playTogether(this._nativeAnimatorsArray);\n            }\n        }\n        this._enableHardwareAcceleration();\n        if (animation_common_1.traceEnabled()) {\n            animation_common_1.traceWrite(\"Starting \" + this._nativeAnimatorsArray.length + \" animations \" + (this._playSequentially ? \"sequentially.\" : \"together.\"), animation_common_1.traceCategories.Animation);\n        }\n        this._animatorSet.setupStartValues();\n        this._animatorSet.start();\n        return animationFinishedPromise;\n    };\n    Animation.prototype.cancel = function () {\n        _super.prototype.cancel.call(this);\n        if (animation_common_1.traceEnabled()) {\n            animation_common_1.traceWrite(\"Cancelling AnimatorSet.\", animation_common_1.traceCategories.Animation);\n        }\n        this._animatorSet.cancel();\n    };\n    Animation.prototype._resolveAnimationCurve = function (curve) {\n        return _resolveAnimationCurve(curve);\n    };\n    Animation.prototype._onAndroidAnimationEnd = function () {\n        if (!this.isPlaying) {\n            return;\n        }\n        var i = 0;\n        var length = this._propertyUpdateCallbacks.length;\n        for (; i < length; i++) {\n            this._propertyUpdateCallbacks[i]();\n        }\n        this._disableHardwareAcceleration();\n        this._resolveAnimationFinishedPromise();\n    };\n    Animation.prototype._onAndroidAnimationCancel = function () {\n        var i = 0;\n        var length = this._propertyResetCallbacks.length;\n        for (; i < length; i++) {\n            this._propertyResetCallbacks[i]();\n        }\n        this._disableHardwareAcceleration();\n        this._rejectAnimationFinishedPromise();\n    };\n    Animation.prototype._createAnimators = function (propertyAnimation) {\n        if (!propertyAnimation.target.nativeView) {\n            return;\n        }\n        if (animation_common_1.traceEnabled()) {\n            animation_common_1.traceWrite(\"Creating ObjectAnimator(s) for animation: \" + Animation._getAnimationInfo(propertyAnimation) + \"...\", animation_common_1.traceCategories.Animation);\n        }\n        if (propertyAnimation.target === null || propertyAnimation.target === undefined) {\n            throw new Error(\"Animation target cannot be null or undefined; property: \" + propertyAnimation.property + \"; value: \" + propertyAnimation.value + \";\");\n        }\n        if (propertyAnimation.property === null || propertyAnimation.property === undefined) {\n            throw new Error(\"Animation property cannot be null or undefined; target: \" + propertyAnimation.target + \"; value: \" + propertyAnimation.value + \";\");\n        }\n        if (propertyAnimation.value === null || propertyAnimation.value === undefined) {\n            throw new Error(\"Animation value cannot be null or undefined; target: \" + propertyAnimation.target + \"; property: \" + propertyAnimation.property + \";\");\n        }\n        var nativeArray;\n        var nativeView = propertyAnimation.target.nativeView;\n        var animators = new Array();\n        var propertyUpdateCallbacks = new Array();\n        var propertyResetCallbacks = new Array();\n        var originalValue1;\n        var originalValue2;\n        var density = utils_1.layout.getDisplayDensity();\n        var xyObjectAnimators;\n        var animatorSet;\n        var key = propertyKeys[propertyAnimation.property];\n        if (key) {\n            propertyAnimation.target[key] = propertyAnimation;\n        }\n        function checkAnimation(cb) {\n            return function () {\n                if (propertyAnimation.target[key] === propertyAnimation) {\n                    delete propertyAnimation.target[key];\n                    cb();\n                }\n            };\n        }\n        var setLocal = this._valueSource === \"animation\";\n        switch (propertyAnimation.property) {\n            case animation_common_1.Properties.opacity:\n                originalValue1 = nativeView.getAlpha();\n                nativeArray = Array.create(\"float\", 1);\n                nativeArray[0] = propertyAnimation.value;\n                propertyUpdateCallbacks.push(checkAnimation(function () {\n                    propertyAnimation.target.style[setLocal ? style_properties_1.opacityProperty.name : style_properties_1.opacityProperty.keyframe] = propertyAnimation.value;\n                }));\n                propertyResetCallbacks.push(checkAnimation(function () {\n                    if (setLocal) {\n                        propertyAnimation.target.style[style_properties_1.opacityProperty.name] = originalValue1;\n                    }\n                    else {\n                        propertyAnimation.target.style[style_properties_1.opacityProperty.keyframe] = originalValue1;\n                    }\n                    if (propertyAnimation.target.nativeView) {\n                        propertyAnimation.target[style_properties_1.opacityProperty.setNative](propertyAnimation.target.style.opacity);\n                    }\n                }));\n                animators.push(android.animation.ObjectAnimator.ofFloat(nativeView, \"alpha\", nativeArray));\n                break;\n            case animation_common_1.Properties.backgroundColor:\n                ensureArgbEvaluator();\n                originalValue1 = propertyAnimation.target.backgroundColor;\n                nativeArray = Array.create(java.lang.Object, 2);\n                nativeArray[0] = propertyAnimation.target.backgroundColor ? java.lang.Integer.valueOf(propertyAnimation.target.backgroundColor.argb) : java.lang.Integer.valueOf(-1);\n                nativeArray[1] = java.lang.Integer.valueOf(propertyAnimation.value.argb);\n                var animator = android.animation.ValueAnimator.ofObject(argbEvaluator, nativeArray);\n                animator.addUpdateListener(new android.animation.ValueAnimator.AnimatorUpdateListener({\n                    onAnimationUpdate: function (animator) {\n                        var argb = animator.getAnimatedValue().intValue();\n                        propertyAnimation.target.style[style_properties_1.backgroundColorProperty.cssName] = new animation_common_1.Color(argb);\n                    }\n                }));\n                propertyUpdateCallbacks.push(checkAnimation(function () {\n                    propertyAnimation.target.style[setLocal ? style_properties_1.backgroundColorProperty.name : style_properties_1.backgroundColorProperty.keyframe] = propertyAnimation.value;\n                }));\n                propertyResetCallbacks.push(checkAnimation(function () {\n                    if (setLocal) {\n                        propertyAnimation.target.style[style_properties_1.backgroundColorProperty.name] = originalValue1;\n                    }\n                    else {\n                        propertyAnimation.target.style[style_properties_1.backgroundColorProperty.keyframe] = originalValue1;\n                        if (propertyAnimation.target.nativeView && propertyAnimation.target[style_properties_1.backgroundColorProperty.setNative]) {\n                            propertyAnimation.target[style_properties_1.backgroundColorProperty.setNative](propertyAnimation.target.style.backgroundColor);\n                        }\n                    }\n                }));\n                animators.push(animator);\n                break;\n            case animation_common_1.Properties.translate:\n                xyObjectAnimators = Array.create(android.animation.Animator, 2);\n                nativeArray = Array.create(\"float\", 1);\n                nativeArray[0] = propertyAnimation.value.x * density;\n                xyObjectAnimators[0] = android.animation.ObjectAnimator.ofFloat(nativeView, \"translationX\", nativeArray);\n                xyObjectAnimators[0].setRepeatCount(Animation._getAndroidRepeatCount(propertyAnimation.iterations));\n                nativeArray = Array.create(\"float\", 1);\n                nativeArray[0] = propertyAnimation.value.y * density;\n                xyObjectAnimators[1] = android.animation.ObjectAnimator.ofFloat(nativeView, \"translationY\", nativeArray);\n                xyObjectAnimators[1].setRepeatCount(Animation._getAndroidRepeatCount(propertyAnimation.iterations));\n                originalValue1 = nativeView.getTranslationX() / density;\n                originalValue2 = nativeView.getTranslationY() / density;\n                propertyUpdateCallbacks.push(checkAnimation(function () {\n                    propertyAnimation.target.style[setLocal ? style_properties_1.translateXProperty.name : style_properties_1.translateXProperty.keyframe] = propertyAnimation.value.x;\n                    propertyAnimation.target.style[setLocal ? style_properties_1.translateYProperty.name : style_properties_1.translateYProperty.keyframe] = propertyAnimation.value.y;\n                }));\n                propertyResetCallbacks.push(checkAnimation(function () {\n                    if (setLocal) {\n                        propertyAnimation.target.style[style_properties_1.translateXProperty.name] = originalValue1;\n                        propertyAnimation.target.style[style_properties_1.translateYProperty.name] = originalValue2;\n                    }\n                    else {\n                        propertyAnimation.target.style[style_properties_1.translateXProperty.keyframe] = originalValue1;\n                        propertyAnimation.target.style[style_properties_1.translateYProperty.keyframe] = originalValue2;\n                        if (propertyAnimation.target.nativeView) {\n                            propertyAnimation.target[style_properties_1.translateXProperty.setNative](propertyAnimation.target.style.translateX);\n                            propertyAnimation.target[style_properties_1.translateYProperty.setNative](propertyAnimation.target.style.translateY);\n                        }\n                    }\n                }));\n                animatorSet = new android.animation.AnimatorSet();\n                animatorSet.playTogether(xyObjectAnimators);\n                animatorSet.setupStartValues();\n                animators.push(animatorSet);\n                break;\n            case animation_common_1.Properties.scale:\n                xyObjectAnimators = Array.create(android.animation.Animator, 2);\n                nativeArray = Array.create(\"float\", 1);\n                nativeArray[0] = propertyAnimation.value.x;\n                xyObjectAnimators[0] = android.animation.ObjectAnimator.ofFloat(nativeView, \"scaleX\", nativeArray);\n                xyObjectAnimators[0].setRepeatCount(Animation._getAndroidRepeatCount(propertyAnimation.iterations));\n                nativeArray = Array.create(\"float\", 1);\n                nativeArray[0] = propertyAnimation.value.y;\n                xyObjectAnimators[1] = android.animation.ObjectAnimator.ofFloat(nativeView, \"scaleY\", nativeArray);\n                xyObjectAnimators[1].setRepeatCount(Animation._getAndroidRepeatCount(propertyAnimation.iterations));\n                originalValue1 = nativeView.getScaleX();\n                originalValue2 = nativeView.getScaleY();\n                propertyUpdateCallbacks.push(checkAnimation(function () {\n                    propertyAnimation.target.style[setLocal ? style_properties_1.scaleXProperty.name : style_properties_1.scaleXProperty.keyframe] = propertyAnimation.value.x;\n                    propertyAnimation.target.style[setLocal ? style_properties_1.scaleYProperty.name : style_properties_1.scaleYProperty.keyframe] = propertyAnimation.value.y;\n                }));\n                propertyResetCallbacks.push(checkAnimation(function () {\n                    if (setLocal) {\n                        propertyAnimation.target.style[style_properties_1.scaleXProperty.name] = originalValue1;\n                        propertyAnimation.target.style[style_properties_1.scaleYProperty.name] = originalValue2;\n                    }\n                    else {\n                        propertyAnimation.target.style[style_properties_1.scaleXProperty.keyframe] = originalValue1;\n                        propertyAnimation.target.style[style_properties_1.scaleYProperty.keyframe] = originalValue2;\n                        if (propertyAnimation.target.nativeView) {\n                            propertyAnimation.target[style_properties_1.scaleXProperty.setNative](propertyAnimation.target.style.scaleX);\n                            propertyAnimation.target[style_properties_1.scaleYProperty.setNative](propertyAnimation.target.style.scaleY);\n                        }\n                    }\n                }));\n                animatorSet = new android.animation.AnimatorSet();\n                animatorSet.playTogether(xyObjectAnimators);\n                animatorSet.setupStartValues();\n                animators.push(animatorSet);\n                break;\n            case animation_common_1.Properties.rotate:\n                originalValue1 = nativeView.getRotation();\n                nativeArray = Array.create(\"float\", 1);\n                nativeArray[0] = propertyAnimation.value;\n                propertyUpdateCallbacks.push(checkAnimation(function () {\n                    propertyAnimation.target.style[setLocal ? style_properties_1.rotateProperty.name : style_properties_1.rotateProperty.keyframe] = propertyAnimation.value;\n                }));\n                propertyResetCallbacks.push(checkAnimation(function () {\n                    if (setLocal) {\n                        propertyAnimation.target.style[style_properties_1.rotateProperty.name] = originalValue1;\n                    }\n                    else {\n                        propertyAnimation.target.style[style_properties_1.rotateProperty.keyframe] = originalValue1;\n                        if (propertyAnimation.target.nativeView) {\n                            propertyAnimation.target[style_properties_1.rotateProperty.setNative](propertyAnimation.target.style.rotate);\n                        }\n                    }\n                }));\n                animators.push(android.animation.ObjectAnimator.ofFloat(nativeView, \"rotation\", nativeArray));\n                break;\n            default:\n                throw new Error(\"Cannot animate \" + propertyAnimation.property);\n        }\n        for (var i = 0, length_3 = animators.length; i < length_3; i++) {\n            if (propertyAnimation.duration !== undefined) {\n                animators[i].setDuration(propertyAnimation.duration);\n            }\n            if (propertyAnimation.delay !== undefined) {\n                animators[i].setStartDelay(propertyAnimation.delay);\n            }\n            if (propertyAnimation.iterations !== undefined && animators[i] instanceof android.animation.ValueAnimator) {\n                animators[i].setRepeatCount(Animation._getAndroidRepeatCount(propertyAnimation.iterations));\n            }\n            if (propertyAnimation.curve !== undefined) {\n                animators[i].setInterpolator(propertyAnimation.curve);\n            }\n            if (animation_common_1.traceEnabled()) {\n                animation_common_1.traceWrite(\"Animator created: \" + animators[i], animation_common_1.traceCategories.Animation);\n            }\n        }\n        this._animators = this._animators.concat(animators);\n        this._propertyUpdateCallbacks = this._propertyUpdateCallbacks.concat(propertyUpdateCallbacks);\n        this._propertyResetCallbacks = this._propertyResetCallbacks.concat(propertyResetCallbacks);\n    };\n    Animation._getAndroidRepeatCount = function (iterations) {\n        return (iterations === Number.POSITIVE_INFINITY) ? android.view.animation.Animation.INFINITE : iterations - 1;\n    };\n    Animation.prototype._enableHardwareAcceleration = function () {\n        for (var i = 0, length_4 = this._propertyAnimations.length; i < length_4; i++) {\n            var cache = this._propertyAnimations[i].target.nativeView;\n            if (cache) {\n                var layerType = cache.getLayerType();\n                if (layerType !== android.view.View.LAYER_TYPE_HARDWARE) {\n                    cache.layerType = layerType;\n                    cache.setLayerType(android.view.View.LAYER_TYPE_HARDWARE, null);\n                }\n            }\n        }\n    };\n    Animation.prototype._disableHardwareAcceleration = function () {\n        for (var i = 0, length_5 = this._propertyAnimations.length; i < length_5; i++) {\n            var cache = this._propertyAnimations[i].target.nativeView;\n            if (cache && cache.layerType !== undefined) {\n                cache.setLayerType(cache.layerType, null);\n                cache.layerType = undefined;\n            }\n        }\n    };\n    return Animation;\n}(animation_common_1.AnimationBase));\nexports.Animation = Animation;\n//# sourceMappingURL=animation.android.js.map"
    },
    {
      "id": 43,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/label/label.android.js",
      "name": "./~/tns-core-modules/ui/label/label.android.js",
      "index": 82,
      "index2": 76,
      "size": 1412,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/label",
          "loc": "61:46-82"
        },
        {
          "moduleId": 129,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs-common.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "type": "cjs require",
          "userRequest": "ui/label",
          "loc": "74:20-39"
        },
        {
          "moduleId": 148,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "type": "cjs require",
          "userRequest": "../label",
          "loc": "7:14-33"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../label",
          "loc": "5:14-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar text_base_1 = require(\"../text-base\");\n__export(require(\"../text-base\"));\nvar Label = (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Label.prototype, \"textWrap\", {\n        get: function () {\n            return this.style.whiteSpace === text_base_1.WhiteSpace.NORMAL;\n        },\n        set: function (value) {\n            this.style.whiteSpace = value ? text_base_1.WhiteSpace.NORMAL : text_base_1.WhiteSpace.NO_WRAP;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Label.prototype.createNativeView = function () {\n        var textView = new android.widget.TextView(this._context);\n        textView.setSingleLine(true);\n        textView.setEllipsize(android.text.TextUtils.TruncateAt.END);\n        return textView;\n    };\n    Label.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var textView = this.nativeView;\n        textView.setSingleLine(true);\n        textView.setEllipsize(android.text.TextUtils.TruncateAt.END);\n    };\n    return Label;\n}(text_base_1.TextBase));\nexports.Label = Label;\n//# sourceMappingURL=label.android.js.map"
    },
    {
      "id": 44,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
      "name": "./~/tns-core-modules/ui/transition/transition.android.js",
      "index": 66,
      "index2": 62,
      "size": 31357,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
      "issuerId": 7,
      "issuerName": "./~/tns-core-modules/ui/frame/frame.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
          "module": "./~/tns-core-modules/ui/frame/frame.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame.android.js",
          "type": "cjs require",
          "userRequest": "../transition",
          "loc": "7:23-47"
        },
        {
          "moduleId": 270,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/fade-transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/fade-transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/fade-transition.android.js",
          "type": "cjs require",
          "userRequest": "./transition",
          "loc": "2:19-42"
        },
        {
          "moduleId": 271,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/flip-transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/flip-transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/flip-transition.android.js",
          "type": "cjs require",
          "userRequest": "./transition",
          "loc": "2:19-42"
        },
        {
          "moduleId": 272,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/slide-transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
          "type": "cjs require",
          "userRequest": "./transition",
          "loc": "2:17-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"../../utils/types\");\nvar platform_1 = require(\"../../platform\");\nvar animation_1 = require(\"../animation\");\nvar lazy_1 = require(\"../../utils/lazy\");\nvar trace_1 = require(\"../../trace\");\nvar slideTransition;\nfunction ensureSlideTransition() {\n    if (!slideTransition) {\n        slideTransition = require(\"ui/transition/slide-transition\");\n    }\n}\nvar fadeTransition;\nfunction ensureFadeTransition() {\n    if (!fadeTransition) {\n        fadeTransition = require(\"ui/transition/fade-transition\");\n    }\n}\nvar flipTransition;\nfunction ensureFlipTransition() {\n    if (!flipTransition) {\n        flipTransition = require(\"ui/transition/flip-transition\");\n    }\n}\nvar _sdkVersion = lazy_1.default(function () { return parseInt(platform_1.device.sdkVersion); });\nvar _defaultInterpolator = lazy_1.default(function () { return new android.view.animation.AccelerateDecelerateInterpolator(); });\nvar enterFakeResourceId = -10;\nvar exitFakeResourceId = -20;\nvar popEnterFakeResourceId = -30;\nvar popExitFakeResourceId = -40;\nvar AndroidTransitionType;\n(function (AndroidTransitionType) {\n    AndroidTransitionType.enter = \"enter\";\n    AndroidTransitionType.exit = \"exit\";\n    AndroidTransitionType.popEnter = \"popEnter\";\n    AndroidTransitionType.popExit = \"popExit\";\n})(AndroidTransitionType = exports.AndroidTransitionType || (exports.AndroidTransitionType = {}));\nfunction _clearBackwardTransitions(fragment) {\n    var expandedFragment = fragment;\n    if (expandedFragment.enterPopExitTransition) {\n        if (trace_1.isEnabled()) {\n            trace_1.write(\"Cleared enterPopExitTransition \" + expandedFragment.enterPopExitTransition + \" for \" + fragment, trace_1.categories.Transition);\n        }\n        if (expandedFragment.enterPopExitTransitionListener) {\n            expandedFragment.enterPopExitTransitionListener.remove();\n        }\n        expandedFragment.enterPopExitTransition = undefined;\n    }\n    if (_sdkVersion() >= 21) {\n        var enterTransition = fragment.getEnterTransition();\n        if (enterTransition) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"Cleared Enter \" + enterTransition.getClass().getSimpleName() + \" transition for \" + fragment, trace_1.categories.Transition);\n            }\n            if (enterTransition.transitionListener) {\n                enterTransition.transitionListener.remove();\n            }\n            fragment.setEnterTransition(null);\n        }\n        var returnTransition = fragment.getReturnTransition();\n        if (returnTransition) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"Cleared Pop Exit \" + returnTransition.getClass().getSimpleName() + \" transition for \" + fragment, trace_1.categories.Transition);\n            }\n            if (returnTransition.transitionListener) {\n                returnTransition.transitionListener.remove();\n            }\n            fragment.setReturnTransition(null);\n        }\n    }\n}\nexports._clearBackwardTransitions = _clearBackwardTransitions;\nfunction _clearForwardTransitions(fragment) {\n    var expandedFragment = fragment;\n    if (expandedFragment.exitPopEnterTransition) {\n        if (trace_1.isEnabled()) {\n            trace_1.write(\"Cleared exitPopEnterTransition \" + expandedFragment.exitPopEnterTransition + \" for \" + fragment, trace_1.categories.Transition);\n        }\n        if (expandedFragment.exitPopEnterTransitionListener) {\n            expandedFragment.exitPopEnterTransitionListener.remove();\n        }\n        expandedFragment.exitPopEnterTransition = undefined;\n    }\n    if (_sdkVersion() >= 21) {\n        var exitTransition = fragment.getExitTransition();\n        if (exitTransition) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"Cleared Exit \" + exitTransition.getClass().getSimpleName() + \" transition for \" + fragment, trace_1.categories.Transition);\n            }\n            if (exitTransition.transitionListener) {\n                exitTransition.transitionListener.remove();\n            }\n            fragment.setExitTransition(null);\n        }\n        var reenterTransition = fragment.getReenterTransition();\n        if (reenterTransition) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"Cleared Pop Enter \" + reenterTransition.getClass().getSimpleName() + \" transition for \" + fragment, trace_1.categories.Transition);\n            }\n            if (reenterTransition.transitionListener) {\n                reenterTransition.transitionListener.remove();\n            }\n            fragment.setReenterTransition(null);\n        }\n    }\n}\nexports._clearForwardTransitions = _clearForwardTransitions;\nfunction _setAndroidFragmentTransitions(cachePagesOnNavigate, navigationTransition, currentFragment, newFragment, fragmentTransaction) {\n    trace_1.write(\"Setting Android Fragment Transitions...\", trace_1.categories.Transition);\n    var name;\n    if (navigationTransition.name) {\n        name = navigationTransition.name.toLowerCase();\n    }\n    var useLollipopTransition = name && (name.indexOf(\"slide\") === 0 || name === \"fade\" || name === \"explode\") && _sdkVersion() >= 21;\n    if (cachePagesOnNavigate && _sdkVersion() === 23) {\n        useLollipopTransition = false;\n    }\n    if (useLollipopTransition) {\n        newFragment.setAllowEnterTransitionOverlap(true);\n        newFragment.setAllowReturnTransitionOverlap(true);\n        if (currentFragment) {\n            currentFragment.setAllowEnterTransitionOverlap(true);\n            currentFragment.setAllowReturnTransitionOverlap(true);\n        }\n        if (name.indexOf(\"slide\") === 0) {\n            var direction = name.substr(\"slide\".length) || \"left\";\n            switch (direction) {\n                case \"left\":\n                    var rightEdge = new android.transition.Slide(android.view.Gravity.RIGHT);\n                    _setUpNativeTransition(navigationTransition, rightEdge);\n                    _addNativeTransitionListener(newFragment, rightEdge);\n                    newFragment.setEnterTransition(rightEdge);\n                    if (currentFragment) {\n                        var leftEdge_1 = new android.transition.Slide(android.view.Gravity.LEFT);\n                        _setUpNativeTransition(navigationTransition, leftEdge_1);\n                        _addNativeTransitionListener(currentFragment, leftEdge_1);\n                        currentFragment.setExitTransition(leftEdge_1);\n                    }\n                    break;\n                case \"right\":\n                    var leftEdge = new android.transition.Slide(android.view.Gravity.LEFT);\n                    _setUpNativeTransition(navigationTransition, leftEdge);\n                    _addNativeTransitionListener(newFragment, leftEdge);\n                    newFragment.setEnterTransition(leftEdge);\n                    if (currentFragment) {\n                        var rightEdge_1 = new android.transition.Slide(android.view.Gravity.RIGHT);\n                        _setUpNativeTransition(navigationTransition, rightEdge_1);\n                        _addNativeTransitionListener(currentFragment, rightEdge_1);\n                        currentFragment.setExitTransition(rightEdge_1);\n                    }\n                    break;\n                case \"top\":\n                    var bottomEdge = new android.transition.Slide(android.view.Gravity.BOTTOM);\n                    _setUpNativeTransition(navigationTransition, bottomEdge);\n                    _addNativeTransitionListener(newFragment, bottomEdge);\n                    newFragment.setEnterTransition(bottomEdge);\n                    if (currentFragment) {\n                        var topEdge_1 = new android.transition.Slide(android.view.Gravity.TOP);\n                        _setUpNativeTransition(navigationTransition, topEdge_1);\n                        _addNativeTransitionListener(currentFragment, topEdge_1);\n                        currentFragment.setExitTransition(topEdge_1);\n                    }\n                    break;\n                case \"bottom\":\n                    var topEdge = new android.transition.Slide(android.view.Gravity.TOP);\n                    _setUpNativeTransition(navigationTransition, topEdge);\n                    _addNativeTransitionListener(newFragment, topEdge);\n                    newFragment.setEnterTransition(topEdge);\n                    if (currentFragment) {\n                        var bottomEdge_1 = new android.transition.Slide(android.view.Gravity.BOTTOM);\n                        _setUpNativeTransition(navigationTransition, bottomEdge_1);\n                        _addNativeTransitionListener(currentFragment, bottomEdge_1);\n                        currentFragment.setExitTransition(bottomEdge_1);\n                    }\n                    break;\n            }\n        }\n        else if (name === \"fade\") {\n            var fadeEnter = new android.transition.Fade(android.transition.Fade.IN);\n            _setUpNativeTransition(navigationTransition, fadeEnter);\n            _addNativeTransitionListener(newFragment, fadeEnter);\n            newFragment.setEnterTransition(fadeEnter);\n            var fadeReturn = new android.transition.Fade(android.transition.Fade.OUT);\n            _setUpNativeTransition(navigationTransition, fadeReturn);\n            _addNativeTransitionListener(newFragment, fadeReturn);\n            newFragment.setReturnTransition(fadeReturn);\n            if (currentFragment) {\n                var fadeExit = new android.transition.Fade(android.transition.Fade.OUT);\n                _setUpNativeTransition(navigationTransition, fadeExit);\n                _addNativeTransitionListener(currentFragment, fadeExit);\n                currentFragment.setExitTransition(fadeExit);\n                var fadeReenter = new android.transition.Fade(android.transition.Fade.IN);\n                _setUpNativeTransition(navigationTransition, fadeReenter);\n                _addNativeTransitionListener(currentFragment, fadeReenter);\n                currentFragment.setReenterTransition(fadeReenter);\n            }\n        }\n        else if (name === \"explode\") {\n            var explodeEnter = new android.transition.Explode();\n            _setUpNativeTransition(navigationTransition, explodeEnter);\n            _addNativeTransitionListener(newFragment, explodeEnter);\n            newFragment.setEnterTransition(explodeEnter);\n            if (currentFragment) {\n                var explodeExit = new android.transition.Explode();\n                _setUpNativeTransition(navigationTransition, explodeExit);\n                _addNativeTransitionListener(currentFragment, explodeExit);\n                currentFragment.setExitTransition(explodeExit);\n            }\n        }\n    }\n    else {\n        var transition = void 0;\n        if (name) {\n            if (name.indexOf(\"slide\") === 0) {\n                var direction = name.substr(\"slide\".length) || \"left\";\n                ensureSlideTransition();\n                transition = new slideTransition.SlideTransition(direction, navigationTransition.duration, navigationTransition.curve);\n            }\n            else if (name === \"fade\") {\n                ensureFadeTransition();\n                transition = new fadeTransition.FadeTransition(navigationTransition.duration, navigationTransition.curve);\n            }\n            else if (name.indexOf(\"flip\") === 0) {\n                var direction = name.substr(\"flip\".length) || \"right\";\n                ensureFlipTransition();\n                transition = new flipTransition.FlipTransition(direction, navigationTransition.duration, navigationTransition.curve);\n            }\n        }\n        else {\n            transition = navigationTransition.instance;\n        }\n        if (transition) {\n            var newExpandedFragment = newFragment;\n            newExpandedFragment.enterPopExitTransition = transition;\n            if (currentFragment) {\n                var currentExpandedFragment = currentFragment;\n                currentExpandedFragment.exitPopEnterTransition = transition;\n            }\n            fragmentTransaction.setCustomAnimations(enterFakeResourceId, exitFakeResourceId, popEnterFakeResourceId, popExitFakeResourceId);\n        }\n    }\n    _printTransitions(currentFragment);\n    _printTransitions(newFragment);\n}\nexports._setAndroidFragmentTransitions = _setAndroidFragmentTransitions;\nfunction _setUpNativeTransition(navigationTransition, nativeTransition) {\n    if (navigationTransition.duration) {\n        nativeTransition.setDuration(navigationTransition.duration);\n    }\n    if (navigationTransition.curve) {\n        var interpolator = animation_1._resolveAnimationCurve(navigationTransition.curve);\n        nativeTransition.setInterpolator(interpolator);\n    }\n    else {\n        nativeTransition.setInterpolator(_defaultInterpolator());\n    }\n}\nfunction _onFragmentShown(fragment, isBack) {\n    if (trace_1.isEnabled()) {\n        trace_1.write(\"_onFragmentShown(\" + fragment + \", isBack: \" + isBack + \")\", trace_1.categories.Transition);\n    }\n    var expandedFragment = fragment;\n    var transitionType = isBack ? \"Pop Enter\" : \"Enter\";\n    var relevantTransition = isBack ? expandedFragment.exitPopEnterTransition : expandedFragment.enterPopExitTransition;\n    if (relevantTransition) {\n        if (trace_1.isEnabled()) {\n            trace_1.write(fragment + \" has been shown when going \" + (isBack ? \"back\" : \"forward\") + \", but there is \" + transitionType + \" \" + relevantTransition + \". Will complete page addition when transition ends.\", trace_1.categories.Transition);\n        }\n        expandedFragment.completePageAdditionWhenTransitionEnds = { isBack: isBack };\n    }\n    else if (_sdkVersion() >= 21) {\n        var nativeTransition = isBack ? fragment.getReenterTransition() : fragment.getEnterTransition();\n        if (nativeTransition) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(fragment + \" has been shown when going \" + (isBack ? \"back\" : \"forward\") + \", but there is \" + transitionType + \" \" + nativeTransition.getClass().getSimpleName() + \" transition. Will complete page addition when transition ends.\", trace_1.categories.Transition);\n            }\n            expandedFragment.completePageAdditionWhenTransitionEnds = { isBack: isBack };\n        }\n    }\n    if (!expandedFragment.completePageAdditionWhenTransitionEnds) {\n        _completePageAddition(fragment, isBack);\n    }\n}\nexports._onFragmentShown = _onFragmentShown;\nfunction _onFragmentHidden(fragment, isBack, destroyed) {\n    if (trace_1.isEnabled()) {\n        trace_1.write(\"_onFragmentHidden(\" + fragment + \", isBack: \" + isBack + \", destroyed: \" + destroyed + \")\", trace_1.categories.Transition);\n    }\n    var expandedFragment = fragment;\n    var transitionType = isBack ? \"Pop Exit\" : \"Exit\";\n    var relevantTransition = isBack ? expandedFragment.enterPopExitTransition : expandedFragment.exitPopEnterTransition;\n    if (relevantTransition) {\n        if (trace_1.isEnabled()) {\n            trace_1.write(fragment + \" has been hidden when going \" + (isBack ? \"back\" : \"forward\") + \", but there is \" + transitionType + \" \" + relevantTransition + \". Will complete page removal when transition ends.\", trace_1.categories.Transition);\n        }\n        expandedFragment.completePageRemovalWhenTransitionEnds = { isBack: isBack };\n    }\n    else if (_sdkVersion() >= 21) {\n        var nativeTransition = isBack ? fragment.getReturnTransition() : fragment.getExitTransition();\n        if (nativeTransition) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(fragment + \" has been hidden when going \" + (isBack ? \"back\" : \"forward\") + \", but there is \" + transitionType + \" \" + nativeTransition.getClass().getSimpleName() + \" transition. Will complete page removal when transition ends.\", trace_1.categories.Transition);\n            }\n            expandedFragment.completePageRemovalWhenTransitionEnds = { isBack: isBack };\n        }\n    }\n    expandedFragment.isDestroyed = destroyed;\n    if (expandedFragment.completePageRemovalWhenTransitionEnds === undefined) {\n        _completePageRemoval(fragment, isBack);\n    }\n}\nexports._onFragmentHidden = _onFragmentHidden;\nfunction _completePageAddition(fragment, isBack) {\n    var expandedFragment = fragment;\n    expandedFragment.completePageAdditionWhenTransitionEnds = undefined;\n    var frame = fragment._callbacks.frame;\n    var entry = fragment._callbacks.entry;\n    var page = entry.resolvedPage;\n    if (trace_1.isEnabled()) {\n        trace_1.write(\"STARTING ADDITION of \" + page + \"...\", trace_1.categories.Transition);\n    }\n    frame._currentEntry = entry;\n    page.onNavigatedTo(isBack);\n    frame._processNavigationQueue(page);\n    entry.isNavigation = undefined;\n    if (trace_1.isEnabled()) {\n        trace_1.write(\"ADDITION of \" + page + \" completed\", trace_1.categories.Transition);\n    }\n}\nfunction _completePageRemoval(fragment, isBack) {\n    var expandedFragment = fragment;\n    expandedFragment.completePageRemovalWhenTransitionEnds = undefined;\n    var frame = fragment._callbacks.frame;\n    var entry = fragment._callbacks.entry;\n    var page = entry.resolvedPage;\n    if (trace_1.isEnabled()) {\n        trace_1.write(\"STARTING REMOVAL of \" + page + \"...\", trace_1.categories.Transition);\n    }\n    if (page.frame) {\n        frame._removeView(page);\n        if (entry.isNavigation) {\n            page.onNavigatedFrom(isBack);\n        }\n        if (trace_1.isEnabled()) {\n            trace_1.write(\"REMOVAL of \" + page + \" completed\", trace_1.categories.Transition);\n        }\n    }\n    else {\n        if (trace_1.isEnabled()) {\n            trace_1.write(\"REMOVAL of \" + page + \" has already been done\", trace_1.categories.Transition);\n        }\n    }\n    if (expandedFragment.isDestroyed) {\n        expandedFragment.isDestroyed = undefined;\n        if (page._context) {\n            page._tearDownUI(true);\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"DETACHMENT of \" + page + \" completed\", trace_1.categories.Transition);\n            }\n        }\n        else {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"DETACHMENT of \" + page + \" has already been done\", trace_1.categories.Transition);\n            }\n            _removePageNativeViewFromAndroidParent(page);\n        }\n    }\n    entry.isNavigation = undefined;\n}\nfunction _removePageNativeViewFromAndroidParent(page) {\n    if (page.nativeView && page.nativeView.getParent) {\n        var androidParent = page.nativeView.getParent();\n        if (androidParent && androidParent.removeView) {\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"REMOVED \" + page + \".nativeView from its Android parent\", trace_1.categories.Transition);\n            }\n            if (page._context) {\n                page._tearDownUI(true);\n            }\n            androidParent.removeView(page.nativeView);\n        }\n    }\n}\nexports._removePageNativeViewFromAndroidParent = _removePageNativeViewFromAndroidParent;\nfunction _toShortString(nativeTransition) {\n    return nativeTransition.getClass().getSimpleName() + \"@\" + nativeTransition.hashCode().toString(16);\n}\nfunction _addNativeTransitionListener(fragment, nativeTransition) {\n    var transitionListener = new android.transition.Transition.TransitionListener({\n        onTransitionCancel: function (transition) {\n            var expandedFragment = this.fragment;\n            if (!expandedFragment) {\n                return;\n            }\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"CANCEL \" + _toShortString(transition) + \" transition for \" + expandedFragment, trace_1.categories.Transition);\n            }\n            if (expandedFragment.completePageRemovalWhenTransitionEnds) {\n                _completePageRemoval(expandedFragment, expandedFragment.completePageRemovalWhenTransitionEnds.isBack);\n            }\n            if (expandedFragment.completePageAdditionWhenTransitionEnds) {\n                _completePageAddition(expandedFragment, expandedFragment.completePageAdditionWhenTransitionEnds.isBack);\n            }\n            this.checkedRemove();\n        },\n        onTransitionEnd: function (transition) {\n            var expandedFragment = this.fragment;\n            if (!expandedFragment) {\n                return;\n            }\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"END \" + _toShortString(transition) + \" transition for \" + expandedFragment, trace_1.categories.Transition);\n            }\n            if (expandedFragment.completePageRemovalWhenTransitionEnds) {\n                _completePageRemoval(expandedFragment, expandedFragment.completePageRemovalWhenTransitionEnds.isBack);\n            }\n            if (expandedFragment.completePageAdditionWhenTransitionEnds) {\n                _completePageAddition(expandedFragment, expandedFragment.completePageAdditionWhenTransitionEnds.isBack);\n            }\n            this.checkedRemove();\n        },\n        onTransitionPause: function (transition) {\n            var expandedFragment = this.fragment;\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"PAUSE \" + _toShortString(transition) + \" transition for \" + expandedFragment, trace_1.categories.Transition);\n            }\n        },\n        onTransitionResume: function (transition) {\n            var expandedFragment = this.fragment;\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"RESUME \" + _toShortString(transition) + \" transition for \" + expandedFragment, trace_1.categories.Transition);\n            }\n        },\n        onTransitionStart: function (transition) {\n            var expandedFragment = this.fragment;\n            if (trace_1.isEnabled()) {\n                trace_1.write(\"START \" + _toShortString(transition) + \" transition for \" + expandedFragment, trace_1.categories.Transition);\n            }\n        }\n    });\n    transitionListener.fragment = fragment;\n    transitionListener.count = 2;\n    transitionListener.transition = nativeTransition;\n    transitionListener.listener = transitionListener;\n    transitionListener.checkedRemove = function () {\n        if (--this.count) {\n            return;\n        }\n        this.remove();\n    };\n    transitionListener.remove = function () {\n        if (!this.listener) {\n            return;\n        }\n        this.transition.removeListener(this.listener);\n        this.fragment = null;\n        this.listener = null;\n        this.transition.transitionListener = null;\n        this.transition = null;\n    };\n    nativeTransition.addListener(transitionListener);\n    nativeTransition.transitionListener = transitionListener;\n}\nfunction _onFragmentCreateAnimator(fragment, nextAnim) {\n    var transitionType;\n    switch (nextAnim) {\n        case enterFakeResourceId:\n            transitionType = AndroidTransitionType.enter;\n            break;\n        case exitFakeResourceId:\n            transitionType = AndroidTransitionType.exit;\n            break;\n        case popEnterFakeResourceId:\n            transitionType = AndroidTransitionType.popEnter;\n            break;\n        case popExitFakeResourceId:\n            transitionType = AndroidTransitionType.popExit;\n            break;\n    }\n    if ((nextAnim === popExitFakeResourceId || !nextAnim) && fragment.exitHack) {\n        trace_1.write(\"HACK EXIT FOR \" + fragment, trace_1.categories.Transition);\n        transitionType = AndroidTransitionType.exit;\n    }\n    var transition;\n    switch (transitionType) {\n        case AndroidTransitionType.enter:\n        case AndroidTransitionType.popExit:\n            transition = fragment.enterPopExitTransition;\n            break;\n        case AndroidTransitionType.exit:\n        case AndroidTransitionType.popEnter:\n            transition = fragment.exitPopEnterTransition;\n            break;\n    }\n    var animator;\n    if (transition) {\n        animator = transition.createAndroidAnimator(transitionType);\n        trace_1.write(transition + \".createAndroidAnimator(\" + transitionType + \"): \" + animator, trace_1.categories.Transition);\n        var transitionListener = new android.animation.Animator.AnimatorListener({\n            onAnimationStart: function (animator) {\n                if (trace_1.isEnabled()) {\n                    trace_1.write(\"START \" + transitionType + \" \" + this.transition + \" for \" + this.fragment, trace_1.categories.Transition);\n                }\n            },\n            onAnimationRepeat: function (animator) {\n                if (trace_1.isEnabled()) {\n                    trace_1.write(\"REPEAT \" + transitionType + \" \" + this.transition + \" for \" + this.fragment, trace_1.categories.Transition);\n                }\n            },\n            onAnimationEnd: function (animator) {\n                if (trace_1.isEnabled()) {\n                    trace_1.write(\"END \" + transitionType + \" \" + this.transition + \" for \" + this.fragment, trace_1.categories.Transition);\n                }\n                if (this.fragment.completePageRemovalWhenTransitionEnds) {\n                    _completePageRemoval(this.fragment, this.fragment.completePageRemovalWhenTransitionEnds.isBack);\n                }\n                if (this.fragment.completePageAdditionWhenTransitionEnds) {\n                    _completePageAddition(this.fragment, this.fragment.completePageAdditionWhenTransitionEnds.isBack);\n                }\n                this.checkedRemove();\n            },\n            onAnimationCancel: function (animator) {\n                if (trace_1.isEnabled()) {\n                    trace_1.write(\"CANCEL \" + transitionType + \" \" + this.transition + \" for \" + this.fragment, trace_1.categories.Transition);\n                }\n                if (this.fragment.completePageRemovalWhenTransitionEnds) {\n                    _completePageRemoval(this.fragment, this.fragment.completePageRemovalWhenTransitionEnds.isBack);\n                }\n                if (this.fragment.completePageAdditionWhenTransitionEnds) {\n                    _completePageAddition(this.fragment, this.fragment.completePageAdditionWhenTransitionEnds.isBack);\n                }\n                this.checkedRemove();\n            }\n        });\n        transitionListener.fragment = fragment;\n        transitionListener.transitionType = transitionType;\n        transitionListener.count = 2;\n        transitionListener.listener = transitionListener;\n        transitionListener.animator = animator;\n        transitionListener.checkedRemove = function () {\n            if (--this.count) {\n                return;\n            }\n            this.remove();\n        };\n        transitionListener.remove = function () {\n            if (!this.listener) {\n                return;\n            }\n            this.animator.removeListener(this.listener);\n            switch (this.transitionType) {\n                case AndroidTransitionType.enter:\n                case AndroidTransitionType.popExit:\n                    this.fragment.enterPopExitTransitionListener = null;\n                    break;\n                case AndroidTransitionType.exit:\n                case AndroidTransitionType.popEnter:\n                    this.fragment.exitPopEnterTransitionListener = null;\n                    break;\n            }\n            this.transitionType = null;\n            this.fragment = null;\n            this.listener = null;\n            this.animator.transitionListener = null;\n            this.animator = null;\n            this.transitionType = null;\n        };\n        animator.transitionListener = transitionListener;\n        animator.addListener(transitionListener);\n        switch (transitionType) {\n            case AndroidTransitionType.enter:\n            case AndroidTransitionType.popExit:\n                fragment.enterPopExitTransitionListener = transitionListener;\n                break;\n            case AndroidTransitionType.exit:\n            case AndroidTransitionType.popEnter:\n                fragment.exitPopEnterTransitionListener = transitionListener;\n                break;\n        }\n    }\n    if (transitionType && !animator) {\n        animator = _createDummyZeroDurationAnimator();\n    }\n    return animator;\n}\nexports._onFragmentCreateAnimator = _onFragmentCreateAnimator;\nfunction _prepareCurrentFragmentForClearHistory(fragment) {\n    trace_1.write(\"Preparing \" + fragment + \" transitions fro clear history...\", trace_1.categories.Transition);\n    var expandedFragment = fragment;\n    expandedFragment.exitHack = true;\n    if (_sdkVersion() >= 21) {\n        var exitTransition = fragment.getExitTransition();\n        fragment.setReturnTransition(exitTransition);\n    }\n    _printTransitions(fragment);\n}\nexports._prepareCurrentFragmentForClearHistory = _prepareCurrentFragmentForClearHistory;\nvar intEvaluator;\nfunction ensureIntEvaluator() {\n    if (!intEvaluator) {\n        intEvaluator = new android.animation.IntEvaluator();\n    }\n}\nfunction _createDummyZeroDurationAnimator() {\n    if (trace_1.isEnabled()) {\n        trace_1.write(\"_createDummyZeroDurationAnimator()\", trace_1.categories.Transition);\n    }\n    ensureIntEvaluator();\n    var nativeArray = Array.create(java.lang.Object, 2);\n    nativeArray[0] = java.lang.Integer.valueOf(0);\n    nativeArray[1] = java.lang.Integer.valueOf(1);\n    var animator = android.animation.ValueAnimator.ofObject(intEvaluator, nativeArray);\n    animator.setDuration(0);\n    return animator;\n}\nfunction _printTransitions(f) {\n    if (f && trace_1.isEnabled) {\n        var ef = f;\n        var result = ef + \" Transitions:\";\n        result += \"\" + (ef.enterPopExitTransition ? \" enterPopExit=\" + ef.enterPopExitTransition : \"\");\n        result += \"\" + (ef.exitPopEnterTransition ? \" exitPopEnter=\" + ef.exitPopEnterTransition : \"\");\n        if (_sdkVersion() >= 21) {\n            result += \"\" + (f.getEnterTransition() ? \" enter=\" + _toShortString(f.getEnterTransition()) : \"\");\n            result += \"\" + (f.getExitTransition() ? \" exit=\" + _toShortString(f.getExitTransition()) : \"\");\n            result += \"\" + (f.getReenterTransition() ? \" popEnter=\" + _toShortString(f.getReenterTransition()) : \"\");\n            result += \"\" + (f.getReturnTransition() ? \" popExit=\" + _toShortString(f.getReturnTransition()) : \"\");\n        }\n        trace_1.write(result, trace_1.categories.Transition);\n    }\n}\nvar Transition = (function () {\n    function Transition(duration, curve) {\n        this._duration = duration;\n        if (curve) {\n            this._interpolator = animation_1._resolveAnimationCurve(curve);\n        }\n        else {\n            this._interpolator = _defaultInterpolator();\n        }\n        this._id = Transition.transitionId++;\n    }\n    Transition.prototype.getDuration = function () {\n        return this._duration;\n    };\n    Transition.prototype.getCurve = function () {\n        return this._interpolator;\n    };\n    Transition.prototype.animateIOSTransition = function (containerView, fromView, toView, operation, completion) {\n        throw new Error(\"Abstract method call\");\n    };\n    Transition.prototype.createAndroidAnimator = function (transitionType) {\n        throw new Error(\"Abstract method call\");\n    };\n    Transition.prototype.toString = function () {\n        return types_1.getClass(this) + \"@\" + this._id;\n    };\n    return Transition;\n}());\nTransition.transitionId = 0;\nexports.Transition = Transition;\n//# sourceMappingURL=transition.android.js.map"
    },
    {
      "id": 45,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/reflect-metadata/Reflect.js",
      "name": "./~/reflect-metadata/Reflect.js",
      "index": 88,
      "index2": 85,
      "size": 48001,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "reflect-metadata",
          "loc": "6:0-27"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "reflect-metadata",
          "loc": "7:0-27"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "reflect-metadata",
          "loc": "4:0-27"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        HashMap.create = supportsCreate\r\n            ? function () { return MakeDictionary(Object.create(null)); }\r\n            : supportsProto\r\n                ? function () { return MakeDictionary({ __proto__: null }); }\r\n                : function () { return MakeDictionary({}); };\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, propertyKey, attributes) {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                throw new TypeError();\r\n            if (IsNull(attributes))\r\n                attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, propertyKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(propertyKey))\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var keys = [];\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        var k = 0;\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            var nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument) {\r\n        switch (Type(argument)) {\r\n            case 3 /* String */: return true;\r\n            case 4 /* Symbol */: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = HashMap.create();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map"
    },
    {
      "id": 46,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-static.js",
      "name": "./~/nativescript-angular/platform-static.js",
      "index": 1,
      "index2": 139,
      "size": 849,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 186,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/main.aot.ts",
          "module": "./app/main.aot.ts",
          "moduleName": "./app/main.aot.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/platform-static",
          "loc": "4:24-71"
        },
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/platform-static",
          "loc": "11:0-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\n// Always import platform-common first - because polyfills\nvar platform_common_1 = require(\"./platform-common\");\nvar core_1 = require(\"@angular/core\");\n// \"Static\" platform\nvar _platformNativeScript = core_1.createPlatformFactory(core_1.platformCore, \"nativeScript\", platform_common_1.COMMON_PROVIDERS.slice());\nfunction platformNativeScript(options, extraProviders) {\n    // Return raw platform to advanced users only if explicitly requested\n    if (options && options.bootInExistingPage === true) {\n        return _platformNativeScript(extraProviders);\n    }\n    else {\n        return new platform_common_1.NativeScriptPlatformRef(_platformNativeScript(extraProviders), options);\n    }\n}\nexports.platformNativeScript = platformNativeScript;\n//# sourceMappingURL=platform-static.js.map"
    },
    {
      "id": 47,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "name": "./~/nativescript-angular/element-registry.js",
      "index": 148,
      "index2": 189,
      "size": 5979,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
      "issuerId": 36,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "type": "cjs require",
          "userRequest": "nativescript-angular/element-registry",
          "loc": "3:28-76"
        },
        {
          "moduleId": 74,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
          "module": "./~/nativescript-angular/directives/action-bar.js",
          "moduleName": "./~/nativescript-angular/directives/action-bar.js",
          "type": "cjs require",
          "userRequest": "../element-registry",
          "loc": "7:25-55"
        },
        {
          "moduleId": 90,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
          "module": "./~/nativescript-angular/view-util.js",
          "moduleName": "./~/nativescript-angular/view-util.js",
          "type": "cjs require",
          "userRequest": "./element-registry",
          "loc": "6:25-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar defaultViewMeta = {\n    skipAddToDom: false,\n};\nvar elementMap = new Map();\nvar camelCaseSplit = /([a-z0-9])([A-Z])/g;\nfunction registerElement(elementName, resolver, meta) {\n    if (elementMap.has(elementName)) {\n        throw new Error(\"Element for \" + elementName + \" already registered.\");\n    }\n    else {\n        var entry = { resolver: resolver, meta: meta };\n        elementMap.set(elementName, entry);\n        elementMap.set(elementName.toLowerCase(), entry);\n        elementMap.set(elementName.replace(camelCaseSplit, \"$1-$2\").toLowerCase(), entry);\n    }\n}\nexports.registerElement = registerElement;\nfunction getViewClass(elementName) {\n    var entry = elementMap.get(elementName) ||\n        elementMap.get(elementName.toLowerCase());\n    if (!entry) {\n        throw new TypeError(\"No known component for element \" + elementName + \".\");\n    }\n    try {\n        return entry.resolver();\n    }\n    catch (e) {\n        throw new TypeError(\"Could not load view for: \" + elementName + \".\" + e);\n    }\n}\nexports.getViewClass = getViewClass;\nfunction getViewMeta(nodeName) {\n    var meta = defaultViewMeta;\n    var entry = elementMap.get(nodeName) || elementMap.get(nodeName.toLowerCase());\n    if (entry && entry.meta) {\n        meta = entry.meta;\n    }\n    return meta;\n}\nexports.getViewMeta = getViewMeta;\nfunction isKnownView(elementName) {\n    return elementMap.has(elementName) ||\n        elementMap.has(elementName.toLowerCase());\n}\nexports.isKnownView = isKnownView;\n// Register default NativeScript components\n// Note: ActionBar related components are registerd together with action-bar directives.\nregisterElement(\"AbsoluteLayout\", function () { return require(\"tns-core-modules/ui/layouts/absolute-layout\").AbsoluteLayout; });\nregisterElement(\"ActivityIndicator\", function () { return require(\"tns-core-modules/ui/activity-indicator\").ActivityIndicator; });\nregisterElement(\"Border\", function () { return require(\"tns-core-modules/ui/border\").Border; });\nregisterElement(\"Button\", function () { return require(\"tns-core-modules/ui/button\").Button; });\nregisterElement(\"ContentView\", function () { return require(\"tns-core-modules/ui/content-view\").ContentView; });\nregisterElement(\"DatePicker\", function () { return require(\"tns-core-modules/ui/date-picker\").DatePicker; });\nregisterElement(\"DockLayout\", function () { return require(\"tns-core-modules/ui/layouts/dock-layout\").DockLayout; });\nregisterElement(\"GridLayout\", function () { return require(\"tns-core-modules/ui/layouts/grid-layout\").GridLayout; });\nregisterElement(\"HtmlView\", function () { return require(\"tns-core-modules/ui/html-view\").HtmlView; });\nregisterElement(\"Image\", function () { return require(\"tns-core-modules/ui/image\").Image; });\n// Parse5 changes <Image> tags to <img>. WTF!\nregisterElement(\"img\", function () { return require(\"tns-core-modules/ui/image\").Image; });\nregisterElement(\"Label\", function () { return require(\"tns-core-modules/ui/label\").Label; });\nregisterElement(\"ListPicker\", function () { return require(\"tns-core-modules/ui/list-picker\").ListPicker; });\nregisterElement(\"ListView\", function () { return require(\"tns-core-modules/ui/list-view\").ListView; });\nregisterElement(\"Page\", function () { return require(\"tns-core-modules/ui/page\").Page; });\nregisterElement(\"Placeholder\", function () { return require(\"tns-core-modules/ui/placeholder\").Placeholder; });\nregisterElement(\"Progress\", function () { return require(\"tns-core-modules/ui/progress\").Progress; });\nregisterElement(\"ProxyViewContainer\", function () { return require(\"tns-core-modules/ui/proxy-view-container\").ProxyViewContainer; });\nregisterElement(\"Repeater\", function () { return require(\"tns-core-modules/ui/repeater\").Repeater; });\nregisterElement(\"ScrollView\", function () { return require(\"tns-core-modules/ui/scroll-view\").ScrollView; });\nregisterElement(\"SearchBar\", function () { return require(\"tns-core-modules/ui/search-bar\").SearchBar; });\nregisterElement(\"SegmentedBar\", function () { return require(\"tns-core-modules/ui/segmented-bar\").SegmentedBar; });\nregisterElement(\"SegmentedBarItem\", function () { return require(\"tns-core-modules/ui/segmented-bar\").SegmentedBarItem; });\nregisterElement(\"Slider\", function () { return require(\"tns-core-modules/ui/slider\").Slider; });\nregisterElement(\"StackLayout\", function () { return require(\"tns-core-modules/ui/layouts/stack-layout\").StackLayout; });\nregisterElement(\"FlexboxLayout\", function () { return require(\"tns-core-modules/ui/layouts/flexbox-layout\").FlexboxLayout; });\nregisterElement(\"Switch\", function () { return require(\"tns-core-modules/ui/switch\").Switch; });\nregisterElement(\"TabView\", function () { return require(\"tns-core-modules/ui/tab-view\").TabView; });\nregisterElement(\"TextField\", function () { return require(\"tns-core-modules/ui/text-field\").TextField; });\nregisterElement(\"TextView\", function () { return require(\"tns-core-modules/ui/text-view\").TextView; });\nregisterElement(\"TimePicker\", function () { return require(\"tns-core-modules/ui/time-picker\").TimePicker; });\nregisterElement(\"WebView\", function () { return require(\"tns-core-modules/ui/web-view\").WebView; });\nregisterElement(\"WrapLayout\", function () { return require(\"tns-core-modules/ui/layouts/wrap-layout\").WrapLayout; });\nregisterElement(\"FormattedString\", function () { return require(\"tns-core-modules/text/formatted-string\").FormattedString; });\nregisterElement(\"Span\", function () { return require(\"tns-core-modules/text/span\").Span; });\nregisterElement(\"DetachedContainer\", function () { return require(\"tns-core-modules/ui/proxy-view-container\").ProxyViewContainer; }, { skipAddToDom: true });\nregisterElement(\"DetachedText\", function () { return require(\"ui/placeholder\").Placeholder; }, { skipAddToDom: true });\nregisterElement(\"Comment\", function () { return require(\"ui/placeholder\").Placeholder; }, { skipAddToDom: false });\n//# sourceMappingURL=element-registry.js.map"
    },
    {
      "id": 48,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
      "name": "./~/nativescript-angular/router/page-router-outlet.js",
      "index": 269,
      "index2": 267,
      "size": 11051,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 83,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
          "module": "./~/nativescript-angular/router/ns-router-link.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link.js",
          "type": "cjs require",
          "userRequest": "./page-router-outlet",
          "loc": "5:27-58"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/page-router-outlet",
          "loc": "8:27-65"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/page-router-outlet",
          "loc": "13:27-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar page_1 = require(\"tns-core-modules/ui/page\");\nvar BehaviorSubject_1 = require(\"rxjs/BehaviorSubject\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar platform_providers_1 = require(\"../platform-providers\");\nvar trace_1 = require(\"../trace\");\nvar detached_loader_1 = require(\"../common/detached-loader\");\nvar view_util_1 = require(\"../view-util\");\nvar ns_location_strategy_1 = require(\"./ns-location-strategy\");\nvar PageRoute = (function () {\n    function PageRoute(startRoute) {\n        this.activatedRoute = new BehaviorSubject_1.BehaviorSubject(startRoute);\n    }\n    return PageRoute;\n}());\nexports.PageRoute = PageRoute;\n/**\n * Reference Cache\n */\nvar RefCache = (function () {\n    function RefCache() {\n        this.cache = new Array();\n    }\n    RefCache.prototype.push = function (componentRef, reusedRoute, outletMap, loaderRef) {\n        this.cache.push({ componentRef: componentRef, reusedRoute: reusedRoute, outletMap: outletMap, loaderRef: loaderRef });\n    };\n    RefCache.prototype.pop = function () {\n        return this.cache.pop();\n    };\n    RefCache.prototype.peek = function () {\n        return this.cache[this.cache.length - 1];\n    };\n    Object.defineProperty(RefCache.prototype, \"length\", {\n        get: function () {\n            return this.cache.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RefCache;\n}());\nvar PageRouterOutlet = (function () {\n    function PageRouterOutlet(parentOutletMap, location, name, locationStrategy, componentFactoryResolver, resolver, frame, device, pageFactory) {\n        this.location = location;\n        this.locationStrategy = locationStrategy;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.resolver = resolver;\n        this.frame = frame;\n        this.pageFactory = pageFactory;\n        this.refCache = new RefCache();\n        this.isInitialPage = true;\n        parentOutletMap.registerOutlet(name ? name : router_1.PRIMARY_OUTLET, this);\n        this.viewUtil = new view_util_1.ViewUtil(device);\n        this.detachedLoaderFactory = resolver.resolveComponentFactory(detached_loader_1.DetachedLoader);\n        log(\"DetachedLoaderFactory loaded\");\n    }\n    Object.defineProperty(PageRouterOutlet.prototype, \"locationInjector\", {\n        /** @deprecated from Angular since v4 */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageRouterOutlet.prototype, \"locationFactoryResolver\", {\n        /** @deprecated from Angular since v4 */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageRouterOutlet.prototype, \"isActivated\", {\n        get: function () {\n            return !!this.currentActivatedComp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageRouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.currentActivatedComp) {\n                throw new Error(\"Outlet is not activated\");\n            }\n            return this.currentActivatedComp.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageRouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.currentActivatedComp) {\n                throw new Error(\"Outlet is not activated\");\n            }\n            return this.currentActivatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PageRouterOutlet.prototype.deactivate = function () {\n        if (this.locationStrategy._isPageNavigatingBack()) {\n            log(\"PageRouterOutlet.deactivate() while going back - should destroy\");\n            var poppedItem = this.refCache.pop();\n            var poppedRef = poppedItem.componentRef;\n            if (this.currentActivatedComp !== poppedRef) {\n                throw new Error(\"Current componentRef is different for cached componentRef\");\n            }\n            this.destroyCacheItem(poppedItem);\n            this.currentActivatedComp = null;\n        }\n        else {\n            log(\"PageRouterOutlet.deactivate() while going forward - do nothing\");\n        }\n    };\n    PageRouterOutlet.prototype.clearRefCache = function () {\n        while (this.refCache.length > 0) {\n            this.destroyCacheItem(this.refCache.pop());\n        }\n    };\n    PageRouterOutlet.prototype.destroyCacheItem = function (poppedItem) {\n        if (lang_facade_1.isPresent(poppedItem.componentRef)) {\n            poppedItem.componentRef.destroy();\n        }\n        if (lang_facade_1.isPresent(poppedItem.loaderRef)) {\n            poppedItem.loaderRef.destroy();\n        }\n    };\n    /**\n     * Called by the Router to instantiate a new component during the commit phase of a navigation.\n     * This method in turn is responsible for calling the `routerOnActivate` hook of its child.\n     */\n    PageRouterOutlet.prototype.activateWith = function (activatedRoute, resolver, outletMap) {\n        this.outletMap = outletMap;\n        this.currentActivatedRoute = activatedRoute;\n        resolver = resolver || this.resolver;\n        if (this.locationStrategy._isPageNavigatingBack()) {\n            this.activateOnGoBack(activatedRoute, outletMap);\n        }\n        else {\n            this.activateOnGoForward(activatedRoute, outletMap, resolver);\n        }\n    };\n    PageRouterOutlet.prototype.activateOnGoForward = function (activatedRoute, outletMap, loadedResolver) {\n        var pageRoute = new PageRoute(activatedRoute);\n        var providers = new Map();\n        providers.set(PageRoute, pageRoute);\n        providers.set(router_1.ActivatedRoute, activatedRoute);\n        providers.set(router_1.RouterOutletMap, outletMap);\n        var childInjector = new ChildInjector(providers, this.location.injector);\n        var factory = this.getComponentFactory(activatedRoute, loadedResolver);\n        if (this.isInitialPage) {\n            log(\"PageRouterOutlet.activate() initial page - just load component\");\n            this.isInitialPage = false;\n            this.currentActivatedComp = this.location.createComponent(factory, this.location.length, childInjector, []);\n            this.currentActivatedComp.changeDetectorRef.detectChanges();\n            this.refCache.push(this.currentActivatedComp, pageRoute, outletMap, null);\n        }\n        else {\n            log(\"PageRouterOutlet.activate() forward navigation - \" +\n                \"create detached loader in the loader container\");\n            var page = this.pageFactory({\n                isNavigation: true,\n                componentType: factory.componentType\n            });\n            providers.set(page_1.Page, page);\n            var loaderRef = this.location.createComponent(this.detachedLoaderFactory, this.location.length, childInjector, []);\n            loaderRef.changeDetectorRef.detectChanges();\n            this.currentActivatedComp = loaderRef.instance.loadWithFactory(factory);\n            this.loadComponentInPage(page, this.currentActivatedComp);\n            this.currentActivatedComp.changeDetectorRef.detectChanges();\n            this.refCache.push(this.currentActivatedComp, pageRoute, outletMap, loaderRef);\n        }\n    };\n    PageRouterOutlet.prototype.activateOnGoBack = function (activatedRoute, outletMap) {\n        log(\"PageRouterOutlet.activate() - Back navigation, so load from cache\");\n        this.locationStrategy._finishBackPageNavigation();\n        var cacheItem = this.refCache.peek();\n        cacheItem.reusedRoute.activatedRoute.next(activatedRoute);\n        this.outletMap = cacheItem.outletMap;\n        // HACK: Fill the outlet map provided by the router, with the outlets that we have\n        // cached. This is needed because the component is taken from the cache and not\n        // created - so it will not register its child router-outlets to the newly created\n        // outlet map.\n        Object.assign(outletMap, cacheItem.outletMap);\n        this.currentActivatedComp = cacheItem.componentRef;\n    };\n    PageRouterOutlet.prototype.loadComponentInPage = function (page, componentRef) {\n        var _this = this;\n        // Component loaded. Find its root native view.\n        var componentView = componentRef.location.nativeElement;\n        // Remove it from original native parent.\n        this.viewUtil.removeChild(componentView.parent, componentView);\n        // Add it to the new page\n        page.content = componentView;\n        page.on(\"navigatedFrom\", global.Zone.current.wrap(function (args) {\n            if (args.isBackNavigation) {\n                _this.locationStrategy._beginBackPageNavigation();\n                _this.locationStrategy.back();\n            }\n        }));\n        var navOptions = this.locationStrategy._beginPageNavigation();\n        this.frame.navigate({\n            create: function () { return page; },\n            clearHistory: navOptions.clearHistory,\n            animated: navOptions.animated,\n            transition: navOptions.transition\n        });\n        // Clear refCache if navigation with clearHistory\n        if (navOptions.clearHistory) {\n            this.clearRefCache();\n        }\n    };\n    // NOTE: Using private APIs - potential break point!\n    PageRouterOutlet.prototype.getComponentFactory = function (activatedRoute, loadedResolver) {\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot._routeConfig.component;\n        if (loadedResolver) {\n            return loadedResolver.resolveComponentFactory(component);\n        }\n        else {\n            return this.componentFactoryResolver.resolveComponentFactory(component);\n        }\n    };\n    return PageRouterOutlet;\n}());\nPageRouterOutlet = __decorate([\n    core_1.Directive({ selector: \"page-router-outlet\" }) // tslint:disable-line:directive-selector\n    ,\n    __param(2, core_1.Attribute(\"name\")),\n    __param(7, core_1.Inject(platform_providers_1.DEVICE)),\n    __param(8, core_1.Inject(platform_providers_1.PAGE_FACTORY)),\n    __metadata(\"design:paramtypes\", [router_1.RouterOutletMap,\n        core_1.ViewContainerRef, String, ns_location_strategy_1.NSLocationStrategy,\n        core_1.ComponentFactoryResolver,\n        core_1.ComponentFactoryResolver,\n        frame_1.Frame, Object, Function])\n], PageRouterOutlet);\nexports.PageRouterOutlet = PageRouterOutlet;\nvar ChildInjector = (function () {\n    function ChildInjector(providers, parent) {\n        this.providers = providers;\n        this.parent = parent;\n    }\n    ChildInjector.prototype.get = function (token, notFoundValue) {\n        return this.providers.get(token) || this.parent.get(token, notFoundValue);\n    };\n    return ChildInjector;\n}());\nfunction log(msg) {\n    trace_1.routerLog(msg);\n}\n//# sourceMappingURL=page-router-outlet.js.map"
    },
    {
      "id": 49,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/router-extensions.js",
      "name": "./~/nativescript-angular/router/router-extensions.js",
      "index": 271,
      "index2": 268,
      "size": 1698,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 83,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
          "module": "./~/nativescript-angular/router/ns-router-link.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link.js",
          "type": "cjs require",
          "userRequest": "./router-extensions",
          "loc": "6:26-56"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/router-extensions",
          "loc": "11:26-63"
        },
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/router-extensions",
          "loc": "15:26-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ns_location_strategy_1 = require(\"./ns-location-strategy\");\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar RouterExtensions = (function () {\n    function RouterExtensions(router, locationStrategy, frame) {\n        this.router = router;\n        this.locationStrategy = locationStrategy;\n        this.frame = frame;\n    }\n    RouterExtensions.prototype.navigate = function (commands, extras) {\n        if (extras) {\n            this.locationStrategy._setNavigationOptions(extras);\n        }\n        return this.router.navigate(commands, extras);\n    };\n    RouterExtensions.prototype.navigateByUrl = function (url, options) {\n        if (options) {\n            this.locationStrategy._setNavigationOptions(options);\n        }\n        return this.router.navigateByUrl(url);\n    };\n    RouterExtensions.prototype.back = function () {\n        this.locationStrategy.back();\n    };\n    RouterExtensions.prototype.canGoBack = function () {\n        return this.locationStrategy.canGoBack();\n    };\n    RouterExtensions.prototype.backToPreviousPage = function () {\n        this.frame.goBack();\n    };\n    RouterExtensions.prototype.canGoBackToPreviousPage = function () {\n        return this.frame.canGoBack();\n    };\n    return RouterExtensions;\n}());\nRouterExtensions = __decorate([\n    core_1.Injectable(),\n    __metadata(\"design:paramtypes\", [router_1.Router,\n        ns_location_strategy_1.NSLocationStrategy,\n        frame_1.Frame])\n], RouterExtensions);\nexports.RouterExtensions = RouterExtensions;\n//# sourceMappingURL=router-extensions.js.map"
    },
    {
      "id": 50,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
      "index": 220,
      "index2": 220,
      "size": 14922,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "../chart-common",
          "loc": "3:24-50"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./chart-common",
          "loc": "2:19-44"
        },
        {
          "moduleId": 201,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "type": "cjs require",
          "userRequest": "../../chart-common",
          "loc": "3:18-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar observable_array_1 = require(\"tns-core-modules/data/observable-array\");\nvar observable_1 = require(\"tns-core-modules/data/observable\");\nvar weakEvents = require(\"tns-core-modules/ui/core/weak-event-listener\");\nvar chart_axis_common_1 = require(\"./visualization/views/chart-axis-common\");\nvar chart_public_enum_1 = require(\"./misc/chart-public-enum\");\nvar initializersImpl = require(\"./initializers/chart-initializers\");\nvar RadChartBase = (function (_super) {\n    __extends(RadChartBase, _super);\n    function RadChartBase() {\n        var _this = _super.call(this) || this;\n        _this.on(\"bindingContextChange\", _this.baseBindingContextChanged, _this);\n        return _this;\n    }\n    Object.defineProperty(RadChartBase.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadChartBase.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadChartBase.prototype, \"androidView\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadChartBase.prototype, \"rootLayout\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadChartBase.prototype.reloadPalettes = function () {\n        if (this._initializer) {\n            this._initializer.reloadPalettes(this);\n        }\n    };\n    Object.defineProperty(RadChartBase.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.ChartBaseValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadChartBase.prototype.updateChart = function () {\n    };\n    RadChartBase.prototype._addArrayFromBuilder = function (name, value) {\n        if (name === \"series\") {\n            this.series = new observable_array_1.ObservableArray(value);\n        }\n        else if (name === \"palettes\") {\n            this.palettes = new observable_array_1.ObservableArray(value);\n        }\n        else if (name === \"annotations\") {\n            this.annotations = new observable_array_1.ObservableArray(value);\n        }\n    };\n    RadChartBase.prototype.baseBindingContextChanged = function (data) {\n        if (this.series) {\n            for (var i = 0; i < this.series.length; i++) {\n                this.series.getItem(i).bindingContext = data.value;\n                if (this.series.getItem(i).horizontalAxis) {\n                    this.series.getItem(i).horizontalAxis.bindingContext = data.value;\n                    ;\n                }\n                if (this.series.getItem(i).verticalAxis) {\n                    this.series.getItem(i).verticalAxis.bindingContext = data.value;\n                    ;\n                }\n            }\n        }\n    };\n    RadChartBase.prototype.getAxixByID = function (axisID) {\n        return this.getAxisByID(axisID);\n    };\n    RadChartBase.prototype.getAxisByID = function (axisID) {\n        return null;\n    };\n    RadChartBase.prototype.onLegendPropertyChanged = function (oldValue, newValue) {\n        this.onLegendChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onLegendChanged = function (oldValue, newValue) {\n        this.legend.updateLegendView(this);\n        this.initializer.onLegendChanged(oldValue, newValue, this);\n    };\n    RadChartBase.prototype.onPalettesPropertyChanged = function (oldValue, newValue) {\n        this.onPalettesChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onPalettesChanged = function (oldValue, newValue) {\n        this.initializer.onPalettesPropertyChanged(oldValue, newValue, this);\n        if (oldValue instanceof observable_1.Observable) {\n            weakEvents.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, this.PalettesCollectionChangedInternal, this);\n        }\n        if (newValue instanceof observable_1.Observable) {\n            weakEvents.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, this.PalettesCollectionChangedInternal, this);\n        }\n    };\n    RadChartBase.prototype.PalettesCollectionChangedInternal = function (data) {\n        this.initializer.onPalettesChanged(data, this);\n    };\n    RadChartBase.prototype.onSeriesPropertyChanged = function (oldValue, newValue) {\n        this.onSeriesChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onSeriesChanged = function (oldValue, newValue) {\n        this.initializer.onSeriesPropertyChanged(oldValue, newValue, this);\n        if (oldValue instanceof observable_1.Observable) {\n            weakEvents.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, this.SeriesCollectionChangedInternal, this);\n        }\n        if (newValue instanceof observable_1.Observable) {\n            weakEvents.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, this.SeriesCollectionChangedInternal, this);\n        }\n    };\n    RadChartBase.prototype.SeriesCollectionChangedInternal = function (data) {\n        this.initializer.onSeriesChanged(data, this);\n    };\n    RadChartBase.prototype.onAnnotationsPropertyChanged = function (oldValue, newValue) {\n        this.onAnnotationsChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onAnnotationsChanged = function (oldValue, newValue) {\n        this.initializer.onAnnotationsPropertyChanged(oldValue, newValue, this);\n        if (oldValue instanceof observable_1.Observable) {\n            weakEvents.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, this.AnnotationsCollectionChangedInternal, this);\n        }\n        if (newValue instanceof observable_1.Observable) {\n            weakEvents.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, this.AnnotationsCollectionChangedInternal, this);\n        }\n    };\n    RadChartBase.prototype.AnnotationsCollectionChangedInternal = function (data) {\n        this.initializer.onAnnotationsChanged(data, this);\n    };\n    RadChartBase.prototype.onSelectionModePropertyChanged = function (oldValue, newValue) {\n        this.onSelectionModeChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onSeriesSelectionModePropertyChanged = function (oldValue, newValue) {\n        this.onSeriesSelectionModeChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onPointSelectionModePropertyChanged = function (oldValue, newValue) {\n        this.onPointSelectionModeChanged(oldValue, newValue);\n    };\n    RadChartBase.prototype.onSelectionModeChanged = function (oldValue, newValue) {\n    };\n    RadChartBase.prototype.onSeriesSelectionModeChanged = function (oldValue, newValue) {\n    };\n    RadChartBase.prototype.onPointSelectionModeChanged = function (oldValue, newValue) {\n    };\n    return RadChartBase;\n}(view_1.View));\nRadChartBase.seriesSelectedEvent = \"seriesSelected\";\nRadChartBase.seriesDeselectedEvent = \"seriesDeselected\";\nRadChartBase.pointSelectedEvent = \"pointSelected\";\nRadChartBase.pointDeselectedEvent = \"pointDeselected\";\nRadChartBase.chartZoomedEvent = \"chartZoomed\";\nRadChartBase.chartPannedEvent = \"chartPanned\";\nRadChartBase.trackballTrackedSelectionEvent = \"trackballTrackedSelection\";\nRadChartBase.legendProperty = new view_1.Property({\n    name: \"legend\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLegendPropertyChanged(oldValue, newValue);\n    },\n});\nRadChartBase.seriesProperty = new view_1.Property({\n    name: \"series\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onSeriesPropertyChanged(oldValue, newValue);\n    },\n});\nRadChartBase.palettesProperty = new view_1.Property({\n    name: \"palettes\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onPalettesPropertyChanged(oldValue, newValue);\n    },\n});\nRadChartBase.annotationsProperty = new view_1.Property({\n    name: \"annotations\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onAnnotationsPropertyChanged(oldValue, newValue);\n    },\n});\nRadChartBase.selectionModeProperty = new view_1.Property({\n    name: \"selectionMode\",\n    defaultValue: chart_public_enum_1.ChartSelectionMode.None,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onSelectionModePropertyChanged(oldValue, newValue);\n    },\n});\nRadChartBase.seriesSelectionModeProperty = new view_1.Property({\n    name: \"seriesSelectionMode\",\n    defaultValue: chart_public_enum_1.ChartSelectionMode.None,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onSeriesSelectionModePropertyChanged(oldValue, newValue);\n    },\n});\nRadChartBase.pointSelectionModeProperty = new view_1.Property({\n    name: \"pointSelectionMode\",\n    defaultValue: chart_public_enum_1.ChartSelectionMode.None,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onPointSelectionModePropertyChanged(oldValue, newValue);\n    },\n});\n__decorate([\n    Deprecated,\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", chart_axis_common_1.CartesianAxis)\n], RadChartBase.prototype, \"getAxixByID\", null);\nexports.RadChartBase = RadChartBase;\nRadChartBase.legendProperty.register(RadChartBase);\nRadChartBase.seriesProperty.register(RadChartBase);\nRadChartBase.palettesProperty.register(RadChartBase);\nRadChartBase.annotationsProperty.register(RadChartBase);\nRadChartBase.selectionModeProperty.register(RadChartBase);\nRadChartBase.seriesSelectionModeProperty.register(RadChartBase);\nRadChartBase.pointSelectionModeProperty.register(RadChartBase);\nvar RadCartesianChart = (function (_super) {\n    __extends(RadCartesianChart, _super);\n    function RadCartesianChart() {\n        var _this = _super.call(this) || this;\n        _this.on(\"bindingContextChange\", _this.bindingContextChanged, _this);\n        return _this;\n    }\n    RadCartesianChart.prototype.onGridPropertyChanged = function (oldValue, newValue) {\n        this.onGridChanged(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onGridChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChart.prototype.onHorizontalAxisPropertyChanged = function (oldValue, newValue) {\n        this.onHorizontalAxisChanged(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onVerticalAxisPropertyChanged = function (oldValue, newValue) {\n        this.onVerticalAxisChanged(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onHorizontalZoomPropertyChanged = function (oldValue, newValue) {\n        this.onHorizontalZoomChanged(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onVerticalZoomPropertyChanged = function (oldValue, newValue) {\n        this.onVerticalZoomChanged(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onTrackballPropertyChanged = function (oldValue, newValue) {\n        this.onTrackballChanged(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onHorizontalAxisChanged = function (oldValue, newValue) {\n        this.updateAxisBindingContext(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onVerticalAxisChanged = function (oldValue, newValue) {\n        this.updateAxisBindingContext(oldValue, newValue);\n    };\n    RadCartesianChart.prototype.onHorizontalZoomChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChart.prototype.onVerticalZoomChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChart.prototype.onTrackballChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChart.prototype.updateAxisBindingContext = function (oldValue, newValue) {\n        if (newValue) {\n            newValue.bindingContext = this.bindingContext;\n        }\n        else {\n            if (oldValue) {\n                oldValue.bindingContext = null;\n            }\n        }\n    };\n    RadCartesianChart.prototype.bindingContextChanged = function (data) {\n        if (this.horizontalAxis) {\n            this.horizontalAxis.bindingContext = data.value;\n            ;\n        }\n        if (this.verticalAxis) {\n            this.verticalAxis.bindingContext = data.value;\n            ;\n        }\n    };\n    return RadCartesianChart;\n}(RadChartBase));\nRadCartesianChart.gridProperty = new view_1.Property({\n    name: \"grid\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onGridPropertyChanged(oldValue, newValue);\n    },\n});\nRadCartesianChart.horizontalAxisProperty = new view_1.Property({\n    name: \"horizontalAxis\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHorizontalAxisPropertyChanged(oldValue, newValue);\n    },\n});\nRadCartesianChart.verticalAxisProperty = new view_1.Property({\n    name: \"verticalAxis\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onVerticalAxisPropertyChanged(oldValue, newValue);\n    },\n});\nRadCartesianChart.verticalZoomProperty = new view_1.Property({\n    name: \"verticalZoom\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onVerticalZoomPropertyChanged(oldValue, newValue);\n    },\n});\nRadCartesianChart.horizontalZoomProperty = new view_1.Property({\n    name: \"horizontalZoom\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHorizontalZoomPropertyChanged(oldValue, newValue);\n    },\n});\nRadCartesianChart.trackballProperty = new view_1.Property({\n    name: \"trackball\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onTrackballPropertyChanged(oldValue, newValue);\n    },\n});\nexports.RadCartesianChart = RadCartesianChart;\nRadCartesianChart.gridProperty.register(RadCartesianChart);\nRadCartesianChart.horizontalAxisProperty.register(RadCartesianChart);\nRadCartesianChart.verticalAxisProperty.register(RadCartesianChart);\nRadCartesianChart.verticalZoomProperty.register(RadCartesianChart);\nRadCartesianChart.horizontalZoomProperty.register(RadCartesianChart);\nRadCartesianChart.trackballProperty.register(RadCartesianChart);\nvar RadPieChart = (function (_super) {\n    __extends(RadPieChart, _super);\n    function RadPieChart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RadPieChart;\n}(RadChartBase));\nexports.RadPieChart = RadPieChart;\n"
    },
    {
      "id": 51,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
      "index": 222,
      "index2": 218,
      "size": 36645,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
      "issuerId": 50,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "./initializers/chart-initializers",
          "loc": "8:23-67"
        },
        {
          "moduleId": 52,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
          "type": "cjs require",
          "userRequest": "../../initializers/chart-initializers",
          "loc": "2:23-71"
        },
        {
          "moduleId": 96,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
          "type": "cjs require",
          "userRequest": "../../initializers/chart-initializers",
          "loc": "2:23-71"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_array_1 = require(\"tns-core-modules/data/observable-array\");\nvar chartCommonModule = require(\"../chart-common\");\nvar color_1 = require(\"tns-core-modules/color\");\nvar utilsModule = require(\"tns-core-modules/utils/utils\");\nvar chart_public_enum_1 = require(\"../misc/chart-public-enum\");\nvar chart_public_enum_2 = require(\"../misc/chart-public-enum\");\nvar chart_series_common_1 = require(\"../visualization/views/chart-series-common\");\nvar ChartBaseValueMapper = (function () {\n    function ChartBaseValueMapper() {\n    }\n    ChartBaseValueMapper.prototype.onLegendChanged = function (oldValue, newValue, chart) {\n        if (!chart.legend) {\n            if (chart.rootLayout) {\n                chart.rootLayout.removeAllViews();\n            }\n            if (chart.androidView) {\n                chart.rootLayout.addView(chart.androidView);\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.onPalettesChanged = function (data, chart) {\n        if (data.eventName && data.eventName.toLowerCase() === \"change\") {\n            this.loadPalette(chart.palettes, chart);\n        }\n    };\n    ChartBaseValueMapper.prototype.onPalettesPropertyChanged = function (oldValue, newValue, chart) {\n        for (var i = 0; i < newValue.length; ++i) {\n            newValue.getItem(i).owner = chart;\n        }\n        this.loadPalette(newValue, chart);\n    };\n    ChartBaseValueMapper.prototype.loadPalette = function (palettes, chart) {\n        if (!chart.androidView) {\n            return;\n        }\n        this._currentChart = chart;\n        var normalPalette = chart.androidView.getPalette().clone();\n        var selectionPalette = chart.androidView.getSelectionPalette().clone();\n        if (chart.palettes) {\n            for (var i = 0; i < chart.series.length; i++) {\n                var palettesForSeries = this.getPalettesForSeries(palettes, chart.series.getItem(i));\n                if (palettesForSeries.length > 0) {\n                    this.applyPalettesToSeries(palettesForSeries, chart.series.getItem(i), normalPalette, selectionPalette);\n                }\n            }\n        }\n        chart.androidView.setPalette(normalPalette);\n        chart.androidView.setSelectionPalette(selectionPalette);\n    };\n    ChartBaseValueMapper.prototype.getPalettesForSeries = function (source, series) {\n        var palettes = [];\n        for (var i = 0; i < source.length; i++) {\n            var palette = source.getItem(i);\n            if (palette.seriesName === series[chart_public_enum_2.seriesName]) {\n                palettes.push(palette);\n            }\n        }\n        return palettes;\n    };\n    ChartBaseValueMapper.prototype.applyPalettesToSeries = function (palettes, series, normalPalette, selectionPalette) {\n        var nativeNormalEntries = normalPalette.seriesEntries();\n        var nativeSelectionEntries = selectionPalette.seriesEntries();\n        if (!nativeNormalEntries || !nativeSelectionEntries) {\n            return;\n        }\n        for (var i = 0; i < palettes.length; ++i) {\n            if (palettes[i].seriesState && (palettes[i].seriesState.toLowerCase() === chart_public_enum_2.PaletteEntryUseState.Selected.toLowerCase())) {\n                this.buildNewPaletteForSeries(palettes[i], series, nativeSelectionEntries);\n            }\n            else {\n                this.buildNewPaletteForSeries(palettes[i], series, nativeNormalEntries);\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.buildNewPaletteForSeries = function (palette, series, nativePaletteEntries) {\n        var currentEntryCollection = null;\n        var sizeOfCurrentEntryCollection = 0;\n        for (var i = 0; i < nativePaletteEntries.size(); i++) {\n            if (nativePaletteEntries.get(i).getFamily() === series.android.paletteFamily()) {\n                currentEntryCollection = nativePaletteEntries.get(i);\n                sizeOfCurrentEntryCollection = currentEntryCollection.size();\n                break;\n            }\n        }\n        var newNativeEntries = new com.telerik.widget.palettes.PaletteEntryCollection();\n        newNativeEntries.setFamily(series.android.paletteFamily());\n        if (palette.entries && palette.entries.length > 0) {\n            for (var i = 0; i < palette.entries.length; i++) {\n                var nativeEntry = new com.telerik.widget.palettes.PaletteEntry();\n                var paletteEntry = palette.entries.getItem(i);\n                var currentNativeEntry = (currentEntryCollection ? currentEntryCollection.get(i % sizeOfCurrentEntryCollection) : null);\n                if (paletteEntry) {\n                    if (!isNaN(+paletteEntry.strokeWidth)) {\n                        nativeEntry.setStrokeWidth(paletteEntry.strokeWidth);\n                    }\n                    else {\n                        nativeEntry.setStrokeWidth((currentNativeEntry ? currentNativeEntry.getStrokeWidth() : 1));\n                    }\n                    if (paletteEntry.strokeColor) {\n                        nativeEntry.setStroke((new color_1.Color(paletteEntry.strokeColor)).android);\n                    }\n                    else {\n                        nativeEntry.setStroke(currentNativeEntry ? currentNativeEntry.getStroke() : (new color_1.Color(\"Black\")).android);\n                    }\n                    if (paletteEntry.fillColor) {\n                        nativeEntry.setFill((new color_1.Color(paletteEntry.fillColor)).android);\n                    }\n                    else {\n                        nativeEntry.setFill(currentNativeEntry ? currentNativeEntry.getFill() : (new color_1.Color(\"Blue\")).android);\n                    }\n                    newNativeEntries.add(nativeEntry);\n                }\n            }\n        }\n        else {\n            return;\n        }\n        if (series instanceof chart_series_common_1.PieSeries) {\n            nativePaletteEntries.remove(currentEntryCollection);\n            nativePaletteEntries.add(newNativeEntries);\n            return;\n        }\n        var index = this.getPaletteEntryIndexForSeries(series);\n        if (index != -1) {\n            var entry = newNativeEntries.get(index % newNativeEntries.size());\n            var i = currentEntryCollection.size();\n            while (i < series.android.getCollectionIndex()) {\n                currentEntryCollection.add(i, entry);\n                ++i;\n            }\n            currentEntryCollection.add(series.android.getCollectionIndex(), entry);\n        }\n        else {\n            nativePaletteEntries.add(newNativeEntries);\n        }\n    };\n    ChartBaseValueMapper.prototype.getPaletteEntryIndexForSeries = function (series) {\n        if (!this._currentChart) {\n            return -1;\n        }\n        var itemIndex = 0;\n        for (var i = 0; i < this._currentChart.series.length; ++i) {\n            if ((this._currentChart.series.getItem(i).seriesName === series.seriesName) && (this._currentChart.series.getItem(i).android.getCollectionIndex() < series.android.getCollectionIndex())) {\n                itemIndex++;\n            }\n        }\n        return itemIndex;\n    };\n    ChartBaseValueMapper.prototype.onSeriesChanged = function (data, chart) {\n        if (data.eventName && data.eventName.toLowerCase() === \"change\") {\n            var collectionData = data;\n            if (collectionData.action && collectionData.action.toLowerCase() === \"add\") {\n                if (chart.androidView && chart.series) {\n                    for (var i = 0; i < collectionData.addedCount; i++) {\n                        chart.androidView.getSeries().add(chart.series.getItem(collectionData.index + i).android);\n                        chart.series.getItem(collectionData.index + i).owner = chart;\n                        chart.series.getItem(collectionData.index + i).initializer.applyLabelStyle(chart.series.getItem(collectionData.index + i), chart);\n                        this.setAxisPaletteValues(chart.series.getItem(collectionData.index + i).horizontalAxis, \"HorizontalAxis\", chart);\n                        this.setAxisPaletteValues(chart.series.getItem(collectionData.index + i).verticalAxis, \"VerticalAxis\", chart);\n                    }\n                }\n                return;\n            }\n            if (collectionData.action && collectionData.action.toLowerCase() === \"splice\") {\n                if (collectionData.removed instanceof observable_array_1.ObservableArray) {\n                    for (var serieIndex = 0; serieIndex < collectionData.removed.length; serieIndex++) {\n                        if (chart.androidView.getSeries().indexOf(collectionData.removed.getItem(serieIndex).android) !== -1) {\n                            chart.androidView.getSeries().remove(collectionData.removed.getItem(serieIndex).android);\n                        }\n                    }\n                }\n                else {\n                    for (var serieIndex = 0; serieIndex < collectionData.removed.length; serieIndex++) {\n                        if (chart.androidView.getSeries().indexOf(collectionData.removed[serieIndex].android) !== -1) {\n                            chart.androidView.getSeries().remove(collectionData.removed[serieIndex].android);\n                        }\n                    }\n                }\n                return;\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.onSeriesPropertyChanged = function (oldValue, newValue, chart) {\n        if (oldValue) {\n            if (chart.androidView) {\n                for (var serieIndex = 0; serieIndex < oldValue.length; serieIndex++) {\n                    if (chart.androidView.getSeries().indexOf(oldValue.getItem(serieIndex).android) !== -1) {\n                        chart.androidView.getSeries().remove(oldValue.getItem(serieIndex).android);\n                    }\n                }\n            }\n        }\n        this.loadSeries(chart);\n    };\n    ChartBaseValueMapper.prototype.loadSeries = function (chart) {\n        if (chart.androidView && chart.series) {\n            for (var i = 0; i < chart.series.length; i++) {\n                chart.androidView.getSeries().add(chart.series.getItem(i).android);\n                chart.series.getItem(i).owner = chart;\n            }\n            if (chart.palettes) {\n                this.loadPalette(chart.palettes, chart);\n            }\n            for (var i = 0; i < chart.series.length; i++) {\n                chart.series.getItem(i).initializer.applyLabelStyle(chart.series.getItem(i), chart);\n            }\n            for (var i = 0; i < chart.series.length; i++) {\n                this.setAxisPaletteValues(chart.series.getItem(i).horizontalAxis, \"HorizontalAxis\", chart);\n                this.setAxisPaletteValues(chart.series.getItem(i).verticalAxis, \"VerticalAxis\", chart);\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.reloadPalettes = function (chart) {\n        if (chart.palettes) {\n            this.loadPalette(chart.palettes, chart);\n        }\n    };\n    ChartBaseValueMapper.prototype.loadAnnotations = function (chart) {\n        if (chart.androidView && chart.annotations) {\n            for (var i = 0; i < chart.annotations.length; i++) {\n                chart.androidView.getAnnotations().add(chart.annotations.getItem(i).android);\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.onAnnotationsChanged = function (data, chart) {\n        if (data.eventName && data.eventName.toLowerCase() === \"change\") {\n            //var collectionData = <ChangedData<any>>data;\n            if (data.action && data.action.toLowerCase() === \"add\") {\n                if (chart.androidView && chart.annotations) {\n                    for (var i = 0; i < data.addedCount; i++) {\n                        chart.annotations.getItem(data.index + i)._init(chart);\n                        chart.annotations.getItem(data.index + i)._createNative();\n                        chart.androidView.getAnnotations().add(chart.annotations.getItem(data.index + i).android);\n                    }\n                }\n                return;\n            }\n            if (data.action && data.action.toLowerCase() === \"splice\") {\n                for (var annIdx = 0; annIdx < data.removed.length; annIdx++) {\n                    if (chart.androidView.getAnnotations().indexOf(data.removed[annIdx].android) !== -1) {\n                        chart.androidView.getAnnotations().remove(data.removed[annIdx].android);\n                    }\n                }\n                return;\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.onAnnotationsPropertyChanged = function (oldValue, newValue, chart) {\n        if (chart && chart.androidView) {\n            chart.androidView.getAnnotations().clear();\n            for (var i = 0; i < chart.annotations.length; i++) {\n                chart.annotations.getItem(i)._init(chart);\n                chart.annotations.getItem(i)._createNative();\n            }\n        }\n    };\n    ChartBaseValueMapper.prototype.onSelectionModeChanged = function (oldValue, newValue, chart) {\n        chart.selectionMode = newValue;\n    };\n    ChartBaseValueMapper.prototype.updateHorizontalAxisPalette = function (chart) {\n        if (chart instanceof chartCommonModule.RadCartesianChart) {\n            this.setAxisPaletteValues(chart.horizontalAxis, \"HorizontalAxis\", chart);\n        }\n    };\n    ChartBaseValueMapper.prototype.updateVerticalAxisPalette = function (chart) {\n        if (chart instanceof chartCommonModule.RadCartesianChart) {\n            this.setAxisPaletteValues(chart.verticalAxis, \"VerticalAxis\", chart);\n        }\n    };\n    ChartBaseValueMapper.prototype.setAxisPaletteValues = function (axis, paletteName, chart) {\n        if (!chart || !axis) {\n            return;\n        }\n        var nativePalette = chart.androidView.getPalette().clone();\n        var nativePaletteEntry = nativePalette.getEntry(paletteName ? paletteName : \"HorizontalAxis\");\n        if (nativePaletteEntry) {\n            if (!axis.labelTextColor) {\n                axis.labelTextColor = nativePaletteEntry.getCustomValue(\"LabelColor\");\n            }\n            if (!axis.lineColor) {\n                axis.lineColor = nativePaletteEntry.getCustomValue(\"LineColor\");\n            }\n            if (!axis.lineThickness) {\n                axis.lineThickness = parseInt(nativePaletteEntry.getCustomValue(\"LineTickness\", \"2\"));\n            }\n            if (!axis.labelSize) {\n                axis.labelSize = parseInt(nativePaletteEntry.getCustomValue(\"LabelSize\", \"12\"));\n            }\n        }\n    };\n    return ChartBaseValueMapper;\n}());\nexports.ChartBaseValueMapper = ChartBaseValueMapper;\nvar CartesianAxisValueMapper = (function () {\n    function CartesianAxisValueMapper() {\n    }\n    CartesianAxisValueMapper.prototype.onLineThicknessChanged = function (oldValue, newValue, axis) {\n        if (!isNaN(+newValue)) {\n            axis.android.setLineThickness(newValue * utilsModule.layout.getDisplayDensity());\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLineColorChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            axis.android.setLineColor((new color_1.Color(newValue)).android);\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLineHiddenChanged = function (oldValue, newValue, axis) {\n        axis.android.setShowLine(!newValue);\n    };\n    CartesianAxisValueMapper.prototype.onLabelTextColorChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            axis.android.setLabelTextColor((new color_1.Color(newValue)).android);\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLabelMarginChanged = function (oldValue, newValue, axis) {\n        if (!isNaN(newValue)) {\n            axis.android.setLabelMargin(newValue);\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLabelRotationAngleChanged = function (oldValue, newValue, axis) {\n        if (!isNaN(newValue)) {\n            var M_PI = 3.14159265358979323846264338327950288;\n            axis.android.setLabelRotationAngle(newValue * 180 / M_PI);\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLabelFitModeChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            if (axis.labelLayoutMode === chart_public_enum_1.AxisLabelLayoutMode.Inner && (newValue.toLowerCase() != chart_public_enum_1.AxisLabelFitMode.None)) {\n                console.log(\"WARNING: Label fit mode is not supported when label layout mode is set to Inner\");\n                return;\n            }\n            if (chart_public_enum_1.AxisLabelFitMode.Multiline.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setLabelFitMode(com.telerik.widget.chart.engine.axes.common.AxisLabelFitMode.MULTI_LINE);\n            }\n            else if (chart_public_enum_1.AxisLabelFitMode.Rotate.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setLabelFitMode(com.telerik.widget.chart.engine.axes.common.AxisLabelFitMode.ROTATE);\n            }\n            else {\n                axis.android.setLabelFitMode(com.telerik.widget.chart.engine.axes.common.AxisLabelFitMode.NONE);\n            }\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLabelLayoutModeChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            if (chart_public_enum_1.AxisLabelLayoutMode.Outer.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setLabelLayoutMode(com.telerik.widget.chart.engine.axes.AxisLabelLayoutMode.OUTER);\n            }\n            else if (chart_public_enum_1.AxisLabelLayoutMode.Inner.toLowerCase() === newValue.toLowerCase()) {\n                if (axis.android.getLabelFitMode() !== com.telerik.widget.chart.engine.axes.common.AxisLabelFitMode.NONE) {\n                    console.log(\"WARNING: 'Inner' layout mode for axis labels cannot be combined only with fit mode 'None'.\");\n                }\n                else {\n                    axis.android.setLabelLayoutMode(com.telerik.widget.chart.engine.axes.AxisLabelLayoutMode.INNER);\n                }\n            }\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLabelFormatChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            axis.android.setLabelFormat(java.lang.String.valueOf(newValue));\n        }\n    };\n    CartesianAxisValueMapper.prototype.onHorizontalLocationChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            if (chart_public_enum_1.AxisHorizontalLocation.Left.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setHorizontalLocation(com.telerik.widget.chart.engine.axes.common.AxisHorizontalLocation.LEFT);\n            }\n            else if (chart_public_enum_1.AxisHorizontalLocation.Right.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setHorizontalLocation(com.telerik.widget.chart.engine.axes.common.AxisHorizontalLocation.RIGHT);\n            }\n        }\n    };\n    CartesianAxisValueMapper.prototype.onVerticalLocationChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            if (chart_public_enum_1.AxisVerticalLocation.Top.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setVerticalLocation(com.telerik.widget.chart.engine.axes.common.AxisVerticalLocation.TOP);\n            }\n            else if (chart_public_enum_1.AxisVerticalLocation.Bottom.toLowerCase() === newValue.toLowerCase()) {\n                axis.android.setVerticalLocation(com.telerik.widget.chart.engine.axes.common.AxisVerticalLocation.BOTTOM);\n            }\n        }\n    };\n    CartesianAxisValueMapper.prototype.onLabelSizeChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            axis.android.setLabelSize(newValue * utilsModule.layout.getDisplayDensity());\n        }\n    };\n    CartesianAxisValueMapper.prototype.onAllowZoomChanged = function (oldValue, newValue, axis) {\n        this.updatePanZoomBehavior(axis);\n    };\n    CartesianAxisValueMapper.prototype.onAllowPanChanged = function (oldValue, newValue, axis) {\n        this.updatePanZoomBehavior(axis);\n    };\n    CartesianAxisValueMapper.prototype.updatePanZoomBehavior = function (axis) {\n        if (!axis.owner) {\n            return;\n        }\n        if (axis.owner instanceof chartCommonModule.RadCartesianChart) {\n            axis.owner['updatePanZoomBehavior']();\n            return;\n        }\n        //if owner is series we call its owner \n        if (axis.owner.owner instanceof chartCommonModule.RadCartesianChart) {\n            axis.owner.owner.updatePanZoomBehavior();\n            return;\n        }\n    };\n    CartesianAxisValueMapper.prototype.onHiddenChanged = function (oldValue, newValue, axis) {\n        axis.android.setVisible(newValue ? false : true);\n    };\n    return CartesianAxisValueMapper;\n}());\nexports.CartesianAxisValueMapper = CartesianAxisValueMapper;\nvar CategoricalAxisValueMapper = (function (_super) {\n    __extends(CategoricalAxisValueMapper, _super);\n    function CategoricalAxisValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoricalAxisValueMapper.prototype.onMajorTickIntervalChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            axis.android.setMajorTickInterval(java.lang.Integer.valueOf(newValue));\n        }\n    };\n    CategoricalAxisValueMapper.prototype.onPlotModeChanged = function (oldValue, newValue, axis) {\n        if (newValue) {\n            switch (newValue.toLowerCase()) {\n                case chart_public_enum_1.AxisPlotMode.BetweenTicks.toLowerCase():\n                    axis.android.setPlotMode(com.telerik.widget.chart.engine.axes.common.AxisPlotMode.BETWEEN_TICKS);\n                    break;\n                case chart_public_enum_1.AxisPlotMode.OnTicks.toLowerCase():\n                    axis.android.setPlotMode(com.telerik.widget.chart.engine.axes.common.AxisPlotMode.ON_TICKS);\n                    break;\n                default:\n                    console.log(\"WARNING: Unsupported plot mode set: \" + newValue);\n            }\n        }\n    };\n    return CategoricalAxisValueMapper;\n}(CartesianAxisValueMapper));\nexports.CategoricalAxisValueMapper = CategoricalAxisValueMapper;\nvar ChartSeriesValueMapper = (function () {\n    function ChartSeriesValueMapper() {\n    }\n    ChartSeriesValueMapper.prototype.onShowLabelsChanged = function (oldValue, newValue, series) {\n        if (newValue == null || newValue == undefined) {\n            return;\n        }\n        series.android.setShowLabels(newValue);\n    };\n    ChartSeriesValueMapper.prototype.onLegendTitleChanged = function (oldValue, newValue, series) {\n        series.android.setLegendTitle(newValue);\n    };\n    ChartSeriesValueMapper.prototype.onItemsChanged = function (oldValue, newValue, series) {\n        if (!series.items || !series.items.length) {\n            return;\n        }\n        var length = series.items.length;\n        var nativeSource = new java.util.ArrayList();\n        for (var i = 0; i < length; i++) {\n            nativeSource.add(java.lang.String.valueOf(JSON.stringify(series.getItemAtIndex(i))));\n        }\n        series.android.setData(nativeSource);\n    };\n    ChartSeriesValueMapper.prototype.onValuePropertyChanged = function (oldValue, newValue, series) {\n        if (!series.valueProperty) {\n            return;\n        }\n        series.android.setValueBinding(new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[series.valueProperty];\n            }\n        })));\n    };\n    ChartSeriesValueMapper.prototype.onLabelStyleChanged = function (oldValue, newValue, series) {\n        if (newValue) {\n            this.applyLabelStyle(series);\n        }\n    };\n    ChartSeriesValueMapper.prototype.onSelectionModeChanged = function (oldValue, newValue, series) {\n        if (!series.android) {\n            return;\n        }\n        switch (newValue.toLowerCase()) {\n            case chart_series_common_1.SeriesSelectionMode.NotSet.toLowerCase():\n                series.android.setSelectionMode(com.telerik.widget.chart.visualization.common.SeriesSelectionMode.NOT_SET);\n                break;\n            case chart_series_common_1.SeriesSelectionMode.None.toLowerCase():\n                series.android.setSelectionMode(com.telerik.widget.chart.visualization.common.SeriesSelectionMode.NONE);\n                break;\n            case chart_series_common_1.SeriesSelectionMode.Series.toLowerCase():\n                series.android.setSelectionMode(com.telerik.widget.chart.visualization.common.SeriesSelectionMode.SERIES);\n                break;\n            case chart_series_common_1.SeriesSelectionMode.DataPoint.toLowerCase():\n                series.android.setSelectionMode(com.telerik.widget.chart.visualization.common.SeriesSelectionMode.DATA_POINT_SINGLE);\n                break;\n            case chart_series_common_1.SeriesSelectionMode.DataPointMultiple.toLowerCase():\n                series.android.setSelectionMode(com.telerik.widget.chart.visualization.common.SeriesSelectionMode.DATA_POINT_MULTIPLE);\n                break;\n            default:\n                console.log(\"WARNING: Unsupported selection mode: \" + newValue);\n        }\n    };\n    ChartSeriesValueMapper.prototype.applyLabelStyle = function (series, chart) {\n        if (!series || !series.labelStyle) {\n            return;\n        }\n        if (!isNaN(+series.labelStyle.textSize)) {\n            series.android.setLabelSize(series.labelStyle.textSize * utilsModule.layout.getDisplayDensity());\n        }\n        if (series.labelStyle.textColor) {\n            series.android.setLabelTextColor((new color_1.Color(series.labelStyle.textColor)).android);\n        }\n        if (series.labelStyle.fillColor) {\n            series.android.setLabelFillColor((new color_1.Color(series.labelStyle.fillColor)).android);\n        }\n        if (series.labelStyle.strokeColor) {\n            series.android.setLabelStrokeColor((new color_1.Color(series.labelStyle.strokeColor)).android);\n        }\n        if (!isNaN(+series.labelStyle.margin)) {\n            series.android.setLabelMargin(series.labelStyle.margin * utilsModule.layout.getDisplayDensity());\n        }\n        if (series.labelStyle.textFormat) {\n            series.android.setLabelFormat(series.labelStyle.textFormat);\n        }\n        var fontStyle = android.graphics.Typeface.NORMAL;\n        if (series.labelStyle.fontStyle) {\n            switch (series.labelStyle.fontStyle.toLowerCase()) {\n                case chart_public_enum_2.FontStyles.Bold.toLowerCase():\n                    fontStyle = android.graphics.Typeface.BOLD;\n                    break;\n                case chart_public_enum_2.FontStyles.Italic.toLowerCase():\n                    fontStyle = android.graphics.Typeface.ITALIC;\n                    break;\n                case chart_public_enum_2.FontStyles.BoldItalic.toLowerCase():\n                    fontStyle = android.graphics.Typeface.BOLD_ITALIC;\n                    break;\n                default:\n                    console.log(\"WARNING: Unsupported typeface: \" + series.labelStyle.fontStyle);\n            }\n        }\n        if (series.labelStyle.fontName) {\n            series.android.setLabelFont(android.graphics.Typeface.create(series.labelStyle.fontName, fontStyle));\n        }\n    };\n    return ChartSeriesValueMapper;\n}());\nexports.ChartSeriesValueMapper = ChartSeriesValueMapper;\nvar CartesianSeriesValueMapper = (function (_super) {\n    __extends(CartesianSeriesValueMapper, _super);\n    function CartesianSeriesValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CartesianSeriesValueMapper.prototype.onHorizontalAxisChanged = function (oldValue, newValue, series) {\n        series.android.setHorizontalAxis(null);\n        series.android.setHorizontalAxis(newValue.android);\n        newValue.owner = series;\n    };\n    CartesianSeriesValueMapper.prototype.onVerticalAxisChanged = function (oldValue, newValue, series) {\n        series.android.setVerticalAxis(null);\n        series.android.setVerticalAxis(newValue.android);\n        newValue.owner = series;\n    };\n    return CartesianSeriesValueMapper;\n}(ChartSeriesValueMapper));\nexports.CartesianSeriesValueMapper = CartesianSeriesValueMapper;\nvar ScatterSeriesValueMapper = (function (_super) {\n    __extends(ScatterSeriesValueMapper, _super);\n    function ScatterSeriesValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterSeriesValueMapper.prototype.onXPropertyChanged = function (oldValue, newValue, series) {\n        if (!series.xProperty) {\n            return;\n        }\n        var xPropName = series.xProperty;\n        series.android.setXValueBinding(new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[xPropName];\n            }\n        })));\n    };\n    ScatterSeriesValueMapper.prototype.onYPropertyChanged = function (oldValue, newValue, series) {\n        if (!series.yProperty) {\n            return;\n        }\n        var yPropName = series.yProperty;\n        series.android.setYValueBinding(new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[yPropName];\n            }\n        })));\n    };\n    return ScatterSeriesValueMapper;\n}(CartesianSeriesValueMapper));\nexports.ScatterSeriesValueMapper = ScatterSeriesValueMapper;\nvar ScatterBubbleSeriesValueMapper = (function (_super) {\n    __extends(ScatterBubbleSeriesValueMapper, _super);\n    function ScatterBubbleSeriesValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterBubbleSeriesValueMapper.prototype.onBubbleSizePropertyChanged = function (oldValue, newValue, series) {\n        if (!series.bubbleSizeProperty) {\n            return;\n        }\n        var propertyName = series.bubbleSizeProperty;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[propertyName];\n            }\n        }));\n        series.android.setBubbleSizeBinding(binding);\n    };\n    ScatterBubbleSeriesValueMapper.prototype.onBubbleScaleChanged = function (oldValue, newValue, series) {\n        if (newValue) {\n            //todo: we use (scale^2) because of bug in Android scale calculation. Update this hack when it is fixed.\n            series.android.setBubbleScale(Math.pow(newValue * utilsModule.layout.getDisplayDensity(), 2));\n        }\n    };\n    return ScatterBubbleSeriesValueMapper;\n}(ScatterSeriesValueMapper));\nexports.ScatterBubbleSeriesValueMapper = ScatterBubbleSeriesValueMapper;\nvar CategoricalSeriesValueMapper = (function (_super) {\n    __extends(CategoricalSeriesValueMapper, _super);\n    function CategoricalSeriesValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoricalSeriesValueMapper.prototype.updateNative = function (series) {\n    };\n    CategoricalSeriesValueMapper.prototype.onCategoryPropertyChanged = function (oldValue, newValue, series) {\n        if (!series.categoryProperty) {\n            return;\n        }\n        series.android.setCategoryBinding(new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[series.categoryProperty];\n            }\n        })));\n    };\n    CategoricalSeriesValueMapper.prototype.onStackModePropertyChanged = function (oldValue, newValue, series) {\n        if (!newValue) {\n            return;\n        }\n        switch (newValue.toLowerCase()) {\n            case chart_series_common_1.SeriesStackMode.None.toLowerCase():\n                series.android.setCombineMode(com.telerik.widget.chart.engine.series.combination.ChartSeriesCombineMode.CLUSTER);\n                break;\n            case chart_series_common_1.SeriesStackMode.Stack.toLowerCase():\n                series.android.setCombineMode(com.telerik.widget.chart.engine.series.combination.ChartSeriesCombineMode.STACK);\n                break;\n            case chart_series_common_1.SeriesStackMode.Stack100.toLowerCase():\n                series.android.setCombineMode(com.telerik.widget.chart.engine.series.combination.ChartSeriesCombineMode.STACK_100);\n                break;\n            default:\n                console.log(\"WARNING: Unsupported stack mode: \" + newValue);\n        }\n    };\n    return CategoricalSeriesValueMapper;\n}(CartesianSeriesValueMapper));\nexports.CategoricalSeriesValueMapper = CategoricalSeriesValueMapper;\nvar PieSeriesValueMapper = (function (_super) {\n    __extends(PieSeriesValueMapper, _super);\n    function PieSeriesValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PieSeriesValueMapper.prototype.onLabelPropertyChanged = function (oldValue, newValue, series) {\n        if (!series.legendLabel) {\n            return;\n        }\n        series.android.setNameBinding(new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[series.legendLabel];\n            }\n        })));\n    };\n    PieSeriesValueMapper.prototype.onLegendTitleChanged = function (oldValue, newValue, series) {\n    };\n    PieSeriesValueMapper.prototype.onExpandRadiusChanged = function (oldValue, newValue, series) {\n        if (isNaN(+newValue) || newValue < 0.0 || newValue > 1.0) {\n            console.log(\"WARNING: Expand radius factor must be number in range [0,1]\");\n            return;\n        }\n        series.android.setSelectedPointOffset(newValue);\n    };\n    PieSeriesValueMapper.prototype.onOuterRadiusFactorChanged = function (oldValue, newValue, series) {\n        if (isNaN(+newValue) || newValue < 0.0 || newValue > 1.0) {\n            console.log(\"WARNING: Outer radius factor must be number in range [0,1]\");\n            return;\n        }\n        series.android.setRadiusFactor(newValue);\n        series.android.requestLayout();\n    };\n    PieSeriesValueMapper.prototype.onStartAngleChanged = function (oldValue, newValue, series) {\n        if (!isNaN(+newValue)) {\n            series.android.setAngleRange(new com.telerik.widget.chart.engine.chartAreas.AngleRange(newValue, series.endAngle ? series.endAngle : 360));\n        }\n    };\n    PieSeriesValueMapper.prototype.onEndAngleChanged = function (oldValue, newValue, series) {\n        if (!isNaN(+newValue)) {\n            series.android.setAngleRange(new com.telerik.widget.chart.engine.chartAreas.AngleRange(series.startAngle ? series.startAngle : 0, newValue));\n        }\n    };\n    PieSeriesValueMapper.prototype.onShowPercentageChanged = function (oldValue, newValue, series) {\n        if (!series.showPercentage) {\n            var thatSeries = new WeakRef(series);\n            series.android.setLabelValueToStringConverter(new com.telerik.android.common.Function({\n                apply: function (arg) {\n                    var retVal;\n                    var lblFormat = thatSeries.get().labelStyle.textFormat;\n                    if (!lblFormat) {\n                        retVal = \"\" + arg;\n                    }\n                    else {\n                        retVal = java.lang.String.format(lblFormat, [arg]);\n                    }\n                    return retVal;\n                }\n            }));\n        }\n    };\n    return PieSeriesValueMapper;\n}(ChartSeriesValueMapper));\nexports.PieSeriesValueMapper = PieSeriesValueMapper;\nvar DonutSeriesValueMapper = (function (_super) {\n    __extends(DonutSeriesValueMapper, _super);\n    function DonutSeriesValueMapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DonutSeriesValueMapper.prototype.onInnerRadiusFactorChanged = function (oldValue, newValue, series) {\n        if (!newValue) {\n            return;\n        }\n        series.android.setInnerRadiusFactor(newValue);\n    };\n    return DonutSeriesValueMapper;\n}(PieSeriesValueMapper));\nexports.DonutSeriesValueMapper = DonutSeriesValueMapper;\n"
    },
    {
      "id": 52,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis-common.js",
      "index": 221,
      "index2": 219,
      "size": 24221,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart-common.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart-common.js",
          "type": "cjs require",
          "userRequest": "./visualization/views/chart-axis-common",
          "loc": "6:26-76"
        },
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/views/chart-axis-common",
          "loc": "3:23-73"
        },
        {
          "moduleId": 199,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
          "type": "cjs require",
          "userRequest": "./chart-axis-common",
          "loc": "2:23-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar initializersImpl = require(\"../../initializers/chart-initializers\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\n/**\n* Represents an axis in a Cartesian chart. This class is a base class for all\n* axes that can be used within a RadCartesianChart instance.\n*/\nvar CartesianAxis = (function (_super) {\n    __extends(CartesianAxis, _super);\n    function CartesianAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CartesianAxis.prototype.onLineColorPropertyChanged = function (oldValue, newValue) {\n        this.onLineColorChanged(oldValue, newValue);\n    };\n    /*\n    * Called when the lineColor property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLineColorChanged = function (oldValue, newValue) {\n        this.initializer.onLineColorChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLineThicknessPropertyChanged = function (oldValue, newValue) {\n        this.onLineThicknessChanged(oldValue, newValue);\n    };\n    /*\n    * Called when the lineThickness property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLineThicknessChanged = function (oldValue, newValue) {\n        this.initializer.onLineThicknessChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLineHiddenPropertyChanged = function (oldValue, newValue) {\n        this.onLineHiddenChanged(oldValue, newValue);\n    };\n    /*\n    * Called when the lineHidden property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLineHiddenChanged = function (oldValue, newValue) {\n        this.initializer.onLineHiddenChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelTextColorPropertyChanged = function (oldValue, newValue) {\n        this.onLabelTextColorChanged(oldValue, newValue);\n    };\n    /*\n    * Called when the labelTextColor property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelTextColorChanged = function (oldValue, newValue) {\n        this.initializer.onLabelTextColorChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelSizePropertyChanged = function (oldValue, newValue) {\n        this.onLabelSizeChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the labelSize property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelSizeChanged = function (oldValue, newValue) {\n        this.initializer.onLabelSizeChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelFormatPropertyChanged = function (oldValue, newValue) {\n        this.onLabelFormatChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the labelFormat property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelFormatChanged = function (oldValue, newValue) {\n        this.initializer.onLabelFormatChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelMarginPropertyChanged = function (oldValue, newValue) {\n        this.onLabelMarginChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the labelMargin property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelMarginChanged = function (oldValue, newValue) {\n        this.initializer.onLabelMarginChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelRotationAnglePropertyChanged = function (oldValue, newValue) {\n        this.onLabelRotationAngleChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the labelRotationAngle property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelRotationAngleChanged = function (oldValue, newValue) {\n        this.initializer.onLabelRotationAngleChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelFitModePropertyChanged = function (oldValue, newValue) {\n        this.onLabelFitModeChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the labelFitMode property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelFitModeChanged = function (oldValue, newValue) {\n        this.initializer.onLabelFitModeChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onLabelLayoutModePropertyChanged = function (oldValue, newValue) {\n        this.onLabelLayoutModeChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the labelLayoutMode property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onLabelLayoutModeChanged = function (oldValue, newValue) {\n        this.initializer.onLabelLayoutModeChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onHorizontalLocationPropertyChanged = function (oldValue, newValue) {\n        this.onHorizontalLocationChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the horizontalLocation property changes.\n    * @param data an object containing information about the change event.\n    */\n    CartesianAxis.prototype.onHorizontalLocationChanged = function (oldValue, newValue) {\n        this.initializer.onHorizontalLocationChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onVerticalLocationPropertyChanged = function (oldValue, newValue) {\n        this.onVerticalLocationChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the verticalLocation property changes.\n    */\n    CartesianAxis.prototype.onVerticalLocationChanged = function (oldValue, newValue) {\n        this.initializer.onVerticalLocationChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onAllowPanPropertyChanged = function (oldValue, newValue) {\n        this.onAllowPanChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the allowPan property changes.\n    */\n    CartesianAxis.prototype.onAllowPanChanged = function (oldValue, newValue) {\n        this.initializer.onAllowPanChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onAllowZoomPropertyChanged = function (oldValue, newValue) {\n        this.onAllowZoomChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the allowZoom property changes.\n    */\n    CartesianAxis.prototype.onAllowZoomChanged = function (oldValue, newValue) {\n        this.initializer.onAllowZoomChanged(oldValue, newValue, this);\n    };\n    CartesianAxis.prototype.onHiddenPropertyChanged = function (oldValue, newValue) {\n        this.onHiddenChanged(oldValue, newValue);\n    };\n    /**\n    * Called when the hidden property changes.\n    */\n    CartesianAxis.prototype.onHiddenChanged = function (oldValue, newValue) {\n        this.initializer.onHiddenChanged(oldValue, newValue, this);\n    };\n    Object.defineProperty(CartesianAxis.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.CartesianAxisValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CartesianAxis.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CartesianAxis.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CartesianAxis.prototype, \"owner\", {\n        get: function () {\n            return this._owner;\n        },\n        set: function (value) {\n            this._owner = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CartesianAxis.prototype.update = function () {\n        if (!this.owner) {\n            return;\n        }\n        if (this.ios) {\n            this.owner.updateChart();\n        }\n    };\n    return CartesianAxis;\n}(view_1.ViewBase));\n/*\n* Identifies the lineColor dependency property.\n*/\nCartesianAxis.idProperty = new view_1.Property({\n    name: \"id\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n    },\n});\n/*\n* Identifies the lineColor dependency property.\n*/\nCartesianAxis.lineColorProperty = new view_1.Property({\n    name: \"lineColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLineColorPropertyChanged(oldValue, newValue);\n    },\n});\n/*\n* Identifies the lineThickness dependency property.\n*/\nCartesianAxis.lineThicknessProperty = new view_1.Property({\n    name: \"lineThickness\",\n    defaultValue: undefined,\n    valueConverter: function (v) { return parseInt(v); },\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLineThicknessPropertyChanged(oldValue, newValue);\n    },\n});\n/*\n* Identifies the lineHidden dependency property.\n*/\nCartesianAxis.lineHiddenProperty = new view_1.Property({\n    name: \"lineHidden\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLineHiddenPropertyChanged(oldValue, newValue);\n    },\n});\n/*\n* Identifies the labelTextColor dependency property.\n*/\nCartesianAxis.labelTextColorProperty = new view_1.Property({\n    name: \"labelTextColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelTextColorPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the labelSize dependency property.\n*/\nCartesianAxis.labelSizeProperty = new view_1.Property({\n    name: \"labelSize\",\n    defaultValue: undefined,\n    valueConverter: parseInt,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelSizePropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies labelFormat dependency property.\n*/\nCartesianAxis.labelFormatProperty = new view_1.Property({\n    name: \"labelFormat\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelFormatPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the labelMargin dependency property.\n*/\nCartesianAxis.labelMarginProperty = new view_1.Property({\n    name: \"labelMargin\",\n    defaultValue: undefined,\n    valueConverter: parseInt,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelMarginPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the labelRotationAngle dependency property.\n*/\nCartesianAxis.labelRotationAngleProperty = new view_1.Property({\n    name: \"labelRotationAngle\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelRotationAnglePropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the labelFitMode dependency property.\n*/\nCartesianAxis.labelFitModeProperty = new view_1.Property({\n    name: \"labelFitMode\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelFitModePropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the labelLayoutMode dependency property.\n*/\nCartesianAxis.labelLayoutModeProperty = new view_1.Property({\n    name: \"labelLayoutMode\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelLayoutModePropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the horizontalLocation dependency property.\n*/\nCartesianAxis.horizontalLocationProperty = new view_1.Property({\n    name: \"horizontalLocation\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHorizontalLocationPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the verticalLocation dependency property.\n*/\nCartesianAxis.verticalLocationProperty = new view_1.Property({\n    name: \"verticalLocation\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onVerticalLocationPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the allowPan dependency property.\n*/\nCartesianAxis.allowPanProperty = new view_1.Property({\n    name: \"allowPan\",\n    defaultValue: false,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onAllowPanPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the allowZoom dependency property.\n*/\nCartesianAxis.allowZoomProperty = new view_1.Property({\n    name: \"allowZoom\",\n    defaultValue: false,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onAllowZoomPropertyChanged(oldValue, newValue);\n    },\n});\n/**\n* Identifies the hidden dependency property.\n*/\nCartesianAxis.hiddenProperty = new view_1.Property({\n    name: \"hidden\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHiddenPropertyChanged(oldValue, newValue);\n    },\n});\nexports.CartesianAxis = CartesianAxis;\nCartesianAxis.idProperty.register(CartesianAxis);\nCartesianAxis.lineColorProperty.register(CartesianAxis);\nCartesianAxis.lineThicknessProperty.register(CartesianAxis);\nCartesianAxis.lineHiddenProperty.register(CartesianAxis);\nCartesianAxis.labelTextColorProperty.register(CartesianAxis);\nCartesianAxis.labelSizeProperty.register(CartesianAxis);\nCartesianAxis.labelFormatProperty.register(CartesianAxis);\nCartesianAxis.labelMarginProperty.register(CartesianAxis);\nCartesianAxis.labelRotationAngleProperty.register(CartesianAxis);\nCartesianAxis.labelFitModeProperty.register(CartesianAxis);\nCartesianAxis.labelLayoutModeProperty.register(CartesianAxis);\nCartesianAxis.horizontalLocationProperty.register(CartesianAxis);\nCartesianAxis.verticalLocationProperty.register(CartesianAxis);\nCartesianAxis.allowPanProperty.register(CartesianAxis);\nCartesianAxis.allowZoomProperty.register(CartesianAxis);\nCartesianAxis.hiddenProperty.register(CartesianAxis);\nvar CategoricalAxis = (function (_super) {\n    __extends(CategoricalAxis, _super);\n    function CategoricalAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoricalAxis.prototype.onMajorTickIntervalPropertyChanged = function (oldValue, newValue) {\n        this.onMajorTickIntervalChanged(oldValue, newValue);\n    };\n    CategoricalAxis.prototype.onPlotModePropertyChanged = function (oldValue, newValue) {\n        this.onPlotModeChanged(oldValue, newValue);\n    };\n    Object.defineProperty(CategoricalAxis.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.CategoricalAxisValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoricalAxis.prototype.onMajorTickIntervalChanged = function (oldValue, newValue) {\n        this.initializer.onMajorTickIntervalChanged(oldValue, newValue, this);\n    };\n    CategoricalAxis.prototype.onPlotModeChanged = function (oldValue, newValue) {\n        this.initializer.onPlotModeChanged(oldValue, newValue, this);\n    };\n    return CategoricalAxis;\n}(CartesianAxis));\nCategoricalAxis.majorTickIntervalProperty = new view_1.Property({\n    name: \"majorTickInterval\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onMajorTickIntervalPropertyChanged(oldValue, newValue);\n    },\n});\nCategoricalAxis.plotModeProperty = new view_1.Property({\n    name: \"plotMode\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onPlotModePropertyChanged(oldValue, newValue);\n    },\n});\nexports.CategoricalAxis = CategoricalAxis;\nCategoricalAxis.majorTickIntervalProperty.register(CategoricalAxis);\nCategoricalAxis.plotModeProperty.register(CategoricalAxis);\nvar LinearAxis = (function (_super) {\n    __extends(LinearAxis, _super);\n    function LinearAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LinearAxis.prototype.onMinimumPropertyChanged = function (oldValue, newValue) {\n        this.onMinimumChanged(oldValue, newValue);\n    };\n    LinearAxis.prototype.onMinimumChanged = function (oldValue, newValue) {\n    };\n    LinearAxis.prototype.onMaximumPropertyChanged = function (oldValue, newValue) {\n        this.onMaximumChanged(oldValue, newValue);\n    };\n    LinearAxis.prototype.onMaximumChanged = function (oldValue, newValue) {\n    };\n    LinearAxis.prototype.onMajorStepPropertyChanged = function (oldValue, newValue) {\n        this.onMajorStepChanged(oldValue, newValue);\n    };\n    LinearAxis.prototype.onMajorStepChanged = function (oldValue, newValue) {\n    };\n    return LinearAxis;\n}(CartesianAxis));\nLinearAxis.majorStepProperty = new view_1.Property({\n    name: \"majorStep\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onMajorStepPropertyChanged(oldValue, newValue);\n    },\n});\nLinearAxis.minimumProperty = new view_1.Property({\n    name: \"minimum\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onMinimumPropertyChanged(oldValue, newValue);\n    },\n});\nLinearAxis.maximumProperty = new view_1.Property({\n    name: \"maximum\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onMaximumPropertyChanged(oldValue, newValue);\n    },\n});\nexports.LinearAxis = LinearAxis;\nLinearAxis.majorStepProperty.register(LinearAxis);\nLinearAxis.minimumProperty.register(LinearAxis);\nLinearAxis.maximumProperty.register(LinearAxis);\nvar DateTimeContinuousAxis = (function (_super) {\n    __extends(DateTimeContinuousAxis, _super);\n    function DateTimeContinuousAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateTimeContinuousAxis.prototype.onPlotModePropertyChanged = function (oldValue, newValue) {\n        this.onPlotModeChanged(oldValue, newValue);\n    };\n    DateTimeContinuousAxis.prototype.onDateFormatPropertyChanged = function (oldValue, newValue) {\n        this.onDateFormatChanged(oldValue, newValue);\n    };\n    DateTimeContinuousAxis.prototype.onSourceDateFormatPropertyChanged = function (oldValue, newValue) {\n        this.onSourceDateFormatChanged(oldValue, newValue);\n    };\n    DateTimeContinuousAxis.prototype.onPlotModeChanged = function (oldValue, newValue) {\n    };\n    DateTimeContinuousAxis.prototype.onDateFormatChanged = function (oldValue, newValue) {\n    };\n    DateTimeContinuousAxis.prototype.onSourceDateFormatChanged = function (oldValue, newValue) {\n    };\n    return DateTimeContinuousAxis;\n}(LinearAxis));\nDateTimeContinuousAxis.plotModeProperty = new view_1.Property({\n    name: \"plotMode\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onPlotModePropertyChanged(oldValue, newValue);\n    },\n});\nDateTimeContinuousAxis.dateFormatProperty = new view_1.Property({\n    name: \"dateFormat\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onDateFormatPropertyChanged(oldValue, newValue);\n    },\n});\nDateTimeContinuousAxis.sourceDateFormatProperty = new view_1.Property({\n    name: \"sourceDateFormat\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onSourceDateFormatPropertyChanged(oldValue, newValue);\n    },\n});\nexports.DateTimeContinuousAxis = DateTimeContinuousAxis;\nDateTimeContinuousAxis.plotModeProperty.register(DateTimeContinuousAxis);\nDateTimeContinuousAxis.dateFormatProperty.register(DateTimeContinuousAxis);\nDateTimeContinuousAxis.sourceDateFormatProperty.register(DateTimeContinuousAxis);\nvar DateTimeCategoricalAxis = (function (_super) {\n    __extends(DateTimeCategoricalAxis, _super);\n    function DateTimeCategoricalAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateTimeCategoricalAxis.prototype.onDateTimeComponentPropertyChanged = function (oldValue, newValue) {\n        this.onDateTimeComponentChanged(oldValue, newValue);\n    };\n    DateTimeCategoricalAxis.prototype.onDateFormatPropertyChanged = function (oldValue, newValue) {\n        this.onDateFormatChanged(oldValue, newValue);\n    };\n    DateTimeCategoricalAxis.prototype.onDateTimeComponentChanged = function (oldValue, newValue) {\n    };\n    DateTimeCategoricalAxis.prototype.onDateFormatChanged = function (oldValue, newValue) {\n    };\n    Object.defineProperty(DateTimeCategoricalAxis.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateTimeCategoricalAxis.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DateTimeCategoricalAxis;\n}(CategoricalAxis));\nDateTimeCategoricalAxis.dateTimeComponentProperty = new view_1.Property({\n    name: \"dateTimeComponent\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onDateTimeComponentPropertyChanged(oldValue, newValue);\n    },\n});\nDateTimeCategoricalAxis.dateFormatProperty = new view_1.Property({\n    name: \"dateFormat\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onDateFormatPropertyChanged(oldValue, newValue);\n    },\n});\nexports.DateTimeCategoricalAxis = DateTimeCategoricalAxis;\nDateTimeCategoricalAxis.dateTimeComponentProperty.register(DateTimeCategoricalAxis);\nDateTimeCategoricalAxis.dateFormatProperty.register(DateTimeCategoricalAxis);\nvar LogarithmicAxis = (function (_super) {\n    __extends(LogarithmicAxis, _super);\n    function LogarithmicAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LogarithmicAxis.prototype.onExponentStepPropertyChanged = function (oldValue, newValue) {\n        this.onExponentStepChanged(oldValue, newValue);\n    };\n    LogarithmicAxis.prototype.onLogarithmBasePropertyChanged = function (oldValue, newValue) {\n        this.onLogarithmBaseChanged(oldValue, newValue);\n    };\n    LogarithmicAxis.prototype.onExponentStepChanged = function (oldValue, newValue) {\n    };\n    LogarithmicAxis.prototype.onLogarithmBaseChanged = function (oldValue, newValue) {\n    };\n    Object.defineProperty(LogarithmicAxis.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogarithmicAxis.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LogarithmicAxis;\n}(LinearAxis));\nLogarithmicAxis.exponentStepProperty = new view_1.Property({\n    name: \"exponentStep\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onExponentStepPropertyChanged(oldValue, newValue);\n    },\n});\nLogarithmicAxis.logarithmBaseProperty = new view_1.Property({\n    name: \"logarithmBase\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLogarithmBasePropertyChanged(oldValue, newValue);\n    },\n});\nexports.LogarithmicAxis = LogarithmicAxis;\nLogarithmicAxis.exponentStepProperty.register(LogarithmicAxis);\nLogarithmicAxis.logarithmBaseProperty.register(LogarithmicAxis);\n"
    },
    {
      "id": 53,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayObservable.js",
      "name": "./~/rxjs/observable/ArrayObservable.js",
      "index": 108,
      "index2": 105,
      "size": 4576,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/of.js",
      "issuerId": 214,
      "issuerName": "./~/rxjs/observable/of.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./ArrayObservable",
          "loc": "12:24-52"
        },
        {
          "moduleId": 214,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/of.js",
          "module": "./~/rxjs/observable/of.js",
          "moduleName": "./~/rxjs/observable/of.js",
          "type": "cjs require",
          "userRequest": "./ArrayObservable",
          "loc": "2:24-52"
        },
        {
          "moduleId": 222,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/merge.js",
          "module": "./~/rxjs/operator/merge.js",
          "moduleName": "./~/rxjs/operator/merge.js",
          "type": "cjs require",
          "userRequest": "../observable/ArrayObservable",
          "loc": "3:24-64"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map"
    },
    {
      "id": 54,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/EmptyObservable.js",
      "name": "./~/rxjs/observable/EmptyObservable.js",
      "index": 110,
      "index2": 103,
      "size": 2972,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
      "issuerId": 208,
      "issuerName": "./~/rxjs/observable/ForkJoinObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 53,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "./EmptyObservable",
          "loc": "9:24-52"
        },
        {
          "moduleId": 206,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "module": "./~/rxjs/observable/ArrayLikeObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
          "type": "cjs require",
          "userRequest": "./EmptyObservable",
          "loc": "9:24-52"
        },
        {
          "moduleId": 208,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
          "module": "./~/rxjs/observable/ForkJoinObservable.js",
          "moduleName": "./~/rxjs/observable/ForkJoinObservable.js",
          "type": "cjs require",
          "userRequest": "./EmptyObservable",
          "loc": "8:24-52"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map"
    },
    {
      "id": 55,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeAll.js",
      "name": "./~/rxjs/operator/mergeAll.js",
      "index": 112,
      "index2": 112,
      "size": 4366,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/mergeAll",
          "loc": "28:0-50"
        },
        {
          "moduleId": 216,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/concatAll.js",
          "module": "./~/rxjs/operator/concatAll.js",
          "moduleName": "./~/rxjs/operator/concatAll.js",
          "type": "cjs require",
          "userRequest": "./mergeAll",
          "loc": "2:17-38"
        },
        {
          "moduleId": 222,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/merge.js",
          "module": "./~/rxjs/operator/merge.js",
          "moduleName": "./~/rxjs/operator/merge.js",
          "type": "cjs require",
          "userRequest": "./mergeAll",
          "loc": "4:17-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeAllOperator(concurrent));\n}\nexports.mergeAll = mergeAll;\nvar MergeAllOperator = (function () {\n    function MergeAllOperator(concurrent) {\n        this.concurrent = concurrent;\n    }\n    MergeAllOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));\n    };\n    return MergeAllOperator;\n}());\nexports.MergeAllOperator = MergeAllOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeAllSubscriber = (function (_super) {\n    __extends(MergeAllSubscriber, _super);\n    function MergeAllSubscriber(destination, concurrent) {\n        _super.call(this, destination);\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n    }\n    MergeAllSubscriber.prototype._next = function (observable) {\n        if (this.active < this.concurrent) {\n            this.active++;\n            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n        }\n        else {\n            this.buffer.push(observable);\n        }\n    };\n    MergeAllSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeAllSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeAllSubscriber = MergeAllSubscriber;\n//# sourceMappingURL=mergeAll.js.map"
    },
    {
      "id": 56,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/symbol/iterator.js",
      "name": "./~/rxjs/symbol/iterator.js",
      "index": 117,
      "index2": 109,
      "size": 1258,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 209,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../symbol/iterator",
          "loc": "7:17-46"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../symbol/iterator",
          "loc": "14:17-46"
        },
        {
          "moduleId": 210,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/IteratorObservable.js",
          "module": "./~/rxjs/observable/IteratorObservable.js",
          "moduleName": "./~/rxjs/observable/IteratorObservable.js",
          "type": "cjs require",
          "userRequest": "../symbol/iterator",
          "loc": "9:17-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar root_1 = require('../util/root');\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.$$iterator = symbolIteratorPonyfill(root_1.root);\n//# sourceMappingURL=iterator.js.map"
    },
    {
      "id": 57,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/symbol/observable.js",
      "name": "./~/rxjs/symbol/observable.js",
      "index": 105,
      "index2": 100,
      "size": 631,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
      "issuerId": 5,
      "issuerName": "./~/rxjs/Observable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
          "module": "./~/rxjs/Observable.js",
          "moduleName": "./~/rxjs/Observable.js",
          "type": "cjs require",
          "userRequest": "./symbol/observable",
          "loc": "4:19-49"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../symbol/observable",
          "loc": "9:19-50"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../symbol/observable",
          "loc": "17:19-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map"
    },
    {
      "id": 58,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/symbol/rxSubscriber.js",
      "name": "./~/rxjs/symbol/rxSubscriber.js",
      "index": 104,
      "index2": 97,
      "size": 270,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
      "issuerId": 32,
      "issuerName": "./~/rxjs/Subject.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./symbol/rxSubscriber",
          "loc": "10:21-53"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./symbol/rxSubscriber",
          "loc": "12:21-53"
        },
        {
          "moduleId": 228,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/toSubscriber.js",
          "module": "./~/rxjs/util/toSubscriber.js",
          "moduleName": "./~/rxjs/util/toSubscriber.js",
          "type": "cjs require",
          "userRequest": "../symbol/rxSubscriber",
          "loc": "3:21-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map"
    },
    {
      "id": 59,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/EmptyError.js",
      "name": "./~/rxjs/util/EmptyError.js",
      "index": 260,
      "index2": 257,
      "size": 850,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/util/EmptyError",
          "loc": "25:0-50"
        },
        {
          "moduleId": 220,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/first.js",
          "module": "./~/rxjs/operator/first.js",
          "moduleName": "./~/rxjs/operator/first.js",
          "type": "cjs require",
          "userRequest": "../util/EmptyError",
          "loc": "8:19-48"
        },
        {
          "moduleId": 221,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/last.js",
          "module": "./~/rxjs/operator/last.js",
          "moduleName": "./~/rxjs/operator/last.js",
          "type": "cjs require",
          "userRequest": "../util/EmptyError",
          "loc": "8:19-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map"
    },
    {
      "id": 60,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/isArray.js",
      "name": "./~/rxjs/util/isArray.js",
      "index": 98,
      "index2": 90,
      "size": 146,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "issuerId": 40,
      "issuerName": "./~/rxjs/Subscription.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 40,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/isArray",
          "loc": "2:16-41"
        },
        {
          "moduleId": 208,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
          "module": "./~/rxjs/observable/ForkJoinObservable.js",
          "moduleName": "./~/rxjs/observable/ForkJoinObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isArray",
          "loc": "9:16-42"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isArray",
          "loc": "7:16-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map"
    },
    {
      "id": 61,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
      "name": "./~/tns-core-modules/file-system/file-name-resolver/file-name-resolver.js",
      "index": 60,
      "index2": 52,
      "size": 6485,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
      "issuerId": 133,
      "issuerName": "./~/tns-core-modules/ui/frame/frame-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "../../file-system/file-name-resolver",
          "loc": "8:27-74"
        },
        {
          "moduleId": 133,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
          "module": "./~/tns-core-modules/ui/frame/frame-common.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame-common.js",
          "type": "cjs require",
          "userRequest": "../../file-system/file-name-resolver",
          "loc": "6:27-74"
        },
        {
          "moduleId": 248,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "module": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "type": "cjs require",
          "userRequest": "../../../file-system/file-name-resolver",
          "loc": "5:27-77"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"../../platform\");\nvar file_system_1 = require(\"../file-system\");\nvar trace = require(\"../../trace\");\nvar appModule = require(\"../../application\");\nvar MIN_WH = \"minWH\";\nvar MIN_W = \"minW\";\nvar MIN_H = \"minH\";\nvar PRIORITY_STEP = 10000;\nvar minWidthHeightQualifier = {\n    isMatch: function (value) {\n        return value.indexOf(MIN_WH) === 0;\n    },\n    getMatchValue: function (value, context) {\n        var numVal = parseInt(value.substr(MIN_WH.length));\n        if (isNaN(numVal)) {\n            return -1;\n        }\n        var actualLength = Math.min(context.width, context.height);\n        if (actualLength < numVal) {\n            return -1;\n        }\n        return PRIORITY_STEP - (actualLength - numVal);\n    }\n};\nvar minWidthQualifier = {\n    isMatch: function (value) {\n        return value.indexOf(MIN_W) === 0 && value.indexOf(MIN_WH) < 0;\n    },\n    getMatchValue: function (value, context) {\n        var numVal = parseInt(value.substr(MIN_W.length));\n        if (isNaN(numVal)) {\n            return -1;\n        }\n        var actualWidth = context.width;\n        if (actualWidth < numVal) {\n            return -1;\n        }\n        return PRIORITY_STEP - (actualWidth - numVal);\n    }\n};\nvar minHeightQualifier = {\n    isMatch: function (value) {\n        return value.indexOf(MIN_H) === 0 && value.indexOf(MIN_WH) < 0;\n    },\n    getMatchValue: function (value, context) {\n        var numVal = parseInt(value.substr(MIN_H.length));\n        if (isNaN(numVal)) {\n            return -1;\n        }\n        var actualHeight = context.height;\n        if (actualHeight < numVal) {\n            return -1;\n        }\n        return PRIORITY_STEP - (actualHeight - numVal);\n    }\n};\nvar platformQualifier = {\n    isMatch: function (value) {\n        return value === \"android\" ||\n            value === \"ios\";\n    },\n    getMatchValue: function (value, context) {\n        return value === context.os.toLowerCase() ? 1 : -1;\n    }\n};\nvar orientationQualifier = {\n    isMatch: function (value) {\n        return value === \"land\" ||\n            value === \"port\";\n    },\n    getMatchValue: function (value, context) {\n        var isLandscape = (context.width > context.height) ? 1 : -1;\n        return (value === \"land\") ? isLandscape : -isLandscape;\n    }\n};\nvar supportedQualifiers = [\n    minWidthHeightQualifier,\n    minWidthQualifier,\n    minHeightQualifier,\n    orientationQualifier,\n    platformQualifier\n];\nvar FileNameResolver = (function () {\n    function FileNameResolver(context) {\n        this._cache = {};\n        this._context = context;\n    }\n    FileNameResolver.prototype.resolveFileName = function (path, ext) {\n        var key = path + ext;\n        var result = this._cache[key];\n        if (result === undefined) {\n            result = this.resolveFileNameImpl(path, ext);\n            this._cache[key] = result;\n        }\n        return result;\n    };\n    FileNameResolver.prototype.clearCache = function () {\n        this._cache = {};\n    };\n    FileNameResolver.prototype.resolveFileNameImpl = function (path, ext) {\n        var result = null;\n        path = file_system_1.path.normalize(path);\n        ext = \".\" + ext;\n        var candidates = this.getFileCandidatesFromFolder(path, ext);\n        result = _findFileMatch(path, ext, candidates, this._context);\n        return result;\n    };\n    FileNameResolver.prototype.getFileCandidatesFromFolder = function (path, ext) {\n        var candidates = new Array();\n        var folderPath = path.substring(0, path.lastIndexOf(file_system_1.path.separator) + 1);\n        if (file_system_1.Folder.exists(folderPath)) {\n            var folder = file_system_1.Folder.fromPath(folderPath);\n            folder.eachEntity(function (e) {\n                if (e instanceof file_system_1.File) {\n                    var file = e;\n                    if (file.path.indexOf(path) === 0 && file.extension === ext) {\n                        candidates.push(file.path);\n                    }\n                }\n                return true;\n            });\n        }\n        else {\n            if (trace.isEnabled()) {\n                trace.write(\"Could not find folder \" + folderPath + \" when loading \" + path + ext, trace.categories.Navigation);\n            }\n        }\n        return candidates;\n    };\n    return FileNameResolver;\n}());\nexports.FileNameResolver = FileNameResolver;\nfunction _findFileMatch(path, ext, candidates, context) {\n    var bestValue = -1;\n    var result = null;\n    for (var i = 0; i < candidates.length; i++) {\n        var filePath = candidates[i];\n        var qualifiersStr = filePath.substr(path.length, filePath.length - path.length - ext.length);\n        var qualifiers = qualifiersStr.split(\".\");\n        var value = checkQualifiers(qualifiers, context);\n        if (value >= 0 && value > bestValue) {\n            bestValue = value;\n            result = candidates[i];\n        }\n    }\n    return result;\n}\nexports._findFileMatch = _findFileMatch;\nfunction checkQualifiers(qualifiers, context) {\n    var result = 0;\n    for (var i = 0; i < qualifiers.length; i++) {\n        if (qualifiers[i]) {\n            var value = checkQualifier(qualifiers[i], context);\n            if (value < 0) {\n                return -1;\n            }\n            result += value;\n        }\n    }\n    return result;\n}\nfunction checkQualifier(value, context) {\n    for (var i = 0; i < supportedQualifiers.length; i++) {\n        if (supportedQualifiers[i].isMatch(value)) {\n            var result = supportedQualifiers[i].getMatchValue(value, context);\n            if (result > 0) {\n                result += (supportedQualifiers.length - i) * PRIORITY_STEP;\n            }\n            return result;\n        }\n    }\n    return -1;\n}\nvar resolverInstance;\nfunction resolveFileName(path, ext) {\n    if (!resolverInstance) {\n        resolverInstance = new FileNameResolver({\n            width: platform_1.screen.mainScreen.widthDIPs,\n            height: platform_1.screen.mainScreen.heightDIPs,\n            os: platform_1.device.os,\n            deviceType: platform_1.device.deviceType\n        });\n    }\n    return resolverInstance.resolveFileName(path, ext);\n}\nexports.resolveFileName = resolveFileName;\nappModule.on(\"cssChanged\", function (args) { return resolverInstance = undefined; });\nappModule.on(\"livesync\", function (args) { return resolverInstance && resolverInstance.clearCache(); });\n//# sourceMappingURL=file-name-resolver.js.map"
    },
    {
      "id": 62,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "name": "./~/tns-core-modules/globals/globals.js",
      "index": 3,
      "index2": 82,
      "size": 4807,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
      "issuerId": 79,
      "issuerName": "./~/nativescript-angular/nativescript.module.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/globals",
          "loc": "2:0-35"
        },
        {
          "moduleId": 112,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application-common.js",
          "module": "./~/tns-core-modules/application/application-common.js",
          "moduleName": "./~/tns-core-modules/application/application-common.js",
          "type": "cjs require",
          "userRequest": "globals",
          "loc": "2:0-18"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/globals",
          "loc": "3:0-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./decorators\");\nglobal.__extends = global.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) {\n            d[p] = b[p];\n        }\n    }\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nglobal.moduleMerge = function (sourceExports, destExports) {\n    for (var key in sourceExports) {\n        destExports[key] = sourceExports[key];\n    }\n};\nvar modules = new Map();\nglobal.registerModule = function (name, loader) {\n    modules.set(name, loader);\n};\nglobal.moduleExists = function (name) {\n    return modules.has(name);\n};\nglobal.loadModule = function (name) {\n    var loader = modules.get(name);\n    if (loader) {\n        return loader();\n    }\n    else {\n        var result_1 = global.require(name);\n        modules.set(name, function () { return result_1; });\n        return result_1;\n    }\n};\nglobal.zonedCallback = function (callback) {\n    if (global.zone) {\n        return global.zone.bind(callback);\n    }\n    if (global.Zone) {\n        return global.Zone.current.wrap(callback);\n    }\n    else {\n        return callback;\n    }\n};\nglobal.registerModule(\"timer\", function () { return require(\"timer\"); });\nglobal.registerModule(\"ui/dialogs\", function () { return require(\"ui/dialogs\"); });\nglobal.registerModule(\"xhr\", function () { return require(\"xhr\"); });\nglobal.registerModule(\"fetch\", function () { return require(\"fetch\"); });\nvar __tnsGlobalMergedModules = new Map();\nfunction registerOnGlobalContext(name, module) {\n    Object.defineProperty(global, name, {\n        get: function () {\n            var m = global.loadModule(module);\n            if (!__tnsGlobalMergedModules.has(module)) {\n                __tnsGlobalMergedModules.set(module, true);\n                global.moduleMerge(m, global);\n            }\n            var resolvedValue = m[name];\n            Object.defineProperty(this, name, { value: resolvedValue, configurable: true, writable: true });\n            return resolvedValue;\n        },\n        configurable: true\n    });\n}\nif (global.__snapshot) {\n    var timer = require(\"timer\");\n    global.setTimeout = timer.setTimeout;\n    global.clearTimeout = timer.clearTimeout;\n    global.setInterval = timer.setInterval;\n    global.clearInterval = timer.clearInterval;\n    var dialogs = require(\"ui/dialogs\");\n    global.alert = dialogs.alert;\n    global.confirm = dialogs.confirm;\n    global.prompt = dialogs.prompt;\n    var xhr = require(\"xhr\");\n    global.XMLHttpRequest = xhr.XMLHttpRequest;\n    global.FormData = xhr.FormData;\n    var fetch = require(\"fetch\");\n    global.fetch = fetch.fetch;\n    global.Headers = fetch.Headers;\n    global.Request = fetch.Request;\n    global.Response = fetch.Response;\n}\nelse {\n    registerOnGlobalContext(\"setTimeout\", \"timer\");\n    registerOnGlobalContext(\"clearTimeout\", \"timer\");\n    registerOnGlobalContext(\"setInterval\", \"timer\");\n    registerOnGlobalContext(\"clearInterval\", \"timer\");\n    registerOnGlobalContext(\"alert\", \"ui/dialogs\");\n    registerOnGlobalContext(\"confirm\", \"ui/dialogs\");\n    registerOnGlobalContext(\"prompt\", \"ui/dialogs\");\n    registerOnGlobalContext(\"XMLHttpRequest\", \"xhr\");\n    registerOnGlobalContext(\"FormData\", \"xhr\");\n    registerOnGlobalContext(\"fetch\", \"fetch\");\n}\nif (global.android || global.__snapshot) {\n    var consoleModule = require(\"console\");\n    global.console = new consoleModule.Console();\n}\nfunction Deprecated(target, key, descriptor) {\n    if (descriptor) {\n        var originalMethod = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            console.log(key + \" is deprecated\");\n            return originalMethod.apply(this, args);\n        };\n        return descriptor;\n    }\n    else {\n        console.log((target && target.name || target) + \" is deprecated\");\n        return target;\n    }\n}\nexports.Deprecated = Deprecated;\nglobal.Deprecated = Deprecated;\nfunction Experimental(target, key, descriptor) {\n    if (descriptor) {\n        var originalMethod = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            console.log(key + \" is experimental\");\n            return originalMethod.apply(this, args);\n        };\n        return descriptor;\n    }\n    else {\n        console.log((target && target.name || target) + \" is experimental\");\n        return target;\n    }\n}\nexports.Experimental = Experimental;\nglobal.Experimental = Experimental;\n//# sourceMappingURL=globals.js.map"
    },
    {
      "id": 63,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
      "name": "./~/tns-core-modules/ui/builder/builder.js",
      "index": 61,
      "index2": 56,
      "size": 23496,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
      "issuerId": 133,
      "issuerName": "./~/tns-core-modules/ui/frame/frame-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 133,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
          "module": "./~/tns-core-modules/ui/frame/frame-common.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame-common.js",
          "type": "cjs require",
          "userRequest": "../builder",
          "loc": "8:16-37"
        },
        {
          "moduleId": 148,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view-common.js",
          "type": "cjs require",
          "userRequest": "../builder",
          "loc": "6:16-37"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../builder",
          "loc": "10:16-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar debug_1 = require(\"../../utils/debug\");\nvar xml = require(\"../../xml\");\nvar file_system_1 = require(\"../../file-system\");\nvar types_1 = require(\"../../utils/types\");\nvar component_builder_1 = require(\"./component-builder\");\nvar platform_1 = require(\"../../platform\");\nvar file_name_resolver_1 = require(\"../../file-system/file-name-resolver\");\nvar ios = platform_1.platformNames.ios.toLowerCase();\nvar android = platform_1.platformNames.android.toLowerCase();\nvar defaultNameSpaceMatcher = /tns\\.xsd$/i;\nvar trace;\nfunction ensureTrace() {\n    if (!trace) {\n        trace = require(\"trace\");\n    }\n}\nfunction parse(value, context) {\n    if (typeof value === \"function\") {\n        return value();\n    }\n    else {\n        var exports_1 = context ? getExports(context) : undefined;\n        var componentModule = parseInternal(value, exports_1);\n        if (componentModule) {\n            return componentModule.component;\n        }\n        return undefined;\n    }\n}\nexports.parse = parse;\nfunction parseMultipleTemplates(value, context) {\n    var dummyComponent = \"<ListView><ListView.itemTemplates>\" + value + \"</ListView.itemTemplates></ListView>\";\n    return parseInternal(dummyComponent, context).component[\"itemTemplates\"];\n}\nexports.parseMultipleTemplates = parseMultipleTemplates;\nfunction parseInternal(value, context, uri, moduleNamePath) {\n    var start;\n    var ui;\n    var errorFormat = (debug_1.debug && uri) ? xml2ui.SourceErrorFormat(uri) : xml2ui.PositionErrorFormat;\n    var componentSourceTracker = (debug_1.debug && uri) ? xml2ui.ComponentSourceTracker(uri) : function () {\n    };\n    (start = new xml2ui.XmlStringParser(errorFormat))\n        .pipe(new xml2ui.PlatformFilter())\n        .pipe(new xml2ui.XmlStateParser(ui = new xml2ui.ComponentParser(context, errorFormat, componentSourceTracker, moduleNamePath)));\n    start.parse(value);\n    return ui.rootComponentModule;\n}\nfunction loadCustomComponent(componentPath, componentName, attributes, context, parentPage) {\n    if (!parentPage && context) {\n        parentPage = context[\"_parentPage\"];\n        delete context[\"_parentPage\"];\n    }\n    var result;\n    componentPath = componentPath.replace(\"~/\", \"\");\n    var moduleName = componentPath + \"/\" + componentName;\n    var fullComponentPathFilePathWithoutExt = componentPath;\n    if (!file_system_1.File.exists(componentPath) || componentPath === \".\" || componentPath === \"./\") {\n        fullComponentPathFilePathWithoutExt = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, componentPath, componentName);\n    }\n    var xmlFilePath = file_name_resolver_1.resolveFileName(fullComponentPathFilePathWithoutExt, \"xml\");\n    if (xmlFilePath) {\n        var jsFilePath = file_name_resolver_1.resolveFileName(fullComponentPathFilePathWithoutExt, \"js\");\n        var subExports = context;\n        if (global.moduleExists(moduleName)) {\n            subExports = global.loadModule(moduleName);\n        }\n        else {\n            if (jsFilePath) {\n                subExports = global.loadModule(jsFilePath);\n            }\n        }\n        if (!subExports) {\n            subExports = {};\n        }\n        subExports[\"_parentPage\"] = parentPage;\n        result = loadInternal(xmlFilePath, subExports);\n        if (types_1.isDefined(result) && types_1.isDefined(result.component) && types_1.isDefined(attributes)) {\n            for (var attr in attributes) {\n                component_builder_1.setPropertyValue(result.component, subExports, context, attr, attributes[attr]);\n            }\n        }\n    }\n    else {\n        result = component_builder_1.getComponentModule(componentName, componentPath, attributes, context);\n    }\n    var cssFilePath = file_name_resolver_1.resolveFileName(fullComponentPathFilePathWithoutExt, \"css\");\n    if (cssFilePath) {\n        if (parentPage && typeof parentPage.addCssFile === \"function\") {\n            parentPage.addCssFile(cssFilePath);\n        }\n        else {\n            ensureTrace();\n            trace.write(\"CSS file found but no page specified. Please specify page in the options!\", trace.categories.Error, trace.messageType.error);\n        }\n    }\n    return result;\n}\nfunction load(pathOrOptions, context) {\n    var viewToReturn;\n    var componentModule;\n    if (!context) {\n        if (!types_1.isString(pathOrOptions)) {\n            var options = pathOrOptions;\n            componentModule = loadCustomComponent(options.path, options.name, options.attributes, options.exports, options.page);\n        }\n        else {\n            var path_1 = pathOrOptions;\n            componentModule = loadInternal(path_1);\n        }\n    }\n    else {\n        var path_2 = pathOrOptions;\n        componentModule = loadInternal(path_2, context);\n    }\n    if (componentModule) {\n        viewToReturn = componentModule.component;\n    }\n    return viewToReturn;\n}\nexports.load = load;\nfunction loadPage(moduleNamePath, fileName, context) {\n    var componentModule;\n    if (file_system_1.File.exists(fileName)) {\n        var file = file_system_1.File.fromPath(fileName);\n        var onError = function (error) {\n            throw new Error(\"Error loading file \" + fileName + \" :\" + error.message);\n        };\n        var text = file.readTextSync(onError);\n        componentModule = parseInternal(text, context, fileName, moduleNamePath);\n    }\n    if (componentModule && componentModule.component) {\n        componentModule.component.exports = context;\n    }\n    return componentModule.component;\n}\nexports.loadPage = loadPage;\nfunction loadInternal(fileName, context) {\n    var componentModule;\n    if (file_system_1.File.exists(fileName)) {\n        var file = file_system_1.File.fromPath(fileName);\n        var onError = function (error) {\n            throw new Error(\"Error loading file \" + fileName + \" :\" + error.message);\n        };\n        var text = file.readTextSync(onError);\n        componentModule = parseInternal(text, context, fileName);\n    }\n    if (componentModule && componentModule.component) {\n        componentModule.component.exports = context;\n    }\n    return componentModule;\n}\nfunction getExports(instance) {\n    var isView = !!instance._domId;\n    if (!isView) {\n        return instance.exports || instance;\n    }\n    var exportObject = instance.exports;\n    var parent = instance.parent;\n    while (exportObject === undefined && parent) {\n        exportObject = parent.exports;\n        parent = parent.parent;\n    }\n    return exportObject;\n}\nvar xml2ui;\n(function (xml2ui) {\n    var XmlProducerBase = (function () {\n        function XmlProducerBase() {\n        }\n        XmlProducerBase.prototype.pipe = function (next) {\n            this._next = next;\n            return next;\n        };\n        XmlProducerBase.prototype.next = function (args) {\n            this._next.parse(args);\n        };\n        return XmlProducerBase;\n    }());\n    xml2ui.XmlProducerBase = XmlProducerBase;\n    var XmlStringParser = (function (_super) {\n        __extends(XmlStringParser, _super);\n        function XmlStringParser(error) {\n            var _this = _super.call(this) || this;\n            _this.error = error || PositionErrorFormat;\n            return _this;\n        }\n        XmlStringParser.prototype.parse = function (value) {\n            var _this = this;\n            var xmlParser = new xml.XmlParser(function (args) {\n                try {\n                    _this.next(args);\n                }\n                catch (e) {\n                    throw _this.error(e, args.position);\n                }\n            }, function (e, p) {\n                throw _this.error(e, p);\n            }, true);\n            if (types_1.isString(value)) {\n                xmlParser.parse(value);\n            }\n        };\n        return XmlStringParser;\n    }(XmlProducerBase));\n    xml2ui.XmlStringParser = XmlStringParser;\n    function PositionErrorFormat(e, p) {\n        return new debug_1.ScopeError(e, \"Parsing XML at \" + p.line + \":\" + p.column);\n    }\n    xml2ui.PositionErrorFormat = PositionErrorFormat;\n    function SourceErrorFormat(uri) {\n        return function (e, p) {\n            var source = p ? new debug_1.Source(uri, p.line, p.column) : new debug_1.Source(uri, -1, -1);\n            e = new debug_1.SourceError(e, source, \"Building UI from XML.\");\n            return e;\n        };\n    }\n    xml2ui.SourceErrorFormat = SourceErrorFormat;\n    function ComponentSourceTracker(uri) {\n        return function (component, p) {\n            if (!debug_1.Source.get(component)) {\n                var source = p ? new debug_1.Source(uri, p.line, p.column) : new debug_1.Source(uri, -1, -1);\n                debug_1.Source.set(component, source);\n            }\n        };\n    }\n    xml2ui.ComponentSourceTracker = ComponentSourceTracker;\n    var PlatformFilter = (function (_super) {\n        __extends(PlatformFilter, _super);\n        function PlatformFilter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PlatformFilter.prototype.parse = function (args) {\n            if (args.eventType === xml.ParserEventType.StartElement) {\n                if (PlatformFilter.isPlatform(args.elementName)) {\n                    if (this.currentPlatformContext) {\n                        throw new Error(\"Already in '\" + this.currentPlatformContext + \"' platform context and cannot switch to '\" + args.elementName + \"' platform! Platform tags cannot be nested.\");\n                    }\n                    this.currentPlatformContext = args.elementName;\n                    return;\n                }\n            }\n            if (args.eventType === xml.ParserEventType.EndElement) {\n                if (PlatformFilter.isPlatform(args.elementName)) {\n                    this.currentPlatformContext = undefined;\n                    return;\n                }\n            }\n            if (this.currentPlatformContext && !PlatformFilter.isCurentPlatform(this.currentPlatformContext)) {\n                return;\n            }\n            this.next(args);\n        };\n        PlatformFilter.isPlatform = function (value) {\n            if (value) {\n                var toLower = value.toLowerCase();\n                return toLower === android || toLower === ios;\n            }\n            return false;\n        };\n        PlatformFilter.isCurentPlatform = function (value) {\n            return value && value.toLowerCase() === platform_1.device.os.toLowerCase();\n        };\n        return PlatformFilter;\n    }(XmlProducerBase));\n    xml2ui.PlatformFilter = PlatformFilter;\n    var XmlArgsReplay = (function (_super) {\n        __extends(XmlArgsReplay, _super);\n        function XmlArgsReplay(args, errorFormat) {\n            var _this = _super.call(this) || this;\n            _this.args = args;\n            _this.error = errorFormat;\n            return _this;\n        }\n        XmlArgsReplay.prototype.replay = function () {\n            var _this = this;\n            this.args.forEach(function (args) {\n                try {\n                    _this.next(args);\n                }\n                catch (e) {\n                    throw _this.error(e, args.position);\n                }\n            });\n        };\n        return XmlArgsReplay;\n    }(XmlProducerBase));\n    xml2ui.XmlArgsReplay = XmlArgsReplay;\n    var XmlStateParser = (function () {\n        function XmlStateParser(state) {\n            this.state = state;\n        }\n        XmlStateParser.prototype.parse = function (args) {\n            this.state = this.state.parse(args);\n        };\n        return XmlStateParser;\n    }());\n    xml2ui.XmlStateParser = XmlStateParser;\n    var TemplateParser = (function () {\n        function TemplateParser(parent, templateProperty, setTemplateProperty) {\n            if (setTemplateProperty === void 0) { setTemplateProperty = true; }\n            this.parent = parent;\n            this._context = templateProperty.context;\n            this._recordedXmlStream = new Array();\n            this._templateProperty = templateProperty;\n            this._nestingLevel = 0;\n            this._state = 0;\n            this._setTemplateProperty = setTemplateProperty;\n        }\n        TemplateParser.prototype.parse = function (args) {\n            if (args.eventType === xml.ParserEventType.StartElement) {\n                this.parseStartElement(args.prefix, args.namespace, args.elementName, args.attributes);\n            }\n            else if (args.eventType === xml.ParserEventType.EndElement) {\n                this.parseEndElement(args.prefix, args.elementName);\n            }\n            this._recordedXmlStream.push(args);\n            return this._state === 2 ? this.parent : this;\n        };\n        Object.defineProperty(TemplateParser.prototype, \"elementName\", {\n            get: function () {\n                return this._templateProperty.elementName;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        TemplateParser.prototype.parseStartElement = function (prefix, namespace, elementName, attributes) {\n            if (this._state === 0) {\n                this._state = 1;\n            }\n            else if (this._state === 2) {\n                throw new Error(\"Template must have exactly one root element but multiple elements were found.\");\n            }\n            this._nestingLevel++;\n        };\n        TemplateParser.prototype.parseEndElement = function (prefix, elementName) {\n            if (this._state === 0) {\n                throw new Error(\"Template must have exactly one root element but none was found.\");\n            }\n            else if (this._state === 2) {\n                throw new Error(\"No more closing elements expected for this template.\");\n            }\n            this._nestingLevel--;\n            if (this._nestingLevel === 0) {\n                this._state = 2;\n                if (this._setTemplateProperty && this._templateProperty.name in this._templateProperty.parent.component) {\n                    var template = this._build();\n                    this._templateProperty.parent.component[this._templateProperty.name] = template;\n                }\n            }\n        };\n        TemplateParser.prototype._build = function () {\n            var _this = this;\n            var context = this._context;\n            var errorFormat = this._templateProperty.errorFormat;\n            var sourceTracker = this._templateProperty.sourceTracker;\n            var template = function () {\n                var start;\n                var ui;\n                (start = new xml2ui.XmlArgsReplay(_this._recordedXmlStream, errorFormat))\n                    .pipe(new XmlStateParser(ui = new ComponentParser(context, errorFormat, sourceTracker)));\n                start.replay();\n                return ui.rootComponentModule.component;\n            };\n            return template;\n        };\n        return TemplateParser;\n    }());\n    xml2ui.TemplateParser = TemplateParser;\n    var MultiTemplateParser = (function () {\n        function MultiTemplateParser(parent, templateProperty) {\n            this.parent = parent;\n            this.templateProperty = templateProperty;\n            this._childParsers = new Array();\n        }\n        MultiTemplateParser.prototype.parse = function (args) {\n            if (args.eventType === xml.ParserEventType.StartElement && args.elementName === \"template\") {\n                var childParser = new TemplateParser(this, this.templateProperty, false);\n                childParser[\"key\"] = args.attributes[\"key\"];\n                this._childParsers.push(childParser);\n                return childParser;\n            }\n            if (args.eventType === xml.ParserEventType.EndElement) {\n                var name_1 = ComponentParser.getComplexPropertyName(args.elementName);\n                if (name_1 === this.templateProperty.name) {\n                    var templates = new Array();\n                    for (var i = 0; i < this._childParsers.length; i++) {\n                        templates.push({\n                            key: this._childParsers[i][\"key\"],\n                            createView: this._childParsers[i]._build()\n                        });\n                    }\n                    this.templateProperty.parent.component[this.templateProperty.name] = templates;\n                    return this.parent;\n                }\n            }\n            return this;\n        };\n        return MultiTemplateParser;\n    }());\n    xml2ui.MultiTemplateParser = MultiTemplateParser;\n    var ComponentParser = (function () {\n        function ComponentParser(context, errorFormat, sourceTracker, moduleNamePath) {\n            this.moduleNamePath = moduleNamePath;\n            this.parents = new Array();\n            this.complexProperties = new Array();\n            this.context = context;\n            this.error = errorFormat;\n            this.sourceTracker = sourceTracker;\n        }\n        ComponentParser.prototype.parse = function (args) {\n            var parent = this.parents[this.parents.length - 1];\n            var complexProperty = this.complexProperties[this.complexProperties.length - 1];\n            if (args.eventType === xml.ParserEventType.StartElement) {\n                if (ComponentParser.isComplexProperty(args.elementName)) {\n                    var name = ComponentParser.getComplexPropertyName(args.elementName);\n                    this.complexProperties.push({\n                        parent: parent,\n                        name: name,\n                        items: [],\n                    });\n                    if (ComponentParser.isKnownTemplate(name, parent.exports)) {\n                        return new TemplateParser(this, {\n                            context: (parent ? getExports(parent.component) : null) || this.context,\n                            parent: parent,\n                            name: name,\n                            elementName: args.elementName,\n                            templateItems: [],\n                            errorFormat: this.error,\n                            sourceTracker: this.sourceTracker\n                        });\n                    }\n                    if (ComponentParser.isKnownMultiTemplate(name, parent.exports)) {\n                        return new MultiTemplateParser(this, {\n                            context: (parent ? getExports(parent.component) : null) || this.context,\n                            parent: parent,\n                            name: name,\n                            elementName: args.elementName,\n                            templateItems: [],\n                            errorFormat: this.error,\n                            sourceTracker: this.sourceTracker\n                        });\n                    }\n                }\n                else {\n                    var componentModule;\n                    if (args.prefix && args.namespace) {\n                        componentModule = loadCustomComponent(args.namespace, args.elementName, args.attributes, this.context, this.currentRootView);\n                    }\n                    else {\n                        var namespace = args.namespace;\n                        if (defaultNameSpaceMatcher.test(namespace || '')) {\n                            namespace = undefined;\n                        }\n                        componentModule = component_builder_1.getComponentModule(args.elementName, namespace, args.attributes, this.context, this.moduleNamePath);\n                    }\n                    if (componentModule) {\n                        this.sourceTracker(componentModule.component, args.position);\n                        if (parent) {\n                            if (complexProperty) {\n                                ComponentParser.addToComplexProperty(parent, complexProperty, componentModule);\n                            }\n                            else if (parent.component._addChildFromBuilder) {\n                                parent.component._addChildFromBuilder(args.elementName, componentModule.component);\n                            }\n                        }\n                        else if (this.parents.length === 0) {\n                            this.rootComponentModule = componentModule;\n                            if (this.rootComponentModule) {\n                                this.currentRootView = this.rootComponentModule.component;\n                                if (this.currentRootView.exports) {\n                                    this.context = this.currentRootView.exports;\n                                }\n                            }\n                        }\n                        this.parents.push(componentModule);\n                    }\n                }\n            }\n            else if (args.eventType === xml.ParserEventType.EndElement) {\n                if (ComponentParser.isComplexProperty(args.elementName)) {\n                    if (complexProperty) {\n                        if (parent && parent.component._addArrayFromBuilder) {\n                            parent.component._addArrayFromBuilder(complexProperty.name, complexProperty.items);\n                            complexProperty.items = [];\n                        }\n                    }\n                    this.complexProperties.pop();\n                }\n                else {\n                    this.parents.pop();\n                }\n            }\n            return this;\n        };\n        ComponentParser.isComplexProperty = function (name) {\n            return types_1.isString(name) && name.indexOf(\".\") !== -1;\n        };\n        ComponentParser.getComplexPropertyName = function (fullName) {\n            var name;\n            if (types_1.isString(fullName)) {\n                var names = fullName.split(\".\");\n                name = names[names.length - 1];\n            }\n            return name;\n        };\n        ComponentParser.isKnownTemplate = function (name, exports) {\n            return ComponentParser.KNOWNTEMPLATES in exports && exports[ComponentParser.KNOWNTEMPLATES] && name in exports[ComponentParser.KNOWNTEMPLATES];\n        };\n        ComponentParser.isKnownMultiTemplate = function (name, exports) {\n            return ComponentParser.KNOWNMULTITEMPLATES in exports && exports[ComponentParser.KNOWNMULTITEMPLATES] && name in exports[ComponentParser.KNOWNMULTITEMPLATES];\n        };\n        ComponentParser.addToComplexProperty = function (parent, complexProperty, elementModule) {\n            var parentComponent = parent.component;\n            if (ComponentParser.isKnownCollection(complexProperty.name, parent.exports)) {\n                complexProperty.items.push(elementModule.component);\n            }\n            else if (parentComponent._addChildFromBuilder) {\n                parentComponent._addChildFromBuilder(complexProperty.name, elementModule.component);\n            }\n            else {\n                parentComponent[complexProperty.name] = elementModule.component;\n            }\n        };\n        ComponentParser.isKnownCollection = function (name, context) {\n            return ComponentParser.KNOWNCOLLECTIONS in context && context[ComponentParser.KNOWNCOLLECTIONS] && name in context[ComponentParser.KNOWNCOLLECTIONS];\n        };\n        return ComponentParser;\n    }());\n    ComponentParser.KNOWNCOLLECTIONS = \"knownCollections\";\n    ComponentParser.KNOWNTEMPLATES = \"knownTemplates\";\n    ComponentParser.KNOWNMULTITEMPLATES = \"knownMultiTemplates\";\n    xml2ui.ComponentParser = ComponentParser;\n})(xml2ui || (xml2ui = {}));\n//# sourceMappingURL=builder.js.map"
    },
    {
      "id": 64,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
      "name": "./~/tns-core-modules/ui/core/bindable/bindable.js",
      "index": 41,
      "index2": 35,
      "size": 21848,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
      "issuerId": 126,
      "issuerName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../bindable",
          "loc": "6:17-39"
        },
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "../bindable",
          "loc": "16:9-31"
        },
        {
          "moduleId": 248,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "module": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "type": "cjs require",
          "userRequest": "../../core/bindable",
          "loc": "2:17-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"../properties\");\nvar observable_1 = require(\"../../../data/observable\");\nexports.Observable = observable_1.Observable;\nexports.WrappedValue = observable_1.WrappedValue;\nvar weak_event_listener_1 = require(\"../weak-event-listener\");\nvar binding_builder_1 = require(\"../../builder/binding-builder\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar trace_1 = require(\"../../../trace\");\nexports.traceEnabled = trace_1.isEnabled;\nexports.traceWrite = trace_1.write;\nexports.traceCategories = trace_1.categories;\nexports.traceNotifyEvent = trace_1.notifyEvent;\nexports.isCategorySet = trace_1.isCategorySet;\nexports.traceMessageType = trace_1.messageType;\nvar types = require(\"../../../utils/types\");\nvar application = require(\"../../../application\");\nvar polymerExpressions = require(\"../../../js-libs/polymer-expressions\");\nvar contextKey = \"context\";\nvar paramsRegex = /\\[\\s*(['\"])*(\\w*)\\1\\s*\\]/;\nvar bc = binding_builder_1.bindingConstants;\nvar emptyArray = [];\nfunction getProperties(property) {\n    var result = emptyArray;\n    if (property) {\n        var parentsMatches = property.match(binding_builder_1.parentsRegex);\n        result = property.replace(binding_builder_1.parentsRegex, \"parentsMatch\")\n            .replace(/\\]/g, \"\")\n            .split(/\\.|\\[/);\n        var parentsMatchesCounter = 0;\n        for (var i = 0, resultLength = result.length; i < resultLength; i++) {\n            if (result[i] === \"parentsMatch\") {\n                result[i] = parentsMatches[parentsMatchesCounter++];\n            }\n        }\n    }\n    return result;\n}\nfunction getEventOrGestureName(name) {\n    return name.indexOf(\"on\") === 0 ? name.substr(2, name.length - 2) : name;\n}\nexports.getEventOrGestureName = getEventOrGestureName;\nfunction isGesture(eventOrGestureName) {\n    var t = eventOrGestureName.trim().toLowerCase();\n    return t === \"tap\"\n        || t === \"doubletap\"\n        || t === \"pinch\"\n        || t === \"pan\"\n        || t === \"swipe\"\n        || t === \"rotation\"\n        || t === \"longpress\"\n        || t === \"touch\";\n}\nexports.isGesture = isGesture;\nfunction isEventOrGesture(name, view) {\n    if (typeof name === \"string\") {\n        var eventOrGestureName = getEventOrGestureName(name);\n        var evt = eventOrGestureName + \"Event\";\n        return view.constructor && evt in view.constructor || isGesture(eventOrGestureName.toLowerCase());\n    }\n    return false;\n}\nexports.isEventOrGesture = isEventOrGesture;\nvar Binding = (function () {\n    function Binding(target, options) {\n        this.propertyChangeListeners = new Map();\n        this.target = new WeakRef(target);\n        this.options = options;\n        this.sourceProperties = getProperties(options.sourceProperty);\n        this.targetOptions = this.resolveOptions(target, getProperties(options.targetProperty));\n        if (!this.targetOptions) {\n            throw new Error(\"Invalid property: \" + options.targetProperty + \" for target: \" + target);\n        }\n        if (options.twoWay) {\n            var target_1 = this.targetOptions.instance.get();\n            if (target_1 instanceof observable_1.Observable) {\n                target_1.on(this.targetOptions.property + \"Change\", this.onTargetPropertyChanged, this);\n            }\n        }\n    }\n    Binding.prototype.onTargetPropertyChanged = function (data) {\n        this.updateTwoWay(data.value);\n    };\n    Binding.prototype.loadedHandlerVisualTreeBinding = function (args) {\n        var target = args.object;\n        target.off(\"loaded\", this.loadedHandlerVisualTreeBinding, this);\n        var context = target.bindingContext;\n        if (context !== undefined && context !== null) {\n            this.update(context);\n        }\n    };\n    ;\n    Binding.prototype.clearSource = function () {\n        var _this = this;\n        this.propertyChangeListeners.forEach(function (observable, index, map) {\n            weak_event_listener_1.removeWeakEventListener(observable, observable_1.Observable.propertyChangeEvent, _this.onSourcePropertyChanged, _this);\n        });\n        this.propertyChangeListeners.clear();\n        this.sourcesAndProperties = null;\n        if (this.source) {\n            this.source.clear();\n        }\n        if (this.sourceOptions) {\n            this.sourceOptions.instance.clear();\n            this.sourceOptions = undefined;\n        }\n    };\n    Binding.prototype.sourceAsObject = function (source) {\n        var objectType = typeof source;\n        if (objectType === \"number\") {\n            source = new Number(source);\n        }\n        else if (objectType === \"boolean\") {\n            source = new Boolean(source);\n        }\n        else if (objectType === \"string\") {\n            source = new String(source);\n        }\n        return source;\n    };\n    Binding.prototype.bindingContextChanged = function (data) {\n        var target = this.targetOptions.instance.get();\n        if (!target) {\n            this.unbind();\n            return;\n        }\n        if (data.value) {\n            this.update(data.value);\n        }\n        else {\n            this.clearBinding();\n        }\n    };\n    Binding.prototype.bind = function (source) {\n        var target = this.targetOptions.instance.get();\n        if (this.sourceIsBindingContext && target instanceof observable_1.Observable && this.targetOptions.property !== \"bindingContext\") {\n            target.on(\"bindingContextChange\", this.bindingContextChanged, this);\n        }\n        this.update(source);\n    };\n    Binding.prototype.update = function (source) {\n        this.clearSource();\n        source = this.sourceAsObject(source);\n        if (!types.isNullOrUndefined(source)) {\n            this.source = new WeakRef(source);\n            this.sourceOptions = this.resolveOptions(source, this.sourceProperties);\n            var sourceValue = this.getSourcePropertyValue();\n            this.updateTarget(sourceValue);\n            this.addPropertyChangeListeners(this.source, this.sourceProperties);\n        }\n        else if (!this.sourceIsBindingContext) {\n            var sourceValue = this.getSourcePropertyValue();\n            this.updateTarget(sourceValue ? sourceValue : source);\n        }\n    };\n    Binding.prototype.unbind = function () {\n        var target = this.targetOptions.instance.get();\n        if (target instanceof observable_1.Observable) {\n            if (this.options.twoWay) {\n                target.off(this.targetOptions.property + \"Change\", this.onTargetPropertyChanged, this);\n            }\n            if (this.sourceIsBindingContext && this.targetOptions.property !== \"bindingContext\") {\n                target.off(\"bindingContextChange\", this.bindingContextChanged, this);\n            }\n        }\n        if (this.targetOptions) {\n            this.targetOptions = undefined;\n        }\n        this.sourceProperties = undefined;\n        if (!this.source) {\n            return;\n        }\n        this.clearSource();\n    };\n    Binding.prototype.resolveObjectsAndProperties = function (source, properties) {\n        var result = [];\n        var currentObject = source;\n        var currentObjectChanged = false;\n        for (var i = 0, propsArrayLength = properties.length; i < propsArrayLength; i++) {\n            var property = properties[i];\n            if (property === bc.bindingValueKey) {\n                currentObjectChanged = true;\n            }\n            if (property === bc.parentValueKey || property.indexOf(bc.parentsValueKey) === 0) {\n                var parentView = this.getParentView(this.target.get(), property).view;\n                if (parentView) {\n                    currentObject = parentView.bindingContext;\n                }\n                else {\n                    var targetInstance = this.target.get();\n                    targetInstance.off(\"loaded\", this.loadedHandlerVisualTreeBinding, this);\n                    targetInstance.on(\"loaded\", this.loadedHandlerVisualTreeBinding, this);\n                }\n                currentObjectChanged = true;\n            }\n            if (currentObject) {\n                result.push({ instance: currentObject, property: property });\n            }\n            else {\n                break;\n            }\n            if (!currentObjectChanged && (i < propsArrayLength - 1)) {\n                currentObject = currentObject ? currentObject[properties[i]] : null;\n            }\n            currentObjectChanged = false;\n        }\n        return result;\n    };\n    Binding.prototype.addPropertyChangeListeners = function (source, sourceProperty, parentProperies) {\n        var objectsAndProperties = this.resolveObjectsAndProperties(source.get(), sourceProperty);\n        var prop = parentProperies || \"\";\n        for (var i = 0, length_1 = objectsAndProperties.length; i < length_1; i++) {\n            prop += \"$\" + objectsAndProperties[i].property;\n            var currentObject = objectsAndProperties[i].instance;\n            if (!this.propertyChangeListeners.has(prop) && currentObject instanceof observable_1.Observable) {\n                weak_event_listener_1.addWeakEventListener(currentObject, observable_1.Observable.propertyChangeEvent, this.onSourcePropertyChanged, this);\n                this.propertyChangeListeners.set(prop, currentObject);\n            }\n        }\n    };\n    Binding.prototype.prepareExpressionForUpdate = function () {\n        var escapedSourceProperty = utils_1.escapeRegexSymbols(this.options.sourceProperty);\n        var expRegex = new RegExp(escapedSourceProperty, 'g');\n        var resultExp = this.options.expression.replace(expRegex, bc.newPropertyValueKey);\n        return resultExp;\n    };\n    Binding.prototype.updateTwoWay = function (value) {\n        if (this.updating || !this.options.twoWay) {\n            return;\n        }\n        var newValue = value;\n        if (this.options.expression) {\n            var changedModel = {};\n            changedModel[bc.bindingValueKey] = value;\n            changedModel[bc.newPropertyValueKey] = value;\n            var sourcePropertyName = \"\";\n            if (this.sourceOptions) {\n                sourcePropertyName = this.sourceOptions.property;\n            }\n            else if (typeof this.options.sourceProperty === \"string\" && this.options.sourceProperty.indexOf(\".\") === -1) {\n                sourcePropertyName = this.options.sourceProperty;\n            }\n            if (sourcePropertyName !== \"\") {\n                changedModel[sourcePropertyName] = value;\n            }\n            var updateExpression = this.prepareExpressionForUpdate();\n            this.prepareContextForExpression(changedModel, updateExpression, undefined);\n            var expressionValue = this._getExpressionValue(updateExpression, true, changedModel);\n            if (expressionValue instanceof Error) {\n                trace_1.write(expressionValue.message, trace_1.categories.Binding, trace_1.messageType.error);\n            }\n            newValue = expressionValue;\n        }\n        this.updateSource(newValue);\n    };\n    Binding.prototype._getExpressionValue = function (expression, isBackConvert, changedModel) {\n        try {\n            var exp_1 = polymerExpressions.PolymerExpressions.getExpression(expression);\n            if (exp_1) {\n                var context = this.source && this.source.get && this.source.get() || global;\n                var model = {};\n                var addedProps = [];\n                var resources = application.getResources();\n                for (var prop in resources) {\n                    if (resources.hasOwnProperty(prop) && !context.hasOwnProperty(prop)) {\n                        context[prop] = resources[prop];\n                        addedProps.push(prop);\n                    }\n                }\n                this.prepareContextForExpression(context, expression, addedProps);\n                model[contextKey] = context;\n                var result = exp_1.getValue(model, isBackConvert, changedModel ? changedModel : model);\n                var addedPropsLength = addedProps.length;\n                for (var i = 0; i < addedPropsLength; i++) {\n                    delete context[addedProps[i]];\n                }\n                addedProps.length = 0;\n                return result;\n            }\n            return new Error(expression + \" is not a valid expression.\");\n        }\n        catch (e) {\n            var errorMessage = \"Run-time error occured in file: \" + e.sourceURL + \" at line: \" + e.line + \" and column: \" + e.column;\n            return new Error(errorMessage);\n        }\n    };\n    Binding.prototype.onSourcePropertyChanged = function (data) {\n        var sourceProps = this.sourceProperties;\n        var sourcePropsLength = sourceProps.length;\n        var changedPropertyIndex = sourceProps.indexOf(data.propertyName);\n        var parentProps = \"\";\n        if (changedPropertyIndex > -1) {\n            parentProps = \"$\" + sourceProps.slice(0, changedPropertyIndex + 1).join(\"$\");\n            while (this.propertyChangeListeners.get(parentProps) !== data.object) {\n                changedPropertyIndex += sourceProps.slice(changedPropertyIndex + 1).indexOf(data.propertyName) + 1;\n                parentProps = \"$\" + sourceProps.slice(0, changedPropertyIndex + 1).join(\"$\");\n            }\n        }\n        if (this.options.expression) {\n            var expressionValue = this._getExpressionValue(this.options.expression, false, undefined);\n            if (expressionValue instanceof Error) {\n                trace_1.write(expressionValue.message, trace_1.categories.Binding, trace_1.messageType.error);\n            }\n            else {\n                this.updateTarget(expressionValue);\n            }\n        }\n        else {\n            if (changedPropertyIndex > -1) {\n                var props = sourceProps.slice(changedPropertyIndex + 1);\n                var propsLength = props.length;\n                if (propsLength > 0) {\n                    var value = data.value;\n                    for (var i = 0; i < propsLength; i++) {\n                        value = value[props[i]];\n                    }\n                    this.updateTarget(value);\n                }\n                else if (data.propertyName === this.sourceOptions.property) {\n                    this.updateTarget(data.value);\n                }\n            }\n        }\n        if (changedPropertyIndex > -1 && changedPropertyIndex < sourcePropsLength - 1) {\n            var probablyChangedObject = this.propertyChangeListeners.get(parentProps);\n            if (probablyChangedObject &&\n                probablyChangedObject !== data.object[sourceProps[changedPropertyIndex]]) {\n                for (var i = sourcePropsLength - 1; i > changedPropertyIndex; i--) {\n                    var prop = \"$\" + sourceProps.slice(0, i + 1).join(\"$\");\n                    if (this.propertyChangeListeners.has(prop)) {\n                        weak_event_listener_1.removeWeakEventListener(this.propertyChangeListeners.get(prop), observable_1.Observable.propertyChangeEvent, this.onSourcePropertyChanged, this);\n                        this.propertyChangeListeners.delete(prop);\n                    }\n                }\n                var newProps = sourceProps.slice(changedPropertyIndex + 1);\n                var newObject = data.object[sourceProps[changedPropertyIndex]];\n                if (!types.isNullOrUndefined(newObject) && typeof newObject === 'object') {\n                    this.addPropertyChangeListeners(new WeakRef(newObject), newProps, parentProps);\n                }\n            }\n        }\n    };\n    Binding.prototype.prepareContextForExpression = function (model, expression, newProps) {\n        var parentViewAndIndex;\n        var parentView;\n        var addedProps = newProps || [];\n        if (expression.indexOf(bc.bindingValueKey) > -1) {\n            model[bc.bindingValueKey] = model;\n            addedProps.push(bc.bindingValueKey);\n        }\n        if (expression.indexOf(bc.parentValueKey) > -1) {\n            parentView = this.getParentView(this.target.get(), bc.parentValueKey).view;\n            if (parentView) {\n                model[bc.parentValueKey] = parentView.bindingContext;\n                addedProps.push(bc.parentValueKey);\n            }\n        }\n        var parentsArray = expression.match(binding_builder_1.parentsRegex);\n        if (parentsArray) {\n            for (var i = 0; i < parentsArray.length; i++) {\n                parentViewAndIndex = this.getParentView(this.target.get(), parentsArray[i]);\n                if (parentViewAndIndex.view) {\n                    model[bc.parentsValueKey] = model[bc.parentsValueKey] || {};\n                    model[bc.parentsValueKey][parentViewAndIndex.index] = parentViewAndIndex.view.bindingContext;\n                    addedProps.push(bc.parentsValueKey);\n                }\n            }\n        }\n    };\n    Binding.prototype.getSourcePropertyValue = function () {\n        if (this.options.expression) {\n            var changedModel = {};\n            changedModel[bc.bindingValueKey] = this.source ? this.source.get() : undefined;\n            var expressionValue = this._getExpressionValue(this.options.expression, false, changedModel);\n            if (expressionValue instanceof Error) {\n                trace_1.write(expressionValue.message, trace_1.categories.Binding, trace_1.messageType.error);\n            }\n            else {\n                return expressionValue;\n            }\n        }\n        if (this.sourceOptions) {\n            var sourceOptionsInstance = this.sourceOptions.instance.get();\n            if (this.sourceOptions.property === bc.bindingValueKey) {\n                return sourceOptionsInstance;\n            }\n            else if ((sourceOptionsInstance instanceof observable_1.Observable) && (this.sourceOptions.property && this.sourceOptions.property !== \"\")) {\n                return sourceOptionsInstance.get(this.sourceOptions.property);\n            }\n            else if (sourceOptionsInstance && this.sourceOptions.property && this.sourceOptions.property !== \"\" &&\n                this.sourceOptions.property in sourceOptionsInstance) {\n                return sourceOptionsInstance[this.sourceOptions.property];\n            }\n            else {\n                trace_1.write(\"Property: '\" + this.sourceOptions.property + \"' is invalid or does not exist. SourceProperty: '\" + this.options.sourceProperty + \"'\", trace_1.categories.Binding, trace_1.messageType.error);\n            }\n        }\n        return null;\n    };\n    Binding.prototype.clearBinding = function () {\n        this.clearSource();\n        this.updateTarget(properties_1.unsetValue);\n    };\n    Binding.prototype.updateTarget = function (value) {\n        if (this.updating) {\n            return;\n        }\n        this.updateOptions(this.targetOptions, types.isNullOrUndefined(value) ? properties_1.unsetValue : value);\n    };\n    Binding.prototype.updateSource = function (value) {\n        if (this.updating || !this.source || !this.source.get()) {\n            return;\n        }\n        this.updateOptions(this.sourceOptions, value);\n    };\n    Binding.prototype.getParentView = function (target, property) {\n        if (!target) {\n            return { view: null, index: null };\n        }\n        var result;\n        if (property === bc.parentValueKey) {\n            result = target.parent;\n        }\n        var index = null;\n        if (property.indexOf(bc.parentsValueKey) === 0) {\n            result = target.parent;\n            var indexParams = paramsRegex.exec(property);\n            if (indexParams && indexParams.length > 1) {\n                index = indexParams[2];\n            }\n            if (!isNaN(index)) {\n                var indexAsInt = parseInt(index);\n                while (indexAsInt > 0) {\n                    result = result.parent;\n                    indexAsInt--;\n                }\n            }\n            else if (types.isString(index)) {\n                while (result && result.typeName !== index) {\n                    result = result.parent;\n                }\n            }\n        }\n        return { view: result, index: index };\n    };\n    Binding.prototype.resolveOptions = function (obj, properties) {\n        var objectsAndProperties = this.resolveObjectsAndProperties(obj, properties);\n        if (objectsAndProperties.length > 0) {\n            var resolvedObj = objectsAndProperties[objectsAndProperties.length - 1].instance;\n            var prop = objectsAndProperties[objectsAndProperties.length - 1].property;\n            return {\n                instance: new WeakRef(this.sourceAsObject(resolvedObj)),\n                property: prop\n            };\n        }\n        return null;\n    };\n    Binding.prototype.updateOptions = function (options, value) {\n        var optionsInstance;\n        if (options && options.instance) {\n            optionsInstance = options.instance.get();\n        }\n        if (!optionsInstance) {\n            return;\n        }\n        this.updating = true;\n        try {\n            if (isEventOrGesture(options.property, optionsInstance) &&\n                types.isFunction(value)) {\n                optionsInstance.off(options.property, null, optionsInstance.bindingContext);\n                optionsInstance.on(options.property, value, optionsInstance.bindingContext);\n            }\n            else if (optionsInstance instanceof observable_1.Observable) {\n                optionsInstance.set(options.property, value);\n            }\n            else {\n                optionsInstance[options.property] = value;\n            }\n        }\n        catch (ex) {\n            trace_1.write(\"Binding error while setting property \" + options.property + \" of \" + optionsInstance + \": \" + ex, trace_1.categories.Binding, trace_1.messageType.error);\n        }\n        this.updating = false;\n    };\n    return Binding;\n}());\nexports.Binding = Binding;\n//# sourceMappingURL=bindable.js.map"
    },
    {
      "id": 65,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
      "name": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
      "index": 80,
      "index2": 73,
      "size": 15253,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-view/text-view.android.js",
      "issuerId": 167,
      "issuerName": "./~/tns-core-modules/ui/text-view/text-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 165,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field-common.js",
          "module": "./~/tns-core-modules/ui/text-field/text-field-common.js",
          "moduleName": "./~/tns-core-modules/ui/text-field/text-field-common.js",
          "type": "cjs require",
          "userRequest": "../editable-text-base",
          "loc": "5:27-59"
        },
        {
          "moduleId": 165,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field-common.js",
          "module": "./~/tns-core-modules/ui/text-field/text-field-common.js",
          "moduleName": "./~/tns-core-modules/ui/text-field/text-field-common.js",
          "type": "cjs require",
          "userRequest": "../editable-text-base",
          "loc": "6:9-41"
        },
        {
          "moduleId": 167,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-view/text-view.android.js",
          "module": "./~/tns-core-modules/ui/text-view/text-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-view/text-view.android.js",
          "type": "cjs require",
          "userRequest": "../editable-text-base",
          "loc": "5:27-59"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editable_text_base_common_1 = require(\"./editable-text-base-common\");\nvar utils_1 = require(\"../../utils/utils\");\n__export(require(\"./editable-text-base-common\"));\nvar dismissKeyboardTimeoutId;\nvar EditTextListeners;\nfunction initializeEditTextListeners() {\n    if (EditTextListeners) {\n        return;\n    }\n    var EditTextListenersImpl = (function (_super) {\n        __extends(EditTextListenersImpl, _super);\n        function EditTextListenersImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        EditTextListenersImpl.prototype.beforeTextChanged = function (text, start, count, after) {\n        };\n        EditTextListenersImpl.prototype.onTextChanged = function (text, start, before, count) {\n        };\n        EditTextListenersImpl.prototype.afterTextChanged = function (editable) {\n            var owner = this.owner;\n            if (!owner) {\n                return;\n            }\n            switch (owner.updateTextTrigger) {\n                case \"focusLost\":\n                    owner._dirtyTextAccumulator = editable.toString();\n                    break;\n                case \"textChanged\":\n                    editable_text_base_common_1.textProperty.nativeValueChange(owner, editable.toString());\n                    break;\n                default:\n                    throw new Error(\"Invalid updateTextTrigger: \" + owner.updateTextTrigger);\n            }\n        };\n        EditTextListenersImpl.prototype.onFocusChange = function (view, hasFocus) {\n            var owner = this.owner;\n            if (!owner) {\n                return;\n            }\n            if (hasFocus) {\n                if (dismissKeyboardTimeoutId) {\n                    clearTimeout(dismissKeyboardTimeoutId);\n                    dismissKeyboardTimeoutId = undefined;\n                }\n            }\n            else {\n                if (owner._dirtyTextAccumulator || owner._dirtyTextAccumulator === \"\") {\n                    editable_text_base_common_1.textProperty.nativeValueChange(owner, owner._dirtyTextAccumulator);\n                    owner._dirtyTextAccumulator = undefined;\n                }\n                dismissKeyboardTimeoutId = setTimeout(function () {\n                    owner.dismissSoftInput();\n                    dismissKeyboardTimeoutId = null;\n                }, 1);\n            }\n        };\n        EditTextListenersImpl.prototype.onEditorAction = function (textView, actionId, event) {\n            var owner = this.owner;\n            if (!owner) {\n                return;\n            }\n            if (actionId === android.view.inputmethod.EditorInfo.IME_ACTION_DONE ||\n                actionId === android.view.inputmethod.EditorInfo.IME_ACTION_GO ||\n                actionId === android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH ||\n                actionId === android.view.inputmethod.EditorInfo.IME_ACTION_SEND ||\n                (event && event.getKeyCode() === android.view.KeyEvent.KEYCODE_ENTER)) {\n                if (textView.getMaxLines() === 1) {\n                    owner.dismissSoftInput();\n                }\n                owner._onReturnPress();\n            }\n            if (actionId === android.view.inputmethod.EditorInfo.IME_ACTION_NEXT) {\n                owner._onReturnPress();\n            }\n            return false;\n        };\n        return EditTextListenersImpl;\n    }(java.lang.Object));\n    EditTextListenersImpl = __decorate([\n        Interfaces([android.text.TextWatcher, android.view.View.OnFocusChangeListener, android.widget.TextView.OnEditorActionListener])\n    ], EditTextListenersImpl);\n    EditTextListeners = EditTextListenersImpl;\n}\nvar EditableTextBase = (function (_super) {\n    __extends(EditableTextBase, _super);\n    function EditableTextBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EditableTextBase.prototype.createNativeView = function () {\n        initializeEditTextListeners();\n        var editText = new android.widget.EditText(this._context);\n        this._configureEditText(editText);\n        var listeners = new EditTextListeners(this);\n        editText.addTextChangedListener(listeners);\n        editText.setOnFocusChangeListener(listeners);\n        editText.setOnEditorActionListener(listeners);\n        editText.listener = listeners;\n        return editText;\n    };\n    EditableTextBase.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = this;\n        this._keyListenerCache = nativeView.getKeyListener();\n    };\n    EditableTextBase.prototype._disposeNativeView = function (force) {\n        this.nativeView.listener.owner = null;\n    };\n    EditableTextBase.prototype.dismissSoftInput = function () {\n        utils_1.ad.dismissSoftInput(this.nativeView);\n    };\n    EditableTextBase.prototype.focus = function () {\n        var result = _super.prototype.focus.call(this);\n        if (result) {\n            utils_1.ad.showSoftInput(this.nativeView);\n        }\n        return result;\n    };\n    EditableTextBase.prototype._setInputType = function (inputType) {\n        var nativeView = this.nativeView;\n        nativeView.setInputType(inputType);\n        var listener = nativeView.getKeyListener();\n        if (listener) {\n            this._keyListenerCache = listener;\n        }\n        if (!this.editable) {\n            nativeView.setKeyListener(null);\n        }\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.textProperty.getDefault] = function () {\n        return this.nativeView.getText();\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.textProperty.setNative] = function (value) {\n        var text = (value === null || value === undefined) ? '' : value.toString();\n        this.nativeView.setText(text, android.widget.TextView.BufferType.EDITABLE);\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.keyboardTypeProperty.getDefault] = function () {\n        var inputType = this.nativeView.getInputType();\n        switch (inputType) {\n            case android.text.InputType.TYPE_CLASS_DATETIME | android.text.InputType.TYPE_DATETIME_VARIATION_NORMAL:\n                return \"datetime\";\n            case android.text.InputType.TYPE_CLASS_PHONE:\n                return \"phone\";\n            case android.text.InputType.TYPE_CLASS_NUMBER | android.text.InputType.TYPE_NUMBER_VARIATION_NORMAL | android.text.InputType.TYPE_NUMBER_FLAG_SIGNED | android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL:\n                return \"number\";\n            case android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_URI:\n                return \"url\";\n            case android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS:\n                return \"email\";\n            default:\n                return inputType.toString();\n        }\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.keyboardTypeProperty.setNative] = function (value) {\n        var newInputType;\n        switch (value) {\n            case \"datetime\":\n                newInputType = android.text.InputType.TYPE_CLASS_DATETIME | android.text.InputType.TYPE_DATETIME_VARIATION_NORMAL;\n                break;\n            case \"phone\":\n                newInputType = android.text.InputType.TYPE_CLASS_PHONE;\n                break;\n            case \"number\":\n                newInputType = android.text.InputType.TYPE_CLASS_NUMBER | android.text.InputType.TYPE_NUMBER_VARIATION_NORMAL | android.text.InputType.TYPE_NUMBER_FLAG_SIGNED | android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL;\n                break;\n            case \"url\":\n                newInputType = android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_URI;\n                break;\n            case \"email\":\n                newInputType = android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS;\n                break;\n            default:\n                var inputType = +value;\n                if (!isNaN(inputType)) {\n                    newInputType = inputType;\n                }\n                else {\n                    newInputType = android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_NORMAL;\n                }\n                break;\n        }\n        this._setInputType(newInputType);\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.returnKeyTypeProperty.getDefault] = function () {\n        var ime = this.nativeView.getImeOptions();\n        switch (ime) {\n            case android.view.inputmethod.EditorInfo.IME_ACTION_DONE:\n                return \"done\";\n            case android.view.inputmethod.EditorInfo.IME_ACTION_GO:\n                return \"go\";\n            case android.view.inputmethod.EditorInfo.IME_ACTION_NEXT:\n                return \"next\";\n            case android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH:\n                return \"search\";\n            case android.view.inputmethod.EditorInfo.IME_ACTION_SEND:\n                return \"send\";\n            default:\n                return ime.toString();\n        }\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.returnKeyTypeProperty.setNative] = function (value) {\n        var newImeOptions;\n        switch (value) {\n            case \"done\":\n                newImeOptions = android.view.inputmethod.EditorInfo.IME_ACTION_DONE;\n                break;\n            case \"go\":\n                newImeOptions = android.view.inputmethod.EditorInfo.IME_ACTION_GO;\n                break;\n            case \"next\":\n                newImeOptions = android.view.inputmethod.EditorInfo.IME_ACTION_NEXT;\n                break;\n            case \"search\":\n                newImeOptions = android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH;\n                break;\n            case \"send\":\n                newImeOptions = android.view.inputmethod.EditorInfo.IME_ACTION_SEND;\n                break;\n            default:\n                var ime = +value;\n                if (!isNaN(ime)) {\n                    newImeOptions = ime;\n                }\n                else {\n                    newImeOptions = android.view.inputmethod.EditorInfo.IME_ACTION_UNSPECIFIED;\n                }\n                break;\n        }\n        this.nativeView.setImeOptions(newImeOptions);\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.editableProperty.getDefault] = function () {\n        return true;\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.editableProperty.setNative] = function (value) {\n        if (value) {\n            this.nativeView.setKeyListener(this._keyListenerCache);\n        }\n        else {\n            this.nativeView.setKeyListener(null);\n        }\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.autocapitalizationTypeProperty.getDefault] = function () {\n        var inputType = this.nativeView.getInputType();\n        if ((inputType & android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS) === android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS) {\n            return \"words\";\n        }\n        else if ((inputType & android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES) === android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES) {\n            return \"sentences\";\n        }\n        else if ((inputType & android.text.InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS) === android.text.InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS) {\n            return \"allCharacters\";\n        }\n        else {\n            return inputType.toString();\n        }\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.autocapitalizationTypeProperty.setNative] = function (value) {\n        var inputType = this.nativeView.getInputType();\n        inputType = inputType & ~28672;\n        switch (value) {\n            case \"none\":\n                break;\n            case \"words\":\n                inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS;\n                break;\n            case \"sentences\":\n                inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES;\n                break;\n            case \"allCharacters\":\n                inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS;\n                break;\n            default:\n                var number = +value;\n                if (!isNaN(number)) {\n                    inputType = number;\n                }\n                else {\n                    inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES;\n                }\n                break;\n        }\n        this._setInputType(inputType);\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.autocorrectProperty.getDefault] = function () {\n        var autocorrect = this.nativeView.getInputType();\n        if ((autocorrect & android.text.InputType.TYPE_TEXT_FLAG_AUTO_CORRECT) === android.text.InputType.TYPE_TEXT_FLAG_AUTO_CORRECT) {\n            return true;\n        }\n        return false;\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.autocorrectProperty.setNative] = function (value) {\n        var inputType = this.nativeView.getInputType();\n        switch (value) {\n            case true:\n                inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_AUTO_COMPLETE;\n                inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_AUTO_CORRECT;\n                inputType = inputType & ~android.text.InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS;\n                break;\n            case false:\n                inputType = inputType & ~android.text.InputType.TYPE_TEXT_FLAG_AUTO_COMPLETE;\n                inputType = inputType & ~android.text.InputType.TYPE_TEXT_FLAG_AUTO_CORRECT;\n                inputType = inputType | android.text.InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS;\n                break;\n            default:\n                break;\n        }\n        this._setInputType(inputType);\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.hintProperty.getDefault] = function () {\n        return this.nativeView.getHint();\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.hintProperty.setNative] = function (value) {\n        this.nativeView.setHint(value + '');\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.placeholderColorProperty.getDefault] = function () {\n        return this.nativeView.getHintTextColors();\n    };\n    EditableTextBase.prototype[editable_text_base_common_1.placeholderColorProperty.setNative] = function (value) {\n        if (value instanceof editable_text_base_common_1.Color) {\n            this.nativeView.setHintTextColor(value.android);\n        }\n        else {\n            this.nativeView.setHintTextColor(value);\n        }\n    };\n    return EditableTextBase;\n}(editable_text_base_common_1.EditableTextBase));\nexports.EditableTextBase = EditableTextBase;\n//# sourceMappingURL=editable-text-base.android.js.map"
    },
    {
      "id": 66,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
      "name": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
      "index": 168,
      "index2": 162,
      "size": 1004,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/stack-layout",
          "loc": "74:52-103"
        },
        {
          "moduleId": 257,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "type": "cjs require",
          "userRequest": "../layouts/stack-layout",
          "loc": "6:21-55"
        },
        {
          "moduleId": 259,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
          "module": "./~/tns-core-modules/ui/repeater/repeater.js",
          "moduleName": "./~/tns-core-modules/ui/repeater/repeater.js",
          "type": "cjs require",
          "userRequest": "../layouts/stack-layout",
          "loc": "7:21-55"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stack_layout_common_1 = require(\"./stack-layout-common\");\n__export(require(\"./stack-layout-common\"));\nvar StackLayout = (function (_super) {\n    __extends(StackLayout, _super);\n    function StackLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StackLayout.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.StackLayout(this._context);\n    };\n    StackLayout.prototype[stack_layout_common_1.orientationProperty.setNative] = function (value) {\n        this.nativeView.setOrientation(value === \"vertical\" ? org.nativescript.widgets.Orientation.vertical : org.nativescript.widgets.Orientation.horizontal);\n    };\n    return StackLayout;\n}(stack_layout_common_1.StackLayoutBase));\nexports.StackLayout = StackLayout;\n//# sourceMappingURL=stack-layout.android.js.map"
    },
    {
      "id": 67,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/placeholder/placeholder.android.js",
      "name": "./~/tns-core-modules/ui/placeholder/placeholder.android.js",
      "index": 171,
      "index2": 165,
      "size": 694,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "ui/placeholder",
          "loc": "86:53-78"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "ui/placeholder",
          "loc": "87:48-73"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/placeholder",
          "loc": "65:52-94"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\nvar Placeholder = (function (_super) {\n    __extends(Placeholder, _super);\n    function Placeholder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Placeholder.prototype.createNativeView = function () {\n        var args = { eventName: Placeholder.creatingViewEvent, object: this, view: undefined, context: this._context };\n        this.notify(args);\n        return args.view;\n    };\n    return Placeholder;\n}(view_1.View));\nPlaceholder.creatingViewEvent = \"creatingView\";\nexports.Placeholder = Placeholder;\n//# sourceMappingURL=placeholder.android.js.map"
    },
    {
      "id": 68,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/proxy-view-container/proxy-view-container.js",
      "name": "./~/tns-core-modules/ui/proxy-view-container/proxy-view-container.js",
      "index": 170,
      "index2": 163,
      "size": 4839,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/proxy-view-container",
          "loc": "67:59-110"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/proxy-view-container",
          "loc": "85:58-109"
        },
        {
          "moduleId": 257,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "type": "cjs require",
          "userRequest": "../proxy-view-container",
          "loc": "7:29-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layouts/layout-base\");\nvar ProxyViewContainer = (function (_super) {\n    __extends(ProxyViewContainer, _super);\n    function ProxyViewContainer() {\n        var _this = _super.call(this) || this;\n        _this.nativeView = undefined;\n        return _this;\n    }\n    Object.defineProperty(ProxyViewContainer.prototype, \"ios\", {\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyViewContainer.prototype, \"android\", {\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProxyViewContainer.prototype, \"isLayoutRequested\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProxyViewContainer.prototype.createNativeView = function () {\n        return undefined;\n    };\n    ProxyViewContainer.prototype._getNativeViewsCount = function () {\n        var result = 0;\n        this.eachChildView(function (cv) {\n            result += cv._getNativeViewsCount();\n            return true;\n        });\n        return result;\n    };\n    ProxyViewContainer.prototype._eachLayoutView = function (callback) {\n        this.eachChildView(function (cv) {\n            if (!cv.isCollapsed) {\n                cv._eachLayoutView(callback);\n            }\n            return true;\n        });\n    };\n    ProxyViewContainer.prototype._addViewToNativeVisualTree = function (child, atIndex) {\n        if (layout_base_1.traceEnabled()) {\n            layout_base_1.traceWrite(\"ViewContainer._addViewToNativeVisualTree for a child \" + child + \" ViewContainer.parent: \" + this.parent, layout_base_1.traceCategories.ViewHierarchy);\n        }\n        _super.prototype._addViewToNativeVisualTree.call(this, child);\n        var parent = this.parent;\n        if (parent instanceof layout_base_1.View) {\n            var baseIndex = 0;\n            var insideIndex = 0;\n            if (parent instanceof layout_base_1.LayoutBase) {\n                baseIndex = parent._childIndexToNativeChildIndex(parent.getChildIndex(this));\n            }\n            if (atIndex !== undefined) {\n                insideIndex = this._childIndexToNativeChildIndex(atIndex);\n            }\n            else {\n                insideIndex = this._getNativeViewsCount();\n            }\n            if (layout_base_1.traceEnabled()) {\n                layout_base_1.traceWrite(\"ProxyViewContainer._addViewToNativeVisualTree at: \" + atIndex + \" base: \" + baseIndex + \" additional: \" + insideIndex, layout_base_1.traceCategories.ViewHierarchy);\n            }\n            return parent._addViewToNativeVisualTree(child, baseIndex + insideIndex);\n        }\n        return false;\n    };\n    ProxyViewContainer.prototype._removeViewFromNativeVisualTree = function (child) {\n        if (layout_base_1.traceEnabled()) {\n            layout_base_1.traceWrite(\"ProxyViewContainer._removeViewFromNativeVisualTree for a child \" + child + \" ViewContainer.parent: \" + this.parent, layout_base_1.traceCategories.ViewHierarchy);\n        }\n        _super.prototype._removeViewFromNativeVisualTree.call(this, child);\n        var parent = this.parent;\n        if (parent instanceof layout_base_1.View) {\n            return parent._removeViewFromNativeVisualTree(child);\n        }\n    };\n    ProxyViewContainer.prototype._registerLayoutChild = function (child) {\n        var parent = this.parent;\n        if (parent instanceof layout_base_1.LayoutBase) {\n            parent._registerLayoutChild(child);\n        }\n    };\n    ProxyViewContainer.prototype._unregisterLayoutChild = function (child) {\n        var parent = this.parent;\n        if (parent instanceof layout_base_1.LayoutBase) {\n            parent._unregisterLayoutChild(child);\n        }\n    };\n    ProxyViewContainer.prototype._parentChanged = function (oldParent) {\n        _super.prototype._parentChanged.call(this, oldParent);\n        var addingToParent = this.parent && !oldParent;\n        var newLayout = this.parent;\n        var oldLayout = oldParent;\n        if (addingToParent && newLayout instanceof layout_base_1.LayoutBase) {\n            this.eachChildView(function (child) {\n                newLayout._registerLayoutChild(child);\n                return true;\n            });\n        }\n        else if (oldLayout instanceof layout_base_1.LayoutBase) {\n            this.eachChildView(function (child) {\n                oldLayout._unregisterLayoutChild(child);\n                return true;\n            });\n        }\n    };\n    return ProxyViewContainer;\n}(layout_base_1.LayoutBase));\nexports.ProxyViewContainer = ProxyViewContainer;\n//# sourceMappingURL=proxy-view-container.js.map"
    },
    {
      "id": 69,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/debug.android.js",
      "name": "./~/tns-core-modules/utils/debug.android.js",
      "index": 38,
      "index2": 29,
      "size": 1258,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
      "issuerId": 127,
      "issuerName": "./~/tns-core-modules/ui/core/view/view-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "../../utils/debug",
          "loc": "2:14-42"
        },
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "../../../utils/debug",
          "loc": "6:14-45"
        },
        {
          "moduleId": 248,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "module": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "type": "cjs require",
          "userRequest": "utils/debug",
          "loc": "50:20-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./debug-common\"));\nvar ScopeError = (function (_super) {\n    __extends(ScopeError, _super);\n    function ScopeError(inner, message) {\n        var _this = this;\n        var formattedMessage;\n        if (message && inner.message) {\n            formattedMessage = message + \"\\n > \" + inner.message.replace(\"\\n\", \"\\n  \");\n        }\n        else {\n            formattedMessage = message || inner.message || undefined;\n        }\n        _this = _super.call(this, formattedMessage) || this;\n        _this.stack = \"Error: \" + _this.message + \"\\n\" + inner.stack.substr(inner.stack.indexOf(\"\\n\") + 1);\n        _this.message = formattedMessage;\n        return _this;\n    }\n    return ScopeError;\n}(Error));\nexports.ScopeError = ScopeError;\nvar SourceError = (function (_super) {\n    __extends(SourceError, _super);\n    function SourceError(child, source, message) {\n        return _super.call(this, child, message ? message + \" @\" + source + \"\" : source + \"\") || this;\n    }\n    return SourceError;\n}(ScopeError));\nexports.SourceError = SourceError;\n//# sourceMappingURL=debug.android.js.map"
    },
    {
      "id": 70,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/lazy.js",
      "name": "./~/tns-core-modules/utils/lazy.js",
      "index": 55,
      "index2": 41,
      "size": 227,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
      "issuerId": 44,
      "issuerName": "./~/tns-core-modules/ui/transition/transition.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 42,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
          "module": "./~/tns-core-modules/ui/animation/animation.android.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/lazy",
          "loc": "8:13-40"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/lazy",
          "loc": "5:13-40"
        },
        {
          "moduleId": 272,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/slide-transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
          "type": "cjs require",
          "userRequest": "../../utils/lazy",
          "loc": "4:13-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction lazy(action) {\n    var _value;\n    return function () { return _value || (_value = action()); };\n}\nexports.default = lazy;\n//# sourceMappingURL=lazy.js.map"
    },
    {
      "id": 71,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/xhr/xhr.js",
      "name": "./~/tns-core-modules/xhr/xhr.js",
      "index": 83,
      "index2": 79,
      "size": 11351,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "issuerId": 62,
      "issuerName": "./~/tns-core-modules/globals/globals.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "xhr",
          "loc": "48:50-64"
        },
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "xhr",
          "loc": "76:14-28"
        },
        {
          "moduleId": 114,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/fetch/fetch.js",
          "module": "./~/tns-core-modules/fetch/fetch.js",
          "moduleName": "./~/tns-core-modules/fetch/fetch.js",
          "type": "cjs require",
          "userRequest": "xhr",
          "loc": "8:18-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar http = require(\"../http\");\nvar types = require(\"../utils/types\");\nvar XMLHttpRequestResponseType;\n(function (XMLHttpRequestResponseType) {\n    XMLHttpRequestResponseType.empty = \"\";\n    XMLHttpRequestResponseType.text = \"text\";\n    XMLHttpRequestResponseType.json = \"json\";\n})(XMLHttpRequestResponseType || (XMLHttpRequestResponseType = {}));\nvar XMLHttpRequest = (function () {\n    function XMLHttpRequest() {\n        this.UNSENT = 0;\n        this.OPENED = 1;\n        this.HEADERS_RECEIVED = 2;\n        this.LOADING = 3;\n        this.DONE = 4;\n        this._responseType = \"\";\n        this.textTypes = [\n            'text/plain',\n            'application/xml',\n            'text/html'\n        ];\n        this._listeners = new Map();\n        this._readyState = this.UNSENT;\n    }\n    XMLHttpRequest.prototype.open = function (method, url, async, user, password) {\n        if (types.isString(method) && types.isString(url)) {\n            this._options = { url: url, method: method };\n            this._options.headers = {};\n            if (types.isString(user)) {\n                this._options.headers[\"user\"] = user;\n            }\n            if (types.isString(password)) {\n                this._options.headers[\"password\"] = password;\n            }\n            this._setReadyState(this.OPENED);\n        }\n    };\n    XMLHttpRequest.prototype.abort = function () {\n        this._errorFlag = true;\n        this._response = null;\n        this._responseTextReader = null;\n        this._headers = null;\n        this._status = null;\n        if (this._readyState === this.UNSENT || this._readyState === this.OPENED || this._readyState === this.DONE) {\n            this._readyState = this.UNSENT;\n        }\n        else {\n            this._setReadyState(this.DONE);\n        }\n    };\n    XMLHttpRequest.prototype.send = function (data) {\n        var _this = this;\n        this._errorFlag = false;\n        this._response = null;\n        this._responseTextReader = null;\n        this._headers = null;\n        this._status = null;\n        if (types.isDefined(this._options)) {\n            if (types.isString(data) && this._options.method !== 'GET') {\n                this._options.content = data;\n            }\n            else if (data instanceof FormData) {\n                this._options.content = data.toString();\n            }\n            http.request(this._options).then(function (r) {\n                if (!_this._errorFlag) {\n                    _this._loadResponse(r);\n                }\n            }).catch(function (e) {\n                _this._errorFlag = true;\n                _this._setReadyState(_this.DONE, e);\n            });\n        }\n    };\n    XMLHttpRequest.prototype._loadResponse = function (r) {\n        this._status = r.statusCode;\n        this._response = r.content.raw + \"\";\n        this._headers = r.headers;\n        this._setReadyState(this.HEADERS_RECEIVED);\n        this._setReadyState(this.LOADING);\n        this._setResponseType();\n        this._responseTextReader = function () { return r.content.toString(); };\n        this._addToStringOnResponse();\n        if (this.responseType === XMLHttpRequestResponseType.json) {\n            this._response = JSON.parse(this.responseText);\n        }\n        else if (this.responseType === XMLHttpRequestResponseType.text) {\n            this._response = this.responseText;\n        }\n        this._setReadyState(this.DONE);\n    };\n    XMLHttpRequest.prototype._addToStringOnResponse = function () {\n        var _this = this;\n        if (types.isObject(this.response)) {\n            Object.defineProperty(this._response, \"toString\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: function () { return _this.responseText; }\n            });\n        }\n    };\n    XMLHttpRequest.prototype.isTextContentType = function (contentType) {\n        var result = false;\n        for (var i = 0; i < this.textTypes.length; i++) {\n            if (contentType.toLowerCase().indexOf(this.textTypes[i]) >= 0) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    };\n    XMLHttpRequest.prototype._setResponseType = function () {\n        var header = this.getResponseHeader('Content-Type');\n        var contentType = header && header.toLowerCase();\n        if (contentType) {\n            if (contentType.indexOf('application/json') >= 0 || contentType.indexOf('+json') >= 0) {\n                this.responseType = XMLHttpRequestResponseType.json;\n            }\n            else if (this.isTextContentType(contentType)) {\n                this.responseType = XMLHttpRequestResponseType.text;\n            }\n        }\n        else {\n            this.responseType = XMLHttpRequestResponseType.text;\n        }\n    };\n    XMLHttpRequest.prototype.addEventListener = function (eventName, handler) {\n        if (eventName !== 'load' && eventName !== 'error') {\n            throw new Error('Event not supported: ' + eventName);\n        }\n        var handlers = this._listeners.get(eventName) || [];\n        handlers.push(handler);\n        this._listeners.set(eventName, handlers);\n    };\n    XMLHttpRequest.prototype.removeEventListener = function (eventName, toDetach) {\n        var handlers = this._listeners.get(eventName) || [];\n        handlers = handlers.filter(function (handler) { return handler !== toDetach; });\n        this._listeners.set(eventName, handlers);\n    };\n    XMLHttpRequest.prototype.emitEvent = function (eventName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var handlers = this._listeners.get(eventName) || [];\n        handlers.forEach(function (handler) {\n            handler.apply(void 0, args);\n        });\n    };\n    XMLHttpRequest.prototype.setRequestHeader = function (header, value) {\n        if (types.isDefined(this._options) && types.isString(header) && types.isString(value)) {\n            this._options.headers[header] = value;\n        }\n    };\n    XMLHttpRequest.prototype.getAllResponseHeaders = function () {\n        if (this._readyState < 2 || this._errorFlag) {\n            return \"\";\n        }\n        var result = \"\";\n        for (var i in this._headers) {\n            if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n                result += i + \": \" + this._headers[i] + \"\\r\\n\";\n            }\n        }\n        return result.substr(0, result.length - 2);\n    };\n    XMLHttpRequest.prototype.getResponseHeader = function (header) {\n        if (types.isString(header) && this._readyState > 1\n            && this._headers\n            && !this._errorFlag) {\n            header = header.toLowerCase();\n            for (var i in this._headers) {\n                if (i.toLowerCase() === header) {\n                    return this._headers[i];\n                }\n            }\n        }\n        return null;\n    };\n    XMLHttpRequest.prototype.overrideMimeType = function (mime) {\n    };\n    Object.defineProperty(XMLHttpRequest.prototype, \"readyState\", {\n        get: function () {\n            return this._readyState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XMLHttpRequest.prototype, \"responseType\", {\n        get: function () {\n            return this._responseType;\n        },\n        set: function (value) {\n            if (value === XMLHttpRequestResponseType.empty || value in XMLHttpRequestResponseType) {\n                this._responseType = value;\n            }\n            else {\n                throw new Error(\"Response type of '\" + value + \"' not supported.\");\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XMLHttpRequest.prototype._setReadyState = function (value, error) {\n        if (this._readyState !== value) {\n            this._readyState = value;\n            if (types.isFunction(this.onreadystatechange)) {\n                this.onreadystatechange();\n            }\n        }\n        if (this._readyState === this.DONE) {\n            if (this._errorFlag) {\n                if (types.isFunction(this.onerror)) {\n                    this.onerror(error);\n                }\n                this.emitEvent('error', error);\n            }\n            else {\n                if (types.isFunction(this.onload)) {\n                    this.onload();\n                }\n                this.emitEvent('load');\n            }\n        }\n    };\n    Object.defineProperty(XMLHttpRequest.prototype, \"responseText\", {\n        get: function () {\n            if (types.isFunction(this._responseTextReader)) {\n                return this._responseTextReader();\n            }\n            return \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XMLHttpRequest.prototype, \"response\", {\n        get: function () {\n            return this._response;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XMLHttpRequest.prototype, \"status\", {\n        get: function () {\n            return this._status;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XMLHttpRequest.prototype, \"statusText\", {\n        get: function () {\n            if (this._readyState === this.UNSENT || this._readyState === this.OPENED || this._errorFlag) {\n                return \"\";\n            }\n            return statuses[this._status];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return XMLHttpRequest;\n}());\nexports.XMLHttpRequest = XMLHttpRequest;\nvar statuses = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non - Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    300: \"Multiple Choices\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request - URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\nvar FormData = (function () {\n    function FormData() {\n        this._data = new Map();\n    }\n    FormData.prototype.append = function (name, value) {\n        this._data.set(name, value);\n    };\n    FormData.prototype.toString = function () {\n        var arr = new Array();\n        this._data.forEach(function (value, name, map) {\n            arr.push(encodeURIComponent(name) + \"=\" + encodeURIComponent(value));\n        });\n        return arr.join(\"&\");\n    };\n    return FormData;\n}());\nexports.FormData = FormData;\n//# sourceMappingURL=xhr.js.map"
    },
    {
      "id": 72,
      "identifier": "/home/svlaeva@bedford.progress.com/chart async",
      "name": ". async",
      "index": 125,
      "index2": 121,
      "size": 160,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
      "issuerId": 1,
      "issuerName": "./~/@angular/core/@angular/core.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
          "module": "./~/@angular/core/@angular/core.es5.js",
          "moduleName": "./~/@angular/core/@angular/core.es5.js",
          "type": "import() context",
          "userRequest": ".",
          "loc": "5870:15-36"
        },
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
          "module": "./~/@angular/core/@angular/core.es5.js",
          "moduleName": "./~/@angular/core/@angular/core.es5.js",
          "type": "import() context",
          "userRequest": ".",
          "loc": "5886:15-102"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2
    },
    {
      "id": 73,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/utils.js",
      "name": "./~/nativescript-angular/common/utils.js",
      "index": 201,
      "index2": 196,
      "size": 617,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
      "issuerId": 87,
      "issuerName": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 78,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/tab-view.js",
          "module": "./~/nativescript-angular/directives/tab-view.js",
          "moduleName": "./~/nativescript-angular/directives/tab-view.js",
          "type": "cjs require",
          "userRequest": "../common/utils",
          "loc": "4:14-40"
        },
        {
          "moduleId": 87,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "module": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "moduleName": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
          "type": "cjs require",
          "userRequest": "../common/utils",
          "loc": "5:14-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar lang_facade_1 = require(\"../lang-facade\");\nfunction convertToInt(value) {\n    var normalizedValue;\n    if (lang_facade_1.isBlank(value)) {\n        normalizedValue = 0;\n    }\n    else {\n        if (lang_facade_1.isNumber(value)) {\n            normalizedValue = value;\n        }\n        else {\n            var parsedValue = parseInt(value.toString(), 10);\n            normalizedValue = isNaN(parsedValue) ? 0 : parsedValue;\n        }\n    }\n    return Math.round(normalizedValue);\n}\nexports.convertToInt = convertToInt;\n//# sourceMappingURL=utils.js.map"
    },
    {
      "id": 74,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/action-bar.js",
      "name": "./~/nativescript-angular/directives/action-bar.js",
      "index": 202,
      "index2": 198,
      "size": 5543,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
      "issuerId": 177,
      "issuerName": "./~/nativescript-angular/directives.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/action-bar",
          "loc": "4:19-53"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/action-bar",
          "loc": "36:19-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar action_bar_1 = require(\"tns-core-modules/ui/action-bar\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar page_1 = require(\"tns-core-modules/ui/page\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar element_registry_1 = require(\"../element-registry\");\nvar actionBarMeta = {\n    skipAddToDom: true,\n    insertChild: function (parent, child, atIndex) {\n        var bar = parent;\n        var childView = child;\n        if (child instanceof action_bar_1.NavigationButton) {\n            bar.navigationButton = childView;\n            childView.parent = bar;\n        }\n        else if (child instanceof action_bar_1.ActionItem) {\n            bar.actionItems.addItem(childView);\n            childView.parent = bar;\n        }\n        else if (child.nodeName === \"#comment\") {\n            bar._addView(childView, atIndex);\n        }\n        else if (child instanceof view_1.View) {\n            bar.titleView = childView;\n        }\n    },\n    removeChild: function (parent, child) {\n        var bar = parent;\n        var childView = child;\n        if (child instanceof action_bar_1.NavigationButton) {\n            if (bar.navigationButton === childView) {\n                bar.navigationButton = null;\n            }\n            childView.parent = null;\n        }\n        else if (child instanceof action_bar_1.ActionItem) {\n            bar.actionItems.removeItem(childView);\n            childView.parent = null;\n        }\n        else if (child instanceof view_1.View && bar.titleView && bar.titleView === childView) {\n            bar.titleView = null;\n        }\n    },\n};\nelement_registry_1.registerElement(\"ActionBar\", function () { return require(\"ui/action-bar\").ActionBar; }, actionBarMeta);\nelement_registry_1.registerElement(\"ActionItem\", function () { return require(\"ui/action-bar\").ActionItem; });\nelement_registry_1.registerElement(\"NavigationButton\", function () { return require(\"ui/action-bar\").NavigationButton; });\nvar ActionBarComponent = (function () {\n    function ActionBarComponent(element, page) {\n        this.element = element;\n        this.page = page;\n        if (lang_facade_1.isBlank(this.page.actionBarHidden)) {\n            this.page.actionBarHidden = false;\n        }\n        this.page.actionBar = this.element.nativeElement;\n        this.page.actionBar.update();\n    }\n    return ActionBarComponent;\n}());\nActionBarComponent = __decorate([\n    core_1.Component({\n        selector: \"ActionBar\",\n        template: \"<ng-content></ng-content>\"\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef, page_1.Page])\n], ActionBarComponent);\nexports.ActionBarComponent = ActionBarComponent;\nvar ActionBarScope = (function () {\n    function ActionBarScope(page) {\n        this.page = page;\n    }\n    ActionBarScope.prototype.onNavButtonInit = function (navBtn) {\n        this.page.actionBar.navigationButton = navBtn.element.nativeElement;\n    };\n    ActionBarScope.prototype.onNavButtonDestroy = function (navBtn) {\n        var nav = navBtn.element.nativeElement;\n        if (nav && this.page.actionBar.navigationButton === nav) {\n            this.page.actionBar.navigationButton = null;\n        }\n    };\n    ActionBarScope.prototype.onActionInit = function (item) {\n        this.page.actionBar.actionItems.addItem(item.element.nativeElement);\n    };\n    ActionBarScope.prototype.onActionDestroy = function (item) {\n        if (item.element.nativeElement.actionBar) {\n            this.page.actionBar.actionItems.removeItem(item.element.nativeElement);\n        }\n    };\n    return ActionBarScope;\n}());\nActionBarScope = __decorate([\n    core_1.Component({\n        selector: \"ActionBarExtension\",\n        template: \"\"\n    }),\n    __metadata(\"design:paramtypes\", [page_1.Page])\n], ActionBarScope);\nexports.ActionBarScope = ActionBarScope;\nvar ActionItemDirective = (function () {\n    function ActionItemDirective(element, ownerScope) {\n        this.element = element;\n        this.ownerScope = ownerScope;\n        if (this.ownerScope) {\n            this.ownerScope.onActionInit(this);\n        }\n    }\n    ActionItemDirective.prototype.ngOnDestroy = function () {\n        if (this.ownerScope) {\n            this.ownerScope.onActionDestroy(this);\n        }\n    };\n    return ActionItemDirective;\n}());\nActionItemDirective = __decorate([\n    core_1.Directive({\n        selector: \"ActionItem\" // tslint:disable-line:directive-selector\n    }),\n    __param(1, core_1.Optional()),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef, ActionBarScope])\n], ActionItemDirective);\nexports.ActionItemDirective = ActionItemDirective;\nvar NavigationButtonDirective = (function () {\n    function NavigationButtonDirective(element, ownerScope) {\n        this.element = element;\n        this.ownerScope = ownerScope;\n        if (this.ownerScope) {\n            this.ownerScope.onNavButtonInit(this);\n        }\n    }\n    NavigationButtonDirective.prototype.ngOnDestroy = function () {\n        if (this.ownerScope) {\n            this.ownerScope.onNavButtonDestroy(this);\n        }\n    };\n    return NavigationButtonDirective;\n}());\nNavigationButtonDirective = __decorate([\n    core_1.Directive({\n        selector: \"NavigationButton\" // tslint:disable-line:directive-selector\n    }),\n    __param(1, core_1.Optional()),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef, ActionBarScope])\n], NavigationButtonDirective);\nexports.NavigationButtonDirective = NavigationButtonDirective;\n//# sourceMappingURL=action-bar.js.map"
    },
    {
      "id": 75,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/dialogs.js",
      "name": "./~/nativescript-angular/directives/dialogs.js",
      "index": 196,
      "index2": 193,
      "size": 3842,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./directives/dialogs",
          "loc": "12:16-47"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/directives/dialogs",
          "loc": "15:14-64"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar page_1 = require(\"tns-core-modules/ui/page\");\nvar detached_loader_1 = require(\"../common/detached-loader\");\nvar platform_providers_1 = require(\"../platform-providers\");\nvar ModalDialogParams = (function () {\n    function ModalDialogParams(context, closeCallback) {\n        if (context === void 0) { context = {}; }\n        this.context = context;\n        this.closeCallback = closeCallback;\n    }\n    return ModalDialogParams;\n}());\nexports.ModalDialogParams = ModalDialogParams;\nvar ModalDialogService = ModalDialogService_1 = (function () {\n    function ModalDialogService() {\n    }\n    ModalDialogService.prototype.showModal = function (type, options) {\n        if (!options.viewContainerRef) {\n            throw new Error(\"No viewContainerRef: Make sure you pass viewContainerRef in ModalDialogOptions.\");\n        }\n        var viewContainerRef = options.viewContainerRef;\n        var parentPage = viewContainerRef.injector.get(page_1.Page);\n        var resolver = viewContainerRef.injector.get(core_1.ComponentFactoryResolver);\n        var pageFactory = viewContainerRef.injector.get(platform_providers_1.PAGE_FACTORY);\n        return new Promise(function (resolve) {\n            setTimeout(function () { return ModalDialogService_1.showDialog(type, options, resolve, viewContainerRef, resolver, parentPage, pageFactory); }, 10);\n        });\n    };\n    ModalDialogService.showDialog = function (type, options, doneCallback, containerRef, resolver, parentPage, pageFactory) {\n        var page = pageFactory({ isModal: true, componentType: type });\n        var detachedLoaderRef;\n        var closeCallback = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            doneCallback.apply(undefined, args);\n            page.closeModal();\n            detachedLoaderRef.instance.detectChanges();\n            detachedLoaderRef.destroy();\n        };\n        var modalParams = new ModalDialogParams(options.context, closeCallback);\n        var providers = core_1.ReflectiveInjector.resolve([\n            { provide: page_1.Page, useValue: page },\n            { provide: ModalDialogParams, useValue: modalParams },\n        ]);\n        var childInjector = core_1.ReflectiveInjector.fromResolvedProviders(providers, containerRef.parentInjector);\n        var detachedFactory = resolver.resolveComponentFactory(detached_loader_1.DetachedLoader);\n        detachedLoaderRef = containerRef.createComponent(detachedFactory, -1, childInjector, null);\n        detachedLoaderRef.instance.loadComponent(type).then(function (compRef) {\n            var componentView = compRef.location.nativeElement;\n            if (componentView.parent) {\n                componentView.parent.removeChild(componentView);\n            }\n            page.content = componentView;\n            parentPage.showModal(page, options.context, closeCallback, options.fullscreen);\n        });\n    };\n    return ModalDialogService;\n}());\nModalDialogService = ModalDialogService_1 = __decorate([\n    core_1.Injectable()\n], ModalDialogService);\nexports.ModalDialogService = ModalDialogService;\nvar ModalDialogHost = (function () {\n    function ModalDialogHost() {\n        throw new Error(\"ModalDialogHost is deprecated. Call ModalDialogService.showModal() \" +\n            \"by passing ViewContainerRef in the options instead.\");\n    }\n    return ModalDialogHost;\n}());\nModalDialogHost = __decorate([\n    core_1.Directive({\n        selector: \"[modal-dialog-host]\" // tslint:disable-line:directive-selector\n    }),\n    __metadata(\"design:paramtypes\", [])\n], ModalDialogHost);\nexports.ModalDialogHost = ModalDialogHost;\nvar ModalDialogService_1;\n//# sourceMappingURL=dialogs.js.map"
    },
    {
      "id": 76,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
      "name": "./~/nativescript-angular/directives/list-view-comp.js",
      "index": 198,
      "index2": 195,
      "size": 9379,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
      "issuerId": 177,
      "issuerName": "./~/nativescript-angular/directives.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/list-view-comp",
          "loc": "2:23-61"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/list-view-comp",
          "loc": "18:23-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar collection_facade_1 = require(\"../collection-facade\");\nvar observable_array_1 = require(\"tns-core-modules/data/observable-array\");\nvar layout_base_1 = require(\"tns-core-modules/ui/layouts/layout-base\");\nvar trace_1 = require(\"../trace\");\nvar NG_VIEW = \"_ngViewRef\";\nvar ListItemContext = (function () {\n    function ListItemContext($implicit, item, index, even, odd) {\n        this.$implicit = $implicit;\n        this.item = item;\n        this.index = index;\n        this.even = even;\n        this.odd = odd;\n    }\n    return ListItemContext;\n}());\nexports.ListItemContext = ListItemContext;\nvar ListViewComponent = (function () {\n    function ListViewComponent(_elementRef, _iterableDiffers, _cdr) {\n        this._iterableDiffers = _iterableDiffers;\n        this._cdr = _cdr;\n        this.setupItemView = new core_1.EventEmitter();\n        this.listView = _elementRef.nativeElement;\n        this.listView.on(\"itemLoading\", this.onItemLoading, this);\n    }\n    Object.defineProperty(ListViewComponent.prototype, \"nativeElement\", {\n        get: function () {\n            return this.listView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListViewComponent.prototype, \"items\", {\n        get: function () {\n            return this._items;\n        },\n        set: function (value) {\n            this._items = value;\n            var needDiffer = true;\n            if (value instanceof observable_array_1.ObservableArray) {\n                needDiffer = false;\n            }\n            if (needDiffer && !this._differ && collection_facade_1.isListLikeIterable(value)) {\n                this._differ = this._iterableDiffers.find(this._items)\n                    .create(this._cdr, function (_index, item) { return item; });\n            }\n            this.listView.items = this._items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ListViewComponent.prototype.ngAfterContentInit = function () {\n        trace_1.listViewLog(\"ListView.ngAfterContentInit()\");\n        this.setItemTemplates();\n    };\n    ListViewComponent.prototype.ngOnDestroy = function () {\n        this.listView.off(\"itemLoading\", this.onItemLoading, this);\n    };\n    ListViewComponent.prototype.setItemTemplates = function () {\n        // The itemTemplateQuery may be changed after list items are added that contain <template> inside,\n        // so cache and use only the original template to avoid errors.\n        this.itemTemplate = this.itemTemplateQuery;\n        if (this._templateMap) {\n            trace_1.listViewLog(\"Setting templates\");\n            var templates_1 = [];\n            this._templateMap.forEach(function (value) {\n                templates_1.push(value);\n            });\n            this.listView.itemTemplates = templates_1;\n        }\n    };\n    ListViewComponent.prototype.registerTemplate = function (key, template) {\n        var _this = this;\n        trace_1.listViewLog(\"registerTemplate for key: \" + key);\n        if (!this._templateMap) {\n            this._templateMap = new Map();\n        }\n        var keyedTemplate = {\n            key: key,\n            createView: function () {\n                trace_1.listViewLog(\"registerTemplate for key: \" + key);\n                var viewRef = _this.loader.createEmbeddedView(template, new ListItemContext(), 0);\n                var resultView = getItemViewRoot(viewRef);\n                resultView[NG_VIEW] = viewRef;\n                return resultView;\n            }\n        };\n        this._templateMap.set(key, keyedTemplate);\n    };\n    ListViewComponent.prototype.onItemLoading = function (args) {\n        if (!args.view && !this.itemTemplate) {\n            return;\n        }\n        var index = args.index;\n        var items = args.object.items;\n        var currentItem = typeof items.getItem === \"function\" ? items.getItem(index) : items[index];\n        var viewRef;\n        if (args.view) {\n            trace_1.listViewLog(\"onItemLoading: \" + index + \" - Reusing existing view\");\n            viewRef = args.view[NG_VIEW];\n            // Getting angular view from original element (in cases when ProxyViewContainer\n            // is used NativeScript internally wraps it in a StackLayout)\n            if (!viewRef && args.view instanceof layout_base_1.LayoutBase && args.view.getChildrenCount() > 0) {\n                viewRef = args.view.getChildAt(0)[NG_VIEW];\n            }\n            if (!viewRef) {\n                trace_1.listViewError(\"ViewReference not found for item \" + index + \". View recycling is not working\");\n            }\n        }\n        ;\n        if (!viewRef) {\n            trace_1.listViewLog(\"onItemLoading: \" + index + \" - Creating view from template\");\n            viewRef = this.loader.createEmbeddedView(this.itemTemplate, new ListItemContext(), 0);\n            args.view = getItemViewRoot(viewRef);\n            args.view[NG_VIEW] = viewRef;\n        }\n        this.setupViewRef(viewRef, currentItem, index);\n        this.detectChangesOnChild(viewRef, index);\n    };\n    ListViewComponent.prototype.setupViewRef = function (viewRef, data, index) {\n        var context = viewRef.context;\n        context.$implicit = data;\n        context.item = data;\n        context.index = index;\n        context.even = (index % 2 === 0);\n        context.odd = !context.even;\n        this.setupItemView.next({ view: viewRef, data: data, index: index, context: context });\n    };\n    ListViewComponent.prototype.detectChangesOnChild = function (viewRef, index) {\n        trace_1.listViewLog(\"Manually detect changes in child: \" + index);\n        viewRef.markForCheck();\n        viewRef.detectChanges();\n    };\n    ListViewComponent.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            trace_1.listViewLog(\"ngDoCheck() - execute differ\");\n            var changes = this._differ.diff(this._items);\n            if (changes) {\n                trace_1.listViewLog(\"ngDoCheck() - refresh\");\n                this.listView.refresh();\n            }\n        }\n    };\n    return ListViewComponent;\n}());\n__decorate([\n    core_1.ViewChild(\"loader\", { read: core_1.ViewContainerRef }),\n    __metadata(\"design:type\", core_1.ViewContainerRef)\n], ListViewComponent.prototype, \"loader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], ListViewComponent.prototype, \"setupItemView\", void 0);\n__decorate([\n    core_1.ContentChild(core_1.TemplateRef),\n    __metadata(\"design:type\", core_1.TemplateRef)\n], ListViewComponent.prototype, \"itemTemplateQuery\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], ListViewComponent.prototype, \"items\", null);\nListViewComponent = __decorate([\n    core_1.Component({\n        selector: \"ListView\",\n        template: \"\\n        <DetachedContainer>\\n            <Placeholder #loader></Placeholder>\\n        </DetachedContainer>\",\n        changeDetection: core_1.ChangeDetectionStrategy.OnPush\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef,\n        core_1.IterableDiffers,\n        core_1.ChangeDetectorRef])\n], ListViewComponent);\nexports.ListViewComponent = ListViewComponent;\nfunction getSingleViewRecursive(nodes, nestLevel) {\n    var actualNodes = nodes.filter(function (n) { return !!n && n.nodeName !== \"#text\"; });\n    if (actualNodes.length === 0) {\n        throw new Error(\"No suitable views found in list template! Nesting level: \" + nestLevel);\n    }\n    else if (actualNodes.length > 1) {\n        throw new Error(\"More than one view found in list template! Nesting level: \" + nestLevel);\n    }\n    else {\n        if (actualNodes[0]) {\n            var parentLayout = actualNodes[0].parent;\n            if (parentLayout instanceof layout_base_1.LayoutBase) {\n                parentLayout.removeChild(actualNodes[0]);\n            }\n            return actualNodes[0];\n        }\n        else {\n            return getSingleViewRecursive(actualNodes[0].children, nestLevel + 1);\n        }\n    }\n}\n;\nfunction getItemViewRoot(viewRef, rootLocator) {\n    if (rootLocator === void 0) { rootLocator = getSingleViewRecursive; }\n    var rootView = rootLocator(viewRef.rootNodes, 0);\n    return rootView;\n}\nexports.getItemViewRoot = getItemViewRoot;\nvar TemplateKeyDirective = (function () {\n    function TemplateKeyDirective(templateRef, list) {\n        this.templateRef = templateRef;\n        this.list = list;\n    }\n    Object.defineProperty(TemplateKeyDirective.prototype, \"nsTemplateKey\", {\n        set: function (value) {\n            if (this.list && this.templateRef) {\n                this.list.registerTemplate(value, this.templateRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateKeyDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], TemplateKeyDirective.prototype, \"nsTemplateKey\", null);\nTemplateKeyDirective = __decorate([\n    core_1.Directive({ selector: \"[nsTemplateKey]\" }),\n    __param(1, core_1.Host()),\n    __metadata(\"design:paramtypes\", [core_1.TemplateRef,\n        ListViewComponent])\n], TemplateKeyDirective);\nexports.TemplateKeyDirective = TemplateKeyDirective;\n//# sourceMappingURL=list-view-comp.js.map"
    },
    {
      "id": 77,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/platform-filters.js",
      "name": "./~/nativescript-angular/directives/platform-filters.js",
      "index": 203,
      "index2": 199,
      "size": 1342,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
      "issuerId": 177,
      "issuerName": "./~/nativescript-angular/directives.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/platform-filters",
          "loc": "5:25-65"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/platform-filters",
          "loc": "41:25-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar platform_1 = require(\"tns-core-modules/platform\");\nvar platform_providers_1 = require(\"../platform-providers\");\nvar AndroidFilterComponent = (function () {\n    function AndroidFilterComponent(device) {\n        this.show = (device.os === platform_1.platformNames.android);\n    }\n    return AndroidFilterComponent;\n}());\nAndroidFilterComponent = __decorate([\n    core_1.Component({\n        selector: \"android\",\n        template: \"<ng-content *ngIf=\\\"show\\\"></ng-content>\",\n    }),\n    __param(0, core_1.Inject(platform_providers_1.DEVICE)),\n    __metadata(\"design:paramtypes\", [Object])\n], AndroidFilterComponent);\nexports.AndroidFilterComponent = AndroidFilterComponent;\nvar IosFilterComponent = (function () {\n    function IosFilterComponent(device) {\n        this.show = (device.os === platform_1.platformNames.ios);\n    }\n    return IosFilterComponent;\n}());\nIosFilterComponent = __decorate([\n    core_1.Component({\n        selector: \"ios\",\n        template: \"<ng-content *ngIf=\\\"show\\\"></ng-content>\",\n    }),\n    __param(0, core_1.Inject(platform_providers_1.DEVICE)),\n    __metadata(\"design:paramtypes\", [Object])\n], IosFilterComponent);\nexports.IosFilterComponent = IosFilterComponent;\n//# sourceMappingURL=platform-filters.js.map"
    },
    {
      "id": 78,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/tab-view.js",
      "name": "./~/nativescript-angular/directives/tab-view.js",
      "index": 200,
      "index2": 197,
      "size": 4484,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
      "issuerId": 177,
      "issuerName": "./~/nativescript-angular/directives.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/tab-view",
          "loc": "3:17-49"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./directives/tab-view",
          "loc": "33:17-49"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar tab_view_1 = require(\"tns-core-modules/ui/tab-view\");\nvar utils_1 = require(\"../common/utils\");\nvar trace_1 = require(\"../trace\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar TabViewDirective = (function () {\n    function TabViewDirective(element) {\n        this.tabView = element.nativeElement;\n    }\n    Object.defineProperty(TabViewDirective.prototype, \"selectedIndex\", {\n        get: function () {\n            return this._selectedIndex;\n        },\n        set: function (value) {\n            this._selectedIndex = utils_1.convertToInt(value);\n            if (this.viewInitialized) {\n                this.tabView.selectedIndex = this._selectedIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabViewDirective.prototype.ngAfterViewInit = function () {\n        this.viewInitialized = true;\n        trace_1.rendererLog(\"this._selectedIndex: \" + this._selectedIndex);\n        if (!lang_facade_1.isBlank(this._selectedIndex)) {\n            this.tabView.selectedIndex = this._selectedIndex;\n        }\n    };\n    return TabViewDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Object])\n], TabViewDirective.prototype, \"selectedIndex\", null);\nTabViewDirective = __decorate([\n    core_1.Directive({\n        selector: \"TabView\",\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], TabViewDirective);\nexports.TabViewDirective = TabViewDirective;\nvar TabViewItemDirective = (function () {\n    function TabViewItemDirective(owner, templateRef, viewContainer) {\n        this.owner = owner;\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n    }\n    Object.defineProperty(TabViewItemDirective.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            if (this._title !== value) {\n                this._title = value;\n                this.ensureItem();\n                this.item.title = this._title;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewItemDirective.prototype, \"iconSource\", {\n        get: function () {\n            return this._iconSource;\n        },\n        set: function (value) {\n            if (this._iconSource !== value) {\n                this._iconSource = value;\n                this.ensureItem();\n                this.item.iconSource = this._iconSource;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabViewItemDirective.prototype.ensureItem = function () {\n        if (!this.item) {\n            this.item = new tab_view_1.TabViewItem();\n        }\n    };\n    TabViewItemDirective.prototype.ngOnInit = function () {\n        this.ensureItem();\n        if (this.config) {\n            this.item.title = this._title || this.config.title;\n            this.item.iconSource = this._iconSource || this.config.iconSource;\n        }\n        var viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n        // Filter out text nodes, etc\n        var realViews = viewRef.rootNodes.filter(function (node) {\n            return node.nodeName && node.nodeName !== \"#text\";\n        });\n        if (realViews.length > 0) {\n            this.item.view = realViews[0];\n            var newItems = (this.owner.tabView.items || []).concat([this.item]);\n            this.owner.tabView.items = newItems;\n        }\n    };\n    return TabViewItemDirective;\n}());\n__decorate([\n    core_1.Input(\"tabItem\"),\n    __metadata(\"design:type\", Object)\n], TabViewItemDirective.prototype, \"config\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [String])\n], TabViewItemDirective.prototype, \"title\", null);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [String])\n], TabViewItemDirective.prototype, \"iconSource\", null);\nTabViewItemDirective = __decorate([\n    core_1.Directive({\n        selector: \"[tabItem]\" // tslint:disable-line:directive-selector\n    }),\n    __metadata(\"design:paramtypes\", [TabViewDirective,\n        core_1.TemplateRef,\n        core_1.ViewContainerRef])\n], TabViewItemDirective);\nexports.TabViewItemDirective = TabViewItemDirective;\n//# sourceMappingURL=tab-view.js.map"
    },
    {
      "id": 79,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
      "name": "./~/nativescript-angular/nativescript.module.js",
      "index": 144,
      "index2": 215,
      "size": 2182,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./nativescript.module",
          "loc": "12:28-60"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/nativescript.module",
          "loc": "12:14-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"tns-core-modules/globals\");\n// Require application early to work around a circular import\nrequire(\"tns-core-modules/application\");\nrequire(\"./zone-js/dist/zone-nativescript\");\nrequire(\"reflect-metadata\");\nrequire(\"./polyfills/array\");\nrequire(\"./polyfills/console\");\nvar common_1 = require(\"@angular/common\");\nvar renderer_1 = require(\"./renderer\");\nvar detached_loader_1 = require(\"./common/detached-loader\");\nvar dialogs_1 = require(\"./directives/dialogs\");\nvar core_1 = require(\"@angular/core\");\nvar platform_providers_1 = require(\"./platform-providers\");\nvar directives_1 = require(\"./directives\");\nfunction errorHandlerFactory() {\n    return new core_1.ErrorHandler(true);\n}\nexports.errorHandlerFactory = errorHandlerFactory;\n;\nvar NativeScriptModule = (function () {\n    function NativeScriptModule() {\n    }\n    return NativeScriptModule;\n}());\nNativeScriptModule = __decorate([\n    core_1.NgModule({\n        declarations: [\n            detached_loader_1.DetachedLoader,\n            dialogs_1.ModalDialogHost\n        ].concat(directives_1.NS_DIRECTIVES),\n        providers: [\n            { provide: core_1.ErrorHandler, useFactory: errorHandlerFactory },\n            platform_providers_1.defaultFrameProvider,\n            platform_providers_1.defaultPageProvider,\n            platform_providers_1.defaultDeviceProvider,\n            renderer_1.NativeScriptRendererFactory,\n            { provide: core_1.RendererFactory2, useClass: renderer_1.NativeScriptRendererFactory },\n            dialogs_1.ModalDialogService\n        ],\n        entryComponents: [\n            detached_loader_1.DetachedLoader,\n        ],\n        imports: [\n            common_1.CommonModule,\n            core_1.ApplicationModule,\n        ],\n        exports: [\n            common_1.CommonModule,\n            core_1.ApplicationModule,\n            detached_loader_1.DetachedLoader,\n            dialogs_1.ModalDialogHost\n        ].concat(directives_1.NS_DIRECTIVES),\n        schemas: [core_1.NO_ERRORS_SCHEMA]\n    })\n], NativeScriptModule);\nexports.NativeScriptModule = NativeScriptModule;\n//# sourceMappingURL=nativescript.module.js.map"
    },
    {
      "id": 80,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/polyfills/array.js",
      "name": "./~/nativescript-angular/polyfills/array.js",
      "index": 89,
      "index2": 86,
      "size": 1382,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
      "issuerId": 79,
      "issuerName": "./~/nativescript-angular/nativescript.module.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./polyfills/array",
          "loc": "7:0-28"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "./polyfills/array",
          "loc": "8:0-28"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "if (!Array.prototype.fill) {\n    Array.prototype.fill = function (value) {\n        var O = Object(this);\n        var len = parseInt(O.length, 10);\n        var start = arguments[1];\n        var relativeStart = parseInt(start, 10) || 0;\n        var k = relativeStart < 0\n            ? Math.max(len + relativeStart, 0)\n            : Math.min(relativeStart, len);\n        var end = arguments[2];\n        var relativeEnd = end === undefined\n            ? len\n            : (parseInt(end, 10) || 0);\n        var final = relativeEnd < 0\n            ? Math.max(len + relativeEnd, 0)\n            : Math.min(relativeEnd, len);\n        for (; k < final; k++) {\n            O[k] = value;\n        }\n        return O;\n    };\n}\nif (!Array.from) {\n    Array.from = function (iterable, mapFn, thisArg) {\n        var results = [];\n        if (iterable.next) {\n            // Iterator objects\n            for (var step = null;; step = iterable.next()) {\n                if (step.done) {\n                    break;\n                }\n                else {\n                    results.push(step.value);\n                }\n            }\n        }\n        else {\n            // Array-like objects\n            results = [].slice.call(iterable);\n        }\n        if (mapFn) {\n            results = results.forEach(mapFn, thisArg);\n        }\n        return results;\n    };\n}\n//# sourceMappingURL=array.js.map"
    },
    {
      "id": 81,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/polyfills/console.js",
      "name": "./~/nativescript-angular/polyfills/console.js",
      "index": 90,
      "index2": 87,
      "size": 163,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
      "issuerId": 79,
      "issuerName": "./~/nativescript-angular/nativescript.module.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./polyfills/console",
          "loc": "8:0-30"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "./polyfills/console",
          "loc": "9:0-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "if (!console.group) {\n    console.group = function () { };\n}\nif (!console.groupEnd) {\n    console.groupEnd = function () { };\n}\n//# sourceMappingURL=console.js.map"
    },
    {
      "id": 82,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
      "name": "./~/nativescript-angular/renderer.js",
      "index": 145,
      "index2": 191,
      "size": 10958,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./renderer",
          "loc": "10:17-38"
        },
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/renderer",
          "loc": "14:14-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar application_1 = require(\"tns-core-modules/application\");\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar platform_providers_1 = require(\"./platform-providers\");\nvar lang_facade_1 = require(\"./lang-facade\");\nvar view_util_1 = require(\"./view-util\");\nvar trace_1 = require(\"./trace\");\n// CONTENT_ATTR not exported from NativeScript_renderer - we need it for styles application.\nvar COMPONENT_REGEX = /%COMP%/g;\nexports.COMPONENT_VARIABLE = \"%COMP%\";\nexports.HOST_ATTR = \"_nghost-\" + exports.COMPONENT_VARIABLE;\nexports.CONTENT_ATTR = \"_ngcontent-\" + exports.COMPONENT_VARIABLE;\nvar ATTR_SANITIZER = /-/g;\nvar NativeScriptRendererFactory = (function () {\n    function NativeScriptRendererFactory(rootView, device, zone) {\n        this.zone = zone;\n        this.componentRenderers = new Map();\n        this.viewUtil = new view_util_1.ViewUtil(device);\n        this.setRootNgView(rootView);\n        this.defaultRenderer = new NativeScriptRenderer(this.rootNgView, zone, this.viewUtil);\n    }\n    NativeScriptRendererFactory.prototype.setRootNgView = function (rootView) {\n        if (!rootView) {\n            rootView = platform_providers_1.getRootPage() || frame_1.topmost().currentPage;\n        }\n        rootView.nodeName = \"NONE\";\n        this.rootNgView = rootView;\n    };\n    NativeScriptRendererFactory.prototype.createRenderer = function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        var renderer = this.componentRenderers.get(type.id);\n        if (!lang_facade_1.isBlank(renderer)) {\n            return renderer;\n        }\n        if (type.encapsulation === core_1.ViewEncapsulation.Emulated) {\n            renderer = new EmulatedRenderer(type, this.rootNgView, this.zone, this.viewUtil);\n            renderer.applyToHost(element);\n        }\n        else {\n            renderer = this.defaultRenderer;\n        }\n        this.componentRenderers.set(type.id, renderer);\n        return renderer;\n    };\n    return NativeScriptRendererFactory;\n}());\nNativeScriptRendererFactory = __decorate([\n    core_1.Injectable(),\n    __param(0, core_1.Optional()), __param(0, core_1.Inject(platform_providers_1.APP_ROOT_VIEW)),\n    __param(1, core_1.Inject(platform_providers_1.DEVICE)),\n    __metadata(\"design:paramtypes\", [view_1.View, Object, core_1.NgZone])\n], NativeScriptRendererFactory);\nexports.NativeScriptRendererFactory = NativeScriptRendererFactory;\nvar NativeScriptRenderer = (function (_super) {\n    __extends(NativeScriptRenderer, _super);\n    function NativeScriptRenderer(rootView, zone, viewUtil) {\n        var _this = _super.call(this) || this;\n        _this.rootView = rootView;\n        _this.zone = zone;\n        _this.viewUtil = viewUtil;\n        _this.data = Object.create(null);\n        trace_1.rendererLog(\"NativeScriptRenderer created\");\n        return _this;\n    }\n    NativeScriptRenderer.prototype.appendChild = function (parent, newChild) {\n        trace_1.rendererLog(\"NativeScriptRenderer.appendChild child: \" + newChild + \" parent: \" + parent);\n        if (parent) {\n            this.viewUtil.insertChild(parent, newChild);\n        }\n    };\n    NativeScriptRenderer.prototype.insertBefore = function (parent, newChild, refChildIndex) {\n        trace_1.rendererLog(\"NativeScriptRenderer.insertBefore child: \" + newChild + \" parent: \" + parent);\n        if (parent) {\n            this.viewUtil.insertChild(parent, newChild, refChildIndex);\n        }\n    };\n    NativeScriptRenderer.prototype.removeChild = function (parent, oldChild) {\n        trace_1.rendererLog(\"NativeScriptRenderer.removeChild child: \" + oldChild + \" parent: \" + parent);\n        if (parent) {\n            this.viewUtil.removeChild(parent, oldChild);\n        }\n    };\n    NativeScriptRenderer.prototype.selectRootElement = function (selector) {\n        trace_1.rendererLog(\"selectRootElement: \" + selector);\n        return this.rootView;\n    };\n    NativeScriptRenderer.prototype.parentNode = function (node) {\n        return node.parent;\n    };\n    NativeScriptRenderer.prototype.nextSibling = function (node) {\n        trace_1.rendererLog(\"NativeScriptRenderer.nextSibling \" + node);\n        return this.viewUtil.nextSiblingIndex(node);\n    };\n    NativeScriptRenderer.prototype.createComment = function (_value) {\n        trace_1.rendererLog(\"NativeScriptRenderer.createComment \" + _value);\n        return this.viewUtil.createComment();\n    };\n    NativeScriptRenderer.prototype.createElement = function (name, _namespace) {\n        trace_1.rendererLog(\"NativeScriptRenderer.createElement: \" + name);\n        return this.viewUtil.createView(name);\n    };\n    NativeScriptRenderer.prototype.createText = function (_value) {\n        trace_1.rendererLog(\"NativeScriptRenderer.createText \" + _value);\n        return this.viewUtil.createText();\n    };\n    NativeScriptRenderer.prototype.createViewRoot = function (hostElement) {\n        trace_1.rendererLog(\"NativeScriptRenderer.createViewRoot \" + hostElement.nodeName);\n        return hostElement;\n    };\n    NativeScriptRenderer.prototype.projectNodes = function (parentElement, nodes) {\n        var _this = this;\n        trace_1.rendererLog(\"NativeScriptRenderer.projectNodes\");\n        nodes.forEach(function (node) { return _this.viewUtil.insertChild(parentElement, node); });\n    };\n    NativeScriptRenderer.prototype.destroy = function () {\n        trace_1.rendererLog(\"NativeScriptRenderer.destroy\");\n        // Seems to be called on component dispose only (router outlet)\n        // TODO: handle this when we resolve routing and navigation.\n    };\n    NativeScriptRenderer.prototype.setAttribute = function (view, name, value, namespace) {\n        trace_1.rendererLog(\"NativeScriptRenderer.setAttribute \" + view + \" : \" + name + \" = \" + value + \", namespace: \" + namespace);\n        return this.viewUtil.setProperty(view, name, value, namespace);\n    };\n    NativeScriptRenderer.prototype.removeAttribute = function (_el, _name) {\n        trace_1.rendererLog(\"NativeScriptRenderer.removeAttribute \" + _el + \": \" + _name);\n    };\n    NativeScriptRenderer.prototype.setProperty = function (view, name, value) {\n        trace_1.rendererLog(\"NativeScriptRenderer.setProperty \" + view + \" : \" + name + \" = \" + value);\n        return this.viewUtil.setProperty(view, name, value);\n    };\n    NativeScriptRenderer.prototype.addClass = function (view, name) {\n        trace_1.rendererLog(\"NativeScriptRenderer.addClass \" + name);\n        this.viewUtil.addClass(view, name);\n    };\n    NativeScriptRenderer.prototype.removeClass = function (view, name) {\n        trace_1.rendererLog(\"NativeScriptRenderer.removeClass \" + name);\n        this.viewUtil.removeClass(view, name);\n    };\n    NativeScriptRenderer.prototype.setStyle = function (view, styleName, value, _flags) {\n        trace_1.rendererLog(\"NativeScriptRenderer.setStyle: \" + styleName + \" = \" + value);\n        this.viewUtil.setStyle(view, styleName, value);\n    };\n    NativeScriptRenderer.prototype.removeStyle = function (view, styleName, _flags) {\n        trace_1.rendererLog(\"NativeScriptRenderer.removeStyle: ${styleName}\");\n        this.viewUtil.removeStyle(view, styleName);\n    };\n    // Used only in debug mode to serialize property changes to comment nodes,\n    // such as <template> placeholders.\n    NativeScriptRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n        trace_1.rendererLog(\"NativeScriptRenderer.setBindingDebugInfo: \" + renderElement + \", \" +\n            propertyName + \" = \" + propertyValue);\n    };\n    NativeScriptRenderer.prototype.setElementDebugInfo = function (renderElement, _info /*RenderDebugInfo*/) {\n        trace_1.rendererLog(\"NativeScriptRenderer.setElementDebugInfo: \" + renderElement);\n    };\n    NativeScriptRenderer.prototype.invokeElementMethod = function (_renderElement, methodName, args) {\n        trace_1.rendererLog(\"NativeScriptRenderer.invokeElementMethod \" + methodName + \" \" + args);\n    };\n    NativeScriptRenderer.prototype.setValue = function (_renderNode, _value) {\n        trace_1.rendererLog(\"NativeScriptRenderer.setValue\");\n    };\n    NativeScriptRenderer.prototype.listen = function (renderElement, eventName, callback) {\n        var _this = this;\n        trace_1.rendererLog(\"NativeScriptRenderer.listen: \" + eventName);\n        // Explicitly wrap in zone\n        var zonedCallback = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            _this.zone.run(function () {\n                callback.apply(undefined, args);\n            });\n        };\n        renderElement.on(eventName, zonedCallback);\n        if (eventName === view_1.View.loadedEvent && renderElement.isLoaded) {\n            var notifyData = { eventName: view_1.View.loadedEvent, object: renderElement };\n            zonedCallback(notifyData);\n        }\n        return function () { return renderElement.off(eventName, zonedCallback); };\n    };\n    return NativeScriptRenderer;\n}(core_1.Renderer2));\nexports.NativeScriptRenderer = NativeScriptRenderer;\nvar EmulatedRenderer = (function (_super) {\n    __extends(EmulatedRenderer, _super);\n    function EmulatedRenderer(component, rootView, zone, viewUtil) {\n        var _this = _super.call(this, rootView, zone, viewUtil) || this;\n        var componentId = component.id.replace(ATTR_SANITIZER, \"_\");\n        _this.contentAttr = replaceNgAttribute(exports.CONTENT_ATTR, componentId);\n        _this.hostAttr = replaceNgAttribute(exports.HOST_ATTR, componentId);\n        _this.addStyles(component.styles, componentId);\n        return _this;\n    }\n    EmulatedRenderer.prototype.applyToHost = function (view) {\n        _super.prototype.setAttribute.call(this, view, this.hostAttr, \"\");\n    };\n    EmulatedRenderer.prototype.appendChild = function (parent, newChild) {\n        _super.prototype.appendChild.call(this, parent, newChild);\n    };\n    EmulatedRenderer.prototype.createElement = function (parent, name) {\n        var view = _super.prototype.createElement.call(this, parent, name);\n        // Set an attribute to the view to scope component-specific css.\n        // The property name is pre-generated by Angular.\n        _super.prototype.setAttribute.call(this, view, this.contentAttr, \"\");\n        return view;\n    };\n    EmulatedRenderer.prototype.addStyles = function (styles, componentId) {\n        styles.map(function (s) { return s.toString(); })\n            .map(function (s) { return replaceNgAttribute(s, componentId); })\n            .forEach(application_1.addCss);\n    };\n    return EmulatedRenderer;\n}(NativeScriptRenderer));\nfunction replaceNgAttribute(input, componentId) {\n    return input.replace(COMPONENT_REGEX, componentId);\n}\n//# sourceMappingURL=renderer.js.map"
    },
    {
      "id": 83,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link.js",
      "name": "./~/nativescript-angular/router/ns-router-link.js",
      "index": 268,
      "index2": 269,
      "size": 5479,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/ns-router-link",
          "loc": "6:23-57"
        },
        {
          "moduleId": 182,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link-active.js",
          "module": "./~/nativescript-angular/router/ns-router-link-active.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link-active.js",
          "type": "cjs require",
          "userRequest": "./ns-router-link",
          "loc": "5:23-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar trace_1 = require(\"../trace\");\nvar page_router_outlet_1 = require(\"./page-router-outlet\");\nvar router_extensions_1 = require(\"./router-extensions\");\nvar types_1 = require(\"tns-core-modules/utils/types\");\n/**\n * The nsRouterLink directive lets you link to specific parts of your app.\n *\n * Consider the following route configuration:\n * ```\n * [{ path: \"/user\", component: UserCmp }]\n * ```\n *\n * When linking to this `User` route, you can write:\n *\n * ```\n * <a [nsRouterLink]=\"[\"/user\"]\">link to user component</a>\n * ```\n *\n * NSRouterLink expects the value to be an array of path segments, followed by the params\n * for that level of routing. For instance `[\"/team\", {teamId: 1}, \"user\", {userId: 2}]`\n * means that we want to generate a link to `/team;teamId=1/user;userId=2`.\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * If the segment begins with `/`, the router will look up the route from the root of the app.\n * If the segment begins with `./`, or doesn\"t begin with a slash, the router will\n * instead look in the current component\"s children for the route.\n * And if the segment begins with `../`, the router will go up one level.\n */\nvar NSRouterLink = (function () {\n    function NSRouterLink(router, navigator, route, pageRoute) {\n        this.router = router;\n        this.navigator = navigator;\n        this.route = route;\n        this.pageRoute = pageRoute;\n        this.commands = [];\n        this.pageTransition = true;\n        this.usePageRoute = (this.pageRoute && this.route === this.pageRoute.activatedRoute.getValue());\n    }\n    Object.defineProperty(NSRouterLink.prototype, \"currentRoute\", {\n        get: function () {\n            return this.usePageRoute ? this.pageRoute.activatedRoute.getValue() : this.route;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NSRouterLink.prototype, \"params\", {\n        set: function (data) {\n            if (Array.isArray(data)) {\n                this.commands = data;\n            }\n            else {\n                this.commands = [data];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NSRouterLink.prototype.onTap = function () {\n        trace_1.routerLog(\"nsRouterLink.tapped: \" + this.commands + \" usePageRoute: \" +\n            this.usePageRoute + \" clearHistory: \" + this.clearHistory + \" transition: \" +\n            JSON.stringify(this.pageTransition));\n        var extras = this.getExtras();\n        this.navigator.navigateByUrl(this.urlTree, extras);\n    };\n    NSRouterLink.prototype.getExtras = function () {\n        var transition = this.getTransition();\n        return {\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            clearHistory: this.clearHistory,\n            animated: transition.animated,\n            transition: transition.transition,\n            relativeTo: this.currentRoute,\n        };\n    };\n    NSRouterLink.prototype.getTransition = function () {\n        if (typeof this.pageTransition === \"boolean\") {\n            return { animated: this.pageTransition };\n        }\n        else if (types_1.isString(this.pageTransition)) {\n            if (this.pageTransition === \"none\" || this.pageTransition === \"false\") {\n                return { animated: false };\n            }\n            else {\n                return { animated: true, transition: { name: this.pageTransition } };\n            }\n        }\n        else {\n            return {\n                animated: true,\n                transition: this.pageTransition\n            };\n        }\n    };\n    NSRouterLink.prototype.ngOnChanges = function (_) {\n        this.updateUrlTree();\n    };\n    NSRouterLink.prototype.updateUrlTree = function () {\n        this.urlTree = this.router.createUrlTree(this.commands, { relativeTo: this.currentRoute, queryParams: this.queryParams, fragment: this.fragment });\n    };\n    return NSRouterLink;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", String)\n], NSRouterLink.prototype, \"target\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], NSRouterLink.prototype, \"queryParams\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", String)\n], NSRouterLink.prototype, \"fragment\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], NSRouterLink.prototype, \"clearHistory\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], NSRouterLink.prototype, \"pageTransition\", void 0);\n__decorate([\n    core_1.Input(\"nsRouterLink\"),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], NSRouterLink.prototype, \"params\", null);\n__decorate([\n    core_1.HostListener(\"tap\"),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], NSRouterLink.prototype, \"onTap\", null);\nNSRouterLink = __decorate([\n    core_1.Directive({ selector: \"[nsRouterLink]\" }),\n    __param(3, core_1.Optional()),\n    __metadata(\"design:paramtypes\", [router_1.Router,\n        router_extensions_1.RouterExtensions,\n        router_1.ActivatedRoute,\n        page_router_outlet_1.PageRoute])\n], NSRouterLink);\nexports.NSRouterLink = NSRouterLink;\n//# sourceMappingURL=ns-router-link.js.map"
    },
    {
      "id": 84,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/checked-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/checked-value-accessor.js",
      "index": 213,
      "index2": 209,
      "size": 2406,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "issuerId": 171,
      "issuerName": "./~/nativescript-angular/forms.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/checked-value-accessor",
          "loc": "5:31-82"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/checked-value-accessor",
          "loc": "23:31-82"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar CHECKED_VALUE_ACCESSOR = { provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return CheckedValueAccessor; }), multi: true };\n/**\n * The accessor for setting a checked property and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <Switch [(ngModel)]=\"model.test\">\n *  ```\n */\nvar CheckedValueAccessor = (function (_super) {\n    __extends(CheckedValueAccessor, _super);\n    function CheckedValueAccessor(elementRef) {\n        var _this = _super.call(this, elementRef.nativeElement) || this;\n        _this.onTouched = function () { };\n        return _this;\n    }\n    CheckedValueAccessor.prototype.checkedChangeListener = function (event) {\n        this.onChange(event.value);\n    };\n    CheckedValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = false;\n        if (!lang_facade_1.isBlank(value)) {\n            if (typeof value === \"string\") {\n                normalizedValue = value.toLowerCase() === \"true\" ? true : false;\n            }\n            else {\n                normalizedValue = !!value;\n            }\n        }\n        this.view.checked = normalizedValue;\n    };\n    CheckedValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return CheckedValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\n__decorate([\n    core_1.HostListener(\"checkedChange\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CheckedValueAccessor.prototype, \"checkedChangeListener\", null);\nCheckedValueAccessor = __decorate([\n    core_1.Directive({\n        // tslint:disable-next-line:max-line-length directive-selector\n        selector: \"Switch[ngModel], Switch[formControlName], switch[ngModel], switch[formControlName], switch[ngModel], switch[formControlName]\",\n        providers: [CHECKED_VALUE_ACCESSOR]\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], CheckedValueAccessor);\nexports.CheckedValueAccessor = CheckedValueAccessor;\n//# sourceMappingURL=checked-value-accessor.js.map"
    },
    {
      "id": 85,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/date-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/date-value-accessor.js",
      "index": 214,
      "index2": 210,
      "size": 2584,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "issuerId": 171,
      "issuerName": "./~/nativescript-angular/forms.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/date-value-accessor",
          "loc": "6:28-76"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/date-value-accessor",
          "loc": "25:28-76"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar DATE_VALUE_ACCESSOR = { provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return DateValueAccessor; }), multi: true };\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DatePicker [(ngModel)]=\"model.test\">\n *  ```\n */\nvar DateValueAccessor = (function (_super) {\n    __extends(DateValueAccessor, _super);\n    function DateValueAccessor(elementRef) {\n        var _this = _super.call(this, elementRef.nativeElement) || this;\n        _this.onTouched = function () { };\n        return _this;\n    }\n    DateValueAccessor.prototype.dateChangeListener = function (event) {\n        this.onChange(event.value);\n    };\n    DateValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = lang_facade_1.isBlank(value) ? new Date() : value;\n        if (!lang_facade_1.isDate(normalizedValue)) {\n            if (typeof normalizedValue === \"string\") {\n                normalizedValue = new Date(normalizedValue);\n            }\n            else if (typeof normalizedValue === \"number\") {\n                normalizedValue = new Date(normalizedValue);\n            }\n            if (!lang_facade_1.isDate(normalizedValue)) {\n                normalizedValue = new Date();\n            }\n        }\n        this.view.date = normalizedValue;\n    };\n    DateValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return DateValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\n__decorate([\n    core_1.HostListener(\"dateChange\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], DateValueAccessor.prototype, \"dateChangeListener\", null);\nDateValueAccessor = __decorate([\n    core_1.Directive({\n        // tslint:disable-next-line:max-line-length directive-selector\n        selector: \"DatePicker[ngModel], DatePicker[formControlName], datePicker[ngModel], datePicker[formControlName], date-picker[ngModel], date-picker[formControlName]\",\n        providers: [DATE_VALUE_ACCESSOR]\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], DateValueAccessor);\nexports.DateValueAccessor = DateValueAccessor;\n//# sourceMappingURL=date-value-accessor.js.map"
    },
    {
      "id": 86,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/number-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/number-value-accessor.js",
      "index": 216,
      "index2": 212,
      "size": 2450,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "issuerId": 171,
      "issuerName": "./~/nativescript-angular/forms.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/number-value-accessor",
          "loc": "8:30-80"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/number-value-accessor",
          "loc": "29:30-80"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar NUMBER_VALUE_ACCESSOR = { provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return NumberValueAccessor; }), multi: true };\n/**\n * The accessor for setting a value and listening to changes that is used by the\n * {@link NgModel}\n *\n *  ### Example\n *  ```\n *  <Slider [(ngModel)]=\"model.test\">\n *  ```\n */\nvar NumberValueAccessor = (function (_super) {\n    __extends(NumberValueAccessor, _super);\n    function NumberValueAccessor(elementRef) {\n        var _this = _super.call(this, elementRef.nativeElement) || this;\n        _this.onTouched = function () { };\n        return _this;\n    }\n    NumberValueAccessor.prototype.valueChangeListener = function (event) {\n        this.onChange(event.value);\n    };\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue;\n        if (lang_facade_1.isBlank(value)) {\n            normalizedValue = 0;\n        }\n        else {\n            if (lang_facade_1.isNumber(value)) {\n                normalizedValue = value;\n            }\n            else {\n                var parsedValue = Number(value);\n                normalizedValue = isNaN(parsedValue) ? 0 : parsedValue;\n            }\n        }\n        this.view.value = normalizedValue;\n    };\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return NumberValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\n__decorate([\n    core_1.HostListener(\"valueChange\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], NumberValueAccessor.prototype, \"valueChangeListener\", null);\nNumberValueAccessor = __decorate([\n    core_1.Directive({\n        // tslint:disable-next-line:max-line-length directive-selector\n        selector: \"Slider[ngModel], Slider[formControlName], slider[ngModel], slider[formControlName], slider[ngModel], slider[formControlName]\",\n        providers: [NUMBER_VALUE_ACCESSOR]\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], NumberValueAccessor);\nexports.NumberValueAccessor = NumberValueAccessor;\n//# sourceMappingURL=number-value-accessor.js.map"
    },
    {
      "id": 87,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/selectedIndex-value-accessor.js",
      "index": 217,
      "index2": 213,
      "size": 2833,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "issuerId": 171,
      "issuerName": "./~/nativescript-angular/forms.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/selectedIndex-value-accessor",
          "loc": "9:37-94"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/selectedIndex-value-accessor",
          "loc": "31:37-94"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar utils_1 = require(\"../common/utils\");\nvar SELECTED_INDEX_VALUE_ACCESSOR = { provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectedIndexValueAccessor; }), multi: true };\n/**\n * The accessor for setting a selectedIndex and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <SegmentedBar [(ngModel)]=\"model.test\">\n *  ```\n */\nvar SelectedIndexValueAccessor = (function (_super) {\n    __extends(SelectedIndexValueAccessor, _super);\n    function SelectedIndexValueAccessor(elementRef) {\n        var _this = _super.call(this, elementRef.nativeElement) || this;\n        _this.onTouched = function () { };\n        return _this;\n    }\n    SelectedIndexValueAccessor.prototype.selectedIndexChangeListener = function (event) {\n        this.onChange(event.value);\n    };\n    SelectedIndexValueAccessor.prototype.writeValue = function (value) {\n        this._normalizedValue = utils_1.convertToInt(value);\n        if (this.viewInitialized) {\n            this.view.selectedIndex = this._normalizedValue;\n        }\n    };\n    SelectedIndexValueAccessor.prototype.ngAfterViewInit = function () {\n        this.viewInitialized = true;\n        this.view.selectedIndex = this._normalizedValue;\n    };\n    SelectedIndexValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return SelectedIndexValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\n__decorate([\n    core_1.HostListener(\"selectedIndexChange\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], SelectedIndexValueAccessor.prototype, \"selectedIndexChangeListener\", null);\nSelectedIndexValueAccessor = __decorate([\n    core_1.Directive({\n        // tslint:disable-next-line:max-line-length directive-selector\n        selector: \"SegmentedBar[ngModel], SegmentedBar[formControlName], segmentedBar[ngModel], segmentedBar[formControlName], segmented-bar[ngModel], segmented-bar[formControlName], ListPicker[ngModel], ListPicker[formControlName], listPicker[ngModel], listPicker[formControlName], list-picker[ngModel], list-picker[formControlName], TabView[ngModel], TabView[formControlName], tabView[ngModel], tabView[formControlName], tab-view[ngModel], tab-view[formControlName]\",\n        providers: [SELECTED_INDEX_VALUE_ACCESSOR]\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], SelectedIndexValueAccessor);\nexports.SelectedIndexValueAccessor = SelectedIndexValueAccessor;\n//# sourceMappingURL=selectedIndex-value-accessor.js.map"
    },
    {
      "id": 88,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/text-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/text-value-accessor.js",
      "index": 204,
      "index2": 208,
      "size": 2419,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "issuerId": 171,
      "issuerName": "./~/nativescript-angular/forms.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/text-value-accessor",
          "loc": "4:28-76"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/text-value-accessor",
          "loc": "21:28-76"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar TEXT_VALUE_ACCESSOR = { provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return TextValueAccessor; }), multi: true };\n/**\n * The accessor for writing a text and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TextField [(ngModel)]=\"model.test\">\n *  ```\n */\nvar TextValueAccessor = (function (_super) {\n    __extends(TextValueAccessor, _super);\n    function TextValueAccessor(elementRef) {\n        var _this = _super.call(this, elementRef.nativeElement) || this;\n        _this.onTouched = function () { };\n        return _this;\n    }\n    TextValueAccessor.prototype.textChangeListener = function (event) {\n        this.onChange(event.value);\n    };\n    TextValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = lang_facade_1.isBlank(value) ? \"\" : value.toString();\n        this.view.text = normalizedValue;\n    };\n    TextValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return TextValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\n__decorate([\n    core_1.HostListener(\"textChange\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TextValueAccessor.prototype, \"textChangeListener\", null);\nTextValueAccessor = __decorate([\n    core_1.Directive({\n        // tslint:disable-next-line:max-line-length directive-selector\n        selector: \"TextField[ngModel], TextField[formControlName], textField[ngModel], textField[formControlName], text-field[ngModel], text-field[formControlName], TextView[ngModel], TextView[formControlName], textView[ngModel], textView[formControlName], text-view[ngModel], text-view[formControlName], SearchBar[ngModel], SearchBar[formControlName], searchBar[ngModel], searchBar[formControlName], search-bar[ngModel], search-bar[formControlName]\",\n        providers: [TEXT_VALUE_ACCESSOR]\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], TextValueAccessor);\nexports.TextValueAccessor = TextValueAccessor;\n//# sourceMappingURL=text-value-accessor.js.map"
    },
    {
      "id": 89,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/value-accessors/time-value-accessor.js",
      "name": "./~/nativescript-angular/value-accessors/time-value-accessor.js",
      "index": 215,
      "index2": 211,
      "size": 2584,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "issuerId": 171,
      "issuerName": "./~/nativescript-angular/forms.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 171,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
          "module": "./~/nativescript-angular/forms.js",
          "moduleName": "./~/nativescript-angular/forms.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/time-value-accessor",
          "loc": "7:28-76"
        },
        {
          "moduleId": 177,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
          "module": "./~/nativescript-angular/directives.js",
          "moduleName": "./~/nativescript-angular/directives.js",
          "type": "cjs require",
          "userRequest": "./value-accessors/time-value-accessor",
          "loc": "27:28-76"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar lang_facade_1 = require(\"../lang-facade\");\nvar base_value_accessor_1 = require(\"./base-value-accessor\");\nvar TIME_VALUE_ACCESSOR = { provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return TimeValueAccessor; }), multi: true };\n/**\n * The accessor for setting a time and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TimePicker [(ngModel)]=\"model.test\">\n *  ```\n */\nvar TimeValueAccessor = (function (_super) {\n    __extends(TimeValueAccessor, _super);\n    function TimeValueAccessor(elementRef) {\n        var _this = _super.call(this, elementRef.nativeElement) || this;\n        _this.onTouched = function () { };\n        return _this;\n    }\n    TimeValueAccessor.prototype.timeChangeListener = function (event) {\n        this.onChange(event.value);\n    };\n    TimeValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = lang_facade_1.isBlank(value) ? new Date() : value;\n        if (!lang_facade_1.isDate(normalizedValue)) {\n            if (typeof normalizedValue === \"string\") {\n                normalizedValue = new Date(normalizedValue);\n            }\n            else if (typeof normalizedValue === \"number\") {\n                normalizedValue = new Date(normalizedValue);\n            }\n            if (!lang_facade_1.isDate(normalizedValue)) {\n                normalizedValue = new Date();\n            }\n        }\n        this.view.time = normalizedValue;\n    };\n    TimeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return TimeValueAccessor;\n}(base_value_accessor_1.BaseValueAccessor));\n__decorate([\n    core_1.HostListener(\"timeChange\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TimeValueAccessor.prototype, \"timeChangeListener\", null);\nTimeValueAccessor = __decorate([\n    core_1.Directive({\n        // tslint:disable-next-line:max-line-length directive-selector\n        selector: \"TimePicker[ngModel], TimePicker[formControlName], timePicker[ngModel], timePicker[formControlName], time-picker[ngModel], time-picker[formControlName]\",\n        providers: [TIME_VALUE_ACCESSOR]\n    }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], TimeValueAccessor);\nexports.TimeValueAccessor = TimeValueAccessor;\n//# sourceMappingURL=time-value-accessor.js.map"
    },
    {
      "id": 90,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/view-util.js",
      "name": "./~/nativescript-angular/view-util.js",
      "index": 147,
      "index2": 190,
      "size": 9773,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
      "issuerId": 82,
      "issuerName": "./~/nativescript-angular/renderer.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "../view-util",
          "loc": "11:18-41"
        },
        {
          "moduleId": 82,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/renderer.js",
          "module": "./~/nativescript-angular/renderer.js",
          "moduleName": "./~/nativescript-angular/renderer.js",
          "type": "cjs require",
          "userRequest": "./view-util",
          "loc": "8:18-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"tns-core-modules/utils/types\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar content_view_1 = require(\"tns-core-modules/ui/content-view\");\nvar layout_base_1 = require(\"tns-core-modules/ui/layouts/layout-base\");\nvar element_registry_1 = require(\"./element-registry\");\nvar platform_1 = require(\"tns-core-modules/platform\");\nvar trace_1 = require(\"./trace\");\nvar XML_ATTRIBUTES = Object.freeze([\"style\", \"rows\", \"columns\", \"fontAttributes\"]);\nvar ELEMENT_NODE_TYPE = 1;\nvar whiteSpaceSplitter = /\\s+/;\nfunction isView(view) {\n    return view instanceof view_1.View;\n}\nexports.isView = isView;\nfunction isLayout(view) {\n    return view instanceof layout_base_1.LayoutBase;\n}\nexports.isLayout = isLayout;\nfunction isContentView(view) {\n    return view instanceof content_view_1.ContentView;\n}\nexports.isContentView = isContentView;\nvar propertyMaps = new Map();\nvar ViewUtil = (function () {\n    function ViewUtil(device) {\n        this.isIos = device.os === platform_1.platformNames.ios;\n        this.isAndroid = device.os === platform_1.platformNames.android;\n    }\n    ViewUtil.prototype.insertChild = function (parent, child, atIndex) {\n        if (atIndex === void 0) { atIndex = -1; }\n        if (!parent || child.meta.skipAddToDom) {\n            return;\n        }\n        if (parent.meta && parent.meta.insertChild) {\n            parent.meta.insertChild(parent, child, atIndex);\n        }\n        else if (isLayout(parent)) {\n            if (child.parent === parent) {\n                var index = parent.getChildIndex(child);\n                if (index !== -1) {\n                    parent.removeChild(child);\n                }\n            }\n            if (atIndex !== -1) {\n                parent.insertChild(child, atIndex);\n            }\n            else {\n                parent.addChild(child);\n            }\n        }\n        else if (isContentView(parent)) {\n            // Explicit handling of template anchors inside ContentView\n            if (child.nodeName === \"#comment\") {\n                parent._addView(child, atIndex);\n            }\n            else {\n                parent.content = child;\n            }\n        }\n        else if (parent && parent._addChildFromBuilder) {\n            parent._addChildFromBuilder(child.nodeName, child);\n        }\n        else {\n            // throw new Error(\"Parent can\"t contain children: \" + parent.nodeName + \", \" + parent);\n        }\n    };\n    ViewUtil.prototype.removeChild = function (parent, child) {\n        if (!parent || child.meta.skipAddToDom) {\n            return;\n        }\n        if (parent.meta && parent.meta.removeChild) {\n            parent.meta.removeChild(parent, child);\n        }\n        else if (isLayout(parent)) {\n            parent.removeChild(child);\n        }\n        else if (isContentView(parent)) {\n            if (parent.content === child) {\n                parent.content = null;\n            }\n            // Explicit handling of template anchors inside ContentView\n            if (child.nodeName === \"#comment\") {\n                parent._removeView(child);\n            }\n        }\n        else if (isView(parent)) {\n            parent._removeView(child);\n        }\n        else {\n            // throw new Error(\"Unknown parent type: \" + parent);\n        }\n    };\n    ViewUtil.prototype.getChildIndex = function (parent, child) {\n        if (isLayout(parent)) {\n            return parent.getChildIndex(child);\n        }\n        else if (isContentView(parent)) {\n            return child === parent.content ? 0 : -1;\n        }\n        else {\n            // throw new Error(\"Parent can\"t contain children: \" + parent);\n        }\n    };\n    ViewUtil.prototype.createComment = function () {\n        var commentView = this.createView(\"Comment\");\n        commentView.nodeName = \"#comment\";\n        commentView.visibility = \"collapse\";\n        return commentView;\n    };\n    ViewUtil.prototype.createText = function () {\n        var detachedText = this.createView(\"DetachedText\");\n        detachedText.nodeName = \"#text\";\n        detachedText.visibility = \"collapse\";\n        return detachedText;\n    };\n    ViewUtil.prototype.createView = function (name) {\n        trace_1.rendererLog(\"Creating view: \" + name);\n        if (!element_registry_1.isKnownView(name)) {\n            name = \"ProxyViewContainer\";\n        }\n        var viewClass = element_registry_1.getViewClass(name);\n        var view = new viewClass();\n        view.nodeName = name;\n        view.meta = element_registry_1.getViewMeta(name);\n        // we're setting the node type of the view\n        // to 'element' because of checks done in the\n        // dom animation engine:\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/angular/angular/blob/master/packages/animations/browser/src/render/dom_animation_engine.ts#L70-L81\n        view.nodeType = ELEMENT_NODE_TYPE;\n        return view;\n    };\n    ViewUtil.prototype.setProperty = function (view, attributeName, value, namespace) {\n        if (namespace && !this.runsIn(namespace)) {\n            return;\n        }\n        if (attributeName.indexOf(\".\") !== -1) {\n            // Handle nested properties\n            var properties = attributeName.split(\".\");\n            attributeName = properties[properties.length - 1];\n            var propMap = this.getProperties(view);\n            var i = 0;\n            while (i < properties.length - 1 && types_1.isDefined(view)) {\n                var prop = properties[i];\n                if (propMap.has(prop)) {\n                    prop = propMap.get(prop);\n                }\n                view = view[prop];\n                propMap = this.getProperties(view);\n                i++;\n            }\n        }\n        if (types_1.isDefined(view)) {\n            this.setPropertyInternal(view, attributeName, value);\n        }\n    };\n    // finds the node in the parent's views and returns the next index\n    // returns -1 if the node has no parent or next sibling\n    ViewUtil.prototype.nextSiblingIndex = function (node) {\n        var parent = node.parent;\n        if (!parent) {\n            return -1;\n        }\n        var index = 0;\n        var found = false;\n        parent.eachChild(function (child) {\n            if (child === node) {\n                found = true;\n            }\n            index += 1;\n            return !found;\n        });\n        return found ? index : -1;\n    };\n    ViewUtil.prototype.runsIn = function (platform) {\n        return (platform === \"ios\" && this.isIos) ||\n            (platform === \"android\" && this.isAndroid);\n    };\n    ViewUtil.prototype.setPropertyInternal = function (view, attributeName, value) {\n        trace_1.rendererLog(\"Setting attribute: \" + attributeName);\n        var propMap = this.getProperties(view);\n        if (attributeName === \"class\") {\n            this.setClasses(view, value);\n        }\n        else if (XML_ATTRIBUTES.indexOf(attributeName) !== -1) {\n            view._applyXmlAttribute(attributeName, value);\n        }\n        else if (propMap.has(attributeName)) {\n            // We have a lower-upper case mapped property.\n            var propertyName = propMap.get(attributeName);\n            view[propertyName] = this.convertValue(value);\n        }\n        else {\n            // Unknown attribute value -- just set it to our object as is.\n            view[attributeName] = this.convertValue(value);\n        }\n    };\n    ViewUtil.prototype.convertValue = function (value) {\n        if (typeof (value) !== \"string\" || value === \"\") {\n            return value;\n        }\n        var valueAsNumber = +value;\n        if (!isNaN(valueAsNumber)) {\n            return valueAsNumber;\n        }\n        else if (value && (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\")) {\n            return value.toLowerCase() === \"true\" ? true : false;\n        }\n        else {\n            return value;\n        }\n    };\n    ViewUtil.prototype.getProperties = function (instance) {\n        var type = instance && instance.constructor;\n        if (!type) {\n            return new Map();\n        }\n        if (!propertyMaps.has(type)) {\n            var propMap = new Map();\n            for (var propName in instance) {\n                propMap.set(propName.toLowerCase(), propName);\n            }\n            propertyMaps.set(type, propMap);\n        }\n        return propertyMaps.get(type);\n    };\n    ViewUtil.prototype.cssClasses = function (view) {\n        if (!view.ngCssClasses) {\n            view.ngCssClasses = new Map();\n        }\n        return view.ngCssClasses;\n    };\n    ViewUtil.prototype.addClass = function (view, className) {\n        this.cssClasses(view).set(className, true);\n        this.syncClasses(view);\n    };\n    ViewUtil.prototype.removeClass = function (view, className) {\n        this.cssClasses(view).delete(className);\n        this.syncClasses(view);\n    };\n    ViewUtil.prototype.setClasses = function (view, classesValue) {\n        var _this = this;\n        var classes = classesValue.split(whiteSpaceSplitter);\n        this.cssClasses(view).clear();\n        classes.forEach(function (className) { return _this.cssClasses(view).set(className, true); });\n        this.syncClasses(view);\n    };\n    ViewUtil.prototype.syncClasses = function (view) {\n        var classValue = Array.from(this.cssClasses(view).keys()).join(\" \");\n        view.className = classValue;\n    };\n    ViewUtil.prototype.setStyle = function (view, styleName, value) {\n        view.style[styleName] = value;\n    };\n    ViewUtil.prototype.removeStyle = function (view, styleName) {\n        view.style[styleName] = view_1.unsetValue;\n    };\n    return ViewUtil;\n}());\nexports.ViewUtil = ViewUtil;\n//# sourceMappingURL=view-util.js.map"
    },
    {
      "id": 91,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/zone-js/dist/zone-nativescript.js",
      "name": "./~/nativescript-angular/zone-js/dist/zone-nativescript.js",
      "index": 86,
      "index2": 84,
      "size": 75025,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
      "issuerId": 79,
      "issuerName": "./~/nativescript-angular/nativescript.module.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./zone-js/dist/zone-nativescript",
          "loc": "5:0-43"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "./zone-js/dist/zone-nativescript",
          "loc": "6:0-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Zone$1 = (function (global) {\n    if (global['Zone']) {\n        throw new Error('Zone already loaded.');\n    }\n    var NO_ZONE = { name: 'NO ZONE' };\n    var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    var Zone = (function () {\n        function Zone(parent, zoneSpec) {\n            this._properties = null;\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global.Promise !== ZoneAwarePromise) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"root\", {\n            get: function () {\n                var zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = undefined; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            if (task.zone != this)\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            var reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = null;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleTask = function (task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                var newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(\"can not reschedule task to \" + this\n                            .name + \" which is descendants of the original zone \" + task.zone.name);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            var zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, null));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        };\n        Zone.prototype._updateTaskCount = function (task, count) {\n            var zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (var i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        };\n        return Zone;\n    }());\n    Zone.__symbol__ = __symbol__;\n    var DELEGATE_ZS = {\n        name: '',\n        onHasTask: function (delegate, _, target, hasTaskState) {\n            return delegate.hasTask(target, hasTaskState);\n        },\n        onScheduleTask: function (delegate, _, target, task) {\n            return delegate.scheduleTask(target, task);\n        },\n        onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) { return delegate.invokeTask(target, task, applyThis, applyArgs); },\n        onCancelTask: function (delegate, _, target, task) {\n            return delegate.cancelTask(target, task);\n        }\n    };\n    var ZoneDelegate = (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ?\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            var returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ?\n                this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                return this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n            }\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts.microTask > 0,\n                    macroTask: counts.macroTask > 0,\n                    eventTask: counts.eventTask > 0,\n                    change: type\n                };\n                // TODO(misko): what should happen if it throws?\n                this.hasTask(this.zone, isEmpty);\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = (function () {\n        function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            this.invoke = function () {\n                _numberOfNestedTaskFrames++;\n                try {\n                    self.runCount++;\n                    return self.zone.runTask(self, this, arguments);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            };\n        }\n        Object.defineProperty(ZoneTask.prototype, \"zone\", {\n            get: function () {\n                return this._zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ZoneTask.prototype, \"state\", {\n            get: function () {\n                return this._state;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ZoneTask.prototype.cancelScheduleRequest = function () {\n            this._transitionTo(notScheduled, scheduling);\n        };\n        ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(this.type + \" '\" + this.source + \"': can not transition to '\" + toState + \"', expecting state '\" + fromState1 + \"'\" + (fromState2 ?\n                    ' or \\'' + fromState2 + '\\'' :\n                    '') + \", was '\" + this._state + \"'.\");\n            }\n        };\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId;\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                data: this.data,\n                zone: this.zone.name,\n                invoke: this.invoke,\n                scheduleFn: this.scheduleFn,\n                cancelFn: this.cancelFn,\n                runCount: this.runCount,\n                callback: this.callback\n            };\n        };\n        return ZoneTask;\n    }());\n    var ZoneFrame = (function () {\n        function ZoneFrame(parent, zone) {\n            this.parent = parent;\n            this.zone = zone;\n        }\n        return ZoneFrame;\n    }());\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    \n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _currentZoneFrame = new ZoneFrame(null, new Zone(null, null));\n    var _currentTask = null;\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var _uncaughtPromiseErrors = [];\n    var _numberOfNestedTaskFrames = 0;\n    function scheduleQueueDrain() {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (global[symbolPromise]) {\n                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n    }\n    function scheduleMicroTask(task) {\n        scheduleQueueDrain();\n        _microTaskQueue.push(task);\n    }\n    function consoleError(e) {\n        if (Zone[__symbol__('ignoreConsoleErrorUncaughtError')]) {\n            return;\n        }\n        var rejection = e && e.rejection;\n        if (rejection) {\n            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        }\n        console.error(e);\n    }\n    function handleUnhandledRejection(e) {\n        consoleError(e);\n        try {\n            var handler = Zone[__symbol__('unhandledPromiseRejectionHandler')];\n            if (handler && typeof handler === 'function') {\n                handler.apply(this, [e]);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        consoleError(error);\n                    }\n                }\n            }\n            while (_uncaughtPromiseErrors.length) {\n                var _loop_1 = function () {\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(function () {\n                            throw uncaughtPromiseError;\n                        });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                };\n                while (_uncaughtPromiseErrors.length) {\n                    _loop_1();\n                }\n            }\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    var once = function () {\n        var wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        var onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError('Promise resolved with itself');\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            var then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(function () {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.apply(value, [\n                        onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false))\n                    ]);\n                }\n                catch (err) {\n                    onceWrapper(function () {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    value[__symbol__('currentTask')] = Zone.currentTask;\n                }\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        throw new Error('Uncaught (in promise): ' + value +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        var error_1 = err;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        scheduleQueueDrain();\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                var handler = Zone[__symbol__('rejectionHandledHandler')];\n                if (handler && typeof handler === 'function') {\n                    handler.apply(this, [{ rejection: promise[symbolValue], promise: promise }]);\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var delegate = promise[symbolState] ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                resolvePromise(chainPromise, true, zone.run(delegate, undefined, [promise[symbolValue]]));\n            }\n            catch (error) {\n                resolvePromise(chainPromise, false, error);\n            }\n        });\n    }\n    var ZoneAwarePromise = (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return 'function ZoneAwarePromise() { [native code] }';\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                _a = [res, rej], resolve = _a[0], reject = _a[1];\n                var _a;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var count = 0;\n            var resolvedValues = [];\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                var value = values_2[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then((function (index) { return function (value) {\n                    resolvedValues[index] = value;\n                    count--;\n                    if (!count) {\n                        resolve(resolvedValues);\n                    }\n                }; })(count), reject);\n                count++;\n            }\n            if (!count)\n                resolve(resolvedValues);\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    var symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        var proto = Ctor.prototype;\n        var originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            var _this = this;\n            var wrapped = new ZoneAwarePromise(function (resolve, reject) {\n                originalThen.call(_this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    function zoneify(fn) {\n        return function () {\n            var resultPromise = fn.apply(this, arguments);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            var Ctor = resultPromise.constructor;\n            if (!Ctor[symbolThenPatched]) {\n                patchThen(Ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        var fetch_1 = global['fetch'];\n        if (typeof fetch_1 == 'function') {\n            global['fetch'] = zoneify(fetch_1);\n        }\n    }\n    // This is not part of public API, but it is usefull for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    /*\n     * This code patches Error so that:\n     *   - It ignores un-needed stack frames.\n     *   - It Shows the associated Zone for reach frame.\n     */\n    var FrameType;\n    (function (FrameType) {\n        /// Skip this frame when printing out stack\n        FrameType[FrameType[\"blackList\"] = 0] = \"blackList\";\n        /// This frame marks zone transition\n        FrameType[FrameType[\"transition\"] = 1] = \"transition\";\n    })(FrameType || (FrameType = {}));\n    var NativeError = global[__symbol__('Error')] = global.Error;\n    // Store the frames which should be removed from the stack frames\n    var blackListedStackFrames = {};\n    // We must find the frame where Error was created, otherwise we assume we don't understand stack\n    // the frame will be an array, because Error with new or without new will\n    // have different stack frames.\n    var zoneAwareErrorStartFrames = [];\n    global.Error = ZoneAwareError;\n    var stackRewrite = 'stackRewrite';\n    // some functions are not easily to be detected here,\n    // for example Timeout.ZoneTask.invoke, if we want to detect those functions\n    // by detect zone, we have to run all patched APIs, it is too risky\n    // so for those functions, just check whether the stack contains the string or not.\n    var otherZoneAwareFunctionNames = [\n        'ZoneTask.invoke', 'ZoneAware', 'getStacktraceWithUncaughtError', 'new LongStackTrace',\n        'long-stack-trace'\n    ];\n    function attachZoneAndRemoveInternalZoneFrames(error) {\n        // Save original stack trace\n        error.originalStack = error.stack;\n        // Process the stack trace and rewrite the frames.\n        if (ZoneAwareError[stackRewrite] && error.originalStack) {\n            var frames_1 = error.originalStack.split('\\n');\n            var zoneFrame = _currentZoneFrame;\n            var i_1 = 0;\n            // Find the first frame\n            while (i_1 < frames_1.length &&\n                zoneAwareErrorStartFrames.filter(function (zf) { return zf.trim() === frames_1[i_1].trim(); }).length === 0) {\n                i_1++;\n            }\n            var _loop_2 = function () {\n                // trim here because blackListedStackFrames store the trimmed frames\n                var frame = frames_1[i_1].trim();\n                if (frame) {\n                    var frameType = blackListedStackFrames.hasOwnProperty(frame) && blackListedStackFrames[frame];\n                    if (frameType === FrameType.blackList) {\n                        frames_1.splice(i_1, 1);\n                        i_1--;\n                    }\n                    else if (otherZoneAwareFunctionNames\n                        .filter(function (f) { return frame.toLowerCase().indexOf(f.toLowerCase()) !== -1; })\n                        .length > 0) {\n                        frames_1.splice(i_1, 1);\n                        i_1--;\n                    }\n                    else if (frameType === FrameType.transition) {\n                        if (zoneFrame.parent) {\n                            // This is the special frame where zone changed. Print and process it accordingly\n                            zoneFrame = zoneFrame.parent;\n                        }\n                        else {\n                            zoneFrame = null;\n                        }\n                        frames_1.splice(i_1, 1);\n                        i_1--;\n                    }\n                    else {\n                        frames_1[i_1] += \" [\" + zoneFrame.zone.name + \"]\";\n                    }\n                }\n            };\n            for (; i_1 < frames_1.length && zoneFrame; i_1++) {\n                _loop_2();\n            }\n            var finalStack = frames_1.join('\\n');\n            try {\n                error.stack = error.zoneAwareStack = finalStack;\n            }\n            catch (nonWritableErr) {\n                // in some browser, the error.stack is readonly such as PhantomJS\n                // so we need to store the stack frames to zoneAwareError directly\n            }\n        }\n    }\n    /**\n     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as\n     * adds zone information to it.\n     */\n    function ZoneAwareError() {\n        // We always have to return native error otherwise the browser console will not work.\n        var error = NativeError.apply(this, arguments);\n        if (!error.stack) {\n            // in IE, the error.stack will be undefined\n            // when error was constructed, it will only\n            // be available when throw\n            try {\n                throw error;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        // 1. attach zone information to stack frame\n        // 2. remove zone internal stack frames\n        attachZoneAndRemoveInternalZoneFrames(error);\n        return error;\n    }\n    // Copy the prototype so that instanceof operator works as expected\n    ZoneAwareError.prototype = NativeError.prototype;\n    ZoneAwareError[Zone.__symbol__('blacklistedStackFrames')] = blackListedStackFrames;\n    ZoneAwareError[stackRewrite] = false;\n    // those properties need special handling\n    var specialPropertyNames = ['stackTraceLimit', 'captureStackTrace', 'prepareStackTrace'];\n    // those properties of NativeError should be set to ZoneAwareError\n    var nativeErrorProperties = Object.keys(NativeError);\n    if (nativeErrorProperties) {\n        nativeErrorProperties.forEach(function (prop) {\n            if (specialPropertyNames.filter(function (sp) { return sp === prop; }).length === 0) {\n                Object.defineProperty(ZoneAwareError, prop, {\n                    get: function () {\n                        return NativeError[prop];\n                    },\n                    set: function (value) {\n                        NativeError[prop] = value;\n                    }\n                });\n            }\n        });\n    }\n    if (NativeError.hasOwnProperty('stackTraceLimit')) {\n        // Extend default stack limit as we will be removing few frames.\n        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);\n        // make sure that ZoneAwareError has the same property which forwards to NativeError.\n        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {\n            get: function () {\n                return NativeError.stackTraceLimit;\n            },\n            set: function (value) {\n                return NativeError.stackTraceLimit = value;\n            }\n        });\n    }\n    if (NativeError.hasOwnProperty('captureStackTrace')) {\n        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {\n            // add named function here because we need to remove this\n            // stack frame when prepareStackTrace below\n            value: function zoneCaptureStackTrace(targetObject, constructorOpt) {\n                NativeError.captureStackTrace(targetObject, constructorOpt);\n            }\n        });\n    }\n    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {\n        get: function () {\n            return NativeError.prepareStackTrace;\n        },\n        set: function (value) {\n            if (!value || typeof value !== 'function') {\n                return NativeError.prepareStackTrace = value;\n            }\n            return NativeError.prepareStackTrace = function (error, structuredStackTrace) {\n                // remove additional stack information from ZoneAwareError.captureStackTrace\n                if (structuredStackTrace) {\n                    for (var i = 0; i < structuredStackTrace.length; i++) {\n                        var st = structuredStackTrace[i];\n                        // remove the first function which name is zoneCaptureStackTrace\n                        if (st.getFunctionName() === 'zoneCaptureStackTrace') {\n                            structuredStackTrace.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                return value.apply(this, [error, structuredStackTrace]);\n            };\n        }\n    });\n    // Now we need to populate the `blacklistedStackFrames` as well as find the\n    // run/runGuraded/runTask frames. This is done by creating a detect zone and then threading\n    // the execution through all of the above methods so that we can look at the stack trace and\n    // find the frames of interest.\n    var detectZone = Zone.current.fork({\n        name: 'detect',\n        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n            // Here only so that it will show up in the stack frame so that it can be black listed.\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        },\n        onHandleError: function (parentZD, current, target, error) {\n            if (error.originalStack && Error === ZoneAwareError) {\n                var frames_2 = error.originalStack.split(/\\n/);\n                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;\n                while (frames_2.length) {\n                    var frame = frames_2.shift();\n                    // On safari it is possible to have stack frame with no line number.\n                    // This check makes sure that we don't filter frames on name only (must have\n                    // linenumber)\n                    if (/:\\d+:\\d+/.test(frame)) {\n                        // Get rid of the path so that we don't accidentally find function name in path.\n                        // In chrome the separator is `(` and `@` in FF and safari\n                        // Chrome: at Zone.run (zone.js:100)\n                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)\n                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        var fnName = frame.split('(')[0].split('@')[0];\n                        var frameType = FrameType.transition;\n                        if (fnName.indexOf('ZoneAwareError') !== -1) {\n                            // we found the ZoneAwareError start frame\n                            // the frame will be different when call Error(...)\n                            // and new Error(...), so we store them both\n                            zoneAwareErrorStartFrames.push(frame);\n                        }\n                        if (fnName.indexOf('runGuarded') !== -1) {\n                            runGuardedFrame = true;\n                        }\n                        else if (fnName.indexOf('runTask') !== -1) {\n                            runTaskFrame = true;\n                        }\n                        else if (fnName.indexOf('run') !== -1) {\n                            runFrame = true;\n                        }\n                        else {\n                            frameType = FrameType.blackList;\n                        }\n                        blackListedStackFrames[frame.trim()] = frameType;\n                        // Once we find all of the frames we can stop looking.\n                        if (runFrame && runGuardedFrame && runTaskFrame) {\n                            ZoneAwareError[stackRewrite] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    });\n    // carefully constructor a stack frame which contains all of the frames of interest which\n    // need to be detected and blacklisted.\n    // use this method to handle\n    // 1. IE issue, the error.stack can only be not undefined after throw\n    // 2. handle Error(...) without new options\n    var throwError = function (message, withNew) {\n        try {\n            if (withNew) {\n                throw new Error(message);\n            }\n            else {\n                throw Error(message);\n            }\n        }\n        catch (err) {\n            return err;\n        }\n    };\n    var nativeStackTraceLimit = NativeError.stackTraceLimit;\n    // in some system/browser, some additional stack frames\n    // will be generated (such as inline function)\n    // so the the stack frame to check ZoneAwareError Start\n    // maybe ignored because the frame's number will exceed\n    // stackTraceLimit, so we just set stackTraceLimit to 100\n    // and reset after all detect work is done.\n    NativeError.stackTraceLimit = 100;\n    var detectRunFn = function () {\n        detectZone.run(function () {\n            detectZone.runGuarded(function () {\n                throw throwError('blacklistStackFrames', true);\n            });\n        });\n    };\n    var detectRunWithoutNewFn = function () {\n        detectZone.run(function () {\n            detectZone.runGuarded(function () {\n                throw throwError('blacklistStackFrames');\n            });\n        });\n    };\n    // Cause the error to extract the stack frames.\n    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunFn, null, function () { return null; }, null));\n    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunWithoutNewFn, null, function () { return null; }, null));\n    function handleDetectError(error) {\n        var frames = error.stack ? error.stack.split(/\\n/) : [];\n        while (frames.length) {\n            var frame = frames.shift();\n            // On safari it is possible to have stack frame with no line number.\n            // This check makes sure that we don't filter frames on name only (must have\n            // linenumber)\n            var trimmedFrame = frame.trim().split('[')[0].trim();\n            if (/:\\d+:\\d+/.test(trimmedFrame) && !blackListedStackFrames.hasOwnProperty(trimmedFrame)) {\n                blackListedStackFrames[trimmedFrame] = FrameType.blackList;\n            }\n            // when we found runGuarded or runTask, we should stop\n            // otherwise we will store some stack frames like\n            // module.load, require and something like that\n            var fnName = frame.split('(')[0].split('@')[0];\n            if (fnName.indexOf('runGuarded') !== -1) {\n                break;\n            }\n            else if (fnName.indexOf('runTask') !== -1) {\n                break;\n            }\n        }\n    }\n    var detectEmptyZone = Zone.root.fork({\n        name: 'detectEmptyZone',\n        onHandleError: function (parentDelegate, currentZone, targetZone, error) {\n            parentDelegate.handleError(targetZone, error);\n            handleDetectError(error);\n            return false;\n        }\n    });\n    var detectZoneWithCallbacks = Zone.root.fork({\n        name: 'detectCallbackZone',\n        onFork: function (parentDelegate, currentZone, targetZone, zoneSpec) {\n            // we need to generate Error with or without new\n            handleDetectError(throwError('onFork'));\n            handleDetectError(throwError('onFork', false));\n            return parentDelegate.fork(targetZone, zoneSpec);\n        },\n        onIntercept: function (parentDelegate, currentZone, targetZone, delegate, source) {\n            handleDetectError(throwError('onIntercept'));\n            handleDetectError(throwError('onIntercept', false));\n            return parentDelegate.intercept(targetZone, delegate, source);\n        },\n        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n            handleDetectError(throwError('onInvoke'));\n            handleDetectError(throwError('onInvoke', false));\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        },\n        onScheduleTask: function (parentZoneDelegate, currentZone, targetZone, task) {\n            handleDetectError(throwError('onScheduleTask'));\n            handleDetectError(throwError('onScheduleTask', false));\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        },\n        onInvokeTask: function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n            handleDetectError(throwError('onInvokeTask'));\n            handleDetectError(throwError('onInvokeTask', false));\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        },\n        onCancelTask: function (parentZoneDelegate, currentZone, targetZone, task) {\n            handleDetectError(throwError('onCancelTask'));\n            handleDetectError(throwError('onCancelTask', false));\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            handleDetectError(throwError('onHasTask'));\n            handleDetectError(throwError('onHasTask', false));\n            return delegate.hasTask(target, hasTaskState);\n        },\n        onHandleError: function (parentDelegate, currentZone, targetZone, error) {\n            parentDelegate.handleError(targetZone, error);\n            handleDetectError(error);\n            return false;\n        }\n    });\n    var detectFn = function () {\n        throw throwError('zoneAwareFrames');\n    };\n    var detectWithoutNewFn = function () {\n        throw throwError('zoneAwareFrames', false);\n    };\n    var detectPromiseFn = function () {\n        new Promise(function (resolve, reject) {\n            reject(throwError('zoneAwareFrames'));\n        });\n    };\n    var detectPromiseWithoutNewFn = function () {\n        new Promise(function (resolve, reject) {\n            reject(throwError('zoneAwareFrames', false));\n        });\n    };\n    var detectPromiseCaughtFn = function () {\n        var p = new Promise(function (resolve, reject) {\n            reject(throwError('zoneAwareFrames'));\n        });\n        p.catch(function (err) {\n            throw err;\n        });\n    };\n    var detectPromiseCaughtWithoutNewFn = function () {\n        var p = new Promise(function (resolve, reject) {\n            reject(throwError('zoneAwareFrames', false));\n        });\n        p.catch(function (err) {\n            throw err;\n        });\n    };\n    // Cause the error to extract the stack frames.\n    detectEmptyZone.runTask(detectEmptyZone.scheduleEventTask('detect', detectFn, null, function () { return null; }, null));\n    detectZoneWithCallbacks.runTask(detectZoneWithCallbacks.scheduleEventTask('detect', detectFn, null, function () { return null; }, null));\n    detectEmptyZone.runTask(detectEmptyZone.scheduleMacroTask('detect', detectFn, null, function () { return null; }, null));\n    detectZoneWithCallbacks.runTask(detectZoneWithCallbacks.scheduleMacroTask('detect', detectFn, null, function () { return null; }, null));\n    detectEmptyZone.runTask(detectEmptyZone.scheduleMicroTask('detect', detectFn, null, function () { return null; }));\n    detectZoneWithCallbacks.runTask(detectZoneWithCallbacks.scheduleMicroTask('detect', detectFn, null, function () { return null; }));\n    detectEmptyZone.runGuarded(function () {\n        detectEmptyZone.run(detectFn);\n    });\n    detectZoneWithCallbacks.runGuarded(function () {\n        detectEmptyZone.run(detectFn);\n    });\n    detectEmptyZone.runTask(detectEmptyZone.scheduleEventTask('detect', detectWithoutNewFn, null, function () { return null; }, null));\n    detectZoneWithCallbacks.runTask(detectZoneWithCallbacks.scheduleEventTask('detect', detectWithoutNewFn, null, function () { return null; }, null));\n    detectEmptyZone.runTask(detectEmptyZone.scheduleMacroTask('detect', detectWithoutNewFn, null, function () { return null; }, null));\n    detectZoneWithCallbacks.runTask(detectZoneWithCallbacks.scheduleMacroTask('detect', detectWithoutNewFn, null, function () { return null; }, null));\n    detectEmptyZone.runTask(detectEmptyZone.scheduleMicroTask('detect', detectWithoutNewFn, null, function () { return null; }));\n    detectZoneWithCallbacks.runTask(detectZoneWithCallbacks.scheduleMicroTask('detect', detectWithoutNewFn, null, function () { return null; }));\n    detectEmptyZone.runGuarded(function () {\n        detectEmptyZone.run(detectWithoutNewFn);\n    });\n    detectZoneWithCallbacks.runGuarded(function () {\n        detectEmptyZone.run(detectWithoutNewFn);\n    });\n    detectEmptyZone.runGuarded(detectPromiseFn);\n    detectZoneWithCallbacks.runGuarded(detectPromiseFn);\n    detectEmptyZone.runGuarded(detectPromiseWithoutNewFn);\n    detectZoneWithCallbacks.runGuarded(detectPromiseWithoutNewFn);\n    detectEmptyZone.runGuarded(detectPromiseCaughtFn);\n    detectZoneWithCallbacks.runGuarded(detectPromiseCaughtFn);\n    detectEmptyZone.runGuarded(detectPromiseCaughtWithoutNewFn);\n    detectZoneWithCallbacks.runGuarded(detectPromiseCaughtWithoutNewFn);\n    NativeError.stackTraceLimit = nativeStackTraceLimit;\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis}\n */\nvar zoneSymbol = function (n) { return \"__zone_symbol__\" + n; };\nvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\n\n\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\nvar isNode = (!('nw' in _global) && typeof process !== 'undefined' &&\n    {}.toString.call(process) === '[object process]');\n\n// we are in electron of nw, so we are both browser and nodejs\nvar isMix = typeof process !== 'undefined' &&\n    {}.toString.call(process) === '[object process]' && !isWebWorker &&\n    !!(typeof window !== 'undefined' && window['HTMLElement']);\nfunction patchProperty(obj, prop) {\n    var desc = Object.getOwnPropertyDescriptor(obj, prop) || { enumerable: true, configurable: true };\n    var originalDesc = Object.getOwnPropertyDescriptor(obj, 'original' + prop);\n    if (!originalDesc && desc.get) {\n        Object.defineProperty(obj, 'original' + prop, { enumerable: false, configurable: true, get: desc.get });\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    var eventName = prop.substr(2);\n    var _prop = zoneSymbol('_' + prop);\n    desc.set = function (fn) {\n        if (this[_prop]) {\n            this.removeEventListener(eventName, this[_prop]);\n        }\n        if (typeof fn === 'function') {\n            var wrapFn = function (event) {\n                var result;\n                result = fn.apply(this, arguments);\n                if (result != undefined && !result)\n                    event.preventDefault();\n            };\n            this[_prop] = wrapFn;\n            this.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            this[_prop] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        var r = this[_prop] || null;\n        // result will be null when use inline event attribute,\n        // such as <button onclick=\"func();\">OK</button>\n        // because the onclick function is internal raw uncompiled handler\n        // the onclick will be evaluated when first time event was triggered or\n        // the property is accessed, https://github.com/angular/zone.js/issues/525\n        // so we should use original native get to retrieve the handler\n        if (r === null) {\n            if (originalDesc && originalDesc.get) {\n                r = originalDesc.get.apply(this, arguments);\n                if (r) {\n                    desc.set.apply(this, [r]);\n                    if (typeof this['removeAttribute'] === 'function') {\n                        this.removeAttribute(prop);\n                    }\n                }\n            }\n        }\n        return this[_prop] || null;\n    };\n    Object.defineProperty(obj, prop, desc);\n}\n\nfunction patchOnProperties(obj, properties) {\n    var onProperties = [];\n    for (var prop in obj) {\n        if (prop.substr(0, 2) == 'on') {\n            onProperties.push(prop);\n        }\n    }\n    for (var j = 0; j < onProperties.length; j++) {\n        patchProperty(obj, onProperties[j]);\n    }\n    if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i]);\n        }\n    }\n}\n\nvar EVENT_TASKS = zoneSymbol('eventTasks');\n// For EventTarget\nvar ADD_EVENT_LISTENER = 'addEventListener';\nvar REMOVE_EVENT_LISTENER = 'removeEventListener';\nfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\n    var eventTasks = target[EVENT_TASKS];\n    if (eventTasks) {\n        for (var i = 0; i < eventTasks.length; i++) {\n            var eventTask = eventTasks[i];\n            var data = eventTask.data;\n            var listener = data.handler;\n            if ((data.handler === handler || listener.listener === handler) &&\n                data.useCapturing === capture && data.eventName === name) {\n                if (remove) {\n                    eventTasks.splice(i, 1);\n                }\n                return eventTask;\n            }\n        }\n    }\n    return null;\n}\nfunction attachRegisteredEvent(target, eventTask, isPrepend) {\n    var eventTasks = target[EVENT_TASKS];\n    if (!eventTasks) {\n        eventTasks = target[EVENT_TASKS] = [];\n    }\n    if (isPrepend) {\n        eventTasks.unshift(eventTask);\n    }\n    else {\n        eventTasks.push(eventTask);\n    }\n}\nvar defaultListenerMetaCreator = function (self, args) {\n    return {\n        useCapturing: args[2],\n        eventName: args[0],\n        handler: args[1],\n        target: self || _global,\n        name: args[0],\n        invokeAddFunc: function (addFnSymbol, delegate) {\n            if (delegate && delegate.invoke) {\n                return this.target[addFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\n            }\n            else {\n                return this.target[addFnSymbol](this.eventName, delegate, this.useCapturing);\n            }\n        },\n        invokeRemoveFunc: function (removeFnSymbol, delegate) {\n            if (delegate && delegate.invoke) {\n                return this.target[removeFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\n            }\n            else {\n                return this.target[removeFnSymbol](this.eventName, delegate, this.useCapturing);\n            }\n        }\n    };\n};\nfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates, isPrepend, metaCreator) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (allowDuplicates === void 0) { allowDuplicates = false; }\n    if (isPrepend === void 0) { isPrepend = false; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    var addFnSymbol = zoneSymbol(addFnName);\n    var removeFnSymbol = zoneSymbol(removeFnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    function scheduleEventListener(eventTask) {\n        var meta = eventTask.data;\n        attachRegisteredEvent(meta.target, eventTask, isPrepend);\n        return meta.invokeAddFunc(addFnSymbol, eventTask);\n    }\n    function cancelEventListener(eventTask) {\n        var meta = eventTask.data;\n        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\n        return meta.invokeRemoveFunc(removeFnSymbol, eventTask);\n    }\n    return function zoneAwareAddListener(self, args) {\n        var data = metaCreator(self, args);\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var delegate = null;\n        if (typeof data.handler == 'function') {\n            delegate = data.handler;\n        }\n        else if (data.handler && data.handler.handleEvent) {\n            delegate = function (event) { return data.handler.handleEvent(event); };\n        }\n        var validZoneHandler = false;\n        try {\n            // In cross site contexts (such as WebDriver frameworks like Selenium),\n            // accessing the handler object here will cause an exception to be thrown which\n            // will fail tests prematurely.\n            validZoneHandler = data.handler && data.handler.toString() === '[object FunctionWrapper]';\n        }\n        catch (error) {\n            // Returning nothing here is fine, because objects in a cross-site context are unusable\n            return;\n        }\n        // Ignore special listeners of IE11 & Edge dev tools, see\n        // https://github.com/angular/zone.js/issues/150\n        if (!delegate || validZoneHandler) {\n            return data.invokeAddFunc(addFnSymbol, data.handler);\n        }\n        if (!allowDuplicates) {\n            var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, false);\n            if (eventTask) {\n                // we already registered, so this will have noop.\n                return data.invokeAddFunc(addFnSymbol, eventTask);\n            }\n        }\n        var zone = Zone.current;\n        var source = data.target.constructor['name'] + '.' + addFnName + ':' + data.eventName;\n        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\n    };\n}\nfunction makeZoneAwareRemoveListener(fnName, useCapturingParam, metaCreator) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    var symbol = zoneSymbol(fnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    return function zoneAwareRemoveListener(self, args) {\n        var data = metaCreator(self, args);\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, true);\n        if (eventTask) {\n            eventTask.zone.cancelTask(eventTask);\n        }\n        else {\n            data.invokeRemoveFunc(symbol, data.handler);\n        }\n    };\n}\n\n\nvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\nvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\nfunction patchEventTargetMethods(obj, addFnName, removeFnName, metaCreator) {\n    if (addFnName === void 0) { addFnName = ADD_EVENT_LISTENER; }\n    if (removeFnName === void 0) { removeFnName = REMOVE_EVENT_LISTENER; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    if (obj && obj[addFnName]) {\n        patchMethod(obj, addFnName, function () { return makeZoneAwareAddListener(addFnName, removeFnName, true, false, false, metaCreator); });\n        patchMethod(obj, removeFnName, function () { return makeZoneAwareRemoveListener(removeFnName, true, metaCreator); });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n// wrap some native API on `window`\n\n\nfunction createNamedFn(name, delegate) {\n    try {\n        return (Function('f', \"return function \" + name + \"(){return f(this, arguments)}\"))(delegate);\n    }\n    catch (error) {\n        // if we fail, we must be CSP, just return delegate.\n        return function () {\n            return delegate(this, arguments);\n        };\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\n\n\n\nZone[zoneSymbol('patchEventTargetMethods')] = patchEventTargetMethods;\nZone[zoneSymbol('patchOnProperties')] = patchOnProperties;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                delete tasksByHandleId[data.handleId];\n            }\n        }\n        \n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        tasksByHandleId[data.handleId] = task;\n        return task;\n    }\n    function clearTask(task) {\n        delete tasksByHandleId[task.data.handleId];\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var zone = Zone.current;\n                var options = {\n                    handleId: null,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n                    args: args\n                };\n                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar set = 'set';\nvar clear = 'clear';\n// Timers\npatchTimer(global, set, clear, 'Timeout');\npatchTimer(global, set, clear, 'Interval');\npatchTimer(global, set, clear, 'Immediate');\n\n})));\n"
    },
    {
      "id": 92,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/nativescript-intl.android.js",
      "name": "./~/nativescript-intl/nativescript-intl.android.js",
      "index": 139,
      "index2": 136,
      "size": 6806,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/index.js",
      "issuerId": 190,
      "issuerName": "./~/nativescript-intl/index.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 190,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/index.js",
          "module": "./~/nativescript-intl/index.js",
          "moduleName": "./~/nativescript-intl/index.js",
          "type": "cjs require",
          "userRequest": "./nativescript-intl",
          "loc": "3:26-56"
        },
        {
          "moduleId": 190,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/index.js",
          "module": "./~/nativescript-intl/index.js",
          "moduleName": "./~/nativescript-intl/index.js",
          "type": "cjs require",
          "userRequest": "./nativescript-intl",
          "loc": "4:26-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nativescript_intl_common_1 = require(\"./nativescript-intl-common\");\nvar localesCache = new Map();\nfunction getNativeLocale(locale) {\n    if (localesCache.has(locale)) {\n        return localesCache.get(locale);\n    }\n    var result;\n    if (locale) {\n        locale = locale.replace(/_/g, \"-\");\n        var firstHypenIndex = locale.indexOf(\"-\");\n        var lang = \"\";\n        var country = \"\";\n        if (firstHypenIndex > -1) {\n            lang = locale.substr(0, firstHypenIndex);\n            var nextHypenIndex = locale.substr(firstHypenIndex + 1).indexOf(\"-\");\n            country = locale.substr(firstHypenIndex + 1, (nextHypenIndex > -1) ? nextHypenIndex : undefined);\n        }\n        else {\n            lang = locale;\n        }\n        if (country !== \"\") {\n            result = new java.util.Locale(lang, country);\n        }\n        else {\n            result = new java.util.Locale(lang);\n        }\n    }\n    else {\n        result = new java.util.Locale(\"en\", \"US\");\n    }\n    localesCache.set(locale, result);\n    return result;\n}\nvar DateTimeFormat = (function (_super) {\n    __extends(DateTimeFormat, _super);\n    function DateTimeFormat() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateTimeFormat.prototype.getNativePattern = function (patternDefinition, locale) {\n        var result = \"\";\n        var flag = 0;\n        var nativeLocale;\n        if (locale) {\n            nativeLocale = getNativeLocale(locale);\n            flag++;\n        }\n        if (patternDefinition.date) {\n            flag = flag + 2;\n        }\n        if (patternDefinition.time) {\n            flag = flag + 4;\n        }\n        var dateFormat;\n        switch (flag) {\n            case 0:\n                dateFormat = java.text.DateFormat.getDateTimeInstance();\n                break;\n            case 1:\n                dateFormat = java.text.DateFormat.getDateTimeInstance(0, 0, nativeLocale);\n                break;\n            case 2:\n                dateFormat = java.text.DateFormat.getDateInstance(patternDefinition.date === nativescript_intl_common_1.FULL ? 0 : 3);\n                break;\n            case 3:\n                dateFormat =\n                    java.text.DateFormat.getDateInstance(patternDefinition.date === nativescript_intl_common_1.FULL ? 0 : 3, nativeLocale);\n                break;\n            case 4:\n                dateFormat = java.text.DateFormat.getTimeInstance(1);\n                break;\n            case 5:\n                dateFormat = java.text.DateFormat.getTimeInstance(1, nativeLocale);\n                break;\n            case 6:\n                dateFormat = java.text.DateFormat.getDateTimeInstance(patternDefinition.date === nativescript_intl_common_1.FULL ? 0 : 3, 1);\n                break;\n            case 7:\n                dateFormat =\n                    java.text.DateFormat.getDateTimeInstance(patternDefinition.date === nativescript_intl_common_1.FULL ? 0 : 3, 1, nativeLocale);\n                break;\n            default:\n                break;\n        }\n        result = dateFormat.toPattern();\n        return result;\n    };\n    DateTimeFormat.prototype.formatNative = function (pattern, locale, date) {\n        var sdf = locale ?\n            new java.text.SimpleDateFormat(pattern, getNativeLocale(locale)) :\n            new java.text.SimpleDateFormat(pattern);\n        return sdf.format(date ? new java.util.Date(date.valueOf()) : new java.util.Date()).toString();\n    };\n    return DateTimeFormat;\n}(nativescript_intl_common_1.DateTimeFormat));\nexports.DateTimeFormat = DateTimeFormat;\nvar NumberFormat = (function (_super) {\n    __extends(NumberFormat, _super);\n    function NumberFormat() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberFormat.prototype.formatNative = function (value, locale, options, pattern) {\n        var numberFormat;\n        if (pattern) {\n            numberFormat = new java.text.DecimalFormat(pattern);\n        }\n        else {\n            if (options) {\n                switch (options.style.toLowerCase()) {\n                    case \"decimal\":\n                        numberFormat = java.text.NumberFormat.getNumberInstance(getNativeLocale(locale));\n                        break;\n                    case \"percent\":\n                        numberFormat = java.text.NumberFormat.getPercentInstance(getNativeLocale(locale));\n                        break;\n                    case \"currency\":\n                        numberFormat = java.text.NumberFormat.getCurrencyInstance(getNativeLocale(locale));\n                        if (options.currency !== void 0) {\n                            numberFormat.setCurrency(java.util.Currency.getInstance(options.currency));\n                        }\n                        break;\n                    default:\n                        numberFormat = java.text.NumberFormat.getNumberInstance(getNativeLocale(locale));\n                        break;\n                }\n            }\n            else {\n                numberFormat = java.text.NumberFormat.getNumberInstance(getNativeLocale(locale));\n            }\n        }\n        if (options && options.minimumIntegerDigits !== void 0) {\n            numberFormat.setMinimumIntegerDigits(options.minimumIntegerDigits);\n        }\n        if (options && options.minimumFractionDigits !== void 0) {\n            numberFormat.setMinimumFractionDigits(options.minimumFractionDigits);\n        }\n        if (options && options.maximumFractionDigits !== void 0) {\n            numberFormat.setMaximumFractionDigits(options.maximumFractionDigits);\n        }\n        if (options && options.useGrouping !== void 0) {\n            numberFormat.setGroupingUsed(options.useGrouping);\n        }\n        var decimalFormatSymbols = locale ?\n            new java.text.DecimalFormatSymbols(getNativeLocale(locale)) :\n            new java.text.DecimalFormatSymbols();\n        numberFormat.setDecimalFormatSymbols(decimalFormatSymbols);\n        if (options && (options.style.toLowerCase() === \"currency\" && options.currencyDisplay === \"code\")) {\n            if (!pattern) {\n                var currrentPattern = numberFormat.toPattern();\n                currrentPattern = currrentPattern.replace(\"¤\", \"¤¤\");\n                numberFormat = new java.text.DecimalFormat(currrentPattern);\n                numberFormat.setDecimalFormatSymbols(decimalFormatSymbols);\n            }\n            if (options.currency !== void 0) {\n                decimalFormatSymbols.setCurrency(java.util.Currency.getInstance(options.currency));\n            }\n        }\n        return numberFormat.format(value);\n    };\n    return NumberFormat;\n}(nativescript_intl_common_1.NumberFormat));\nexports.NumberFormat = NumberFormat;\n"
    },
    {
      "id": 93,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "index": 219,
      "index2": 235,
      "size": 25499,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
      "issuerId": 36,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.js",
          "type": "cjs require",
          "userRequest": "./../",
          "loc": "4:18-34"
        },
        {
          "moduleId": 194,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "type": "cjs require",
          "userRequest": "../../",
          "loc": "3:18-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar commonModule = require(\"./chart-common\");\nvar commonAxisModule = require(\"./visualization/views/chart-axis-common\");\nvar eventDataCommonModule = require(\"./misc/chart-event-data-common\");\nvar publicEnumModule = require(\"./misc/chart-public-enum\");\nvar labelStyleCommonModule = require(\"./visualization/parts/chart-label-style-common\");\nvar paletteCommonModule = require(\"./visualization/parts/chart-palette-common\");\nvar trackBallCommonModule = require(\"./visualization/parts/chart-track-ball-common\");\nvar cartesianChartGridCommonModule = require(\"./visualization/parts/chart-cartesian-chart-grid-common\");\nvar legendViewModule = require(\"./visualization/views/chart-legend-view\");\nvar axisModule = require(\"./visualization/views/chart-axis\");\nvar seriesModule = require(\"./visualization/views/chart-series\");\nvar annotationModule = require(\"./visualization/parts/chart-annotation\");\nvar cartesianChartGridModule = require(\"./visualization/parts/chart-cartesian-chart-grid\");\nvar trackBallModule = require(\"./visualization/parts/chart-track-ball\");\nvar floatType = java.lang.Float.class.getField(\"TYPE\").get(null);\nrequire(\"utils/module-merge\").merge(commonModule, exports);\nrequire(\"utils/module-merge\").merge(publicEnumModule, exports);\nrequire(\"utils/module-merge\").merge(legendViewModule, exports);\nrequire(\"utils/module-merge\").merge(axisModule, exports);\nrequire(\"utils/module-merge\").merge(eventDataCommonModule, exports);\nrequire(\"utils/module-merge\").merge(labelStyleCommonModule, exports);\nrequire(\"utils/module-merge\").merge(seriesModule, exports);\nrequire(\"utils/module-merge\").merge(paletteCommonModule, exports);\nrequire(\"utils/module-merge\").merge(annotationModule, exports);\nrequire(\"utils/module-merge\").merge(cartesianChartGridCommonModule, exports);\nrequire(\"utils/module-merge\").merge(cartesianChartGridModule, exports);\nrequire(\"utils/module-merge\").merge(trackBallModule, exports);\nvar RadPieChart = (function (_super) {\n    __extends(RadPieChart, _super);\n    function RadPieChart() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(RadPieChart.prototype, \"android\", {\n        get: function () {\n            return this._rootLayout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadPieChart.prototype, \"androidView\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadPieChart.prototype, \"rootLayout\", {\n        get: function () {\n            return this._rootLayout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadPieChart.prototype, \"_nativeView\", {\n        get: function () {\n            return this._rootLayout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadPieChart.prototype.createNativeView = function () {\n        this._android = new com.telerik.widget.chart.visualization.pieChart.RadPieChartView(this._context);\n        this._rootLayout = new android.widget.RelativeLayout(this._context);\n        var lParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.MATCH_PARENT, android.widget.RelativeLayout.LayoutParams.MATCH_PARENT);\n        this._rootLayout.addView(this._android);\n        if (this.legend) {\n            this.legend.updateLegendView(this);\n        }\n        this.initializer.loadSeries(this);\n        this.initSelectionBehavior();\n        this.nativeView = this._rootLayout;\n        return this.nativeView;\n    };\n    RadPieChart.prototype._clearAndroidReference = function () {\n        this.detachSeries();\n        if (this._selectionBehavior) {\n            this._android.getBehaviors().remove(this._selectionBehavior);\n            this._selectionBehavior = null;\n        }\n        _super.prototype['_clearAndroidReference'].call(this);\n    };\n    RadPieChart.prototype._onDetach = function (force) {\n        this.detachSeries();\n        _super.prototype['_onDetach'].call(this, force);\n    };\n    RadPieChart.prototype.detachSeries = function () {\n        var thisAndroid = this._android;\n        if (thisAndroid) {\n            this._rootLayout = undefined;\n            if (this.series) {\n                for (var i = 0; i < this.series.length; i++) {\n                    if (thisAndroid.getSeries().indexOf(this.series.getItem(i).android) !== -1) {\n                        thisAndroid.getSeries().remove(this.series.getItem(i).android);\n                    }\n                }\n            }\n        }\n    };\n    RadPieChart.prototype.initSelectionBehavior = function () {\n        if (!this._selectionBehavior) {\n            this._selectionBehavior = new com.telerik.widget.chart.visualization.behaviors.ChartSelectionBehavior();\n            this._selectionBehavior.setDataPointsSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.NONE);\n            this._selectionBehavior.setSeriesSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.NONE);\n            var that = new WeakRef(this);\n            this._selectionBehavior.setSelectionChangeListener(new com.telerik.widget.chart.visualization.behaviors.ChartSelectionChangeListener({\n                onSelectionChanged: function (selectionContext) {\n                    if (selectionContext.selectedSeries()) {\n                        var args = { eventName: commonModule.RadChartBase.seriesSelectedEvent, object: that.get(), series: this.get().series, pointIndex: null, pointData: null };\n                        that.get().notify(args);\n                    }\n                    if (selectionContext.deselectedSeries()) {\n                        var args = { eventName: commonModule.RadChartBase.seriesDeselectedEvent, object: that.get(), series: this.get().series, pointIndex: null, pointData: null };\n                        that.get().notify(args);\n                    }\n                    if (selectionContext.selectedDataPoint()) {\n                        var args = { eventName: commonModule.RadChartBase.pointSelectedEvent, object: that.get(), series: that.get().series, pointIndex: selectionContext.selectedDataPoint().index(), pointData: selectionContext.selectedDataPoint() };\n                        that.get().notify(args);\n                    }\n                    if (selectionContext.deselectedDataPoint()) {\n                        var args = { eventName: commonModule.RadChartBase.pointDeselectedEvent, object: that.get(), series: that.get().series, pointIndex: selectionContext.deselectedDataPoint().index(), pointData: selectionContext.deselectedDataPoint() };\n                        that.get().notify(args);\n                    }\n                }\n            }));\n            this._android.getBehaviors().add(this._selectionBehavior);\n        }\n    };\n    RadPieChart.prototype.onSelectionModeChanged = function (oldValue, newValue) {\n    };\n    return RadPieChart;\n}(commonModule.RadPieChart));\nexports.RadPieChart = RadPieChart;\nvar RadCartesianChart = (function (_super) {\n    __extends(RadCartesianChart, _super);\n    function RadCartesianChart() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(RadCartesianChart.prototype, \"android\", {\n        get: function () {\n            return this._rootLayout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadCartesianChart.prototype, \"androidView\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadCartesianChart.prototype, \"rootLayout\", {\n        get: function () {\n            return this._rootLayout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadCartesianChart.prototype, \"_nativeView\", {\n        get: function () {\n            return this._rootLayout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadCartesianChart.prototype.createNativeView = function () {\n        this._android = new com.telerik.widget.chart.visualization.cartesianChart.RadCartesianChartView(this._context);\n        if (this._selectionBehavior) {\n            this._android.getBehaviors().add(this._selectionBehavior);\n        }\n        else {\n            this.initSelectionBehavior();\n        }\n        this._rootLayout = new android.widget.RelativeLayout(this._context);\n        var lParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n        this._rootLayout.addView(this._android);\n        if (this.grid) {\n            this._android.setGrid(null);\n            this._android.setGrid(this.grid._android);\n        }\n        if (this.horizontalAxis) {\n            this._android.setHorizontalAxis(null);\n            this._android.setHorizontalAxis(this.horizontalAxis.android);\n            this.initializer.updateHorizontalAxisPalette(this);\n            this.horizontalAxis.owner = this;\n        }\n        if (this.verticalAxis) {\n            this._android.setVerticalAxis(null);\n            this._android.setVerticalAxis(this.verticalAxis.android);\n            this.initializer.updateVerticalAxisPalette(this);\n            this.verticalAxis.owner = this;\n        }\n        if (this.series) {\n            this.initializer.loadSeries(this);\n        }\n        if (this.legend) {\n            this.legend.updateLegendView(this);\n        }\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.initNativeAnnotation(i);\n                this.annotations.getItem(i)._onOwnerUICreated();\n            }\n            this.initializer.loadAnnotations(this);\n        }\n        if (this.horizontalZoom || this.verticalZoom) {\n            this._android.setZoom(this.horizontalZoom ? this.horizontalZoom : 1, this.verticalZoom ? this.verticalZoom : 1);\n        }\n        this.updatePanZoomBehavior();\n        this.setNativeTrackballBehavior(this.trackball);\n        this.nativeView = this._rootLayout;\n        return this.nativeView;\n    };\n    //todo: consider this method to be moved in common module\n    RadCartesianChart.prototype.getAxixByID = function (axisID) {\n        return this.getAxisByID(axisID);\n    };\n    RadCartesianChart.prototype.getAxisByID = function (axisID) {\n        if (this.horizontalAxis && this.horizontalAxis.id === axisID) {\n            return this.horizontalAxis;\n        }\n        if (this.verticalAxis && this.verticalAxis.id === axisID) {\n            return this.verticalAxis;\n        }\n        if (this.series) {\n            var axis = void 0;\n            for (var i = 0; i < this.series.length; ++i) {\n                axis = this.series.getItem(i).horizontalAxis;\n                if (axis && axis.id === axisID) {\n                    return axis;\n                }\n                axis = this.series.getItem(i).verticalAxis;\n                if (axis && axis.id === axisID) {\n                    return axis;\n                }\n            }\n        }\n        return null;\n    };\n    RadCartesianChart.prototype._onDetach = function (force) {\n        this.detachSeries();\n        _super.prototype['_onDetach'].call(this, force);\n    };\n    RadCartesianChart.prototype._clearAndroidReference = function () {\n        this.detachSeries();\n        if (this._panZoomBehavior) {\n            this._android.getBehaviors().remove(this._panZoomBehavior);\n            this._panZoomBehavior = undefined;\n        }\n        if (this._selectionBehavior) {\n            this._android.getBehaviors().remove(this._selectionBehavior);\n            this._selectionBehavior = null;\n        }\n        _super.prototype['_clearAndroidReference'].call(this);\n    };\n    RadCartesianChart.prototype.detachSeries = function () {\n        var thisAndroid = this._android;\n        if (thisAndroid) {\n            this._rootLayout = undefined;\n            if (this.series) {\n                for (var i = 0; i < this.series.length; i++) {\n                    if (thisAndroid.getSeries().indexOf(this.series.getItem(i).android) !== -1) {\n                        thisAndroid.getSeries().remove(this.series.getItem(i).android);\n                    }\n                }\n            }\n            thisAndroid.setHorizontalAxis(undefined);\n            thisAndroid.setVerticalAxis(undefined);\n            thisAndroid.setGrid(undefined);\n        }\n    };\n    RadCartesianChart.prototype.initNativeAnnotation = function (index) {\n        if (this.androidView) {\n            this.annotations.getItem(index)._init(this);\n            this.annotations.getItem(index)._createNative();\n        }\n    };\n    //get allowZoom/allowPan from axes and init the chart behavior\n    RadCartesianChart.prototype.updatePanZoomBehavior = function () {\n        if (!this._android) {\n            return;\n        }\n        var zoomHorizontal = false;\n        var zoomVertical = false;\n        var panHorizontal = false;\n        var panVertical = false;\n        var i = 0;\n        if (this.series) {\n            while ((i < this.series.length) && !(panHorizontal && panVertical && zoomHorizontal && zoomVertical)) {\n                if (this.series.getItem(i).horizontalAxis) {\n                    panHorizontal = panHorizontal || this.series.getItem(i).horizontalAxis.allowPan;\n                    zoomHorizontal = zoomHorizontal || this.series.getItem(i).horizontalAxis.allowZoom;\n                }\n                if (this.series.getItem(i).verticalAxis) {\n                    panVertical = panVertical || this.series.getItem(i).verticalAxis.allowPan;\n                    zoomVertical = zoomVertical || this.series.getItem(i).verticalAxis.allowZoom;\n                }\n                i++;\n            }\n        }\n        if (this.horizontalAxis) {\n            panHorizontal = panHorizontal || this.horizontalAxis.allowPan;\n            zoomHorizontal = zoomHorizontal || this.horizontalAxis.allowZoom;\n        }\n        if (this.verticalAxis) {\n            panVertical = panVertical || this.verticalAxis.allowPan;\n            zoomVertical = zoomVertical || this.verticalAxis.allowZoom;\n        }\n        if (panHorizontal || panVertical || zoomHorizontal || zoomVertical) {\n            if (!this._panZoomBehavior) {\n                this._panZoomBehavior = new com.telerik.widget.chart.visualization.behaviors.ChartPanAndZoomBehavior();\n                var that = new WeakRef(this);\n                this._panZoomBehavior.addPanZoomListener(new com.telerik.widget.chart.visualization.behaviors.PanZoomListener({\n                    onPan: function (panX, panY) {\n                        var args = { eventName: commonModule.RadChartBase.chartPannedEvent, object: that.get(), pointData: null, pointIndex: null, series: null };\n                        that.get().notify(args);\n                    },\n                    onZoom: function (zoomX, zoomY) {\n                        var args = { eventName: commonModule.RadChartBase.chartZoomedEvent, object: that.get(), pointData: null, pointIndex: null, series: null };\n                        that.get().notify(args);\n                    }\n                }));\n            }\n            if (panHorizontal || panVertical) {\n                var panMode = com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.NONE;\n                if (panHorizontal && panVertical) {\n                    panMode = com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.BOTH;\n                }\n                else {\n                    panMode = panHorizontal ? com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.HORIZONTAL : com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.VERTICAL;\n                }\n                this._panZoomBehavior.setPanMode(panMode);\n            }\n            if (zoomHorizontal || zoomVertical) {\n                var zoomMode = com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.NONE;\n                if (zoomHorizontal && zoomVertical) {\n                    zoomMode = com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.BOTH;\n                }\n                else {\n                    zoomMode = zoomHorizontal ? com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.HORIZONTAL : com.telerik.widget.chart.visualization.behaviors.ChartPanZoomMode.VERTICAL;\n                }\n                this._panZoomBehavior.setZoomMode(zoomMode);\n            }\n            this._android.getBehaviors().add(this._panZoomBehavior);\n        }\n        else {\n            if (this._panZoomBehavior) {\n                this._android.getBehaviors().remove(this._panZoomBehavior);\n                this._panZoomBehavior = null;\n            }\n        }\n    };\n    RadCartesianChart.prototype.initSelectionBehavior = function () {\n        if (!this._selectionBehavior) {\n            this._selectionBehavior = new com.telerik.widget.chart.visualization.behaviors.ChartSelectionBehavior();\n            this._selectionBehavior.setDataPointsSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.NONE);\n            this._selectionBehavior.setSeriesSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.NONE);\n            var that = new WeakRef(this);\n            this._selectionBehavior.setSelectionChangeListener(new com.telerik.widget.chart.visualization.behaviors.ChartSelectionChangeListener({\n                onSelectionChanged: function (selectionContext) {\n                    if (selectionContext.selectedSeries()) {\n                        var args = {\n                            eventName: commonModule.RadChartBase.seriesSelectedEvent,\n                            object: that.get(),\n                            series: that.get().series[selectionContext.selectedSeries().getCollectionIndex()],\n                            pointIndex: null,\n                            pointData: null\n                        };\n                        that.get().notify(args);\n                    }\n                    if (selectionContext.deselectedSeries()) {\n                        var args = {\n                            eventName: commonModule.RadChartBase.seriesDeselectedEvent,\n                            object: that.get(),\n                            series: that.get().series[selectionContext.deselectedSeries().getCollectionIndex()],\n                            pointIndex: null,\n                            pointData: null\n                        };\n                        that.get().notify(args);\n                    }\n                    if (selectionContext.selectedDataPoint()) {\n                        var args = {\n                            eventName: commonModule.RadChartBase.pointSelectedEvent,\n                            object: that.get(),\n                            series: that.get().series.getItem(selectionContext.selectedDataPoint().getPresenter().getCollectionIndex()),\n                            pointIndex: selectionContext.selectedDataPoint().index(),\n                            pointData: selectionContext.selectedDataPoint()\n                        }; //NOTE: we don't have wrapper for DataPoint, so we return native object\n                        that.get().notify(args);\n                    }\n                    if (selectionContext.deselectedDataPoint()) {\n                        var args = {\n                            eventName: commonModule.RadChartBase.pointDeselectedEvent,\n                            object: that.get(),\n                            series: that.get().series.getItem(selectionContext.deselectedDataPoint().getPresenter().getCollectionIndex()),\n                            pointIndex: selectionContext.deselectedDataPoint().index(),\n                            pointData: selectionContext.deselectedDataPoint()\n                        }; //NOTE: we don't have wrapper for DataPoint, so we return native object\n                        that.get().notify(args);\n                    }\n                }\n            }));\n            if (this._android) {\n                this._android.getBehaviors().add(this._selectionBehavior);\n            }\n        }\n    };\n    RadCartesianChart.prototype.onSeriesSelectionModeChanged = function (oldValue, newValue) {\n        this.initSelectionBehavior();\n        if (newValue === publicEnumModule.ChartSelectionMode.None) {\n            this._selectionBehavior.setSeriesSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.NONE);\n        }\n        if (newValue === publicEnumModule.ChartSelectionMode.Single) {\n            this._selectionBehavior.setSeriesSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.SINGLE);\n        }\n        if (newValue === publicEnumModule.ChartSelectionMode.Multiple) {\n            this._selectionBehavior.setSeriesSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.MULTIPLE);\n        }\n    };\n    RadCartesianChart.prototype.onPointSelectionModeChanged = function (oldValue, newValue) {\n        this.initSelectionBehavior();\n        if (newValue === publicEnumModule.ChartSelectionMode.None) {\n            this._selectionBehavior.setDataPointsSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.NONE);\n        }\n        if (newValue === publicEnumModule.ChartSelectionMode.Single) {\n            this._selectionBehavior.setDataPointsSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.SINGLE);\n        }\n        if (newValue === publicEnumModule.ChartSelectionMode.Multiple) {\n            this._selectionBehavior.setDataPointsSelectionMode(com.telerik.widget.chart.visualization.behaviors.ChartSelectionMode.MULTIPLE);\n        }\n    };\n    RadCartesianChart.prototype.onSelectionModeChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChart.prototype.onHorizontalAxisChanged = function (oldValue, newValue) {\n        _super.prototype.onHorizontalAxisChanged.call(this, oldValue, newValue);\n        if (this._android) {\n            this._android.setHorizontalAxis(null);\n            this._android.setHorizontalAxis(newValue.android);\n        }\n    };\n    RadCartesianChart.prototype.onVerticalAxisChanged = function (oldValue, newValue) {\n        _super.prototype.onVerticalAxisChanged.call(this, oldValue, newValue);\n        if (this._android) {\n            this._android.setVerticalAxis(null);\n            this._android.setVerticalAxis(newValue.android);\n        }\n    };\n    RadCartesianChart.prototype.onGridChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            this._android.setGrid(null);\n            this._android.setGrid(newValue._android);\n        }\n    };\n    RadCartesianChart.prototype.onAnnotationsChanged = function (oldValue, newValue) {\n        _super.prototype.onAnnotationsChanged.call(this, oldValue, newValue);\n        if (newValue) {\n            var newArray = newValue;\n            for (var i = 0; i < newArray.length; i++) {\n                newArray.getItem(i)._init(this);\n            }\n        }\n    };\n    RadCartesianChart.prototype.onHorizontalZoomChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        if (!isNaN(+newValue) && newValue > 1) {\n            this._android.setZoom(newValue, this.verticalZoom ? this.verticalZoom : 1);\n        }\n        else {\n            console.log(\"WARNING: Vertical zoom must be a number greater or equal to 1\");\n        }\n    };\n    RadCartesianChart.prototype.onVerticalZoomChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        if (!isNaN(+newValue) && newValue > 1) {\n            this._android.setZoom(this.horizontalZoom ? this.horizontalZoom : 1, newValue);\n        }\n        else {\n            console.log(\"WARNING: Vertical zoom must be a number greater or equal to 1\");\n        }\n    };\n    RadCartesianChart.prototype.onTrackballChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        this.removeTrackball(oldValue, newValue);\n        if (newValue && (newValue instanceof trackBallCommonModule.Trackball)) {\n            newValue.android = new com.telerik.widget.chart.visualization.behaviors.ChartTrackBallBehavior(this._context);\n            this._android.getBehaviors().add(newValue.android);\n        }\n    };\n    RadCartesianChart.prototype.removeTrackball = function (oldValue, newValue) {\n        if (oldValue && this._android.getBehaviors().indexOf(oldValue.android) != -1) {\n            this._android.getBehaviors().remove(oldValue.android);\n        }\n    };\n    RadCartesianChart.prototype.setNativeTrackballBehavior = function (trackball) {\n        if (!trackball) {\n            return;\n        }\n        trackball.android = new com.telerik.widget.chart.visualization.behaviors.ChartTrackBallBehavior(this._context);\n        this._android.getBehaviors().add(trackball.android);\n    };\n    return RadCartesianChart;\n}(commonModule.RadCartesianChart));\n__decorate([\n    Deprecated,\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", commonAxisModule.CartesianAxis)\n], RadCartesianChart.prototype, \"getAxixByID\", null);\nexports.RadCartesianChart = RadCartesianChart;\n"
    },
    {
      "id": 94,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid-common.js",
      "index": 229,
      "index2": 225,
      "size": 7595,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-cartesian-chart-grid-common",
          "loc": "9:37-103"
        },
        {
          "moduleId": 195,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
          "type": "cjs require",
          "userRequest": "./chart-cartesian-chart-grid-common",
          "loc": "2:31-77"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar RadCartesianChartGrid = (function (_super) {\n    __extends(RadCartesianChartGrid, _super);\n    function RadCartesianChartGrid() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RadCartesianChartGrid.prototype, \"owner\", {\n        get: function () {\n            return this._owner;\n        },\n        set: function (value) {\n            this._owner = value;\n            this.onOwnerChanged();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadCartesianChartGrid.prototype.applyGridStyle = function () {\n    };\n    RadCartesianChartGrid.prototype.onOwnerChanged = function () {\n    };\n    RadCartesianChartGrid.prototype.horizontalStripLinesVisibleChanged = function (oldValue, newValue) {\n        this.onHorizontalStripLinesVisibleChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStripLinesVisibleChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.verticalStripLinesVisibleChanged = function (oldValue, newValue) {\n        this.onVerticalStripLinesVisibleChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onVerticalStripLinesVisibleChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.verticalLinesVisibleChanged = function (oldValue, newValue) {\n        this.onVerticalLinesVisibleChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onVerticalLinesVisibleChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.horizontalLinesVisibleChanged = function (oldValue, newValue) {\n        this.onHorizontalLinesVisibleChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onHorizontalLinesVisibleChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.verticalStrokeColorChanged = function (oldValue, newValue) {\n        this.onVerticalStrokeColorChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onVerticalStrokeColorChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.horizontalStrokeColorChanged = function (oldValue, newValue) {\n        this.onHorizontalStrokeColorChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStrokeColorChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.horizontalStrokeWidthChanged = function (oldValue, newValue) {\n        this.onHorizontalStrokeWidthChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStrokeWidthChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.verticalStrokeWidthChanged = function (oldValue, newValue) {\n        this.onVerticalStrokeWidthChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onVerticalStrokeWidthChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.verticalStripLineColorChanged = function (oldValue, newValue) {\n        this.onVerticalStripLineColorChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onVerticalStripLineColorChanged = function (oldValue, newValue) {\n    };\n    RadCartesianChartGrid.prototype.horizontalStripLineColorChanged = function (oldValue, newValue) {\n        this.onHorizontalStripLineColorChanged(oldValue, newValue);\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStripLineColorChanged = function (oldValue, newValue) {\n    };\n    return RadCartesianChartGrid;\n}(view_1.ViewBase));\nRadCartesianChartGrid.horizontalStrokeColorProperty = new view_1.Property({\n    name: \"horizontalStrokeColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.horizontalStrokeColorChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.verticalStrokeColorProperty = new view_1.Property({\n    name: \"verticalStrokeColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.verticalStrokeColorChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.horizontalStrokeWidthProperty = new view_1.Property({\n    name: \"horizontalStrokeWidth\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.horizontalStrokeWidthChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.verticalStrokeWidthProperty = new view_1.Property({\n    name: \"verticalStrokeWidth\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.verticalStrokeWidthChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.verticalStripLineColorProperty = new view_1.Property({\n    name: \"verticalStripLineColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.verticalStripLineColorChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.horizontalStripLineColorProperty = new view_1.Property({\n    name: \"horizontalStripLineColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.horizontalStripLineColorChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.verticalLinesVisibleProperty = new view_1.Property({\n    name: \"verticalLinesVisible\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.verticalLinesVisibleChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.horizontalLinesVisibleProperty = new view_1.Property({\n    name: \"horizontalLinesVisible\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.horizontalLinesVisibleChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.verticalStripLinesVisibleProperty = new view_1.Property({\n    name: \"verticalStripLinesVisible\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.verticalStripLinesVisibleChanged(oldValue, newValue);\n    },\n});\nRadCartesianChartGrid.horizontalStripLinesVisibleProperty = new view_1.Property({\n    name: \"horizontalStripLinesVisible\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.horizontalStripLinesVisibleChanged(oldValue, newValue);\n    },\n});\nexports.RadCartesianChartGrid = RadCartesianChartGrid;\nRadCartesianChartGrid.horizontalStrokeColorProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.verticalStrokeColorProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.horizontalStrokeWidthProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.verticalStrokeWidthProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.verticalStripLineColorProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.horizontalStripLineColorProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.verticalLinesVisibleProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.horizontalLinesVisibleProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.verticalStripLinesVisibleProperty.register(RadCartesianChartGrid);\nRadCartesianChartGrid.horizontalStripLinesVisibleProperty.register(RadCartesianChartGrid);\n"
    },
    {
      "id": 95,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball-common.js",
      "index": 228,
      "index2": 224,
      "size": 2185,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-track-ball-common",
          "loc": "8:28-84"
        },
        {
          "moduleId": 198,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
          "type": "cjs require",
          "userRequest": "./chart-track-ball-common",
          "loc": "2:22-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar chart_public_enum_1 = require(\"../../misc/chart-public-enum\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar Trackball = (function (_super) {\n    __extends(Trackball, _super);\n    function Trackball() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(Trackball.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        set: function (value) {\n            this._android = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Trackball.prototype, \"ios\", {\n        get: function () {\n            return this._ios;\n        },\n        set: function (value) {\n            this._ios = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Trackball.prototype.onSnapModePropertyChanged = function (oldValue, newValue) {\n        this.onSnapModeChanged(oldValue, newValue);\n    };\n    Trackball.prototype.onShowIntersectionPointsPropertyChanged = function (oldValue, newValue) {\n        this.onShowIntersectionPointsChanged(oldValue, newValue);\n    };\n    Trackball.prototype.onSnapModeChanged = function (oldValue, newValue) { };\n    Trackball.prototype.onShowIntersectionPointsChanged = function (oldValue, newValue) { };\n    ;\n    Trackball.prototype.onOwnerChanged = function () { };\n    return Trackball;\n}(view_1.ViewBase));\nTrackball.snapModeProperty = new view_1.Property({\n    name: \"snapMode\",\n    defaultValue: chart_public_enum_1.TrackballSnapMode.ClosestPoint,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onSnapModePropertyChanged(oldValue, newValue);\n    },\n});\nTrackball.showIntersectionPointsProperty = new view_1.Property({\n    name: \"showIntersectionPoints\",\n    defaultValue: false,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onShowIntersectionPointsPropertyChanged(oldValue, newValue);\n    },\n});\nexports.Trackball = Trackball;\nTrackball.snapModeProperty.register(Trackball);\nTrackball.showIntersectionPointsProperty.register(Trackball);\n"
    },
    {
      "id": 96,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series-common.js",
      "index": 224,
      "index2": 217,
      "size": 28144,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
      "issuerId": 202,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 51,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/initializers/chart-initializers.android.js",
          "type": "cjs require",
          "userRequest": "../visualization/views/chart-series-common",
          "loc": "8:28-81"
        },
        {
          "moduleId": 202,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
          "type": "cjs require",
          "userRequest": "./chart-series-common",
          "loc": "2:25-57"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar initializersImpl = require(\"../../initializers/chart-initializers\");\nvar observable_array_1 = require(\"tns-core-modules/data/observable-array\");\nvar observable_1 = require(\"tns-core-modules/data/observable\");\nvar weakEvents = require(\"tns-core-modules/ui/core/weak-event-listener\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\n/**\n * Defines the selection modes of series.\n */\nvar SeriesSelectionMode;\n(function (SeriesSelectionMode) {\n    SeriesSelectionMode.None = \"None\"; // Series selection disabled.\n    SeriesSelectionMode.NotSet = \"NotSet\"; // Series selection not set. Use the chart selection.\n    SeriesSelectionMode.Series = \"Series\"; // Select the whole series.\n    SeriesSelectionMode.DataPoint = \"DataPoint\"; // Select a single data point.\n    SeriesSelectionMode.DataPointMultiple = \"DataPointMultiple\"; // Select multiple points.\n})(SeriesSelectionMode = exports.SeriesSelectionMode || (exports.SeriesSelectionMode = {}));\n/*\n* Lists the possible categorical series combination modes.\n*/\nvar SeriesStackMode;\n(function (SeriesStackMode) {\n    SeriesStackMode.None = \"None\";\n    SeriesStackMode.Stack = \"Stack\";\n    SeriesStackMode.Stack100 = \"Stack100\";\n})(SeriesStackMode = exports.SeriesStackMode || (exports.SeriesStackMode = {}));\nvar ChartSeries = (function (_super) {\n    __extends(ChartSeries, _super);\n    function ChartSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ChartSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.ChartSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartSeries.prototype, \"owner\", {\n        get: function () {\n            return this._owner;\n        },\n        set: function (value) {\n            this._owner = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartSeries.prototype.updateOwnerChart = function () {\n        if (this.owner) {\n            this.owner.updateChart();\n        }\n    };\n    Object.defineProperty(ChartSeries.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartSeries.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        set: function (value) {\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartSeries.prototype.onLegendTitlePropertyChanged = function (oldValue, newValue) {\n        this.onLegendTitleChanged(oldValue, newValue);\n    };\n    ChartSeries.prototype.onItemsPropertyChanged = function (oldValue, newValue) {\n        this.onItemsChanged(oldValue, newValue);\n    };\n    ChartSeries.prototype.onValuePropertyPropertyChanged = function (oldValue, newValue) {\n        this.onValuePropertyChanged(oldValue, newValue);\n    };\n    ChartSeries.prototype.onShowLabelsPropertyChanged = function (oldValue, newValue) {\n        this.onShowLabelsChanged(oldValue, newValue);\n    };\n    ChartSeries.prototype.onLabelStylePropertyChanged = function (oldValue, newValue) {\n        this.onLabelStyleChanged(oldValue, newValue);\n    };\n    ChartSeries.prototype.onSelectionModePropertyChanged = function (oldValue, newValue) {\n        this.onSelectionModeChanged(oldValue, newValue);\n    };\n    ChartSeries.prototype.onSelectionModeChanged = function (oldValue, newValue) {\n        this.initializer.onSelectionModeChanged(oldValue, newValue, this);\n    };\n    ChartSeries.prototype.onLabelStyleChanged = function (oldValue, newValue) {\n        this.initializer.onLabelStyleChanged(oldValue, newValue, this);\n    };\n    ChartSeries.prototype.onShowLabelsChanged = function (oldValue, newValue) {\n        this.initializer.onShowLabelsChanged(oldValue, newValue, this);\n    };\n    ChartSeries.prototype.onLegendTitleChanged = function (oldValue, newValue) {\n        this.initializer.onLegendTitleChanged(oldValue, newValue, this);\n    };\n    ChartSeries.prototype.onItemsChanged = function (oldValue, newValue) {\n        this.initializer.onItemsChanged(oldValue, newValue, this);\n        if (oldValue instanceof observable_1.Observable) {\n            weakEvents.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, this.ItemsCollectionChangedInternal, this);\n        }\n        if (newValue instanceof observable_1.Observable) {\n            weakEvents.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, this.ItemsCollectionChangedInternal, this);\n        }\n    };\n    ChartSeries.prototype.ItemsCollectionChangedInternal = function (data) {\n        this.initializer.onItemsChanged(null, null, this);\n    };\n    ChartSeries.prototype.getItemAtIndex = function (index) {\n        if (this.items.getItem) {\n            return this.items.getItem(index);\n        }\n        return this.items[index];\n    };\n    ChartSeries.prototype.onValuePropertyChanged = function (oldValue, newValue) {\n        this.initializer.onValuePropertyChanged(oldValue, newValue, this);\n    };\n    return ChartSeries;\n}(view_1.ViewBase));\nChartSeries.selectionModeProperty = new view_1.Property({\n    name: \"selectionMode\",\n    defaultValue: SeriesSelectionMode.NotSet,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onSelectionModePropertyChanged(oldValue, newValue);\n    },\n});\nChartSeries.labelStyleProperty = new view_1.Property({\n    name: \"labelStyle\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLabelStylePropertyChanged(oldValue, newValue);\n    },\n});\nChartSeries.showLabelsProperty = new view_1.Property({\n    name: \"showLabels\",\n    defaultValue: false,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onShowLabelsPropertyChanged(oldValue, newValue);\n    },\n});\nChartSeries.legendTitleProperty = new view_1.Property({\n    name: \"legendTitle\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLegendTitlePropertyChanged(oldValue, newValue);\n    },\n});\nChartSeries.valuePropertyProperty = new view_1.Property({\n    name: \"valueProperty\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onValuePropertyPropertyChanged(oldValue, newValue);\n    },\n});\nChartSeries.itemsProperty = new view_1.Property({\n    name: \"items\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onItemsPropertyChanged(oldValue, newValue);\n    },\n});\nexports.ChartSeries = ChartSeries;\nChartSeries.selectionModeProperty.register(ChartSeries);\nChartSeries.labelStyleProperty.register(ChartSeries);\nChartSeries.showLabelsProperty.register(ChartSeries);\nChartSeries.legendTitleProperty.register(ChartSeries);\nChartSeries.valuePropertyProperty.register(ChartSeries);\nChartSeries.itemsProperty.register(ChartSeries);\nvar CartesianSeries = (function (_super) {\n    __extends(CartesianSeries, _super);\n    function CartesianSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CartesianSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.CartesianSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CartesianSeries.prototype.onHorizontalAxisPropertyChanged = function (oldValue, newValue) {\n        this.onHorizontalAxisChanged(oldValue, newValue);\n    };\n    CartesianSeries.prototype.onVerticalAxisPropertyChanged = function (oldValue, newValue) {\n        this.onVerticalAxisChanged(oldValue, newValue);\n    };\n    CartesianSeries.prototype.onHorizontalAxisChanged = function (oldValue, newValue) {\n        this.updateAxisBindingContext(oldValue, newValue);\n        this.initializer.onHorizontalAxisChanged(oldValue, newValue, this);\n    };\n    CartesianSeries.prototype.onVerticalAxisChanged = function (oldValue, newValue) {\n        this.updateAxisBindingContext(oldValue, newValue);\n        this.initializer.onVerticalAxisChanged(oldValue, newValue, this);\n    };\n    CartesianSeries.prototype.updateAxisBindingContext = function (oldValue, newValue) {\n        if (newValue) {\n            newValue.bindingContext = this.bindingContext;\n        }\n        else {\n            if (oldValue) {\n                oldValue.bindingContext = null;\n            }\n        }\n    };\n    return CartesianSeries;\n}(ChartSeries));\nCartesianSeries.horizontalAxisProperty = new view_1.Property({\n    name: \"horizontalAxis\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHorizontalAxisPropertyChanged(oldValue, newValue);\n    },\n});\nCartesianSeries.verticalAxisProperty = new view_1.Property({\n    name: \"verticalAxis\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onVerticalAxisPropertyChanged(oldValue, newValue);\n    },\n});\nexports.CartesianSeries = CartesianSeries;\nCartesianSeries.horizontalAxisProperty.register(CartesianSeries);\nCartesianSeries.verticalAxisProperty.register(CartesianSeries);\nvar CategoricalSeries = (function (_super) {\n    __extends(CategoricalSeries, _super);\n    function CategoricalSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoricalSeries.prototype.onStackModePropertyChanged = function (oldValue, newValue) {\n        this.onStackModeChanged(oldValue, newValue);\n    };\n    CategoricalSeries.prototype.onCategoryPropertyChanged = function (oldValue, newValue) {\n        this.onCategoryChanged(oldValue, newValue);\n    };\n    Object.defineProperty(CategoricalSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.CategoricalSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoricalSeries.prototype.onStackModeChanged = function (oldValue, newValue) {\n        this.initializer.onStackModePropertyChanged(oldValue, newValue, this);\n    };\n    CategoricalSeries.prototype.onCategoryChanged = function (oldValue, newValue) {\n        this.initializer.onCategoryPropertyChanged(oldValue, newValue, this);\n    };\n    return CategoricalSeries;\n}(CartesianSeries));\nCategoricalSeries.categoryPropertyProperty = new view_1.Property({\n    name: \"categoryProperty\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onCategoryPropertyChanged(oldValue, newValue);\n    },\n});\nCategoricalSeries.stackModeProperty = new view_1.Property({\n    name: \"stackMode\",\n    defaultValue: SeriesStackMode.None,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onStackModePropertyChanged(oldValue, newValue);\n    },\n});\nexports.CategoricalSeries = CategoricalSeries;\nCategoricalSeries.categoryPropertyProperty.register(CategoricalSeries);\nCategoricalSeries.stackModeProperty.register(CategoricalSeries);\nvar BarSeries = (function (_super) {\n    __extends(BarSeries, _super);\n    function BarSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BarSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.BarSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BarSeries;\n}(CategoricalSeries));\nexports.BarSeries = BarSeries;\nvar RangeBarSeries = (function (_super) {\n    __extends(RangeBarSeries, _super);\n    function RangeBarSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RangeBarSeries.prototype.onHighPropertyNamePropertyChanged = function (oldValue, newValue) {\n        this.onHighPropertyNameChanged(oldValue, newValue);\n    };\n    RangeBarSeries.prototype.onLowPropertyNamePropertyChanged = function (oldValue, newValue) {\n        this.onLowPropertyNameChanged(oldValue, newValue);\n    };\n    RangeBarSeries.prototype.onLowPropertyNameChanged = function (oldValue, newValue) {\n    };\n    RangeBarSeries.prototype.onHighPropertyNameChanged = function (oldValue, newValue) {\n    };\n    return RangeBarSeries;\n}(CategoricalSeries));\nRangeBarSeries.highPropertyNameProperty = new view_1.Property({\n    name: \"highPropertyName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHighPropertyNamePropertyChanged(oldValue, newValue);\n    },\n});\nRangeBarSeries.lowPropertyNameProperty = new view_1.Property({\n    name: \"lowPropertyName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLowPropertyNamePropertyChanged(oldValue, newValue);\n    },\n});\nexports.RangeBarSeries = RangeBarSeries;\nRangeBarSeries.highPropertyNameProperty.register(RangeBarSeries);\nRangeBarSeries.lowPropertyNameProperty.register(RangeBarSeries);\nvar OhlcSeries = (function (_super) {\n    __extends(OhlcSeries, _super);\n    function OhlcSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OhlcSeries.prototype.onOpenPropertyNamePropertyChanged = function (oldValue, newValue) {\n        this.onOpenPropertyNameChanged(oldValue, newValue);\n    };\n    OhlcSeries.prototype.onClosePropertyNamePropertyChanged = function (oldValue, newValue) {\n        this.onClosePropertyNameChanged(oldValue, newValue);\n    };\n    OhlcSeries.prototype.onHighPropertyNamePropertyChanged = function (oldValue, newValue) {\n        this.onHighPropertyNameChanged(oldValue, newValue);\n    };\n    OhlcSeries.prototype.onLowPropertyNamePropertyChanged = function (oldValue, newValue) {\n        this.onLowPropertyNameChanged(oldValue, newValue);\n    };\n    OhlcSeries.prototype.onLowPropertyNameChanged = function (oldValue, newValue) {\n    };\n    OhlcSeries.prototype.onHighPropertyNameChanged = function (oldValue, newValue) {\n    };\n    OhlcSeries.prototype.onClosePropertyNameChanged = function (oldValue, newValue) {\n    };\n    OhlcSeries.prototype.onOpenPropertyNameChanged = function (oldValue, newValue) {\n    };\n    return OhlcSeries;\n}(CategoricalSeries));\nOhlcSeries.openPropertyNameProperty = new view_1.Property({\n    name: \"openPropertyName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onOpenPropertyNamePropertyChanged(oldValue, newValue);\n    },\n});\nOhlcSeries.closePropertyNameProperty = new view_1.Property({\n    name: \"closePropertyName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onClosePropertyNamePropertyChanged(oldValue, newValue);\n    },\n});\nOhlcSeries.highPropertyNameProperty = new view_1.Property({\n    name: \"highPropertyName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHighPropertyNamePropertyChanged(oldValue, newValue);\n    },\n});\nOhlcSeries.lowPropertyNameProperty = new view_1.Property({\n    name: \"lowPropertyName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLowPropertyNamePropertyChanged(oldValue, newValue);\n    },\n});\nexports.OhlcSeries = OhlcSeries;\nOhlcSeries.openPropertyNameProperty.register(OhlcSeries);\nOhlcSeries.closePropertyNameProperty.register(OhlcSeries);\nOhlcSeries.highPropertyNameProperty.register(OhlcSeries);\nOhlcSeries.lowPropertyNameProperty.register(OhlcSeries);\nvar CandleStickSeries = (function (_super) {\n    __extends(CandleStickSeries, _super);\n    function CandleStickSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CandleStickSeries;\n}(OhlcSeries));\nexports.CandleStickSeries = CandleStickSeries;\nvar BubbleSeries = (function (_super) {\n    __extends(BubbleSeries, _super);\n    function BubbleSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BubbleSeries.prototype.onBubbleScalePropertyChanged = function (oldValue, newValue) {\n        this.onBubbleScaleChanged(oldValue, newValue);\n    };\n    BubbleSeries.prototype.onBubbleScaleChanged = function (oldValue, newValue) {\n    };\n    BubbleSeries.prototype.onBubbleSizePropertyPropertyChanged = function (oldValue, newValue) {\n        this.onBubbleSizePropertyChanged(oldValue, newValue);\n    };\n    BubbleSeries.prototype.onBubbleSizePropertyChanged = function (oldValue, newValue) {\n    };\n    return BubbleSeries;\n}(CategoricalSeries));\nBubbleSeries.bubbleScaleProperty = new view_1.Property({\n    name: \"bubbleScale\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onBubbleScalePropertyChanged(oldValue, newValue);\n    },\n});\nBubbleSeries.bubbleSizePropertyProperty = new view_1.Property({\n    name: \"bubbleSizeProperty\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onBubbleSizePropertyPropertyChanged(oldValue, newValue);\n    },\n});\nexports.BubbleSeries = BubbleSeries;\nBubbleSeries.bubbleScaleProperty.register(BubbleSeries);\nBubbleSeries.bubbleSizePropertyProperty.register(BubbleSeries);\nvar PieSeries = (function (_super) {\n    __extends(PieSeries, _super);\n    function PieSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PieSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.PieSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PieSeries.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        set: function (value) {\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PieSeries.prototype.onLegendLabelPropertyChanged = function (oldValue, newValue) {\n        this.onLegendLabelChanged(oldValue, newValue);\n    };\n    PieSeries.prototype.onExpandRadiusPropertyChanged = function (oldValue, newValue) {\n        this.onExpandRadiusChanged(oldValue, newValue);\n    };\n    PieSeries.prototype.onOuterRadiusFactorPropertyChanged = function (oldValue, newValue) {\n        this.onOuterRadiusFactorChanged(oldValue, newValue);\n    };\n    PieSeries.prototype.onStartAnglePropertyChanged = function (oldValue, newValue) {\n        this.onStartAngleChanged(oldValue, newValue);\n    };\n    PieSeries.prototype.onEndAnglePropertyChanged = function (oldValue, newValue) {\n        this.onEndAngleChanged(oldValue, newValue);\n    };\n    PieSeries.prototype.onShowPercentagePropertyChanged = function (oldValue, newValue) {\n        this.onShowPercentageChanged(oldValue, newValue);\n    };\n    PieSeries.prototype.onLegendLabelChanged = function (oldValue, newValue) {\n        this.initializer.onLabelPropertyChanged(oldValue, newValue, this);\n    };\n    PieSeries.prototype.onExpandRadiusChanged = function (oldValue, newValue) {\n        this.initializer.onExpandRadiusChanged(oldValue, newValue, this);\n    };\n    PieSeries.prototype.onOuterRadiusFactorChanged = function (oldValue, newValue) {\n        this.initializer.onOuterRadiusFactorChanged(oldValue, newValue, this);\n    };\n    PieSeries.prototype.onStartAngleChanged = function (oldValue, newValue) {\n        this.initializer.onStartAngleChanged(oldValue, newValue, this);\n    };\n    PieSeries.prototype.onEndAngleChanged = function (oldValue, newValue) {\n        this.initializer.onEndAngleChanged(oldValue, newValue, this);\n    };\n    PieSeries.prototype.onShowPercentageChanged = function (oldValue, newValue) {\n        this.initializer.onShowPercentageChanged(oldValue, newValue, this);\n    };\n    return PieSeries;\n}(ChartSeries));\nPieSeries.legendLabelProperty = new view_1.Property({\n    name: \"legendLabel\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onLegendLabelPropertyChanged(oldValue, newValue);\n    },\n});\nPieSeries.expandRadiusProperty = new view_1.Property({\n    name: \"expandRadius\",\n    defaultValue: undefined,\n    valueConverter: function (v) { return parseFloat(v); },\n    valueChanged: function (target, oldValue, newValue) {\n        target.onExpandRadiusPropertyChanged(oldValue, newValue);\n    },\n});\nPieSeries.outerRadiusFactorProperty = new view_1.Property({\n    name: \"outerRadiusFactor\",\n    defaultValue: undefined,\n    valueConverter: function (v) { return parseFloat(v); },\n    valueChanged: function (target, oldValue, newValue) {\n        target.onOuterRadiusFactorPropertyChanged(oldValue, newValue);\n    },\n});\nPieSeries.startAngleProperty = new view_1.Property({\n    name: \"startAngle\",\n    defaultValue: undefined,\n    valueConverter: function (v) { return parseFloat(v); },\n    valueChanged: function (target, oldValue, newValue) {\n        target.onStartAnglePropertyChanged(oldValue, newValue);\n    },\n});\nPieSeries.endAngleProperty = new view_1.Property({\n    name: \"endAngle\",\n    defaultValue: undefined,\n    valueConverter: function (v) { return parseFloat(v); },\n    valueChanged: function (target, oldValue, newValue) {\n        target.onEndAnglePropertyChanged(oldValue, newValue);\n    },\n});\nPieSeries.showPercentageProperty = new view_1.Property({\n    name: \"showPercentage\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onShowPercentagePropertyChanged(oldValue, newValue);\n    },\n});\nexports.PieSeries = PieSeries;\nPieSeries.legendLabelProperty.register(PieSeries);\nPieSeries.expandRadiusProperty.register(PieSeries);\nPieSeries.outerRadiusFactorProperty.register(PieSeries);\nPieSeries.startAngleProperty.register(PieSeries);\nPieSeries.endAngleProperty.register(PieSeries);\nPieSeries.showPercentageProperty.register(PieSeries);\nvar DonutSeries = (function (_super) {\n    __extends(DonutSeries, _super);\n    function DonutSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DonutSeries.prototype.onInnerRadiusFactorPropertyChanged = function (oldValue, newValue) {\n        this.onInnerRadiusFactorChanged(oldValue, newValue);\n    };\n    Object.defineProperty(DonutSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.DonutSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DonutSeries.prototype.onInnerRadiusFactorChanged = function (oldValue, newValue) {\n        this.initializer.onInnerRadiusFactorChanged(oldValue, newValue, this);\n    };\n    return DonutSeries;\n}(PieSeries));\nDonutSeries.innerRadiusFactorProperty = new view_1.Property({\n    name: \"innerRadiusFactor\",\n    defaultValue: undefined,\n    valueConverter: function (v) { return parseFloat(v); },\n    valueChanged: function (target, oldValue, newValue) {\n        target.onInnerRadiusFactorPropertyChanged(oldValue, newValue);\n    },\n});\nexports.DonutSeries = DonutSeries;\nDonutSeries.innerRadiusFactorProperty.register(DonutSeries);\nvar ScatterSeries = (function (_super) {\n    __extends(ScatterSeries, _super);\n    function ScatterSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterSeries.prototype.onXPropertyPropertyChanged = function (oldValue, newValue) {\n        this.onXPropertyChanged(oldValue, newValue);\n    };\n    ScatterSeries.prototype.onYPropertyPropertyChanged = function (oldValue, newValue) {\n        this.onYPropertyChanged(oldValue, newValue);\n    };\n    ScatterSeries.prototype.onXPropertyChanged = function (oldValue, newValue) {\n        this.initializer.onXPropertyChanged(oldValue, newValue, this);\n    };\n    ScatterSeries.prototype.onYPropertyChanged = function (oldValue, newValue) {\n        this.initializer.onYPropertyChanged(oldValue, newValue, this);\n    };\n    ScatterSeries.prototype.onValuePropertyChanged = function (oldValue, newValue) {\n        console.log(\"WARNING: ValueProperty is not used for Scatter this. Use XProperty & YProperty instead.\");\n    };\n    Object.defineProperty(ScatterSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.ScatterSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ScatterSeries;\n}(CartesianSeries));\nScatterSeries.xPropertyProperty = new view_1.Property({\n    name: \"xProperty\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onXPropertyPropertyChanged(oldValue, newValue);\n    },\n});\nScatterSeries.yPropertyProperty = new view_1.Property({\n    name: \"yProperty\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onYPropertyPropertyChanged(oldValue, newValue);\n    },\n});\nexports.ScatterSeries = ScatterSeries;\nScatterSeries.xPropertyProperty.register(ScatterSeries);\nScatterSeries.yPropertyProperty.register(ScatterSeries);\nvar ScatterBubbleSeries = (function (_super) {\n    __extends(ScatterBubbleSeries, _super);\n    function ScatterBubbleSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterBubbleSeries.prototype.onBubbleScalePropertyChanged = function (oldValue, newValue) {\n        this.onBubbleScaleChanged(oldValue, newValue);\n    };\n    ScatterBubbleSeries.prototype.onBubbleScaleChanged = function (oldValue, newValue) {\n        this.initializer.onBubbleScaleChanged(oldValue, newValue, this);\n    };\n    ScatterBubbleSeries.prototype.onBubbleSizePropertyPropertyChanged = function (oldValue, newValue) {\n        this.onBubbleSizePropertyChanged(oldValue, newValue);\n    };\n    ScatterBubbleSeries.prototype.onBubbleSizePropertyChanged = function (oldValue, newValue) {\n        this.initializer.onBubbleSizePropertyChanged(oldValue, newValue, this);\n    };\n    Object.defineProperty(ScatterBubbleSeries.prototype, \"initializer\", {\n        get: function () {\n            if (!this._initializer) {\n                this._initializer = new initializersImpl.ScatterBubbleSeriesValueMapper();\n            }\n            return this._initializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ScatterBubbleSeries;\n}(ScatterSeries));\nScatterBubbleSeries.bubbleScaleProperty = new view_1.Property({\n    name: \"bubbleScale\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onBubbleScalePropertyChanged(oldValue, newValue);\n    },\n});\nScatterBubbleSeries.bubbleSizePropertyProperty = new view_1.Property({\n    name: \"bubbleSizeProperty\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onBubbleSizePropertyPropertyChanged(oldValue, newValue);\n    },\n});\nexports.ScatterBubbleSeries = ScatterBubbleSeries;\nScatterBubbleSeries.bubbleScaleProperty.register(ScatterBubbleSeries);\nScatterBubbleSeries.bubbleSizePropertyProperty.register(ScatterBubbleSeries);\n"
    },
    {
      "id": 97,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/process/browser.js",
      "name": "./~/process/browser.js",
      "index": 87,
      "index2": 83,
      "size": 5299,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/reflect-metadata/Reflect.js",
      "issuerId": 45,
      "issuerName": "./~/reflect-metadata/Reflect.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/reflect-metadata/Reflect.js",
          "module": "./~/reflect-metadata/Reflect.js",
          "moduleName": "./~/reflect-metadata/Reflect.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-34"
        },
        {
          "moduleId": 91,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/zone-js/dist/zone-nativescript.js",
          "module": "./~/nativescript-angular/zone-js/dist/zone-nativescript.js",
          "moduleName": "./~/nativescript-angular/zone-js/dist/zone-nativescript.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
    },
    {
      "id": 98,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/BehaviorSubject.js",
      "name": "./~/rxjs/BehaviorSubject.js",
      "index": 248,
      "index2": 246,
      "size": 1666,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/BehaviorSubject",
          "loc": "12:0-55"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/page-router-outlet.js",
          "module": "./~/nativescript-angular/router/page-router-outlet.js",
          "moduleName": "./~/nativescript-angular/router/page-router-outlet.js",
          "type": "cjs require",
          "userRequest": "rxjs/BehaviorSubject",
          "loc": "6:24-55"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map"
    },
    {
      "id": 99,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observer.js",
      "name": "./~/rxjs/Observer.js",
      "index": 103,
      "index2": 96,
      "size": 193,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/toSubscriber.js",
      "issuerId": 228,
      "issuerName": "./~/rxjs/util/toSubscriber.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./Observer",
          "loc": "9:17-38"
        },
        {
          "moduleId": 228,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/toSubscriber.js",
          "module": "./~/rxjs/util/toSubscriber.js",
          "moduleName": "./~/rxjs/util/toSubscriber.js",
          "type": "cjs require",
          "userRequest": "../Observer",
          "loc": "4:17-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map"
    },
    {
      "id": 100,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/PromiseObservable.js",
      "name": "./~/rxjs/observable/PromiseObservable.js",
      "index": 209,
      "index2": 202,
      "size": 4672,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/fromPromise.js",
      "issuerId": 102,
      "issuerName": "./~/rxjs/observable/fromPromise.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 102,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/fromPromise.js",
          "module": "./~/rxjs/observable/fromPromise.js",
          "moduleName": "./~/rxjs/observable/fromPromise.js",
          "type": "cjs require",
          "userRequest": "./PromiseObservable",
          "loc": "2:26-56"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./PromiseObservable",
          "loc": "10:26-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map"
    },
    {
      "id": 101,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ScalarObservable.js",
      "name": "./~/rxjs/observable/ScalarObservable.js",
      "index": 109,
      "index2": 102,
      "size": 1879,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayObservable.js",
      "issuerId": 53,
      "issuerName": "./~/rxjs/observable/ArrayObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 53,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "./ScalarObservable",
          "loc": "8:25-54"
        },
        {
          "moduleId": 206,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayLikeObservable.js",
          "module": "./~/rxjs/observable/ArrayLikeObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayLikeObservable.js",
          "type": "cjs require",
          "userRequest": "./ScalarObservable",
          "loc": "8:25-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map"
    },
    {
      "id": 102,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/fromPromise.js",
      "name": "./~/rxjs/observable/fromPromise.js",
      "index": 208,
      "index2": 203,
      "size": 179,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
      "issuerId": 20,
      "issuerName": "./~/@angular/forms/@angular/forms.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 20,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
          "module": "./~/@angular/forms/@angular/forms.es5.js",
          "moduleName": "./~/@angular/forms/@angular/forms.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/observable/fromPromise",
          "loc": "13:0-58"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/observable/fromPromise",
          "loc": "26:0-58"
        }
      ],
      "usedExports": [
        "fromPromise"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map"
    },
    {
      "id": 103,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/map.js",
      "name": "./~/rxjs/operator/map.js",
      "index": 210,
      "index2": 204,
      "size": 3295,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
      "issuerId": 20,
      "issuerName": "./~/@angular/forms/@angular/forms.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 20,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
          "module": "./~/@angular/forms/@angular/forms.es5.js",
          "moduleName": "./~/@angular/forms/@angular/forms.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/map",
          "loc": "14:0-40"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/map",
          "loc": "19:0-40"
        }
      ],
      "usedExports": [
        "map"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map"
    },
    {
      "id": 104,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/mergeMap.js",
      "name": "./~/rxjs/operator/mergeMap.js",
      "index": 257,
      "index2": 254,
      "size": 6569,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/mergeMap",
          "loc": "20:0-50"
        },
        {
          "moduleId": 217,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/concatMap.js",
          "module": "./~/rxjs/operator/concatMap.js",
          "moduleName": "./~/rxjs/operator/concatMap.js",
          "type": "cjs require",
          "userRequest": "./mergeMap",
          "loc": "2:17-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map"
    },
    {
      "id": 105,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/ObjectUnsubscribedError.js",
      "name": "./~/rxjs/util/ObjectUnsubscribedError.js",
      "index": 123,
      "index2": 115,
      "size": 955,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
      "issuerId": 32,
      "issuerName": "./~/rxjs/Subject.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./util/ObjectUnsubscribedError",
          "loc": "10:32-73"
        },
        {
          "moduleId": 98,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/BehaviorSubject.js",
          "module": "./~/rxjs/BehaviorSubject.js",
          "moduleName": "./~/rxjs/BehaviorSubject.js",
          "type": "cjs require",
          "userRequest": "./util/ObjectUnsubscribedError",
          "loc": "8:32-73"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map"
    },
    {
      "id": 106,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/errorObject.js",
      "name": "./~/rxjs/util/errorObject.js",
      "index": 101,
      "index2": 92,
      "size": 177,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "issuerId": 40,
      "issuerName": "./~/rxjs/Subscription.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 40,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/errorObject",
          "loc": "6:20-49"
        },
        {
          "moduleId": 229,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/tryCatch.js",
          "module": "./~/rxjs/util/tryCatch.js",
          "moduleName": "./~/rxjs/util/tryCatch.js",
          "type": "cjs require",
          "userRequest": "./errorObject",
          "loc": "2:20-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map"
    },
    {
      "id": 107,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/isArrayLike.js",
      "name": "./~/rxjs/util/isArrayLike.js",
      "index": 115,
      "index2": 107,
      "size": 137,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 209,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./isArrayLike",
          "loc": "3:20-44"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isArrayLike",
          "loc": "8:20-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map"
    },
    {
      "id": 108,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/isFunction.js",
      "name": "./~/rxjs/util/isFunction.js",
      "index": 96,
      "index2": 89,
      "size": 148,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "issuerId": 40,
      "issuerName": "./~/rxjs/Subscription.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 10,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscriber.js",
          "module": "./~/rxjs/Subscriber.js",
          "moduleName": "./~/rxjs/Subscriber.js",
          "type": "cjs require",
          "userRequest": "./util/isFunction",
          "loc": "7:19-47"
        },
        {
          "moduleId": 40,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/isFunction",
          "loc": "4:19-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map"
    },
    {
      "id": 109,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/isObject.js",
      "name": "./~/rxjs/util/isObject.js",
      "index": 99,
      "index2": 91,
      "size": 151,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "issuerId": 40,
      "issuerName": "./~/rxjs/Subscription.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 40,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/isObject",
          "loc": "3:17-43"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./isObject",
          "loc": "5:17-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map"
    },
    {
      "id": 110,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/isPromise.js",
      "name": "./~/rxjs/util/isPromise.js",
      "index": 116,
      "index2": 108,
      "size": 207,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 209,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "./isPromise",
          "loc": "4:18-40"
        },
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isPromise",
          "loc": "9:18-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map"
    },
    {
      "id": 111,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/isScheduler.js",
      "name": "./~/rxjs/util/isScheduler.js",
      "index": 111,
      "index2": 104,
      "size": 178,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/merge.js",
      "issuerId": 222,
      "issuerName": "./~/rxjs/operator/merge.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 53,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayObservable.js",
          "module": "./~/rxjs/observable/ArrayObservable.js",
          "moduleName": "./~/rxjs/observable/ArrayObservable.js",
          "type": "cjs require",
          "userRequest": "../util/isScheduler",
          "loc": "10:20-50"
        },
        {
          "moduleId": 222,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/merge.js",
          "module": "./~/rxjs/operator/merge.js",
          "moduleName": "./~/rxjs/operator/merge.js",
          "type": "cjs require",
          "userRequest": "../util/isScheduler",
          "loc": "5:20-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map"
    },
    {
      "id": 112,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application-common.js",
      "name": "./~/tns-core-modules/application/application-common.js",
      "index": 17,
      "index2": 6,
      "size": 1959,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application.android.js",
      "issuerId": 3,
      "issuerName": "./~/tns-core-modules/application/application.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application.android.js",
          "module": "./~/tns-core-modules/application/application.android.js",
          "moduleName": "./~/tns-core-modules/application/application.android.js",
          "type": "cjs require",
          "userRequest": "./application-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 3,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/application/application.android.js",
          "module": "./~/tns-core-modules/application/application.android.js",
          "moduleName": "./~/tns-core-modules/application/application.android.js",
          "type": "cjs require",
          "userRequest": "./application-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"globals\");\nvar observable_1 = require(\"../data/observable\");\nexports.Observable = observable_1.Observable;\nvar events = new observable_1.Observable();\nvar launched = false;\nfunction setLaunched() {\n    launched = true;\n    events.off(\"launch\", setLaunched);\n}\nevents.on(\"launch\", setLaunched);\nfunction hasLaunched() {\n    return launched;\n}\nexports.hasLaunched = hasLaunched;\nexports.launchEvent = \"launch\";\nexports.suspendEvent = \"suspend\";\nexports.resumeEvent = \"resume\";\nexports.exitEvent = \"exit\";\nexports.lowMemoryEvent = \"lowMemory\";\nexports.uncaughtErrorEvent = \"uncaughtError\";\nexports.orientationChangedEvent = \"orientationChanged\";\nvar cssFile = \"app.css\";\nvar resources = {};\nfunction getResources() {\n    return resources;\n}\nexports.getResources = getResources;\nfunction setResources(res) {\n    resources = res;\n}\nexports.setResources = setResources;\nexports.android = undefined;\nexports.ios = undefined;\nexports.on = events.on.bind(events);\nexports.off = events.off.bind(events);\nexports.notify = events.notify.bind(events);\nvar app;\nfunction setApplication(instance) {\n    app = instance;\n}\nexports.setApplication = setApplication;\nfunction livesync() {\n    events.notify({ eventName: \"livesync\", object: app });\n}\nexports.livesync = livesync;\nfunction setCssFileName(cssFileName) {\n    cssFile = cssFileName;\n    events.notify({ eventName: \"cssChanged\", object: app, cssFile: cssFileName });\n}\nexports.setCssFileName = setCssFileName;\nfunction getCssFileName() {\n    return cssFile;\n}\nexports.getCssFileName = getCssFileName;\nfunction addCss(cssText) {\n    events.notify({ eventName: \"cssChanged\", object: app, cssText: cssText });\n}\nexports.addCss = addCss;\nglobal.__onUncaughtError = function (error) {\n    events.notify({ eventName: exports.uncaughtErrorEvent, object: app, android: error, ios: error, error: error });\n};\n//# sourceMappingURL=application-common.js.map"
    },
    {
      "id": 113,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/css-value/index.js",
      "name": "./~/tns-core-modules/css-value/index.js",
      "index": 19,
      "index2": 9,
      "size": 2001,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
      "issuerId": 157,
      "issuerName": "./~/tns-core-modules/ui/styling/background.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 157,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
          "module": "./~/tns-core-modules/ui/styling/background.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/background.android.js",
          "type": "cjs require",
          "userRequest": "../../css-value",
          "loc": "7:18-44"
        },
        {
          "moduleId": 263,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background-common.js",
          "module": "./~/tns-core-modules/ui/styling/background-common.js",
          "moduleName": "./~/tns-core-modules/ui/styling/background-common.js",
          "type": "cjs require",
          "userRequest": "../../css-value",
          "loc": "3:18-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\nexports.parse = parse;\n\nfunction parse(str) {\n  return new Parser(str).parse();\n}\n\nfunction Parser(str) {\n  this.str = str;\n}\n\nParser.prototype.skip = function(m){\n  this.str = this.str.slice(m[0].length);\n};\n\nParser.prototype.comma = function(){\n  var m = /^, */.exec(this.str);\n  if (!m) return;\n  this.skip(m);\n  return { type: 'comma', string: ',' };\n};\n\nParser.prototype.ident = function(){\n  var m = /^([\\w-]+) */.exec(this.str);\n  if (!m) return;\n  this.skip(m);\n  return {\n    type: 'ident',\n    string: m[1]\n  }\n};\n\nParser.prototype.int = function(){\n  var m = /^(([-\\+]?\\d+)(\\S+)?) */.exec(this.str);\n  if (!m) return;\n  this.skip(m);\n  var n = ~~m[2];\n  var u = m[3];\n\n  return {\n    type: 'number',\n    string: m[1],\n    unit: u || '',\n    value: n\n  }\n};\n\nParser.prototype.float = function(){\n  var m = /^(((?:[-\\+]?\\d+)?\\.\\d+)(\\S+)?) */.exec(this.str);\n  if (!m) return;\n  this.skip(m);\n  var n = parseFloat(m[2]);\n  var u = m[3];\n\n  return {\n    type: 'number',\n    string: m[1],\n    unit: u || '',\n    value: n\n  }\n};\n\nParser.prototype.number = function(){\n  return this.float() || this.int();\n};\n\nParser.prototype.double = function(){\n  var m = /^\"([^\"]*)\" */.exec(this.str);\n  if (!m) return m;\n  this.skip(m);\n  return {\n    type: 'string',\n    quote: '\"',\n    string: '\"' + m[1] + '\"',\n    value: m[1]\n  }\n};\n\nParser.prototype.single = function(){\n  var m = /^'([^']*)' */.exec(this.str);\n  if (!m) return m;\n  this.skip(m);\n  return {\n    type: 'string',\n    quote: \"'\",\n    string: \"'\" + m[1] + \"'\",\n    value: m[1]\n  }\n};\n\nParser.prototype.string = function(){\n  return this.single() || this.double();\n};\n\n\nParser.prototype.value = function(){\n  return this.number()\n    || this.ident()\n    || this.string()\n    || this.comma();\n};\n\nParser.prototype.parse = function(){\n  var vals = [];\n\n  while (this.str.length) {\n    var obj = this.value();\n    if (!obj) throw new Error('failed to parse near `' + this.str.slice(0, 10) + '...`');\n    vals.push(obj);\n  }\n\n  return vals;\n};\n"
    },
    {
      "id": 114,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/fetch/fetch.js",
      "name": "./~/tns-core-modules/fetch/fetch.js",
      "index": 84,
      "index2": 80,
      "size": 10218,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "issuerId": 62,
      "issuerName": "./~/tns-core-modules/globals/globals.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "fetch",
          "loc": "49:52-68"
        },
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "fetch",
          "loc": "79:16-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "﻿(function () {\n    'use strict';\n\n    exports.XMLHttpRequest = global.XMLHttpRequest;\n    exports.FormData = global.FormData;\n\n    if (!exports.XMLHttpRequest) {\n        var xhr = require(\"xhr\");\n        exports.XMLHttpRequest = xhr.XMLHttpRequest;\n        exports.FormData = xhr.FormData;\n    }\n\n    function normalizeName(name) {\n        if (typeof name !== 'string') {\n            name = name.toString();\n        }\n        if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n        }\n        return name.toLowerCase()\n    }\n\n    function normalizeValue(value) {\n        if (typeof value !== 'string') {\n            value = value.toString();\n        }\n        return value\n    }\n\n    function Headers(headers) {\n        this.map = {}\n\n        if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n                this.append(name, value)\n            }, this)\n\n        } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n                this.append(name, headers[name])\n            }, this)\n        }\n    }\n\n    Headers.prototype.append = function (name, value) {\n        name = normalizeName(name)\n        value = normalizeValue(value)\n        var list = this.map[name]\n        if (!list) {\n            list = []\n            this.map[name] = list\n        }\n        list.push(value)\n    }\n\n    Headers.prototype['delete'] = function (name) {\n        delete this.map[normalizeName(name)]\n    }\n\n    Headers.prototype.get = function (name) {\n        var values = this.map[normalizeName(name)]\n        return values ? values[0] : null\n    }\n\n    Headers.prototype.getAll = function (name) {\n        return this.map[normalizeName(name)] || []\n    }\n\n    Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(normalizeName(name))\n    }\n\n    Headers.prototype.set = function (name, value) {\n        this.map[normalizeName(name)] = [normalizeValue(value)]\n    }\n\n    Headers.prototype.forEach = function (callback, thisArg) {\n        Object.getOwnPropertyNames(this.map).forEach(function (name) {\n            this.map[name].forEach(function (value) {\n                callback.call(thisArg, value, name, this)\n            }, this)\n        }, this)\n    }\n\n    function consumed(body) {\n        if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n        }\n        body.bodyUsed = true\n    }\n\n    function fileReaderReady(reader) {\n        return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n                resolve(reader.result)\n            }\n            reader.onerror = function () {\n                reject(reader.error)\n            }\n        })\n    }\n\n    function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader()\n        reader.readAsArrayBuffer(blob)\n        return fileReaderReady(reader)\n    }\n\n    function readBlobAsText(blob) {\n        var reader = new FileReader()\n        reader.readAsText(blob)\n        return fileReaderReady(reader)\n    }\n\n    var support = {\n        blob: 'FileReader' in exports && 'Blob' in exports && (function () {\n            try {\n                new Blob();\n                return true\n            } catch (e) {\n                return false\n            }\n        })(),\n        formData: 'FormData' in exports\n    }\n\n    function Body() {\n        this.bodyUsed = false\n\n\n        this._initBody = function (body) {\n            this._bodyInit = body\n            if (typeof body === 'string') {\n                this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n                this._bodyBlob = body\n            } else if (support.formData && exports.FormData.prototype.isPrototypeOf(body)) {\n                this._bodyFormData = body\n            } else if (!body) {\n                this._bodyText = ''\n            } else {\n                throw new Error('unsupported BodyInit type')\n            }\n        }\n\n        if (support.blob) {\n            this.blob = function () {\n                var rejected = consumed(this)\n                if (rejected) {\n                    return rejected\n                }\n\n                if (this._bodyBlob) {\n                    return Promise.resolve(this._bodyBlob)\n                } else if (this._bodyFormData) {\n                    throw new Error('could not read FormData body as blob')\n                } else {\n                    return Promise.resolve(new Blob([this._bodyText]))\n                }\n            }\n\n            this.arrayBuffer = function () {\n                return this.blob().then(readBlobAsArrayBuffer)\n            }\n\n            this.text = function () {\n                var rejected = consumed(this)\n                if (rejected) {\n                    return rejected\n                }\n\n                if (this._bodyBlob) {\n                    return readBlobAsText(this._bodyBlob)\n                } else if (this._bodyFormData) {\n                    throw new Error('could not read FormData body as text')\n                } else {\n                    return Promise.resolve(this._bodyText)\n                }\n            }\n        } else {\n            this.text = function () {\n                var rejected = consumed(this)\n                return rejected ? rejected : Promise.resolve(this._bodyText)\n            }\n        }\n\n        if (support.formData) {\n            this.formData = function () {\n                return this.text().then(decode)\n            }\n        }\n\n        this.json = function () {\n            return this.text().then(JSON.parse)\n        }\n\n        return this\n    }\n\n    // HTTP methods whose capitalization should be normalized\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n    function normalizeMethod(method) {\n        var upcased = method.toUpperCase()\n        return (methods.indexOf(upcased) > -1) ? upcased : method\n    }\n\n    function Request(url, options) {\n        options = options || {}\n        this.url = url\n\n        this.credentials = options.credentials || 'omit'\n        this.headers = new Headers(options.headers)\n        this.method = normalizeMethod(options.method || 'GET')\n        this.mode = options.mode || null\n        this.referrer = null\n\n        if ((this.method === 'GET' || this.method === 'HEAD') && options.body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n        }\n        this._initBody(options.body)\n    }\n\n    function decode(body) {\n        var form = new exports.FormData()\n        body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n                var split = bytes.split('=')\n                var name = split.shift().replace(/\\+/g, ' ')\n                var value = split.join('=').replace(/\\+/g, ' ')\n                form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n        })\n        return form\n    }\n\n    function headers(xhr) {\n        var head = new Headers()\n        var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n        pairs.forEach(function (header) {\n            var split = header.trim().split(':')\n            var key = split.shift().trim()\n            var value = split.join(':').trim()\n            head.append(key, value)\n        })\n        return head\n    }\n\n    Body.call(Request.prototype)\n\n    function Response(bodyInit, options) {\n        if (!options) {\n            options = {}\n        }\n\n        this._initBody(bodyInit)\n        this.type = 'default'\n        this.url = null\n        this.status = options.status\n        this.ok = this.status >= 200 && this.status < 300\n        this.statusText = options.statusText\n        this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n        this.url = options.url || ''\n    }\n\n    Body.call(Response.prototype)\n\n    exports.Headers = Headers;\n    exports.Request = Request;\n    exports.Response = Response;\n\n    exports.fetch = function (input, init) {\n        // TODO: Request constructor should accept input, init\n        var request\n        if (Request.prototype.isPrototypeOf(input) && !init) {\n            request = input\n        } else {\n            request = new Request(input, init)\n        }\n\n        return new Promise(function (resolve, reject) {\n            var xhr = new exports.XMLHttpRequest()\n\n            function responseURL() {\n                if ('responseURL' in xhr) {\n                    return xhr.responseURL\n                }\n\n                // Avoid security warnings on getResponseHeader when not allowed by CORS\n                if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n                    return xhr.getResponseHeader('X-Request-URL')\n                }\n\n                return;\n            }\n\n            xhr.onload = function () {\n                var status = (xhr.status === 1223) ? 204 : xhr.status\n                if (status < 100 || status > 599) {\n                    reject(new TypeError('Network request failed'))\n                    return\n                }\n                var options = {\n                    status: status,\n                    statusText: xhr.statusText,\n                    headers: headers(xhr),\n                    url: responseURL()\n                }\n                //var body = 'response' in xhr ? xhr.response : xhr.responseText;\n                resolve(new Response(xhr.responseText, options))\n            }\n\n            xhr.onerror = function (error) {\n                reject(new TypeError(['Network request failed:', error.message].join(' ')))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n                xhr.withCredentials = true\n            }\n\n            if ('responseType' in xhr && support.blob) {\n                xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function (value, name) {\n                xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n        })\n    }\n    exports.fetch.polyfill = true\n\n})();"
    },
    {
      "id": 115,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http.js",
      "name": "./~/tns-core-modules/http/http.js",
      "index": 35,
      "index2": 25,
      "size": 1834,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-source/image-source.android.js",
      "issuerId": 33,
      "issuerName": "./~/tns-core-modules/image-source/image-source.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 33,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-source/image-source.android.js",
          "module": "./~/tns-core-modules/image-source/image-source.android.js",
          "moduleName": "./~/tns-core-modules/image-source/image-source.android.js",
          "type": "cjs require",
          "userRequest": "../http",
          "loc": "9:15-33"
        },
        {
          "moduleId": 71,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/xhr/xhr.js",
          "module": "./~/tns-core-modules/xhr/xhr.js",
          "moduleName": "./~/tns-core-modules/xhr/xhr.js",
          "type": "cjs require",
          "userRequest": "../http",
          "loc": "2:11-29"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar httpRequest = require(\"./http-request\");\nglobal.moduleMerge(httpRequest, exports);\nfunction getString(arg) {\n    return new Promise(function (resolve, reject) {\n        httpRequest.request(typeof arg === \"string\" ? { url: arg, method: \"GET\" } : arg)\n            .then(function (r) {\n            try {\n                var str = r.content.toString();\n                resolve(str);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, function (e) { return reject(e); });\n    });\n}\nexports.getString = getString;\nfunction getJSON(arg) {\n    return new Promise(function (resolve, reject) {\n        httpRequest.request(typeof arg === \"string\" ? { url: arg, method: \"GET\" } : arg)\n            .then(function (r) {\n            try {\n                var json = r.content.toJSON();\n                resolve(json);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, function (e) { return reject(e); });\n    });\n}\nexports.getJSON = getJSON;\nfunction getImage(arg) {\n    return httpRequest\n        .request(typeof arg === \"string\" ? { url: arg, method: \"GET\" } : arg)\n        .then(function (responce) { return responce.content.toImage(); });\n}\nexports.getImage = getImage;\nfunction getFile(arg, destinationFilePath) {\n    return new Promise(function (resolve, reject) {\n        httpRequest.request(typeof arg === \"string\" ? { url: arg, method: \"GET\" } : arg)\n            .then(function (r) {\n            try {\n                var file = r.content.toFile(destinationFilePath);\n                resolve(file);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, function (e) { return reject(e); });\n    });\n}\nexports.getFile = getFile;\n//# sourceMappingURL=http.js.map"
    },
    {
      "id": 116,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/formatted-string.js",
      "name": "./~/tns-core-modules/text/formatted-string.js",
      "index": 75,
      "index2": 67,
      "size": 6334,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/text/formatted-string",
          "loc": "83:56-105"
        },
        {
          "moduleId": 164,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base-common.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base-common.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base-common.js",
          "type": "cjs require",
          "userRequest": "../../text/formatted-string",
          "loc": "6:25-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nexports.Span = span_1.Span;\nvar observable_1 = require(\"../data/observable\");\nvar observable_array_1 = require(\"../data/observable-array\");\nvar view_1 = require(\"../ui/core/view\");\nvar knownCollections;\n(function (knownCollections) {\n    knownCollections.spans = \"spans\";\n})(knownCollections = exports.knownCollections || (exports.knownCollections = {}));\nvar CHILD_SPAN = \"Span\";\nvar FormattedString = (function (_super) {\n    __extends(FormattedString, _super);\n    function FormattedString() {\n        var _this = _super.call(this) || this;\n        _this._spans = new observable_array_1.ObservableArray();\n        _this._spans.addEventListener(observable_array_1.ObservableArray.changeEvent, _this.onSpansCollectionChanged, _this);\n        return _this;\n    }\n    Object.defineProperty(FormattedString.prototype, \"fontFamily\", {\n        get: function () {\n            return this.style.fontFamily;\n        },\n        set: function (value) {\n            this.style.fontFamily = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"fontSize\", {\n        get: function () {\n            return this.style.fontSize;\n        },\n        set: function (value) {\n            this.style.fontSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"fontStyle\", {\n        get: function () {\n            return this.style.fontStyle;\n        },\n        set: function (value) {\n            this.style.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"fontWeight\", {\n        get: function () {\n            return this.style.fontWeight;\n        },\n        set: function (value) {\n            this.style.fontWeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"textDecoration\", {\n        get: function () {\n            return this.style.textDecoration;\n        },\n        set: function (value) {\n            this.style.textDecoration = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"color\", {\n        get: function () {\n            return this.style.color;\n        },\n        set: function (value) {\n            this.style.color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"backgroundColor\", {\n        get: function () {\n            return this.style.backgroundColor;\n        },\n        set: function (value) {\n            this.style.backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormattedString.prototype, \"spans\", {\n        get: function () {\n            if (!this._spans) {\n                this._spans = new observable_array_1.ObservableArray();\n            }\n            return this._spans;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormattedString.prototype.toString = function () {\n        var result = \"\";\n        for (var i = 0, length_1 = this._spans.length; i < length_1; i++) {\n            result += this._spans.getItem(i).text;\n        }\n        return result;\n    };\n    FormattedString.prototype._addArrayFromBuilder = function (name, value) {\n        if (name === knownCollections.spans) {\n            this.spans.push(value);\n        }\n    };\n    FormattedString.prototype._addChildFromBuilder = function (name, value) {\n        if (name === CHILD_SPAN) {\n            this.spans.push(value);\n        }\n    };\n    FormattedString.prototype.onSpansCollectionChanged = function (eventData) {\n        if (eventData.addedCount > 0) {\n            for (var i = 0; i < eventData.addedCount; i++) {\n                var span = eventData.object.getItem(eventData.index + i);\n                this._addView(span);\n                this.addPropertyChangeHandler(span);\n            }\n        }\n        if (eventData.removed && eventData.removed.length > 0) {\n            for (var p = 0; p < eventData.removed.length; p++) {\n                var span = eventData.removed[p];\n                this.removePropertyChangeHandler(span);\n                this._removeView(span);\n            }\n        }\n        this.notifyPropertyChange('.', this);\n    };\n    FormattedString.prototype.addPropertyChangeHandler = function (span) {\n        var style = span.style;\n        span.on(observable_1.Observable.propertyChangeEvent, this.onPropertyChange, this);\n        style.on(\"fontFamilyChange\", this.onPropertyChange, this);\n        style.on(\"fontSizeChange\", this.onPropertyChange, this);\n        style.on(\"fontStyleChange\", this.onPropertyChange, this);\n        style.on(\"fontWeightChange\", this.onPropertyChange, this);\n        style.on(\"textDecorationChange\", this.onPropertyChange, this);\n        style.on(\"colorChange\", this.onPropertyChange, this);\n        style.on(\"backgroundColorChange\", this.onPropertyChange, this);\n    };\n    FormattedString.prototype.removePropertyChangeHandler = function (span) {\n        var style = span.style;\n        span.off(observable_1.Observable.propertyChangeEvent, this.onPropertyChange, this);\n        style.off(\"fontFamilyChange\", this.onPropertyChange, this);\n        style.off(\"fontSizeChange\", this.onPropertyChange, this);\n        style.off(\"fontStyleChange\", this.onPropertyChange, this);\n        style.off(\"fontWeightChange\", this.onPropertyChange, this);\n        style.off(\"textDecorationChange\", this.onPropertyChange, this);\n        style.off(\"colorChange\", this.onPropertyChange, this);\n        style.off(\"backgroundColorChange\", this.onPropertyChange, this);\n    };\n    FormattedString.prototype.onPropertyChange = function (data) {\n        this.notifyPropertyChange(data.propertyName, this);\n    };\n    FormattedString.prototype.eachChild = function (callback) {\n        this.spans.forEach(function (v, i, arr) { return callback(v); });\n    };\n    return FormattedString;\n}(view_1.ViewBase));\nexports.FormattedString = FormattedString;\n//# sourceMappingURL=formatted-string.js.map"
    },
    {
      "id": 117,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/span.js",
      "name": "./~/tns-core-modules/text/span.js",
      "index": 76,
      "index2": 65,
      "size": 2820,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/text/span",
          "loc": "84:45-82"
        },
        {
          "moduleId": 116,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/formatted-string.js",
          "module": "./~/tns-core-modules/text/formatted-string.js",
          "moduleName": "./~/tns-core-modules/text/formatted-string.js",
          "type": "cjs require",
          "userRequest": "./span",
          "loc": "2:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../ui/core/view\");\nvar Span = (function (_super) {\n    __extends(Span, _super);\n    function Span() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Span.prototype, \"fontFamily\", {\n        get: function () {\n            return this.style.fontFamily;\n        },\n        set: function (value) {\n            this.style.fontFamily = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"fontSize\", {\n        get: function () {\n            return this.style.fontSize;\n        },\n        set: function (value) {\n            this.style.fontSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"fontStyle\", {\n        get: function () {\n            return this.style.fontStyle;\n        },\n        set: function (value) {\n            this.style.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"fontWeight\", {\n        get: function () {\n            return this.style.fontWeight;\n        },\n        set: function (value) {\n            this.style.fontWeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"textDecoration\", {\n        get: function () {\n            return this.style.textDecoration;\n        },\n        set: function (value) {\n            this.style.textDecoration = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"color\", {\n        get: function () {\n            return this.style.color;\n        },\n        set: function (value) {\n            this.style.color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"backgroundColor\", {\n        get: function () {\n            return this.style.backgroundColor;\n        },\n        set: function (value) {\n            this.style.backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Span.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            if (this._text !== value) {\n                this._text = value;\n                this.notifyPropertyChange(\"text\", value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Span.prototype._setTextInternal = function (value) {\n        this._text = value;\n    };\n    return Span;\n}(view_1.ViewBase));\nexports.Span = Span;\n//# sourceMappingURL=span.js.map"
    },
    {
      "id": 118,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/timer/timer.android.js",
      "name": "./~/tns-core-modules/timer/timer.android.js",
      "index": 5,
      "index2": 1,
      "size": 1860,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "issuerId": 62,
      "issuerName": "./~/tns-core-modules/globals/globals.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "timer",
          "loc": "46:52-68"
        },
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "timer",
          "loc": "67:16-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar timeoutHandler;\nvar timeoutCallbacks = {};\nvar timerId = 0;\nfunction createHandlerAndGetId() {\n    if (!timeoutHandler) {\n        timeoutHandler = new android.os.Handler(android.os.Looper.myLooper());\n    }\n    timerId++;\n    return timerId;\n}\nfunction setTimeout(callback, milliseconds) {\n    if (milliseconds === void 0) { milliseconds = 0; }\n    var id = createHandlerAndGetId();\n    var zoneBound = zonedCallback(callback);\n    var runnable = new java.lang.Runnable({\n        run: function () {\n            zoneBound();\n            if (timeoutCallbacks[id]) {\n                delete timeoutCallbacks[id];\n            }\n        }\n    });\n    if (!timeoutCallbacks[id]) {\n        timeoutCallbacks[id] = runnable;\n    }\n    timeoutHandler.postDelayed(runnable, long(milliseconds));\n    return id;\n}\nexports.setTimeout = setTimeout;\nfunction clearTimeout(id) {\n    var index = id;\n    if (timeoutCallbacks[index]) {\n        timeoutHandler.removeCallbacks(timeoutCallbacks[index]);\n        delete timeoutCallbacks[index];\n    }\n}\nexports.clearTimeout = clearTimeout;\nfunction setInterval(callback, milliseconds) {\n    if (milliseconds === void 0) { milliseconds = 0; }\n    var id = createHandlerAndGetId();\n    var handler = timeoutHandler;\n    var zoneBound = zonedCallback(callback);\n    var runnable = new java.lang.Runnable({\n        run: function () {\n            zoneBound();\n            if (timeoutCallbacks[id]) {\n                handler.postDelayed(runnable, long(milliseconds));\n            }\n        }\n    });\n    if (!timeoutCallbacks[id]) {\n        timeoutCallbacks[id] = runnable;\n    }\n    timeoutHandler.postDelayed(runnable, long(milliseconds));\n    return id;\n}\nexports.setInterval = setInterval;\nexports.clearInterval = clearTimeout;\n//# sourceMappingURL=timer.android.js.map"
    },
    {
      "id": 119,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar-common.js",
      "name": "./~/tns-core-modules/ui/action-bar/action-bar-common.js",
      "index": 132,
      "index2": 125,
      "size": 9945,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
      "issuerId": 30,
      "issuerName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "type": "cjs require",
          "userRequest": "./action-bar-common",
          "loc": "5:26-56"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/action-bar/action-bar.android.js",
          "module": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/action-bar/action-bar.android.js",
          "type": "cjs require",
          "userRequest": "./action-bar-common",
          "loc": "9:9-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../core/view\"));\nvar view_1 = require(\"../core/view\");\nvar knownCollections;\n(function (knownCollections) {\n    knownCollections.actionItems = \"actionItems\";\n})(knownCollections = exports.knownCollections || (exports.knownCollections = {}));\nvar ActionBarBase = (function (_super) {\n    __extends(ActionBarBase, _super);\n    function ActionBarBase() {\n        var _this = _super.call(this) || this;\n        _this._actionItems = new ActionItems(_this);\n        return _this;\n    }\n    Object.defineProperty(ActionBarBase.prototype, \"navigationButton\", {\n        get: function () {\n            return this._navigationButton;\n        },\n        set: function (value) {\n            if (this._navigationButton !== value) {\n                if (this._navigationButton) {\n                    this._removeView(this._navigationButton);\n                    this._navigationButton.actionBar = undefined;\n                }\n                this._navigationButton = value;\n                if (this._navigationButton) {\n                    this._navigationButton.actionBar = this;\n                    this._addView(this._navigationButton);\n                }\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionBarBase.prototype, \"actionItems\", {\n        get: function () {\n            return this._actionItems;\n        },\n        set: function (value) {\n            throw new Error(\"actionItems property is read-only\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionBarBase.prototype, \"titleView\", {\n        get: function () {\n            return this._titleView;\n        },\n        set: function (value) {\n            if (this._titleView !== value) {\n                if (this._titleView) {\n                    this._removeView(this._titleView);\n                    this._titleView.style[view_1.horizontalAlignmentProperty.cssName] = view_1.unsetValue;\n                    this._titleView.style[view_1.verticalAlignmentProperty.cssName] = view_1.unsetValue;\n                }\n                this._titleView = value;\n                if (value) {\n                    this._addView(value);\n                    var style = value.style;\n                    if (!view_1.horizontalAlignmentProperty.isSet(style)) {\n                        style[view_1.horizontalAlignmentProperty.cssName] = \"center\";\n                    }\n                    if (!view_1.verticalAlignmentProperty.isSet(style)) {\n                        style[view_1.verticalAlignmentProperty.cssName] = \"middle\";\n                    }\n                }\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionBarBase.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionBarBase.prototype, \"_childrenCount\", {\n        get: function () {\n            var actionViewsCount = 0;\n            this._actionItems.getItems().forEach(function (actionItem) {\n                if (actionItem.actionView) {\n                    actionViewsCount++;\n                }\n            });\n            return actionViewsCount + (this.titleView ? 1 : 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActionBarBase.prototype.update = function () {\n    };\n    ActionBarBase.prototype._onTitlePropertyChanged = function () {\n    };\n    ActionBarBase.prototype._addArrayFromBuilder = function (name, value) {\n        if (name === \"actionItems\") {\n            this.actionItems.setItems(value);\n        }\n    };\n    ActionBarBase.prototype.eachChildView = function (callback) {\n        var titleView = this.titleView;\n        if (titleView) {\n            callback(titleView);\n        }\n    };\n    ActionBarBase.prototype.eachChild = function (callback) {\n        var titleView = this.titleView;\n        if (titleView) {\n            callback(titleView);\n        }\n        var navigationButton = this._navigationButton;\n        if (navigationButton) {\n            callback(navigationButton);\n        }\n        this.actionItems.getItems().forEach(function (actionItem) {\n            callback(actionItem);\n        });\n    };\n    ActionBarBase.prototype._isEmpty = function () {\n        if (this.title ||\n            this.titleView ||\n            (this.android && this.android.icon) ||\n            this.navigationButton ||\n            this.actionItems.getItems().length > 0) {\n            return false;\n        }\n        return true;\n    };\n    return ActionBarBase;\n}(view_1.View));\nexports.ActionBarBase = ActionBarBase;\nvar ActionItems = (function () {\n    function ActionItems(actionBar) {\n        this._items = new Array();\n        this._actionBar = actionBar;\n    }\n    ActionItems.prototype.addItem = function (item) {\n        if (!item) {\n            throw new Error(\"Cannot add empty item\");\n        }\n        this._items.push(item);\n        item.actionBar = this._actionBar;\n        this._actionBar._addView(item);\n        this.invalidate();\n    };\n    ActionItems.prototype.removeItem = function (item) {\n        if (!item) {\n            throw new Error(\"Cannot remove empty item\");\n        }\n        var itemIndex = this._items.indexOf(item);\n        if (itemIndex < 0) {\n            throw new Error(\"Cannot find item to remove\");\n        }\n        this._items.splice(itemIndex, 1);\n        this._actionBar._removeView(item);\n        item.actionBar = undefined;\n        this.invalidate();\n    };\n    ActionItems.prototype.getItems = function () {\n        return this._items.slice();\n    };\n    ActionItems.prototype.getVisibleItems = function () {\n        var visibleItems = [];\n        this._items.forEach(function (item) {\n            if (isVisible(item)) {\n                visibleItems.push(item);\n            }\n        });\n        return visibleItems;\n    };\n    ActionItems.prototype.getItemAt = function (index) {\n        if (index < 0 || index >= this._items.length) {\n            return undefined;\n        }\n        return this._items[index];\n    };\n    ActionItems.prototype.setItems = function (items) {\n        while (this._items.length > 0) {\n            this.removeItem(this._items[this._items.length - 1]);\n        }\n        for (var i = 0; i < items.length; i++) {\n            this.addItem(items[i]);\n        }\n        this.invalidate();\n    };\n    ActionItems.prototype.invalidate = function () {\n        if (this._actionBar) {\n            this._actionBar.update();\n        }\n    };\n    return ActionItems;\n}());\nexports.ActionItems = ActionItems;\nvar ActionItemBase = (function (_super) {\n    __extends(ActionItemBase, _super);\n    function ActionItemBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ActionItemBase.prototype, \"actionView\", {\n        get: function () {\n            return this._actionView;\n        },\n        set: function (value) {\n            if (this._actionView !== value) {\n                if (this._actionView) {\n                    this._actionView.style[view_1.horizontalAlignmentProperty.cssName] = view_1.unsetValue;\n                    this._actionView.style[view_1.verticalAlignmentProperty.cssName] = view_1.unsetValue;\n                    this._removeView(this._actionView);\n                }\n                this._actionView = value;\n                if (this._actionView) {\n                    this._addView(this._actionView);\n                    this._actionView.style[view_1.horizontalAlignmentProperty.cssName] = \"center\";\n                    this._actionView.style[view_1.verticalAlignmentProperty.cssName] = \"middle\";\n                }\n                if (this._actionBar) {\n                    this._actionBar.update();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionItemBase.prototype, \"actionBar\", {\n        get: function () {\n            return this._actionBar;\n        },\n        set: function (value) {\n            if (value !== this._actionBar) {\n                this._actionBar = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActionItemBase.prototype._raiseTap = function () {\n        this._emit(ActionItemBase.tapEvent);\n    };\n    ActionItemBase.prototype._addChildFromBuilder = function (name, value) {\n        this.actionView = value;\n    };\n    ActionItemBase.prototype.eachChild = function (callback) {\n        if (this._actionView) {\n            callback(this._actionView);\n        }\n    };\n    return ActionItemBase;\n}(view_1.ViewBase));\nActionItemBase.tapEvent = \"tap\";\nexports.ActionItemBase = ActionItemBase;\nfunction isVisible(item) {\n    return item.visibility === \"visible\";\n}\nexports.isVisible = isVisible;\nfunction onTitlePropertyChanged(actionBar, oldValue, newValue) {\n    actionBar._onTitlePropertyChanged();\n}\nvar titleProperty = new view_1.Property({ name: \"title\", valueChanged: onTitlePropertyChanged });\ntitleProperty.register(ActionBarBase);\nfunction onItemChanged(item, oldValue, newValue) {\n    if (item.actionBar) {\n        item.actionBar.update();\n    }\n}\nvar textProperty = new view_1.Property({ name: \"text\", defaultValue: \"\", valueChanged: onItemChanged });\ntextProperty.register(ActionItemBase);\nvar iconProperty = new view_1.Property({ name: \"icon\", valueChanged: onItemChanged });\niconProperty.register(ActionItemBase);\nvar visibilityProperty = new view_1.Property({ name: \"visibility\", defaultValue: \"visible\", valueChanged: onItemChanged });\nvisibilityProperty.register(ActionItemBase);\n//# sourceMappingURL=action-bar-common.js.map"
    },
    {
      "id": 120,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
      "name": "./~/tns-core-modules/ui/activity-indicator/activity-indicator-common.js",
      "index": 152,
      "index2": 145,
      "size": 783,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
      "issuerId": 246,
      "issuerName": "./~/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 246,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
          "module": "./~/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
          "moduleName": "./~/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
          "type": "cjs require",
          "userRequest": "./activity-indicator-common",
          "loc": "5:34-72"
        },
        {
          "moduleId": 246,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
          "module": "./~/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
          "moduleName": "./~/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
          "type": "cjs require",
          "userRequest": "./activity-indicator-common",
          "loc": "6:9-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar ActivityIndicatorBase = (function (_super) {\n    __extends(ActivityIndicatorBase, _super);\n    function ActivityIndicatorBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ActivityIndicatorBase;\n}(view_1.View));\nexports.ActivityIndicatorBase = ActivityIndicatorBase;\nexports.busyProperty = new view_1.Property({ name: \"busy\", defaultValue: false, valueConverter: view_1.booleanConverter });\nexports.busyProperty.register(ActivityIndicatorBase);\n//# sourceMappingURL=activity-indicator-common.js.map"
    },
    {
      "id": 121,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation-common.js",
      "name": "./~/tns-core-modules/ui/animation/animation-common.js",
      "index": 54,
      "index2": 40,
      "size": 8526,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
      "issuerId": 42,
      "issuerName": "./~/tns-core-modules/ui/animation/animation.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 42,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
          "module": "./~/tns-core-modules/ui/animation/animation.android.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation.android.js",
          "type": "cjs require",
          "userRequest": "./animation-common",
          "loc": "5:25-54"
        },
        {
          "moduleId": 42,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/animation.android.js",
          "module": "./~/tns-core-modules/ui/animation/animation.android.js",
          "moduleName": "./~/tns-core-modules/ui/animation/animation.android.js",
          "type": "cjs require",
          "userRequest": "./animation-common",
          "loc": "9:9-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../../color\");\nexports.Color = color_1.Color;\nvar trace_1 = require(\"../../trace\");\nexports.traceEnabled = trace_1.isEnabled;\nexports.traceWrite = trace_1.write;\nexports.traceCategories = trace_1.categories;\nvar Properties;\n(function (Properties) {\n    Properties.opacity = \"opacity\";\n    Properties.backgroundColor = \"backgroundColor\";\n    Properties.translate = \"translate\";\n    Properties.rotate = \"rotate\";\n    Properties.scale = \"scale\";\n})(Properties = exports.Properties || (exports.Properties = {}));\nvar CubicBezierAnimationCurve = (function () {\n    function CubicBezierAnimationCurve(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return CubicBezierAnimationCurve;\n}());\nexports.CubicBezierAnimationCurve = CubicBezierAnimationCurve;\nvar AnimationBase = (function () {\n    function AnimationBase(animationDefinitions, playSequentially) {\n        if (!animationDefinitions || animationDefinitions.length === 0) {\n            throw new Error(\"No animation definitions specified\");\n        }\n        if (trace_1.isEnabled()) {\n            trace_1.write(\"Analyzing \" + animationDefinitions.length + \" animation definitions...\", trace_1.categories.Animation);\n        }\n        this._propertyAnimations = new Array();\n        for (var i = 0, length_1 = animationDefinitions.length; i < length_1; i++) {\n            if (animationDefinitions[i].curve) {\n                animationDefinitions[i].curve = this._resolveAnimationCurve(animationDefinitions[i].curve);\n            }\n            this._propertyAnimations = this._propertyAnimations.concat(AnimationBase._createPropertyAnimations(animationDefinitions[i]));\n        }\n        if (this._propertyAnimations.length === 0) {\n            throw new Error(\"Nothing to animate.\");\n        }\n        if (trace_1.isEnabled()) {\n            trace_1.write(\"Created \" + this._propertyAnimations.length + \" individual property animations.\", trace_1.categories.Animation);\n        }\n        this._playSequentially = playSequentially;\n    }\n    AnimationBase.prototype.play = function () {\n        var _this = this;\n        if (this.isPlaying) {\n            throw new Error(\"Animation is already playing.\");\n        }\n        var animationFinishedPromise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n        this.fixupAnimationPromise(animationFinishedPromise);\n        this._isPlaying = true;\n        return animationFinishedPromise;\n    };\n    AnimationBase.prototype.fixupAnimationPromise = function (promise) {\n        var _this = this;\n        promise.cancel = function () {\n            _this.cancel();\n        };\n        var _then = promise.then;\n        promise.then = function () {\n            var r = _then.apply(promise, arguments);\n            _this.fixupAnimationPromise(r);\n            return r;\n        };\n        var _catch = promise.catch;\n        promise.catch = function () {\n            var r = _catch.apply(promise, arguments);\n            _this.fixupAnimationPromise(r);\n            return r;\n        };\n    };\n    AnimationBase.prototype.cancel = function () {\n        if (!this.isPlaying) {\n            throw new Error(\"Animation is not currently playing.\");\n        }\n    };\n    Object.defineProperty(AnimationBase.prototype, \"isPlaying\", {\n        get: function () {\n            return this._isPlaying;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationBase.prototype._resolveAnimationFinishedPromise = function () {\n        this._isPlaying = false;\n        this._resolve();\n    };\n    AnimationBase.prototype._rejectAnimationFinishedPromise = function () {\n        this._isPlaying = false;\n        this._reject(new Error(\"Animation cancelled.\"));\n    };\n    AnimationBase._createPropertyAnimations = function (animationDefinition) {\n        if (!animationDefinition.target) {\n            throw new Error(\"No animation target specified.\");\n        }\n        for (var item in animationDefinition) {\n            if (animationDefinition[item] === undefined) {\n                continue;\n            }\n            if ((item === Properties.opacity ||\n                item === Properties.rotate ||\n                item === \"duration\" ||\n                item === \"delay\" ||\n                item === \"iterations\") && typeof animationDefinition[item] !== \"number\") {\n                throw new Error(\"Property \" + item + \" must be valid number. Value: \" + animationDefinition[item]);\n            }\n            else if ((item === Properties.scale || item === Properties.translate) &&\n                (typeof animationDefinition[item].x !== \"number\" || typeof animationDefinition[item].y !== \"number\")) {\n                throw new Error(\"Property \" + item + \" must be valid Pair. Value: \" + animationDefinition[item]);\n            }\n            else if (item === Properties.backgroundColor && !color_1.Color.isValid(animationDefinition.backgroundColor)) {\n                throw new Error(\"Property \" + item + \" must be valid color. Value: \" + animationDefinition[item]);\n            }\n        }\n        var propertyAnimations = new Array();\n        if (animationDefinition.opacity !== undefined) {\n            propertyAnimations.push({\n                target: animationDefinition.target,\n                property: Properties.opacity,\n                value: animationDefinition.opacity,\n                duration: animationDefinition.duration,\n                delay: animationDefinition.delay,\n                iterations: animationDefinition.iterations,\n                curve: animationDefinition.curve\n            });\n        }\n        if (animationDefinition.backgroundColor !== undefined) {\n            propertyAnimations.push({\n                target: animationDefinition.target,\n                property: Properties.backgroundColor,\n                value: typeof animationDefinition.backgroundColor === \"string\" ?\n                    new color_1.Color(animationDefinition.backgroundColor) : animationDefinition.backgroundColor,\n                duration: animationDefinition.duration,\n                delay: animationDefinition.delay,\n                iterations: animationDefinition.iterations,\n                curve: animationDefinition.curve\n            });\n        }\n        if (animationDefinition.translate !== undefined) {\n            propertyAnimations.push({\n                target: animationDefinition.target,\n                property: Properties.translate,\n                value: animationDefinition.translate,\n                duration: animationDefinition.duration,\n                delay: animationDefinition.delay,\n                iterations: animationDefinition.iterations,\n                curve: animationDefinition.curve\n            });\n        }\n        if (animationDefinition.scale !== undefined) {\n            propertyAnimations.push({\n                target: animationDefinition.target,\n                property: Properties.scale,\n                value: animationDefinition.scale,\n                duration: animationDefinition.duration,\n                delay: animationDefinition.delay,\n                iterations: animationDefinition.iterations,\n                curve: animationDefinition.curve\n            });\n        }\n        if (animationDefinition.rotate !== undefined) {\n            propertyAnimations.push({\n                target: animationDefinition.target,\n                property: Properties.rotate,\n                value: animationDefinition.rotate,\n                duration: animationDefinition.duration,\n                delay: animationDefinition.delay,\n                iterations: animationDefinition.iterations,\n                curve: animationDefinition.curve\n            });\n        }\n        if (propertyAnimations.length === 0) {\n            throw new Error(\"No animation property specified.\");\n        }\n        return propertyAnimations;\n    };\n    AnimationBase._getAnimationInfo = function (animation) {\n        return JSON.stringify({\n            target: animation.target.id,\n            property: animation.property,\n            value: animation.value,\n            duration: animation.duration,\n            delay: animation.delay,\n            iterations: animation.iterations,\n            curve: animation.curve\n        });\n    };\n    return AnimationBase;\n}());\nexports.AnimationBase = AnimationBase;\n//# sourceMappingURL=animation-common.js.map"
    },
    {
      "id": 122,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/animation/keyframe-animation.js",
      "name": "./~/tns-core-modules/ui/animation/keyframe-animation.js",
      "index": 52,
      "index2": 43,
      "size": 8958,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
      "issuerId": 159,
      "issuerName": "./~/tns-core-modules/ui/styling/style-scope.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "ui/animation/keyframe-animation",
          "loc": "11:34-76"
        },
        {
          "moduleId": 265,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-animation-parser.js",
          "module": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
          "moduleName": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
          "type": "cjs require",
          "userRequest": "../animation/keyframe-animation",
          "loc": "3:27-69"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"../core/properties\");\nvar animation_1 = require(\"./animation\");\nvar style_properties_1 = require(\"../styling/style-properties\");\nvar KeyframeDeclaration = (function () {\n    function KeyframeDeclaration() {\n    }\n    return KeyframeDeclaration;\n}());\nexports.KeyframeDeclaration = KeyframeDeclaration;\nvar KeyframeInfo = (function () {\n    function KeyframeInfo() {\n    }\n    return KeyframeInfo;\n}());\nexports.KeyframeInfo = KeyframeInfo;\nvar KeyframeAnimationInfo = (function () {\n    function KeyframeAnimationInfo() {\n        this.name = \"\";\n        this.duration = 0.3;\n        this.delay = 0;\n        this.iterations = 1;\n        this.curve = \"ease\";\n        this.isForwards = false;\n        this.isReverse = false;\n    }\n    return KeyframeAnimationInfo;\n}());\nexports.KeyframeAnimationInfo = KeyframeAnimationInfo;\nvar KeyframeAnimation = (function () {\n    function KeyframeAnimation() {\n        this.delay = 0;\n        this.iterations = 1;\n    }\n    KeyframeAnimation.keyframeAnimationFromInfo = function (info) {\n        var animations = new Array();\n        var length = info.keyframes.length;\n        var startDuration = 0;\n        if (info.isReverse) {\n            for (var index_1 = length - 1; index_1 >= 0; index_1--) {\n                var keyframe = info.keyframes[index_1];\n                startDuration = KeyframeAnimation.parseKeyframe(info, keyframe, animations, startDuration);\n            }\n        }\n        else {\n            for (var index_2 = 0; index_2 < length; index_2++) {\n                var keyframe = info.keyframes[index_2];\n                startDuration = KeyframeAnimation.parseKeyframe(info, keyframe, animations, startDuration);\n            }\n            for (var index_3 = length - 1; index_3 > 0; index_3--) {\n                var a1 = animations[index_3];\n                var a2 = animations[index_3 - 1];\n                if (a2[\"curve\"] !== undefined) {\n                    a1[\"curve\"] = a2[\"curve\"];\n                    a2[\"curve\"] = undefined;\n                }\n            }\n        }\n        for (var index_4 = 1; index_4 < length; index_4++) {\n            var a = animations[index_4];\n            if (a[\"curve\"] === undefined) {\n                a[\"curve\"] = info.curve;\n            }\n        }\n        var animation = new KeyframeAnimation();\n        animation.delay = info.delay;\n        animation.iterations = info.iterations;\n        animation.animations = animations;\n        animation._isForwards = info.isForwards;\n        return animation;\n    };\n    KeyframeAnimation.parseKeyframe = function (info, keyframe, animations, startDuration) {\n        var animation = {};\n        for (var _i = 0, _a = keyframe.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            animation[declaration.property] = declaration.value;\n        }\n        var duration = keyframe.duration;\n        if (duration === 0) {\n            duration = 0.01;\n        }\n        else {\n            duration = (info.duration * duration) - startDuration;\n            startDuration += duration;\n        }\n        animation.duration = info.isReverse ? info.duration - duration : duration;\n        animation.curve = keyframe.curve;\n        animation.forceLayer = true;\n        animation.valueSource = \"keyframe\";\n        animations.push(animation);\n        return startDuration;\n    };\n    Object.defineProperty(KeyframeAnimation.prototype, \"isPlaying\", {\n        get: function () {\n            return this._isPlaying;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyframeAnimation.prototype.cancel = function () {\n        if (this._isPlaying) {\n            this._isPlaying = false;\n            for (var i = this._nativeAnimations.length - 1; i >= 0; i--) {\n                var animation = this._nativeAnimations[i];\n                if (animation.isPlaying) {\n                    animation.cancel();\n                }\n            }\n            if (this._nativeAnimations.length > 0) {\n                var animation = this._nativeAnimations[0];\n                this._resetAnimationValues(this._target, animation);\n            }\n            this._rejectAnimationFinishedPromise();\n        }\n    };\n    KeyframeAnimation.prototype.play = function (view) {\n        var _this = this;\n        if (this._isPlaying) {\n            throw new Error(\"Animation is already playing.\");\n        }\n        var animationFinishedPromise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n        this._isPlaying = true;\n        this._nativeAnimations = new Array();\n        this._target = view;\n        if (this.delay !== 0) {\n            setTimeout(function () { return _this.animate(view, 0, _this.iterations); }, this.delay);\n        }\n        else {\n            this.animate(view, 0, this.iterations);\n        }\n        return animationFinishedPromise;\n    };\n    KeyframeAnimation.prototype.animate = function (view, index, iterations) {\n        var _this = this;\n        if (!this._isPlaying) {\n            return;\n        }\n        if (index === 0) {\n            var animation = this.animations[0];\n            if (\"backgroundColor\" in animation) {\n                view.style[style_properties_1.backgroundColorProperty.keyframe] = animation.backgroundColor;\n            }\n            if (\"scale\" in animation) {\n                view.style[style_properties_1.scaleXProperty.keyframe] = animation.scale.x;\n                view.style[style_properties_1.scaleYProperty.keyframe] = animation.scale.y;\n            }\n            if (\"translate\" in animation) {\n                view.style[style_properties_1.translateXProperty.keyframe] = animation.translate.x;\n                view.style[style_properties_1.translateYProperty.keyframe] = animation.translate.y;\n            }\n            if (\"rotate\" in animation) {\n                view.style[style_properties_1.rotateProperty.keyframe] = animation.rotate;\n            }\n            if (\"opacity\" in animation) {\n                view.style[style_properties_1.opacityProperty.keyframe] = animation.opacity;\n            }\n            setTimeout(function () { return _this.animate(view, 1, iterations); }, 1);\n        }\n        else if (index < 0 || index >= this.animations.length) {\n            iterations -= 1;\n            if (iterations > 0) {\n                this.animate(view, 0, iterations);\n            }\n            else {\n                if (this._isForwards === false) {\n                    var animation = this.animations[this.animations.length - 1];\n                    this._resetAnimationValues(view, animation);\n                }\n                this._resolveAnimationFinishedPromise();\n            }\n        }\n        else {\n            var animationDef = this.animations[index];\n            animationDef.target = view;\n            var animation = new animation_1.Animation([animationDef]);\n            animation.play().then(function () {\n                _this.animate(view, index + 1, iterations);\n            }).catch(function (error) {\n                if (error.message.indexOf(\"Animation cancelled\") < 0) {\n                    throw error;\n                }\n            });\n            this._nativeAnimations.push(animation);\n        }\n    };\n    KeyframeAnimation.prototype._resolveAnimationFinishedPromise = function () {\n        this._nativeAnimations = new Array();\n        this._isPlaying = false;\n        this._target = null;\n        this._resolve();\n    };\n    KeyframeAnimation.prototype._rejectAnimationFinishedPromise = function () {\n        this._nativeAnimations = new Array();\n        this._isPlaying = false;\n        this._target = null;\n        this._reject(new Error(\"Animation cancelled.\"));\n    };\n    KeyframeAnimation.prototype._resetAnimationValues = function (view, animation) {\n        if (\"backgroundColor\" in animation) {\n            view.style[style_properties_1.backgroundColorProperty.keyframe] = properties_1.unsetValue;\n        }\n        if (\"scale\" in animation) {\n            view.style[style_properties_1.scaleXProperty.keyframe] = properties_1.unsetValue;\n            view.style[style_properties_1.scaleYProperty.keyframe] = properties_1.unsetValue;\n        }\n        if (\"translate\" in animation) {\n            view.style[style_properties_1.translateXProperty.keyframe] = properties_1.unsetValue;\n            view.style[style_properties_1.translateYProperty.keyframe] = properties_1.unsetValue;\n        }\n        if (\"rotate\" in animation) {\n            view.style[style_properties_1.rotateProperty.keyframe] = properties_1.unsetValue;\n        }\n        if (\"opacity\" in animation) {\n            view.style[style_properties_1.opacityProperty.keyframe] = properties_1.unsetValue;\n        }\n    };\n    return KeyframeAnimation;\n}());\nexports.KeyframeAnimation = KeyframeAnimation;\n//# sourceMappingURL=keyframe-animation.js.map"
    },
    {
      "id": 123,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/binding-builder.js",
      "name": "./~/tns-core-modules/ui/builder/binding-builder.js",
      "index": 43,
      "index2": 31,
      "size": 6477,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
      "issuerId": 64,
      "issuerName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../builder/binding-builder",
          "loc": "7:24-64"
        },
        {
          "moduleId": 248,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "module": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
          "type": "cjs require",
          "userRequest": "../binding-builder",
          "loc": "4:24-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar expressionSymbolsRegex = /[\\+\\-\\*\\/%\\?:<>=!\\|&\\(\\)^~]/;\nvar bindingConstants;\n(function (bindingConstants) {\n    bindingConstants.sourceProperty = \"sourceProperty\";\n    bindingConstants.targetProperty = \"targetProperty\";\n    bindingConstants.expression = \"expression\";\n    bindingConstants.twoWay = \"twoWay\";\n    bindingConstants.source = \"source\";\n    bindingConstants.bindingValueKey = \"$value\";\n    bindingConstants.parentValueKey = \"$parent\";\n    bindingConstants.parentsValueKey = \"$parents\";\n    bindingConstants.newPropertyValueKey = \"$newPropertyValue\";\n})(bindingConstants = exports.bindingConstants || (exports.bindingConstants = {}));\n;\nvar hasEqualSignRegex = /=+/;\nvar equalSignComparisionOperatorsRegex = /(==|===|>=|<=|!=|!==)/;\nexports.parentsRegex = /\\$parents\\s*\\[\\s*(['\"]*)\\w*\\1\\s*\\]/g;\nfunction isNamedParam(value) {\n    var equalSignIndex = value.search(hasEqualSignRegex);\n    if (equalSignIndex > -1) {\n        var equalSignSurround = value.substr(equalSignIndex > 0 ? equalSignIndex - 1 : 0, 3);\n        if (equalSignSurround.search(equalSignComparisionOperatorsRegex) === -1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction areNamedParams(params) {\n    var i;\n    for (i = 0; i < params.length; i++) {\n        if (isNamedParam(params[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nvar namedParamConstants = {\n    propName: \"propName\",\n    propValue: \"propValue\"\n};\nfunction getPropertyNameValuePair(param, knownOptions, callback) {\n    var nameValuePair = {};\n    var propertyName = param.substr(0, param.indexOf(\"=\")).trim();\n    var propertyValue = param.substr(param.indexOf(\"=\") + 1).trim();\n    if (knownOptions) {\n        if (!propertyName) {\n            propertyName = knownOptions.defaultProperty;\n        }\n        else {\n            propertyName = propertyName in knownOptions ? propertyName : null;\n        }\n    }\n    if (propertyName) {\n        if (callback) {\n            nameValuePair = callback(propertyName, propertyValue);\n        }\n        else {\n            nameValuePair[namedParamConstants.propName] = propertyName;\n            nameValuePair[namedParamConstants.propValue] = propertyValue;\n        }\n        return nameValuePair;\n    }\n    return null;\n}\nfunction parseNamedProperties(parameterList, knownOptions, callback) {\n    var result = {};\n    var i;\n    for (i = 0; i < parameterList.length; i++) {\n        var nameValuePair = getPropertyNameValuePair(parameterList[i], knownOptions, callback);\n        if (nameValuePair) {\n            result[nameValuePair[namedParamConstants.propName]] = nameValuePair[namedParamConstants.propValue];\n        }\n    }\n    return result;\n}\nfunction getParamsArray(value) {\n    var result = [];\n    var i;\n    var skipComma = 0;\n    var indexReached = 0;\n    var singleQuoteBlock, doubleQuoteBlock = false;\n    for (i = 0; i < value.length; i++) {\n        if (value[i] === '\"') {\n            doubleQuoteBlock = !doubleQuoteBlock;\n        }\n        if (value[i] === \"'\") {\n            singleQuoteBlock = !singleQuoteBlock;\n        }\n        if (value[i] === '(' || value[i] === '[') {\n            skipComma++;\n        }\n        if (value[i] === ')' || value[i] === ']') {\n            skipComma--;\n        }\n        if (value[i] === ',' && skipComma === 0 && !(singleQuoteBlock || doubleQuoteBlock)) {\n            result.push(value.substr(indexReached, i - indexReached));\n            indexReached = i + 1;\n        }\n    }\n    result.push(value.substr(indexReached));\n    return result;\n}\nfunction isExpression(expression) {\n    if (expression.search(expressionSymbolsRegex) > -1) {\n        var parentsMatches = expression.match(exports.parentsRegex);\n        if (parentsMatches) {\n            var restOfExpression = expression.substr(expression.indexOf(parentsMatches[0]) + parentsMatches[0].length);\n            if (!(restOfExpression.search(expressionSymbolsRegex) > -1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction getBindingOptions(name, value) {\n    var namedParams = [];\n    var params = getParamsArray(value);\n    if (!areNamedParams(params)) {\n        if (params.length === 1) {\n            var trimmedValue = params[0].trim();\n            var sourceProp;\n            if (isExpression(trimmedValue)) {\n                sourceProp = bindingConstants.bindingValueKey;\n                namedParams.push(bindingConstants.expression + \" = \" + trimmedValue);\n            }\n            else {\n                sourceProp = trimmedValue;\n            }\n            namedParams.push(bindingConstants.sourceProperty + \" = \" + sourceProp);\n            namedParams.push(bindingConstants.twoWay + \" = true\");\n        }\n        else {\n            namedParams.push(bindingConstants.sourceProperty + \" = \" + params[0].trim());\n            namedParams.push(bindingConstants.expression + \" = \" + params[1].trim());\n            var twoWay = params[2] ? params[2].toLowerCase().trim() === \"true\" : true;\n            namedParams.push(bindingConstants.twoWay + \" = \" + twoWay);\n        }\n    }\n    else {\n        namedParams = params;\n    }\n    var bindingPropertyHandler = function (prop, value) {\n        var result = {};\n        result[namedParamConstants.propName] = prop;\n        if (prop === bindingConstants.twoWay) {\n            if (value === \"true\") {\n                result[namedParamConstants.propValue] = true;\n            }\n            else {\n                result[namedParamConstants.propValue] = false;\n            }\n        }\n        else {\n            result[namedParamConstants.propValue] = value;\n        }\n        return result;\n    };\n    var bindingOptionsParameters = parseNamedProperties(namedParams, xmlBindingProperties, bindingPropertyHandler);\n    var bindOptions = {\n        targetProperty: name\n    };\n    for (var prop in bindingOptionsParameters) {\n        if (bindingOptionsParameters.hasOwnProperty(prop)) {\n            bindOptions[prop] = bindingOptionsParameters[prop];\n        }\n    }\n    if (bindOptions[bindingConstants.twoWay] === undefined) {\n        bindOptions[bindingConstants.twoWay] = true;\n    }\n    return bindOptions;\n}\nexports.getBindingOptions = getBindingOptions;\nvar xmlBindingProperties = {\n    sourceProperty: true,\n    expression: true,\n    twoWay: true,\n    source: true,\n    defaultProperty: bindingConstants.sourceProperty\n};\n//# sourceMappingURL=binding-builder.js.map"
    },
    {
      "id": 124,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button-common.js",
      "name": "./~/tns-core-modules/ui/button/button-common.js",
      "index": 72,
      "index2": 70,
      "size": 958,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button.android.js",
      "issuerId": 125,
      "issuerName": "./~/tns-core-modules/ui/button/button.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 125,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button.android.js",
          "module": "./~/tns-core-modules/ui/button/button.android.js",
          "moduleName": "./~/tns-core-modules/ui/button/button.android.js",
          "type": "cjs require",
          "userRequest": "./button-common",
          "loc": "5:22-48"
        },
        {
          "moduleId": 125,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button.android.js",
          "module": "./~/tns-core-modules/ui/button/button.android.js",
          "moduleName": "./~/tns-core-modules/ui/button/button.android.js",
          "type": "cjs require",
          "userRequest": "./button-common",
          "loc": "7:9-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar text_base_1 = require(\"../text-base\");\n__export(require(\"../text-base\"));\nvar ButtonBase = (function (_super) {\n    __extends(ButtonBase, _super);\n    function ButtonBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ButtonBase.prototype, \"textWrap\", {\n        get: function () {\n            return this.style.whiteSpace === text_base_1.WhiteSpace.NORMAL;\n        },\n        set: function (value) {\n            this.style.whiteSpace = value ? text_base_1.WhiteSpace.NORMAL : text_base_1.WhiteSpace.NO_WRAP;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ButtonBase;\n}(text_base_1.TextBase));\nButtonBase.tapEvent = \"tap\";\nexports.ButtonBase = ButtonBase;\n//# sourceMappingURL=button-common.js.map"
    },
    {
      "id": 125,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button.android.js",
      "name": "./~/tns-core-modules/ui/button/button.android.js",
      "index": 71,
      "index2": 71,
      "size": 5181,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/button",
          "loc": "52:47-84"
        },
        {
          "moduleId": 129,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs-common.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "type": "cjs require",
          "userRequest": "ui/button",
          "loc": "38:17-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar button_common_1 = require(\"./button-common\");\nvar gestures_1 = require(\"../gestures\");\n__export(require(\"./button-common\"));\nvar ClickListener;\nvar APILEVEL;\nfunction initializeClickListener() {\n    if (ClickListener) {\n        return;\n    }\n    var ClickListenerImpl = (function (_super) {\n        __extends(ClickListenerImpl, _super);\n        function ClickListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        ClickListenerImpl.prototype.onClick = function (v) {\n            this.owner._emit(button_common_1.ButtonBase.tapEvent);\n        };\n        return ClickListenerImpl;\n    }(java.lang.Object));\n    ClickListenerImpl = __decorate([\n        Interfaces([android.view.View.OnClickListener])\n    ], ClickListenerImpl);\n    ClickListener = ClickListenerImpl;\n    APILEVEL = android.os.Build.VERSION.SDK_INT;\n}\nvar Button = (function (_super) {\n    __extends(Button, _super);\n    function Button() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Button.prototype.createNativeView = function () {\n        initializeClickListener();\n        var button = new android.widget.Button(this._context);\n        var clickListener = new ClickListener(this);\n        button.setOnClickListener(clickListener);\n        button.clickListener = clickListener;\n        return button;\n    };\n    Button.prototype.initNativeView = function () {\n        this.nativeView.clickListener.owner = this;\n        _super.prototype.initNativeView.call(this);\n    };\n    Button.prototype.disposeNativeView = function () {\n        this.nativeView.clickListener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    Button.prototype._updateHandler = function (subscribe) {\n        var _this = this;\n        if (subscribe) {\n            this._highlightedHandler = this._highlightedHandler || (function (args) {\n                switch (args.action) {\n                    case gestures_1.TouchAction.up:\n                        _this._goToVisualState(\"normal\");\n                        break;\n                    case gestures_1.TouchAction.down:\n                        _this._goToVisualState(\"highlighted\");\n                        break;\n                }\n            });\n            this.on(gestures_1.GestureTypes.touch, this._highlightedHandler);\n        }\n        else {\n            this.off(gestures_1.GestureTypes.touch, this._highlightedHandler);\n        }\n    };\n    Button.prototype[button_common_1.paddingTopProperty.getDefault] = function () {\n        return { value: this._defaultPaddingTop, unit: \"px\" };\n    };\n    Button.prototype[button_common_1.paddingTopProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingTop(this.nativeView, button_common_1.Length.toDevicePixels(value, 0) + button_common_1.Length.toDevicePixels(this.style.borderTopWidth, 0));\n    };\n    Button.prototype[button_common_1.paddingRightProperty.getDefault] = function () {\n        return { value: this._defaultPaddingRight, unit: \"px\" };\n    };\n    Button.prototype[button_common_1.paddingRightProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingRight(this.nativeView, button_common_1.Length.toDevicePixels(value, 0) + button_common_1.Length.toDevicePixels(this.style.borderRightWidth, 0));\n    };\n    Button.prototype[button_common_1.paddingBottomProperty.getDefault] = function () {\n        return { value: this._defaultPaddingBottom, unit: \"px\" };\n    };\n    Button.prototype[button_common_1.paddingBottomProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingBottom(this.nativeView, button_common_1.Length.toDevicePixels(value, 0) + button_common_1.Length.toDevicePixels(this.style.borderBottomWidth, 0));\n    };\n    Button.prototype[button_common_1.paddingLeftProperty.getDefault] = function () {\n        return { value: this._defaultPaddingLeft, unit: \"px\" };\n    };\n    Button.prototype[button_common_1.paddingLeftProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setPaddingLeft(this.nativeView, button_common_1.Length.toDevicePixels(value, 0) + button_common_1.Length.toDevicePixels(this.style.borderLeftWidth, 0));\n    };\n    Button.prototype[button_common_1.zIndexProperty.getDefault] = function () {\n        return org.nativescript.widgets.ViewHelper.getZIndex(this.nativeView);\n    };\n    Button.prototype[button_common_1.zIndexProperty.setNative] = function (value) {\n        org.nativescript.widgets.ViewHelper.setZIndex(this.nativeView, value);\n        if (APILEVEL >= 21) {\n            this.nativeView.setStateListAnimator(null);\n        }\n    };\n    return Button;\n}(button_common_1.ButtonBase));\n__decorate([\n    button_common_1.PseudoClassHandler(\"normal\", \"highlighted\", \"pressed\", \"active\")\n], Button.prototype, \"_updateHandler\", null);\nexports.Button = Button;\n//# sourceMappingURL=button.android.js.map"
    },
    {
      "id": 126,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
      "name": "./~/tns-core-modules/ui/core/view-base/view-base.js",
      "index": 40,
      "index2": 47,
      "size": 25228,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
      "issuerId": 127,
      "issuerName": "./~/tns-core-modules/ui/core/view/view-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "../view-base",
          "loc": "7:18-41"
        },
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "../view-base",
          "loc": "10:9-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"../properties\");\nvar bindable_1 = require(\"../bindable\");\nvar platform_1 = require(\"../../../platform\");\nexports.isIOS = platform_1.isIOS;\nexports.isAndroid = platform_1.isAndroid;\nvar utils_1 = require(\"../../../utils/utils\");\nexports.layout = utils_1.layout;\nvar style_properties_1 = require(\"../../styling/style-properties\");\nvar types = require(\"../../../utils/types\");\nvar color_1 = require(\"../../../color\");\nexports.Color = color_1.Color;\n__export(require(\"../bindable\"));\n__export(require(\"../properties\"));\nvar styleScopeModule;\nfunction ensureStyleScopeModule() {\n    if (!styleScopeModule) {\n        styleScopeModule = require(\"ui/styling/style-scope\");\n    }\n}\nvar defaultBindingSource = {};\nfunction getAncestor(view, criterion) {\n    var matcher = null;\n    if (typeof criterion === \"string\") {\n        matcher = function (view) { return view.typeName === criterion; };\n    }\n    else {\n        matcher = function (view) { return view instanceof criterion; };\n    }\n    for (var parent_1 = view.parent; parent_1 != null; parent_1 = parent_1.parent) {\n        if (matcher(parent_1)) {\n            return parent_1;\n        }\n    }\n    return null;\n}\nexports.getAncestor = getAncestor;\nfunction getViewById(view, id) {\n    if (!view) {\n        return undefined;\n    }\n    if (view.id === id) {\n        return view;\n    }\n    var retVal;\n    var descendantsCallback = function (child) {\n        if (child.id === id) {\n            retVal = child;\n            return false;\n        }\n        return true;\n    };\n    eachDescendant(view, descendantsCallback);\n    return retVal;\n}\nexports.getViewById = getViewById;\nfunction eachDescendant(view, callback) {\n    if (!callback || !view) {\n        return;\n    }\n    var continueIteration;\n    var localCallback = function (child) {\n        continueIteration = callback(child);\n        if (continueIteration) {\n            child.eachChild(localCallback);\n        }\n        return continueIteration;\n    };\n    view.eachChild(localCallback);\n}\nexports.eachDescendant = eachDescendant;\nvar viewIdCounter = 1;\nvar contextMap = new Map();\nfunction getNativeView(context, typeName) {\n    var typeMap = contextMap.get(context);\n    if (!typeMap) {\n        typeMap = new Map();\n        contextMap.set(context, typeMap);\n        return undefined;\n    }\n    var array = typeMap.get(typeName);\n    if (array) {\n        var nativeView = void 0;\n        while (array.length > 0) {\n            var weakRef = array.pop();\n            nativeView = weakRef.get();\n            if (nativeView) {\n                return nativeView;\n            }\n        }\n    }\n    return undefined;\n}\nfunction putNativeView(context, view) {\n    var typeMap = contextMap.get(context);\n    var typeName = view.typeName;\n    var list = typeMap.get(typeName);\n    if (!list) {\n        list = [];\n        typeMap.set(typeName, list);\n    }\n    list.push(new WeakRef(view.nativeView));\n}\nvar ViewBase = (function (_super) {\n    __extends(ViewBase, _super);\n    function ViewBase() {\n        var _this = _super.call(this) || this;\n        _this.pseudoClassAliases = {\n            'highlighted': [\n                'active',\n                'pressed'\n            ]\n        };\n        _this.cssClasses = new Set();\n        _this.cssPseudoClasses = new Set();\n        _this._domId = viewIdCounter++;\n        _this._style = new properties_1.Style(_this);\n        return _this;\n    }\n    Object.defineProperty(ViewBase.prototype, \"typeName\", {\n        get: function () {\n            return types.getClass(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewBase.prototype, \"style\", {\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            throw new Error(\"View.style property is read-only.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewBase.prototype, \"android\", {\n        get: function () {\n            return this._androidView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewBase.prototype, \"ios\", {\n        get: function () {\n            return this._iosView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewBase.prototype, \"isLoaded\", {\n        get: function () {\n            return this._isLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewBase.prototype, \"class\", {\n        get: function () {\n            return this.className;\n        },\n        set: function (v) {\n            this.className = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewBase.prototype, \"inlineStyleSelector\", {\n        get: function () {\n            return this._inlineStyleSelector;\n        },\n        set: function (value) {\n            this._inlineStyleSelector = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewBase.prototype.getViewById = function (id) {\n        return getViewById(this, id);\n    };\n    Object.defineProperty(ViewBase.prototype, \"page\", {\n        get: function () {\n            if (this.parent) {\n                return this.parent.page;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewBase.prototype.set = function (name, value) {\n        this[name] = bindable_1.WrappedValue.unwrap(value);\n    };\n    ViewBase.prototype.onLoaded = function () {\n        this._isLoaded = true;\n        this._loadEachChild();\n        this._emit(\"loaded\");\n    };\n    ViewBase.prototype._loadEachChild = function () {\n        this.eachChild(function (child) {\n            child.onLoaded();\n            return true;\n        });\n    };\n    ViewBase.prototype.onUnloaded = function () {\n        this._unloadEachChild();\n        this._isLoaded = false;\n        this._emit(\"unloaded\");\n    };\n    ViewBase.prototype._unloadEachChild = function () {\n        this.eachChild(function (child) {\n            if (child.isLoaded) {\n                child.onUnloaded();\n            }\n            return true;\n        });\n    };\n    ViewBase.prototype._applyStyleFromScope = function () {\n        var scope = this._styleScope;\n        if (scope) {\n            scope.applySelectors(this);\n        }\n        else {\n            this._setCssState(null);\n        }\n    };\n    ViewBase.prototype._setCssState = function (next) {\n        var _this = this;\n        var previous = this._cssState;\n        this._cssState = next;\n        if (!this._invalidateCssHandler) {\n            this._invalidateCssHandler = function () {\n                if (_this._invalidateCssHandlerSuspended) {\n                    return;\n                }\n                _this.applyCssState();\n            };\n        }\n        try {\n            this._invalidateCssHandlerSuspended = true;\n            if (next) {\n                next.changeMap.forEach(function (changes, view) {\n                    if (changes.attributes) {\n                        changes.attributes.forEach(function (attribute) {\n                            view.addEventListener(attribute + \"Change\", _this._invalidateCssHandler);\n                        });\n                    }\n                    if (changes.pseudoClasses) {\n                        changes.pseudoClasses.forEach(function (pseudoClass) {\n                            var eventName = \":\" + pseudoClass;\n                            view.addEventListener(\":\" + pseudoClass, _this._invalidateCssHandler);\n                            if (view[eventName]) {\n                                view[eventName](+1);\n                            }\n                        });\n                    }\n                });\n            }\n            if (previous) {\n                previous.changeMap.forEach(function (changes, view) {\n                    if (changes.attributes) {\n                        changes.attributes.forEach(function (attribute) {\n                            view.removeEventListener(\"onPropertyChanged:\" + attribute, _this._invalidateCssHandler);\n                        });\n                    }\n                    if (changes.pseudoClasses) {\n                        changes.pseudoClasses.forEach(function (pseudoClass) {\n                            var eventName = \":\" + pseudoClass;\n                            view.removeEventListener(eventName, _this._invalidateCssHandler);\n                            if (view[eventName]) {\n                                view[eventName](-1);\n                            }\n                        });\n                    }\n                });\n            }\n        }\n        finally {\n            this._invalidateCssHandlerSuspended = false;\n        }\n        this.applyCssState();\n    };\n    ViewBase.prototype.notifyPseudoClassChanged = function (pseudoClass) {\n        this.notify({ eventName: \":\" + pseudoClass, object: this });\n    };\n    ViewBase.prototype.applyCssState = function () {\n        if (!this._cssState) {\n            return;\n        }\n        this._cssState.apply();\n    };\n    ViewBase.prototype.getAllAliasedStates = function (name) {\n        var allStates = [];\n        allStates.push(name);\n        if (name in this.pseudoClassAliases) {\n            for (var i = 0; i < this.pseudoClassAliases[name].length; i++) {\n                allStates.push(this.pseudoClassAliases[name][i]);\n            }\n        }\n        return allStates;\n    };\n    ViewBase.prototype.addPseudoClass = function (name) {\n        var allStates = this.getAllAliasedStates(name);\n        for (var i = 0; i < allStates.length; i++) {\n            if (!this.cssPseudoClasses.has(allStates[i])) {\n                this.cssPseudoClasses.add(allStates[i]);\n                this.notifyPseudoClassChanged(allStates[i]);\n            }\n        }\n    };\n    ViewBase.prototype.deletePseudoClass = function (name) {\n        var allStates = this.getAllAliasedStates(name);\n        for (var i = 0; i < allStates.length; i++) {\n            if (this.cssPseudoClasses.has(allStates[i])) {\n                this.cssPseudoClasses.delete(allStates[i]);\n                this.notifyPseudoClassChanged(allStates[i]);\n            }\n        }\n    };\n    ViewBase.prototype._applyInlineStyle = function (inlineStyle) {\n        if (typeof inlineStyle === \"string\") {\n            try {\n                ensureStyleScopeModule();\n                styleScopeModule.applyInlineStyle(this, inlineStyle);\n            }\n            finally {\n            }\n        }\n    };\n    ViewBase.prototype.bindingContextChanged = function (data) {\n        this.bindings.get(\"bindingContext\").bind(data.value);\n    };\n    ViewBase.prototype.bind = function (options, source) {\n        if (source === void 0) { source = defaultBindingSource; }\n        var targetProperty = options.targetProperty;\n        this.unbind(targetProperty);\n        if (!this.bindings) {\n            this.bindings = new Map();\n        }\n        var binding = new bindable_1.Binding(this, options);\n        this.bindings.set(targetProperty, binding);\n        var bindingSource = source;\n        if (bindingSource === defaultBindingSource) {\n            bindingSource = this.bindingContext;\n            binding.sourceIsBindingContext = true;\n            if (targetProperty === \"bindingContext\") {\n                this.bindingContextBoundToParentBindingContextChanged = true;\n                var parent_2 = this.parent;\n                if (parent_2) {\n                    parent_2.on(\"bindingContextChange\", this.bindingContextChanged, this);\n                }\n                else {\n                    this.shouldAddHandlerToParentBindingContextChanged = true;\n                }\n            }\n        }\n        binding.bind(bindingSource);\n    };\n    ViewBase.prototype.unbind = function (property) {\n        var bindings = this.bindings;\n        if (!bindings) {\n            return;\n        }\n        var binding = bindings.get(property);\n        if (binding) {\n            binding.unbind();\n            bindings.delete(property);\n            if (binding.sourceIsBindingContext) {\n                if (property === \"bindingContext\") {\n                    this.shouldAddHandlerToParentBindingContextChanged = false;\n                    this.bindingContextBoundToParentBindingContextChanged = false;\n                    var parent_3 = this.parent;\n                    if (parent_3) {\n                        parent_3.off(\"bindingContextChange\", this.bindingContextChanged, this);\n                    }\n                }\n            }\n        }\n    };\n    ViewBase.prototype.requestLayout = function () {\n        var parent = this.parent;\n        if (parent) {\n            parent.requestLayout();\n        }\n    };\n    ViewBase.prototype.eachChild = function (callback) {\n    };\n    ViewBase.prototype._addView = function (view, atIndex) {\n        if (bindable_1.traceEnabled()) {\n            bindable_1.traceWrite(this + \"._addView(\" + view + \", \" + atIndex + \")\", bindable_1.traceCategories.ViewHierarchy);\n        }\n        if (!view) {\n            throw new Error(\"Expecting a valid View instance.\");\n        }\n        if (!(view instanceof ViewBase)) {\n            throw new Error(view + \" is not a valid View instance.\");\n        }\n        if (view.parent) {\n            throw new Error(\"View already has a parent. View: \" + view + \" Parent: \" + view.parent);\n        }\n        view.parent = this;\n        this._addViewCore(view, atIndex);\n        view._parentChanged(null);\n    };\n    ViewBase.prototype._setStyleScope = function (scope) {\n        this._styleScope = scope;\n        this._applyStyleFromScope();\n        this.eachChild(function (v) {\n            v._setStyleScope(scope);\n            return true;\n        });\n    };\n    ViewBase.prototype._addViewCore = function (view, atIndex) {\n        properties_1.propagateInheritableProperties(this, view);\n        var styleScope = this._styleScope;\n        if (styleScope) {\n            view._setStyleScope(styleScope);\n        }\n        properties_1.propagateInheritableCssProperties(this.style, view.style);\n        if (this._context) {\n            view._setupUI(this._context, atIndex);\n        }\n        if (this._isLoaded) {\n            view.onLoaded();\n        }\n    };\n    ViewBase.prototype._removeView = function (view) {\n        if (bindable_1.traceEnabled()) {\n            bindable_1.traceWrite(this + \"._removeView(\" + view + \")\", bindable_1.traceCategories.ViewHierarchy);\n        }\n        if (view.parent !== this) {\n            throw new Error(\"View not added to this instance. View: \" + view + \" CurrentParent: \" + view.parent + \" ExpectedParent: \" + this);\n        }\n        this._removeViewCore(view);\n        view.parent = undefined;\n        view._parentChanged(this);\n    };\n    ViewBase.prototype._removeViewCore = function (view) {\n        if (this._styleScope === view._styleScope) {\n            view._setStyleScope(null);\n        }\n        if (view.isLoaded) {\n            view.onUnloaded();\n        }\n        if (view._context) {\n            view._tearDownUI();\n        }\n    };\n    ViewBase.prototype.createNativeView = function () {\n        return undefined;\n    };\n    ViewBase.prototype.disposeNativeView = function () {\n    };\n    ViewBase.prototype.initNativeView = function () {\n    };\n    ViewBase.prototype.resetNativeView = function () {\n        if (this.nativeView && this.recycleNativeView && platform_1.isAndroid) {\n            properties_1.resetNativeView(this);\n        }\n    };\n    ViewBase.prototype._setupUI = function (context, atIndex, parentIsLoaded) {\n        bindable_1.traceNotifyEvent(this, \"_setupUI\");\n        if (bindable_1.traceEnabled()) {\n            bindable_1.traceWrite(this + \"._setupUI(\" + context + \")\", bindable_1.traceCategories.VisualTreeEvents);\n        }\n        if (this._context === context) {\n            return;\n        }\n        this._context = context;\n        bindable_1.traceNotifyEvent(this, \"_onContextChanged\");\n        var currentNativeView = this.nativeView;\n        if (platform_1.isAndroid) {\n            var nativeView = void 0;\n            if (this.recycleNativeView) {\n                nativeView = getNativeView(context, this.typeName);\n            }\n            if (!nativeView) {\n                nativeView = this.createNativeView();\n            }\n            this._androidView = this.nativeView = nativeView;\n            if (nativeView) {\n                var result = nativeView.defaultPaddings;\n                if (result === undefined) {\n                    result = org.nativescript.widgets.ViewHelper.getPadding(nativeView);\n                    nativeView.defaultPaddings = result;\n                }\n                this._defaultPaddingTop = result.top;\n                this._defaultPaddingRight = result.right;\n                this._defaultPaddingBottom = result.bottom;\n                this._defaultPaddingLeft = result.left;\n                var style = this.style;\n                if (!style_properties_1.paddingTopProperty.isSet(style)) {\n                    this.effectivePaddingTop = this._defaultPaddingTop;\n                }\n                if (!style_properties_1.paddingRightProperty.isSet(style)) {\n                    this.effectivePaddingRight = this._defaultPaddingRight;\n                }\n                if (!style_properties_1.paddingBottomProperty.isSet(style)) {\n                    this.effectivePaddingBottom = this._defaultPaddingBottom;\n                }\n                if (!style_properties_1.paddingLeftProperty.isSet(style)) {\n                    this.effectivePaddingLeft = this._defaultPaddingLeft;\n                }\n            }\n        }\n        else {\n            var nativeView = this.createNativeView();\n            if (!currentNativeView && nativeView) {\n                this.nativeView = this._iosView = nativeView;\n            }\n        }\n        this.initNativeView();\n        if (this.parent) {\n            var nativeIndex = this.parent._childIndexToNativeChildIndex(atIndex);\n            this._isAddedToNativeVisualTree = this.parent._addViewToNativeVisualTree(this, nativeIndex);\n        }\n        if (this.nativeView) {\n            if (currentNativeView !== this.nativeView) {\n                properties_1.initNativeView(this);\n            }\n        }\n        this.eachChild(function (child) {\n            child._setupUI(context);\n            return true;\n        });\n    };\n    ViewBase.prototype._tearDownUI = function (force) {\n        if (!this._context) {\n            return;\n        }\n        if (bindable_1.traceEnabled()) {\n            bindable_1.traceWrite(this + \"._tearDownUI(\" + force + \")\", bindable_1.traceCategories.VisualTreeEvents);\n        }\n        this.resetNativeView();\n        this.eachChild(function (child) {\n            child._tearDownUI(force);\n            return true;\n        });\n        if (this.parent) {\n            this.parent._removeViewFromNativeVisualTree(this);\n        }\n        var nativeView = this.nativeView;\n        if (nativeView && this.recycleNativeView && platform_1.isAndroid) {\n            var nativeParent = platform_1.isAndroid ? nativeView.getParent() : nativeView.superview;\n            if (!nativeParent) {\n                putNativeView(this._context, this);\n            }\n        }\n        this.disposeNativeView();\n        if (platform_1.isAndroid) {\n            this.nativeView = null;\n            this._androidView = null;\n        }\n        this._context = null;\n        bindable_1.traceNotifyEvent(this, \"_onContextChanged\");\n        bindable_1.traceNotifyEvent(this, \"_tearDownUI\");\n    };\n    ViewBase.prototype._childIndexToNativeChildIndex = function (index) {\n        return index;\n    };\n    ViewBase.prototype._addViewToNativeVisualTree = function (view, atIndex) {\n        if (view._isAddedToNativeVisualTree) {\n            throw new Error(\"Child already added to the native visual tree.\");\n        }\n        return true;\n    };\n    ViewBase.prototype._removeViewFromNativeVisualTree = function (view) {\n        bindable_1.traceNotifyEvent(view, \"_removeViewFromNativeVisualTree\");\n        view._isAddedToNativeVisualTree = false;\n    };\n    ViewBase.prototype._goToVisualState = function (state) {\n        if (bindable_1.traceEnabled()) {\n            bindable_1.traceWrite(this + \" going to state: \" + state, bindable_1.traceCategories.Style);\n        }\n        if (state === this._visualState) {\n            return;\n        }\n        this.deletePseudoClass(this._visualState);\n        this._visualState = state;\n        this.addPseudoClass(state);\n    };\n    ViewBase.prototype._applyXmlAttribute = function (attribute, value) {\n        if (attribute === \"style\") {\n            this._applyInlineStyle(value);\n            return true;\n        }\n        return false;\n    };\n    ViewBase.prototype.setInlineStyle = function (style) {\n        if (typeof style !== \"string\") {\n            throw new Error(\"Parameter should be valid CSS string!\");\n        }\n        this._applyInlineStyle(style);\n    };\n    ViewBase.prototype._parentChanged = function (oldParent) {\n        if (oldParent) {\n            properties_1.clearInheritedProperties(this);\n            if (this.bindingContextBoundToParentBindingContextChanged) {\n                oldParent.off(\"bindingContextChange\", this.bindingContextChanged, this);\n            }\n        }\n        else if (this.shouldAddHandlerToParentBindingContextChanged) {\n            var parent_4 = this.parent;\n            parent_4.on(\"bindingContextChange\", this.bindingContextChanged, this);\n            this.bindings.get(\"bindingContext\").bind(parent_4.bindingContext);\n        }\n    };\n    ViewBase.prototype._registerAnimation = function (animation) {\n        if (this._registeredAnimations === undefined) {\n            this._registeredAnimations = new Array();\n        }\n        this._registeredAnimations.push(animation);\n    };\n    ViewBase.prototype._unregisterAnimation = function (animation) {\n        if (this._registeredAnimations) {\n            var index_1 = this._registeredAnimations.indexOf(animation);\n            if (index_1 >= 0) {\n                this._registeredAnimations.splice(index_1, 1);\n            }\n        }\n    };\n    ViewBase.prototype._cancelAllAnimations = function () {\n        if (this._registeredAnimations) {\n            for (var _i = 0, _a = this._registeredAnimations; _i < _a.length; _i++) {\n                var animation = _a[_i];\n                animation.cancel();\n            }\n        }\n    };\n    return ViewBase;\n}(bindable_1.Observable));\nViewBase.loadedEvent = \"loaded\";\nViewBase.unloadedEvent = \"unloaded\";\nexports.ViewBase = ViewBase;\nViewBase.prototype.isCollapsed = false;\nViewBase.prototype._oldLeft = 0;\nViewBase.prototype._oldTop = 0;\nViewBase.prototype._oldRight = 0;\nViewBase.prototype._oldBottom = 0;\nViewBase.prototype.effectiveMinWidth = 0;\nViewBase.prototype.effectiveMinHeight = 0;\nViewBase.prototype.effectiveWidth = 0;\nViewBase.prototype.effectiveHeight = 0;\nViewBase.prototype.effectiveMarginTop = 0;\nViewBase.prototype.effectiveMarginRight = 0;\nViewBase.prototype.effectiveMarginBottom = 0;\nViewBase.prototype.effectiveMarginLeft = 0;\nViewBase.prototype.effectivePaddingTop = 0;\nViewBase.prototype.effectivePaddingRight = 0;\nViewBase.prototype.effectivePaddingBottom = 0;\nViewBase.prototype.effectivePaddingLeft = 0;\nViewBase.prototype.effectiveBorderTopWidth = 0;\nViewBase.prototype.effectiveBorderRightWidth = 0;\nViewBase.prototype.effectiveBorderBottomWidth = 0;\nViewBase.prototype.effectiveBorderLeftWidth = 0;\nViewBase.prototype._defaultPaddingTop = 0;\nViewBase.prototype._defaultPaddingRight = 0;\nViewBase.prototype._defaultPaddingBottom = 0;\nViewBase.prototype._defaultPaddingLeft = 0;\nexports.bindingContextProperty = new properties_1.InheritedProperty({ name: \"bindingContext\" });\nexports.bindingContextProperty.register(ViewBase);\nexports.classNameProperty = new properties_1.Property({\n    name: \"className\",\n    valueChanged: function (view, oldValue, newValue) {\n        var classes = view.cssClasses;\n        classes.clear();\n        if (typeof newValue === \"string\") {\n            newValue.split(\" \").forEach(function (c) { return classes.add(c); });\n        }\n        resetStyles(view);\n    }\n});\nexports.classNameProperty.register(ViewBase);\nfunction resetStyles(view) {\n    view._cancelAllAnimations();\n    properties_1.resetCSSProperties(view.style);\n    view._applyStyleFromScope();\n    view.eachChild(function (child) {\n        resetStyles(child);\n        return true;\n    });\n}\nexports.idProperty = new properties_1.Property({ name: \"id\", valueChanged: function (view, oldValue, newValue) { return resetStyles(view); } });\nexports.idProperty.register(ViewBase);\nfunction booleanConverter(v) {\n    var lowercase = (v + '').toLowerCase();\n    if (lowercase === \"true\") {\n        return true;\n    }\n    else if (lowercase === \"false\") {\n        return false;\n    }\n    throw new Error(\"Invalid boolean: \" + v);\n}\nexports.booleanConverter = booleanConverter;\n//# sourceMappingURL=view-base.js.map"
    },
    {
      "id": 127,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
      "name": "./~/tns-core-modules/ui/core/view/view-common.js",
      "index": 24,
      "index2": 50,
      "size": 30688,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
      "issuerId": 0,
      "issuerName": "./~/tns-core-modules/ui/core/view/view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
          "module": "./~/tns-core-modules/ui/core/view/view.android.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view.android.js",
          "type": "cjs require",
          "userRequest": "./view-common",
          "loc": "6:20-44"
        },
        {
          "moduleId": 0,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
          "module": "./~/tns-core-modules/ui/core/view/view.android.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view.android.js",
          "type": "cjs require",
          "userRequest": "./view-common",
          "loc": "8:9-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar style_properties_1 = require(\"../../styling/style-properties\");\nvar debug_1 = require(\"../../../utils/debug\");\nvar view_base_1 = require(\"../view-base\");\nvar gestures_1 = require(\"../../gestures\");\n__export(require(\"../../styling/style-properties\"));\n__export(require(\"../view-base\"));\nvar animationModule;\nfunction ensureAnimationModule() {\n    if (!animationModule) {\n        animationModule = require(\"ui/animation\");\n    }\n}\nfunction PseudoClassHandler() {\n    var pseudoClasses = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        pseudoClasses[_i] = arguments[_i];\n    }\n    var stateEventNames = pseudoClasses.map(function (s) { return \":\" + s; });\n    var listeners = Symbol(\"listeners\");\n    return function (target, propertyKey, descriptor) {\n        function update(change) {\n            var prev = this[listeners] || 0;\n            var next = prev + change;\n            if (prev <= 0 && next > 0) {\n                this[propertyKey](true);\n            }\n            else if (prev > 0 && next <= 0) {\n                this[propertyKey](false);\n            }\n        }\n        stateEventNames.forEach(function (s) { return target[s] = update; });\n    };\n}\nexports.PseudoClassHandler = PseudoClassHandler;\nvar ViewCommon = (function (_super) {\n    __extends(ViewCommon, _super);\n    function ViewCommon() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._gestureObservers = {};\n        return _this;\n    }\n    ViewCommon.prototype.observe = function (type, callback, thisArg) {\n        if (!this._gestureObservers[type]) {\n            this._gestureObservers[type] = [];\n        }\n        this._gestureObservers[type].push(gestures_1.observe(this, type, callback, thisArg));\n    };\n    ViewCommon.prototype.getGestureObservers = function (type) {\n        return this._gestureObservers[type];\n    };\n    ViewCommon.prototype.addEventListener = function (arg, callback, thisArg) {\n        if (typeof arg === \"string\") {\n            arg = view_base_1.getEventOrGestureName(arg);\n            var gesture = gestures_1.fromString(arg);\n            if (gesture && !this._isEvent(arg)) {\n                this.observe(gesture, callback, thisArg);\n            }\n            else {\n                var events = (arg).split(\",\");\n                if (events.length > 0) {\n                    for (var i = 0; i < events.length; i++) {\n                        var evt = events[i].trim();\n                        var gst = gestures_1.fromString(evt);\n                        if (gst && !this._isEvent(arg)) {\n                            this.observe(gst, callback, thisArg);\n                        }\n                        else {\n                            _super.prototype.addEventListener.call(this, evt, callback, thisArg);\n                        }\n                    }\n                }\n                else {\n                    _super.prototype.addEventListener.call(this, arg, callback, thisArg);\n                }\n            }\n        }\n        else if (typeof arg === \"number\") {\n            this.observe(arg, callback, thisArg);\n        }\n    };\n    ViewCommon.prototype.removeEventListener = function (arg, callback, thisArg) {\n        if (typeof arg === \"string\") {\n            var gesture = gestures_1.fromString(arg);\n            if (gesture && !this._isEvent(arg)) {\n                this._disconnectGestureObservers(gesture);\n            }\n            else {\n                var events = arg.split(\",\");\n                if (events.length > 0) {\n                    for (var i = 0; i < events.length; i++) {\n                        var evt = events[i].trim();\n                        var gst = gestures_1.fromString(evt);\n                        if (gst && !this._isEvent(arg)) {\n                            this._disconnectGestureObservers(gst);\n                        }\n                        else {\n                            _super.prototype.removeEventListener.call(this, evt, callback, thisArg);\n                        }\n                    }\n                }\n                else {\n                    _super.prototype.removeEventListener.call(this, arg, callback, thisArg);\n                }\n            }\n        }\n        else if (typeof arg === \"number\") {\n            this._disconnectGestureObservers(arg);\n        }\n    };\n    ViewCommon.prototype._isEvent = function (name) {\n        return this.constructor && name + \"Event\" in this.constructor;\n    };\n    ViewCommon.prototype._disconnectGestureObservers = function (type) {\n        var observers = this.getGestureObservers(type);\n        if (observers) {\n            for (var i = 0; i < observers.length; i++) {\n                observers[i].disconnect();\n            }\n        }\n    };\n    Object.defineProperty(ViewCommon.prototype, \"borderColor\", {\n        get: function () {\n            return this.style.borderColor;\n        },\n        set: function (value) {\n            this.style.borderColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderTopColor\", {\n        get: function () {\n            return this.style.borderTopColor;\n        },\n        set: function (value) {\n            this.style.borderTopColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderRightColor\", {\n        get: function () {\n            return this.style.borderRightColor;\n        },\n        set: function (value) {\n            this.style.borderRightColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderBottomColor\", {\n        get: function () {\n            return this.style.borderBottomColor;\n        },\n        set: function (value) {\n            this.style.borderBottomColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderLeftColor\", {\n        get: function () {\n            return this.style.borderLeftColor;\n        },\n        set: function (value) {\n            this.style.borderLeftColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderWidth\", {\n        get: function () {\n            return this.style.borderWidth;\n        },\n        set: function (value) {\n            this.style.borderWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderTopWidth\", {\n        get: function () {\n            return this.style.borderTopWidth;\n        },\n        set: function (value) {\n            this.style.borderTopWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderRightWidth\", {\n        get: function () {\n            return this.style.borderRightWidth;\n        },\n        set: function (value) {\n            this.style.borderRightWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderBottomWidth\", {\n        get: function () {\n            return this.style.borderBottomWidth;\n        },\n        set: function (value) {\n            this.style.borderBottomWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderLeftWidth\", {\n        get: function () {\n            return this.style.borderLeftWidth;\n        },\n        set: function (value) {\n            this.style.borderLeftWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderRadius\", {\n        get: function () {\n            return this.style.borderRadius;\n        },\n        set: function (value) {\n            this.style.borderRadius = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderTopLeftRadius\", {\n        get: function () {\n            return this.style.borderTopLeftRadius;\n        },\n        set: function (value) {\n            this.style.borderTopLeftRadius = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderTopRightRadius\", {\n        get: function () {\n            return this.style.borderTopRightRadius;\n        },\n        set: function (value) {\n            this.style.borderTopRightRadius = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderBottomRightRadius\", {\n        get: function () {\n            return this.style.borderBottomRightRadius;\n        },\n        set: function (value) {\n            this.style.borderBottomRightRadius = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"borderBottomLeftRadius\", {\n        get: function () {\n            return this.style.borderBottomLeftRadius;\n        },\n        set: function (value) {\n            this.style.borderBottomLeftRadius = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"color\", {\n        get: function () {\n            return this.style.color;\n        },\n        set: function (value) {\n            this.style.color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"backgroundColor\", {\n        get: function () {\n            return this.style.backgroundColor;\n        },\n        set: function (value) {\n            this.style.backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"backgroundImage\", {\n        get: function () {\n            return this.style.backgroundImage;\n        },\n        set: function (value) {\n            this.style.backgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"minWidth\", {\n        get: function () {\n            return this.style.minWidth;\n        },\n        set: function (value) {\n            this.style.minWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"minHeight\", {\n        get: function () {\n            return this.style.minHeight;\n        },\n        set: function (value) {\n            this.style.minHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"width\", {\n        get: function () {\n            return this.style.width;\n        },\n        set: function (value) {\n            this.style.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"height\", {\n        get: function () {\n            return this.style.height;\n        },\n        set: function (value) {\n            this.style.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"margin\", {\n        get: function () {\n            return this.style.margin;\n        },\n        set: function (value) {\n            this.style.margin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"marginLeft\", {\n        get: function () {\n            return this.style.marginLeft;\n        },\n        set: function (value) {\n            this.style.marginLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"marginTop\", {\n        get: function () {\n            return this.style.marginTop;\n        },\n        set: function (value) {\n            this.style.marginTop = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"marginRight\", {\n        get: function () {\n            return this.style.marginRight;\n        },\n        set: function (value) {\n            this.style.marginRight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"marginBottom\", {\n        get: function () {\n            return this.style.marginBottom;\n        },\n        set: function (value) {\n            this.style.marginBottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"horizontalAlignment\", {\n        get: function () {\n            return this.style.horizontalAlignment;\n        },\n        set: function (value) {\n            this.style.horizontalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"verticalAlignment\", {\n        get: function () {\n            return this.style.verticalAlignment;\n        },\n        set: function (value) {\n            this.style.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"visibility\", {\n        get: function () {\n            return this.style.visibility;\n        },\n        set: function (value) {\n            this.style.visibility = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"opacity\", {\n        get: function () {\n            return this.style.opacity;\n        },\n        set: function (value) {\n            this.style.opacity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"rotate\", {\n        get: function () {\n            return this.style.rotate;\n        },\n        set: function (value) {\n            this.style.rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"translateX\", {\n        get: function () {\n            return this.style.translateX;\n        },\n        set: function (value) {\n            this.style.translateX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"translateY\", {\n        get: function () {\n            return this.style.translateY;\n        },\n        set: function (value) {\n            this.style.translateY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"scaleX\", {\n        get: function () {\n            return this.style.scaleX;\n        },\n        set: function (value) {\n            this.style.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"scaleY\", {\n        get: function () {\n            return this.style.scaleY;\n        },\n        set: function (value) {\n            this.style.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"isLayoutValid\", {\n        get: function () {\n            return this._isLayoutValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"cssType\", {\n        get: function () {\n            if (!this._cssType) {\n                this._cssType = this.typeName.toLowerCase();\n            }\n            return this._cssType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewCommon.prototype, \"isLayoutRequired\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewCommon.prototype.measure = function (widthMeasureSpec, heightMeasureSpec) {\n        this._setCurrentMeasureSpecs(widthMeasureSpec, heightMeasureSpec);\n    };\n    ViewCommon.prototype.layout = function (left, top, right, bottom) {\n        this._setCurrentLayoutBounds(left, top, right, bottom);\n    };\n    ViewCommon.prototype.getMeasuredWidth = function () {\n        return this._measuredWidth & view_base_1.layout.MEASURED_SIZE_MASK || 0;\n    };\n    ViewCommon.prototype.getMeasuredHeight = function () {\n        return this._measuredHeight & view_base_1.layout.MEASURED_SIZE_MASK || 0;\n    };\n    ViewCommon.prototype.getMeasuredState = function () {\n        return (this._measuredWidth & view_base_1.layout.MEASURED_STATE_MASK)\n            | ((this._measuredHeight >> view_base_1.layout.MEASURED_HEIGHT_STATE_SHIFT)\n                & (view_base_1.layout.MEASURED_STATE_MASK >> view_base_1.layout.MEASURED_HEIGHT_STATE_SHIFT));\n    };\n    ViewCommon.prototype.setMeasuredDimension = function (measuredWidth, measuredHeight) {\n        this._measuredWidth = measuredWidth;\n        this._measuredHeight = measuredHeight;\n        if (view_base_1.traceEnabled()) {\n            view_base_1.traceWrite(this + \" :setMeasuredDimension: \" + measuredWidth + \", \" + measuredHeight, view_base_1.traceCategories.Layout);\n        }\n    };\n    ViewCommon.prototype.requestLayout = function () {\n        this._isLayoutValid = false;\n    };\n    ViewCommon.resolveSizeAndState = function (size, specSize, specMode, childMeasuredState) {\n        var result = size;\n        switch (specMode) {\n            case view_base_1.layout.UNSPECIFIED:\n                result = Math.ceil(size);\n                break;\n            case view_base_1.layout.AT_MOST:\n                if (specSize < size) {\n                    result = Math.ceil(specSize) | view_base_1.layout.MEASURED_STATE_TOO_SMALL;\n                }\n                break;\n            case view_base_1.layout.EXACTLY:\n                result = Math.ceil(specSize);\n                break;\n        }\n        return result | (childMeasuredState & view_base_1.layout.MEASURED_STATE_MASK);\n    };\n    ViewCommon.combineMeasuredStates = function (curState, newState) {\n        return curState | newState;\n    };\n    ViewCommon.layoutChild = function (parent, child, left, top, right, bottom) {\n        if (!child || child.isCollapsed) {\n            return;\n        }\n        var childStyle = child.style;\n        var childTop;\n        var childLeft;\n        var childWidth = child.getMeasuredWidth();\n        var childHeight = child.getMeasuredHeight();\n        var effectiveMarginTop = child.effectiveMarginTop;\n        var effectiveMarginBottom = child.effectiveMarginBottom;\n        var vAlignment;\n        if (child.effectiveHeight >= 0 && childStyle.verticalAlignment === \"stretch\") {\n            vAlignment = \"middle\";\n        }\n        else {\n            vAlignment = childStyle.verticalAlignment;\n        }\n        switch (vAlignment) {\n            case \"top\":\n                childTop = top + effectiveMarginTop;\n                break;\n            case \"middle\":\n                childTop = top + (bottom - top - childHeight + (effectiveMarginTop - effectiveMarginBottom)) / 2;\n                break;\n            case \"bottom\":\n                childTop = bottom - childHeight - effectiveMarginBottom;\n                break;\n            case \"stretch\":\n            default:\n                childTop = top + effectiveMarginTop;\n                childHeight = bottom - top - (effectiveMarginTop + effectiveMarginBottom);\n                break;\n        }\n        var effectiveMarginLeft = child.effectiveMarginLeft;\n        var effectiveMarginRight = child.effectiveMarginRight;\n        var hAlignment;\n        if (child.effectiveWidth >= 0 && childStyle.horizontalAlignment === \"stretch\") {\n            hAlignment = \"center\";\n        }\n        else {\n            hAlignment = childStyle.horizontalAlignment;\n        }\n        switch (hAlignment) {\n            case \"left\":\n                childLeft = left + effectiveMarginLeft;\n                break;\n            case \"center\":\n                childLeft = left + (right - left - childWidth + (effectiveMarginLeft - effectiveMarginRight)) / 2;\n                break;\n            case \"right\":\n                childLeft = right - childWidth - effectiveMarginRight;\n                break;\n            case \"stretch\":\n            default:\n                childLeft = left + effectiveMarginLeft;\n                childWidth = right - left - (effectiveMarginLeft + effectiveMarginRight);\n                break;\n        }\n        var childRight = Math.round(childLeft + childWidth);\n        var childBottom = Math.round(childTop + childHeight);\n        childLeft = Math.round(childLeft);\n        childTop = Math.round(childTop);\n        if (view_base_1.traceEnabled()) {\n            view_base_1.traceWrite(child.parent + \" :layoutChild: \" + child + \" \" + childLeft + \", \" + childTop + \", \" + childRight + \", \" + childBottom, view_base_1.traceCategories.Layout);\n        }\n        child.layout(childLeft, childTop, childRight, childBottom);\n    };\n    ViewCommon.measureChild = function (parent, child, widthMeasureSpec, heightMeasureSpec) {\n        var measureWidth = 0;\n        var measureHeight = 0;\n        if (child && !child.isCollapsed) {\n            child._updateEffectiveLayoutValues(parent);\n            var style = child.style;\n            var horizontalMargins = child.effectiveMarginLeft + child.effectiveMarginRight;\n            var verticalMargins = child.effectiveMarginTop + child.effectiveMarginBottom;\n            var childWidthMeasureSpec = ViewCommon.getMeasureSpec(widthMeasureSpec, horizontalMargins, child.effectiveWidth, style.horizontalAlignment === \"stretch\");\n            var childHeightMeasureSpec = ViewCommon.getMeasureSpec(heightMeasureSpec, verticalMargins, child.effectiveHeight, style.verticalAlignment === \"stretch\");\n            if (view_base_1.traceEnabled()) {\n                view_base_1.traceWrite(child.parent + \" :measureChild: \" + child + \" \" + view_base_1.layout.measureSpecToString(childWidthMeasureSpec) + \", \" + view_base_1.layout.measureSpecToString(childHeightMeasureSpec), view_base_1.traceCategories.Layout);\n            }\n            child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n            measureWidth = Math.round(child.getMeasuredWidth() + horizontalMargins);\n            measureHeight = Math.round(child.getMeasuredHeight() + verticalMargins);\n        }\n        return { measuredWidth: measureWidth, measuredHeight: measureHeight };\n    };\n    ViewCommon.getMeasureSpec = function (parentSpec, margins, childLength, stretched) {\n        var parentLength = view_base_1.layout.getMeasureSpecSize(parentSpec);\n        var parentSpecMode = view_base_1.layout.getMeasureSpecMode(parentSpec);\n        var resultSize;\n        var resultMode;\n        if (childLength >= 0) {\n            resultSize = parentSpecMode === view_base_1.layout.UNSPECIFIED ? childLength : Math.min(parentLength, childLength);\n            resultMode = view_base_1.layout.EXACTLY;\n        }\n        else {\n            switch (parentSpecMode) {\n                case view_base_1.layout.EXACTLY:\n                    resultSize = Math.max(0, parentLength - margins);\n                    resultMode = stretched ? view_base_1.layout.EXACTLY : view_base_1.layout.AT_MOST;\n                    break;\n                case view_base_1.layout.AT_MOST:\n                    resultSize = Math.max(0, parentLength - margins);\n                    resultMode = view_base_1.layout.AT_MOST;\n                    break;\n                case view_base_1.layout.UNSPECIFIED:\n                    resultSize = 0;\n                    resultMode = view_base_1.layout.UNSPECIFIED;\n                    break;\n            }\n        }\n        return view_base_1.layout.makeMeasureSpec(resultSize, resultMode);\n    };\n    ViewCommon.prototype._setCurrentMeasureSpecs = function (widthMeasureSpec, heightMeasureSpec) {\n        var changed = this._currentWidthMeasureSpec !== widthMeasureSpec || this._currentHeightMeasureSpec !== heightMeasureSpec;\n        this._currentWidthMeasureSpec = widthMeasureSpec;\n        this._currentHeightMeasureSpec = heightMeasureSpec;\n        return changed;\n    };\n    ViewCommon.prototype._getCurrentLayoutBounds = function () {\n        return { left: this._oldLeft, top: this._oldTop, right: this._oldRight, bottom: this._oldBottom };\n    };\n    ViewCommon.prototype._setCurrentLayoutBounds = function (left, top, right, bottom) {\n        this._isLayoutValid = true;\n        var boundsChanged = this._oldLeft !== left || this._oldTop !== top || this._oldRight !== right || this._oldBottom !== bottom;\n        var sizeChanged = (this._oldRight - this._oldLeft !== right - left) || (this._oldBottom - this._oldTop !== bottom - top);\n        this._oldLeft = left;\n        this._oldTop = top;\n        this._oldRight = right;\n        this._oldBottom = bottom;\n        return { boundsChanged: boundsChanged, sizeChanged: sizeChanged };\n    };\n    ViewCommon.prototype.eachChild = function (callback) {\n        this.eachChildView(callback);\n    };\n    ViewCommon.prototype.eachChildView = function (callback) {\n    };\n    ViewCommon.prototype._getNativeViewsCount = function () {\n        return this._isAddedToNativeVisualTree ? 1 : 0;\n    };\n    ViewCommon.prototype._eachLayoutView = function (callback) {\n        return callback(this);\n    };\n    ViewCommon.prototype._updateLayout = function () {\n    };\n    ViewCommon.prototype.focus = function () {\n        return undefined;\n    };\n    ViewCommon.prototype.getLocationInWindow = function () {\n        return undefined;\n    };\n    ViewCommon.prototype.getLocationOnScreen = function () {\n        return undefined;\n    };\n    ViewCommon.prototype.getLocationRelativeTo = function (otherView) {\n        return undefined;\n    };\n    ViewCommon.prototype.getActualSize = function () {\n        var currentBounds = this._getCurrentLayoutBounds();\n        if (!currentBounds) {\n            return undefined;\n        }\n        return {\n            width: view_base_1.layout.toDeviceIndependentPixels(currentBounds.right - currentBounds.left),\n            height: view_base_1.layout.toDeviceIndependentPixels(currentBounds.bottom - currentBounds.top),\n        };\n    };\n    ViewCommon.prototype.animate = function (animation) {\n        return this.createAnimation(animation).play();\n    };\n    ViewCommon.prototype.createAnimation = function (animation) {\n        ensureAnimationModule();\n        animation.target = this;\n        return new animationModule.Animation([animation]);\n    };\n    ViewCommon.prototype.toString = function () {\n        var str = this.typeName;\n        if (this.id) {\n            str += \"<\" + this.id + \">\";\n        }\n        else {\n            str += \"(\" + this._domId + \")\";\n        }\n        var source = debug_1.Source.get(this);\n        if (source) {\n            str += \"@\" + source + \";\";\n        }\n        return str;\n    };\n    ViewCommon.prototype._setNativeViewFrame = function (nativeView, frame) {\n    };\n    ViewCommon.prototype._getValue = function () {\n        throw new Error(\"The View._setValue is obsolete. There is a new property system.\");\n    };\n    ViewCommon.prototype._setValue = function () {\n        throw new Error(\"The View._setValue is obsolete. There is a new property system.\");\n    };\n    ViewCommon.prototype._updateEffectiveLayoutValues = function (parent) {\n        var style = this.style;\n        var parentWidthMeasureSpec = parent._currentWidthMeasureSpec;\n        var parentWidthMeasureSize = view_base_1.layout.getMeasureSpecSize(parentWidthMeasureSpec);\n        var parentWidthMeasureMode = view_base_1.layout.getMeasureSpecMode(parentWidthMeasureSpec);\n        var parentAvailableWidth = parentWidthMeasureMode === view_base_1.layout.UNSPECIFIED ? -1 : parentWidthMeasureSize;\n        this.effectiveWidth = style_properties_1.PercentLength.toDevicePixels(style.width, -2, parentAvailableWidth);\n        this.effectiveMarginLeft = style_properties_1.PercentLength.toDevicePixels(style.marginLeft, 0, parentAvailableWidth);\n        this.effectiveMarginRight = style_properties_1.PercentLength.toDevicePixels(style.marginRight, 0, parentAvailableWidth);\n        var parentHeightMeasureSpec = parent._currentHeightMeasureSpec;\n        var parentHeightMeasureSize = view_base_1.layout.getMeasureSpecSize(parentHeightMeasureSpec);\n        var parentHeightMeasureMode = view_base_1.layout.getMeasureSpecMode(parentHeightMeasureSpec);\n        var parentAvailableHeight = parentHeightMeasureMode === view_base_1.layout.UNSPECIFIED ? -1 : parentHeightMeasureSize;\n        this.effectiveHeight = style_properties_1.PercentLength.toDevicePixels(style.height, -2, parentAvailableHeight);\n        this.effectiveMarginTop = style_properties_1.PercentLength.toDevicePixels(style.marginTop, 0, parentAvailableHeight);\n        this.effectiveMarginBottom = style_properties_1.PercentLength.toDevicePixels(style.marginBottom, 0, parentAvailableHeight);\n    };\n    ViewCommon.prototype._setNativeClipToBounds = function () {\n    };\n    return ViewCommon;\n}(view_base_1.ViewBase));\nexports.ViewCommon = ViewCommon;\nexports.automationTextProperty = new view_base_1.Property({ name: \"automationText\" });\nexports.automationTextProperty.register(ViewCommon);\nexports.originXProperty = new view_base_1.Property({ name: \"originX\", defaultValue: 0.5, valueConverter: function (v) { return parseFloat(v); } });\nexports.originXProperty.register(ViewCommon);\nexports.originYProperty = new view_base_1.Property({ name: \"originY\", defaultValue: 0.5, valueConverter: function (v) { return parseFloat(v); } });\nexports.originYProperty.register(ViewCommon);\nexports.isEnabledProperty = new view_base_1.Property({\n    name: \"isEnabled\",\n    defaultValue: true,\n    valueConverter: view_base_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target._goToVisualState(newValue ? \"normal\" : \"disabled\");\n    }\n});\nexports.isEnabledProperty.register(ViewCommon);\nexports.isUserInteractionEnabledProperty = new view_base_1.Property({ name: \"isUserInteractionEnabled\", defaultValue: true, valueConverter: view_base_1.booleanConverter });\nexports.isUserInteractionEnabledProperty.register(ViewCommon);\n//# sourceMappingURL=view-common.js.map"
    },
    {
      "id": 128,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker-common.js",
      "name": "./~/tns-core-modules/ui/date-picker/date-picker-common.js",
      "index": 155,
      "index2": 148,
      "size": 1726,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker.android.js",
      "issuerId": 249,
      "issuerName": "./~/tns-core-modules/ui/date-picker/date-picker.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 249,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker.android.js",
          "module": "./~/tns-core-modules/ui/date-picker/date-picker.android.js",
          "moduleName": "./~/tns-core-modules/ui/date-picker/date-picker.android.js",
          "type": "cjs require",
          "userRequest": "./date-picker-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 249,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker.android.js",
          "module": "./~/tns-core-modules/ui/date-picker/date-picker.android.js",
          "moduleName": "./~/tns-core-modules/ui/date-picker/date-picker.android.js",
          "type": "cjs require",
          "userRequest": "./date-picker-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar DatePickerBase = (function (_super) {\n    __extends(DatePickerBase, _super);\n    function DatePickerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DatePickerBase;\n}(view_1.View));\nexports.DatePickerBase = DatePickerBase;\nexports.yearProperty = new view_1.Property({ name: \"year\", valueConverter: function (v) { return parseInt(v); } });\nexports.yearProperty.register(DatePickerBase);\nexports.monthProperty = new view_1.Property({ name: \"month\", valueConverter: function (v) { return parseInt(v); } });\nexports.monthProperty.register(DatePickerBase);\nexports.dayProperty = new view_1.Property({ name: \"day\", valueConverter: function (v) { return parseInt(v); } });\nexports.dayProperty.register(DatePickerBase);\nfunction dateComparer(x, y) {\n    return (x <= y && x >= y) ? true : false;\n}\nexports.maxDateProperty = new view_1.Property({ name: \"maxDate\", equalityComparer: dateComparer, valueConverter: function (v) { return new Date(v); } });\nexports.maxDateProperty.register(DatePickerBase);\nexports.minDateProperty = new view_1.Property({ name: \"minDate\", equalityComparer: dateComparer, valueConverter: function (v) { return new Date(v); } });\nexports.minDateProperty.register(DatePickerBase);\nexports.dateProperty = new view_1.Property({ name: \"date\", equalityComparer: dateComparer, valueConverter: function (v) { return new Date(v); } });\nexports.dateProperty.register(DatePickerBase);\n//# sourceMappingURL=date-picker-common.js.map"
    },
    {
      "id": 129,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs-common.js",
      "name": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
      "index": 7,
      "index2": 77,
      "size": 2361,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs.android.js",
      "issuerId": 130,
      "issuerName": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 130,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs.android.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
          "type": "cjs require",
          "userRequest": "./dialogs-common",
          "loc": "5:23-50"
        },
        {
          "moduleId": 130,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs.android.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
          "type": "cjs require",
          "userRequest": "./dialogs-common",
          "loc": "7:9-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.STRING = \"string\";\nexports.PROMPT = \"Prompt\";\nexports.CONFIRM = \"Confirm\";\nexports.ALERT = \"Alert\";\nexports.LOGIN = \"Login\";\nexports.OK = \"OK\";\nexports.CANCEL = \"Cancel\";\nvar inputType;\n(function (inputType) {\n    inputType.text = \"text\";\n    inputType.password = \"password\";\n})(inputType = exports.inputType || (exports.inputType = {}));\nvar frame;\nfunction getCurrentPage() {\n    if (!frame) {\n        frame = require(\"ui/frame\");\n    }\n    var topmostFrame = frame.topmost();\n    if (topmostFrame) {\n        return topmostFrame.currentPage;\n    }\n    return undefined;\n}\nexports.getCurrentPage = getCurrentPage;\nfunction applySelectors(view) {\n    var currentPage = getCurrentPage();\n    if (currentPage) {\n        var styleScope = currentPage._getStyleScope();\n        if (styleScope) {\n            styleScope.applySelectors(view);\n        }\n    }\n}\nvar buttonColor;\nvar buttonBackgroundColor;\nfunction getButtonColors() {\n    var Button = require(\"ui/button\").Button;\n    var btn = new Button();\n    applySelectors(btn);\n    buttonColor = btn.color;\n    buttonBackgroundColor = btn.backgroundColor;\n    btn.onUnloaded();\n}\nfunction getButtonColor() {\n    if (!buttonColor) {\n        getButtonColors();\n    }\n    return buttonColor;\n}\nexports.getButtonColor = getButtonColor;\nfunction getButtonBackgroundColor() {\n    if (!buttonBackgroundColor) {\n        getButtonColors();\n    }\n    return buttonBackgroundColor;\n}\nexports.getButtonBackgroundColor = getButtonBackgroundColor;\nvar textFieldColor;\nfunction getTextFieldColor() {\n    if (!textFieldColor) {\n        var TextField = require(\"ui/text-field\").TextField;\n        var tf = new TextField();\n        applySelectors(tf);\n        textFieldColor = tf.color;\n        tf.onUnloaded();\n    }\n    return textFieldColor;\n}\nexports.getTextFieldColor = getTextFieldColor;\nvar labelColor;\nfunction getLabelColor() {\n    if (!labelColor) {\n        var Label = require(\"ui/label\").Label;\n        var lbl = new Label();\n        applySelectors(lbl);\n        labelColor = lbl.color;\n        lbl.onUnloaded();\n    }\n    return labelColor;\n}\nexports.getLabelColor = getLabelColor;\nfunction isDialogOptions(arg) {\n    return arg && (arg.message || arg.title);\n}\nexports.isDialogOptions = isDialogOptions;\n//# sourceMappingURL=dialogs-common.js.map"
    },
    {
      "id": 130,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs.android.js",
      "name": "./~/tns-core-modules/ui/dialogs/dialogs.android.js",
      "index": 6,
      "index2": 78,
      "size": 11793,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "issuerId": 62,
      "issuerName": "./~/tns-core-modules/globals/globals.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "ui/dialogs",
          "loc": "47:57-78"
        },
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "ui/dialogs",
          "loc": "72:18-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dialogs_common_1 = require(\"./dialogs-common\");\nvar application_1 = require(\"../../application\");\n__export(require(\"./dialogs-common\"));\nfunction isString(value) {\n    return typeof value === \"string\";\n}\nfunction createAlertDialog(options) {\n    var alert = new android.app.AlertDialog.Builder(application_1.android.foregroundActivity);\n    alert.setTitle(options && isString(options.title) ? options.title : \"\");\n    alert.setMessage(options && isString(options.message) ? options.message : \"\");\n    if (options && options.cancelable === false) {\n        alert.setCancelable(false);\n    }\n    return alert;\n}\nfunction showDialog(builder) {\n    var dlg = builder.show();\n    var labelColor = dialogs_common_1.getLabelColor();\n    if (labelColor) {\n        var textViewId = dlg.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null);\n        if (textViewId) {\n            var tv = dlg.findViewById(textViewId);\n            if (tv) {\n                tv.setTextColor(labelColor.android);\n            }\n        }\n        var messageTextViewId = dlg.getContext().getResources().getIdentifier(\"android:id/message\", null, null);\n        if (messageTextViewId) {\n            var messageTextView = dlg.findViewById(messageTextViewId);\n            if (messageTextView) {\n                messageTextView.setTextColor(labelColor.android);\n            }\n        }\n    }\n    var buttonColor = dialogs_common_1.getButtonColor();\n    var buttonBackgroundColor = dialogs_common_1.getButtonBackgroundColor();\n    if (buttonColor) {\n        var buttons = [];\n        for (var i = 0; i < 3; i++) {\n            var id = dlg.getContext().getResources().getIdentifier(\"android:id/button\" + i, null, null);\n            buttons[i] = dlg.findViewById(id);\n        }\n        buttons.forEach(function (button) {\n            if (button) {\n                if (buttonColor) {\n                    button.setTextColor(buttonColor.android);\n                }\n                if (buttonBackgroundColor) {\n                    button.setBackgroundColor(buttonBackgroundColor.android);\n                }\n            }\n        });\n    }\n}\nfunction addButtonsToAlertDialog(alert, options, callback) {\n    if (!options) {\n        return;\n    }\n    if (options.okButtonText) {\n        alert.setPositiveButton(options.okButtonText, new android.content.DialogInterface.OnClickListener({\n            onClick: function (dialog, id) {\n                dialog.cancel();\n                callback(true);\n            }\n        }));\n    }\n    if (options.cancelButtonText) {\n        alert.setNegativeButton(options.cancelButtonText, new android.content.DialogInterface.OnClickListener({\n            onClick: function (dialog, id) {\n                dialog.cancel();\n                callback(false);\n            }\n        }));\n    }\n    if (options.neutralButtonText) {\n        alert.setNeutralButton(options.neutralButtonText, new android.content.DialogInterface.OnClickListener({\n            onClick: function (dialog, id) {\n                dialog.cancel();\n                callback(undefined);\n            }\n        }));\n    }\n    alert.setOnDismissListener(new android.content.DialogInterface.OnDismissListener({\n        onDismiss: function () {\n            callback(false);\n        }\n    }));\n}\nfunction alert(arg) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var options = !dialogs_common_1.isDialogOptions(arg) ? { title: dialogs_common_1.ALERT, okButtonText: dialogs_common_1.OK, message: arg + \"\" } : arg;\n            var alert_1 = createAlertDialog(options);\n            alert_1.setPositiveButton(options.okButtonText, new android.content.DialogInterface.OnClickListener({\n                onClick: function (dialog, id) {\n                    dialog.cancel();\n                    resolve();\n                }\n            }));\n            alert_1.setOnDismissListener(new android.content.DialogInterface.OnDismissListener({\n                onDismiss: function () {\n                    resolve();\n                }\n            }));\n            showDialog(alert_1);\n        }\n        catch (ex) {\n            reject(ex);\n        }\n    });\n}\nexports.alert = alert;\nfunction confirm(arg) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var options = !dialogs_common_1.isDialogOptions(arg) ? { title: dialogs_common_1.CONFIRM, okButtonText: dialogs_common_1.OK, cancelButtonText: dialogs_common_1.CANCEL, message: arg + \"\" } : arg;\n            var alert_2 = createAlertDialog(options);\n            addButtonsToAlertDialog(alert_2, options, function (result) { resolve(result); });\n            showDialog(alert_2);\n        }\n        catch (ex) {\n            reject(ex);\n        }\n    });\n}\nexports.confirm = confirm;\nfunction prompt(arg) {\n    var options;\n    var defaultOptions = {\n        title: dialogs_common_1.PROMPT,\n        okButtonText: dialogs_common_1.OK,\n        cancelButtonText: dialogs_common_1.CANCEL,\n        inputType: dialogs_common_1.inputType.text,\n    };\n    if (arguments.length === 1) {\n        if (isString(arg)) {\n            options = defaultOptions;\n            options.message = arg;\n        }\n        else {\n            options = arg;\n        }\n    }\n    else if (arguments.length === 2) {\n        if (isString(arguments[0]) && isString(arguments[1])) {\n            options = defaultOptions;\n            options.message = arguments[0];\n            options.defaultText = arguments[1];\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        try {\n            var alert_3 = createAlertDialog(options);\n            var input_1 = new android.widget.EditText(application_1.android.foregroundActivity);\n            if (options && options.inputType === dialogs_common_1.inputType.password) {\n                input_1.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD);\n            }\n            input_1.setText(options && options.defaultText || \"\");\n            alert_3.setView(input_1);\n            var getText_1 = function () { return input_1.getText().toString(); };\n            addButtonsToAlertDialog(alert_3, options, function (r) { resolve({ result: r, text: getText_1() }); });\n            showDialog(alert_3);\n        }\n        catch (ex) {\n            reject(ex);\n        }\n    });\n}\nexports.prompt = prompt;\nfunction login(arg) {\n    var options;\n    var defaultOptions = { title: dialogs_common_1.LOGIN, okButtonText: dialogs_common_1.OK, cancelButtonText: dialogs_common_1.CANCEL };\n    if (arguments.length === 1) {\n        if (isString(arguments[0])) {\n            options = defaultOptions;\n            options.message = arguments[0];\n        }\n        else {\n            options = arguments[0];\n        }\n    }\n    else if (arguments.length === 2) {\n        if (isString(arguments[0]) && isString(arguments[1])) {\n            options = defaultOptions;\n            options.message = arguments[0];\n            options.userName = arguments[1];\n        }\n    }\n    else if (arguments.length === 3) {\n        if (isString(arguments[0]) && isString(arguments[1]) && isString(arguments[2])) {\n            options = defaultOptions;\n            options.message = arguments[0];\n            options.userName = arguments[1];\n            options.password = arguments[2];\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        try {\n            var context = application_1.android.foregroundActivity;\n            var alert_4 = createAlertDialog(options);\n            var userNameInput_1 = new android.widget.EditText(context);\n            userNameInput_1.setText(options.userName ? options.userName : \"\");\n            var passwordInput_1 = new android.widget.EditText(context);\n            passwordInput_1.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD);\n            passwordInput_1.setText(options.password ? options.password : \"\");\n            var layout = new android.widget.LinearLayout(context);\n            layout.setOrientation(1);\n            layout.addView(userNameInput_1);\n            layout.addView(passwordInput_1);\n            alert_4.setView(layout);\n            addButtonsToAlertDialog(alert_4, options, function (r) {\n                resolve({\n                    result: r,\n                    userName: userNameInput_1.getText().toString(),\n                    password: passwordInput_1.getText().toString()\n                });\n            });\n            showDialog(alert_4);\n        }\n        catch (ex) {\n            reject(ex);\n        }\n    });\n}\nexports.login = login;\nfunction action(arg) {\n    var options;\n    var defaultOptions = { title: null, cancelButtonText: dialogs_common_1.CANCEL };\n    if (arguments.length === 1) {\n        if (isString(arguments[0])) {\n            options = defaultOptions;\n            options.message = arguments[0];\n        }\n        else {\n            options = arguments[0];\n        }\n    }\n    else if (arguments.length === 2) {\n        if (isString(arguments[0]) && isString(arguments[1])) {\n            options = defaultOptions;\n            options.message = arguments[0];\n            options.cancelButtonText = arguments[1];\n        }\n    }\n    else if (arguments.length === 3) {\n        if (isString(arguments[0]) && isString(arguments[1]) && typeof arguments[2] !== \"undefined\") {\n            options = defaultOptions;\n            options.message = arguments[0];\n            options.cancelButtonText = arguments[1];\n            options.actions = arguments[2];\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        try {\n            var activity = application_1.android.foregroundActivity || application_1.android.startActivity;\n            var alert_5 = new android.app.AlertDialog.Builder(activity);\n            var message = options && isString(options.message) ? options.message : \"\";\n            var title = options && isString(options.title) ? options.title : \"\";\n            if (options && options.cancelable === false) {\n                alert_5.setCancelable(false);\n            }\n            if (title) {\n                alert_5.setTitle(title);\n                if (!options.actions) {\n                    alert_5.setMessage(message);\n                }\n            }\n            else {\n                alert_5.setTitle(message);\n            }\n            if (options.actions) {\n                alert_5.setItems(options.actions, new android.content.DialogInterface.OnClickListener({\n                    onClick: function (dialog, which) {\n                        resolve(options.actions[which]);\n                    }\n                }));\n            }\n            if (isString(options.cancelButtonText)) {\n                alert_5.setNegativeButton(options.cancelButtonText, new android.content.DialogInterface.OnClickListener({\n                    onClick: function (dialog, id) {\n                        dialog.cancel();\n                        resolve(options.cancelButtonText);\n                    }\n                }));\n            }\n            alert_5.setOnDismissListener(new android.content.DialogInterface.OnDismissListener({\n                onDismiss: function () {\n                    if (isString(options.cancelButtonText)) {\n                        resolve(options.cancelButtonText);\n                    }\n                    else {\n                        resolve(\"\");\n                    }\n                }\n            }));\n            showDialog(alert_5);\n        }\n        catch (ex) {\n            reject(ex);\n        }\n    });\n}\nexports.action = action;\n//# sourceMappingURL=dialogs.android.js.map"
    },
    {
      "id": 131,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
      "name": "./~/tns-core-modules/ui/editable-text-base/editable-text-base-common.js",
      "index": 81,
      "index2": 72,
      "size": 2061,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
      "issuerId": 65,
      "issuerName": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 65,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "module": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "type": "cjs require",
          "userRequest": "./editable-text-base-common",
          "loc": "5:34-72"
        },
        {
          "moduleId": 65,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "module": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/editable-text-base/editable-text-base.android.js",
          "type": "cjs require",
          "userRequest": "./editable-text-base-common",
          "loc": "7:9-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar text_base_1 = require(\"../text-base\");\n__export(require(\"../text-base\"));\nvar EditableTextBase = (function (_super) {\n    __extends(EditableTextBase, _super);\n    function EditableTextBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EditableTextBase;\n}(text_base_1.TextBase));\nexports.EditableTextBase = EditableTextBase;\nexports.placeholderColorProperty = new text_base_1.CssProperty({ name: \"placeholderColor\", cssName: \"placeholder-color\", equalityComparer: text_base_1.Color.equals, valueConverter: function (v) { return new text_base_1.Color(v); } });\nexports.placeholderColorProperty.register(text_base_1.Style);\nexports.keyboardTypeProperty = new text_base_1.Property({ name: \"keyboardType\" });\nexports.keyboardTypeProperty.register(EditableTextBase);\nexports.returnKeyTypeProperty = new text_base_1.Property({ name: \"returnKeyType\" });\nexports.returnKeyTypeProperty.register(EditableTextBase);\nexports.editableProperty = new text_base_1.Property({ name: \"editable\", defaultValue: true, valueConverter: text_base_1.booleanConverter });\nexports.editableProperty.register(EditableTextBase);\nexports.updateTextTriggerProperty = new text_base_1.Property({ name: \"updateTextTrigger\", defaultValue: \"textChanged\" });\nexports.updateTextTriggerProperty.register(EditableTextBase);\nexports.autocapitalizationTypeProperty = new text_base_1.Property({ name: \"autocapitalizationType\", defaultValue: \"sentences\" });\nexports.autocapitalizationTypeProperty.register(EditableTextBase);\nexports.autocorrectProperty = new text_base_1.Property({ name: \"autocorrect\", valueConverter: text_base_1.booleanConverter });\nexports.autocorrectProperty.register(EditableTextBase);\nexports.hintProperty = new text_base_1.Property({ name: \"hint\", defaultValue: \"\" });\nexports.hintProperty.register(EditableTextBase);\n//# sourceMappingURL=editable-text-base-common.js.map"
    },
    {
      "id": 132,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/activity.android.js",
      "name": "./~/tns-core-modules/ui/frame/activity.android.js",
      "index": 245,
      "index2": 243,
      "size": 2118,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
      "issuerId": 174,
      "issuerName": "./app/vendor-platform.android.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 174,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
          "module": "./app/vendor-platform.android.ts",
          "moduleName": "./app/vendor-platform.android.ts",
          "type": "cjs require",
          "userRequest": "ui/frame/activity",
          "loc": "14:0-28"
        },
        {
          "moduleId": 174,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
          "module": "./app/vendor-platform.android.ts",
          "moduleName": "./app/vendor-platform.android.ts",
          "type": "cjs require",
          "userRequest": "ui/frame/activity",
          "loc": "24:19-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar frame_1 = require(\"./frame\");\nvar appModule = require(\"../../application\");\nvar NativeScriptActivity = (function (_super) {\n    __extends(NativeScriptActivity, _super);\n    function NativeScriptActivity() {\n        var _this = _super.call(this) || this;\n        return global.__native(_this);\n    }\n    NativeScriptActivity.prototype.onCreate = function (savedInstanceState) {\n        appModule.android.init(this.getApplication());\n        this.isNativeScriptActivity = true;\n        if (!this._callbacks) {\n            frame_1.setActivityCallbacks(this);\n        }\n        this._callbacks.onCreate(this, savedInstanceState, _super.prototype.onCreate);\n    };\n    NativeScriptActivity.prototype.onSaveInstanceState = function (outState) {\n        this._callbacks.onSaveInstanceState(this, outState, _super.prototype.onSaveInstanceState);\n    };\n    NativeScriptActivity.prototype.onStart = function () {\n        this._callbacks.onStart(this, _super.prototype.onStart);\n    };\n    NativeScriptActivity.prototype.onStop = function () {\n        this._callbacks.onStop(this, _super.prototype.onStop);\n    };\n    NativeScriptActivity.prototype.onDestroy = function () {\n        this._callbacks.onDestroy(this, _super.prototype.onDestroy);\n    };\n    NativeScriptActivity.prototype.onBackPressed = function () {\n        this._callbacks.onBackPressed(this, _super.prototype.onBackPressed);\n    };\n    NativeScriptActivity.prototype.onRequestPermissionsResult = function (requestCode, permissions, grantResults) {\n        this._callbacks.onRequestPermissionsResult(this, requestCode, permissions, grantResults, undefined);\n    };\n    NativeScriptActivity.prototype.onActivityResult = function (requestCode, resultCode, data) {\n        this._callbacks.onActivityResult(this, requestCode, resultCode, data, _super.prototype.onActivityResult);\n    };\n    return NativeScriptActivity;\n}(android.app.Activity));\nNativeScriptActivity = __decorate([\n    JavaProxy(\"com.tns.NativeScriptActivity\")\n], NativeScriptActivity);\n//# sourceMappingURL=activity.android.js.map"
    },
    {
      "id": 133,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame-common.js",
      "name": "./~/tns-core-modules/ui/frame/frame-common.js",
      "index": 9,
      "index2": 57,
      "size": 15706,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
      "issuerId": 7,
      "issuerName": "./~/tns-core-modules/ui/frame/frame.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
          "module": "./~/tns-core-modules/ui/frame/frame.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame.android.js",
          "type": "cjs require",
          "userRequest": "./frame-common",
          "loc": "5:21-46"
        },
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
          "module": "./~/tns-core-modules/ui/frame/frame.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame.android.js",
          "type": "cjs require",
          "userRequest": "./frame-common",
          "loc": "8:9-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\nvar file_name_resolver_1 = require(\"../../file-system/file-name-resolver\");\nvar file_system_1 = require(\"../../file-system\");\nvar builder_1 = require(\"../builder\");\nvar application = require(\"../../application\");\nexports.application = application;\n__export(require(\"../core/view\"));\nfunction onLivesync(args) {\n    setTimeout(function () {\n        var g = global;\n        if (g.errorPage) {\n            g.errorPage.closeModal();\n            g.errorPage = undefined;\n        }\n        try {\n            reloadPage();\n        }\n        catch (ex) {\n            g.errorPage = builder_1.parse(\"<Page><ScrollView><Label text=\\\"\" + ex + \"\\\" textWrap=\\\"true\\\" style=\\\"color: red;\\\" /></ScrollView></Page>\");\n            g.errorPage.showModal();\n        }\n    });\n}\napplication.on(\"livesync\", onLivesync);\nvar frameStack = [];\nfunction buildEntryFromArgs(arg) {\n    var entry;\n    if (typeof arg === \"string\") {\n        entry = {\n            moduleName: arg\n        };\n    }\n    else if (typeof arg === \"function\") {\n        entry = {\n            create: arg\n        };\n    }\n    else {\n        entry = arg;\n    }\n    return entry;\n}\nfunction reloadPage() {\n    var frame = topmost();\n    if (frame) {\n        if (frame.currentPage && frame.currentPage.modal) {\n            frame.currentPage.modal.closeModal();\n        }\n        var currentEntry = frame._currentEntry.entry;\n        var newEntry = {\n            animated: false,\n            clearHistory: true,\n            context: currentEntry.context,\n            create: currentEntry.create,\n            moduleName: currentEntry.moduleName,\n            backstackVisible: currentEntry.backstackVisible\n        };\n        frame.navigate(newEntry);\n    }\n}\nexports.reloadPage = reloadPage;\nfunction resolvePageFromEntry(entry) {\n    var page;\n    if (entry.create) {\n        page = entry.create();\n        if (!page) {\n            throw new Error(\"Failed to create Page with entry.create() function.\");\n        }\n        page._refreshCss();\n    }\n    else if (entry.moduleName) {\n        var currentAppPath = file_system_1.knownFolders.currentApp().path;\n        var moduleNamePath = file_system_1.path.join(currentAppPath, entry.moduleName);\n        view_1.traceWrite(\"frame module path: \" + moduleNamePath, view_1.traceCategories.Navigation);\n        view_1.traceWrite(\"frame module module: \" + entry.moduleName, view_1.traceCategories.Navigation);\n        var moduleExports = void 0;\n        if (global.moduleExists(entry.moduleName)) {\n            if (view_1.traceEnabled()) {\n                view_1.traceWrite(\"Loading pre-registered JS module: \" + entry.moduleName, view_1.traceCategories.Navigation);\n            }\n            moduleExports = global.loadModule(entry.moduleName);\n        }\n        else {\n            var moduleExportsResolvedPath = file_name_resolver_1.resolveFileName(moduleNamePath, \"js\");\n            if (moduleExportsResolvedPath) {\n                if (view_1.traceEnabled()) {\n                    view_1.traceWrite(\"Loading JS file: \" + moduleExportsResolvedPath, view_1.traceCategories.Navigation);\n                }\n                moduleExportsResolvedPath = moduleExportsResolvedPath.substr(0, moduleExportsResolvedPath.length - 3);\n                moduleExports = global.loadModule(moduleExportsResolvedPath);\n            }\n        }\n        if (moduleExports && moduleExports.createPage) {\n            if (view_1.traceEnabled()) {\n                view_1.traceWrite(\"Calling createPage()\", view_1.traceCategories.Navigation);\n            }\n            page = moduleExports.createPage();\n            var cssFileName = file_name_resolver_1.resolveFileName(moduleNamePath, \"css\");\n            if (cssFileName) {\n                page.addCssFile(cssFileName);\n            }\n        }\n        else {\n            page = pageFromBuilder(moduleNamePath, moduleExports);\n        }\n        if (!page) {\n            throw new Error(\"Failed to load Page from entry.moduleName: \" + entry.moduleName);\n        }\n    }\n    return page;\n}\nexports.resolvePageFromEntry = resolvePageFromEntry;\nfunction pageFromBuilder(moduleNamePath, moduleExports) {\n    var page;\n    var fileName = file_name_resolver_1.resolveFileName(moduleNamePath, \"xml\");\n    if (fileName) {\n        if (view_1.traceEnabled()) {\n            view_1.traceWrite(\"Loading XML file: \" + fileName, view_1.traceCategories.Navigation);\n        }\n        page = builder_1.loadPage(moduleNamePath, fileName, moduleExports);\n    }\n    return page;\n}\nvar FrameBase = (function (_super) {\n    __extends(FrameBase, _super);\n    function FrameBase() {\n        var _this = _super.call(this) || this;\n        _this._isInFrameStack = false;\n        _this._backStack = new Array();\n        _this._navigationQueue = new Array();\n        return _this;\n    }\n    FrameBase.prototype.canGoBack = function () {\n        return this._backStack.length > 0;\n    };\n    FrameBase.prototype.goBack = function (backstackEntry) {\n        if (view_1.traceEnabled()) {\n            view_1.traceWrite(\"GO BACK\", view_1.traceCategories.Navigation);\n        }\n        if (!this.canGoBack()) {\n            return;\n        }\n        if (!backstackEntry) {\n            backstackEntry = this._backStack.pop();\n        }\n        else {\n            var backIndex = this._backStack.indexOf(backstackEntry);\n            if (backIndex < 0) {\n                return;\n            }\n            this._backStack.splice(backIndex);\n        }\n        var navigationContext = {\n            entry: backstackEntry,\n            isBackNavigation: true\n        };\n        this._navigationQueue.push(navigationContext);\n        if (this._navigationQueue.length === 1) {\n            this._processNavigationContext(navigationContext);\n        }\n        else {\n            if (view_1.traceEnabled()) {\n                view_1.traceWrite(\"Going back scheduled\", view_1.traceCategories.Navigation);\n            }\n        }\n    };\n    FrameBase.prototype.navigate = function (param) {\n        if (view_1.traceEnabled()) {\n            view_1.traceWrite(\"NAVIGATE\", view_1.traceCategories.Navigation);\n        }\n        var entry = buildEntryFromArgs(param);\n        var page = resolvePageFromEntry(entry);\n        this._pushInFrameStack();\n        var backstackEntry = {\n            entry: entry,\n            resolvedPage: page,\n            navDepth: undefined,\n            fragmentTag: undefined,\n            isBack: undefined,\n            isNavigation: true\n        };\n        var navigationContext = {\n            entry: backstackEntry,\n            isBackNavigation: false\n        };\n        this._navigationQueue.push(navigationContext);\n        if (this._navigationQueue.length === 1) {\n            this._processNavigationContext(navigationContext);\n        }\n        else {\n            if (view_1.traceEnabled()) {\n                view_1.traceWrite(\"Navigation scheduled\", view_1.traceCategories.Navigation);\n            }\n        }\n    };\n    FrameBase.prototype._processNavigationQueue = function (page) {\n        if (this._navigationQueue.length === 0) {\n            return;\n        }\n        var entry = this._navigationQueue[0].entry;\n        var currentNavigationPage = entry.resolvedPage;\n        if (page !== currentNavigationPage) {\n            throw new Error(\"Corrupted navigation stack; page: \" + page + \"; currentNavigationPage: \" + currentNavigationPage);\n        }\n        this._navigationQueue.shift();\n        if (this._navigationQueue.length > 0) {\n            var navigationContext = this._navigationQueue[0];\n            this._processNavigationContext(navigationContext);\n        }\n        this._updateActionBar();\n    };\n    FrameBase.prototype.navigationQueueIsEmpty = function () {\n        return this._navigationQueue.length === 0;\n    };\n    FrameBase._isEntryBackstackVisible = function (entry) {\n        if (!entry) {\n            return false;\n        }\n        var backstackVisibleValue = entry.entry.backstackVisible;\n        var backstackHidden = backstackVisibleValue !== undefined && !backstackVisibleValue;\n        return !backstackHidden;\n    };\n    FrameBase.prototype._updateActionBar = function (page, disableNavBarAnimation) {\n    };\n    FrameBase.prototype._processNavigationContext = function (navigationContext) {\n        if (navigationContext.isBackNavigation) {\n            this.performGoBack(navigationContext);\n        }\n        else {\n            this.performNavigation(navigationContext);\n        }\n    };\n    FrameBase.prototype.performNavigation = function (navigationContext) {\n        var navContext = navigationContext.entry;\n        if (navigationContext.entry.entry.clearHistory) {\n            this._backStack.length = 0;\n        }\n        else if (FrameBase._isEntryBackstackVisible(this._currentEntry)) {\n            this._backStack.push(this._currentEntry);\n        }\n        this._onNavigatingTo(navContext, navigationContext.isBackNavigation);\n        this._navigateCore(navContext);\n    };\n    FrameBase.prototype.performGoBack = function (navigationContext) {\n        var navContext = navigationContext.entry;\n        this._onNavigatingTo(navContext, navigationContext.isBackNavigation);\n        this._goBackCore(navContext);\n    };\n    FrameBase.prototype._goBackCore = function (backstackEntry) {\n        if (view_1.traceEnabled()) {\n            view_1.traceWrite(\"GO BACK CORE(\" + this._backstackEntryTrace(backstackEntry) + \"); currentPage: \" + this.currentPage, view_1.traceCategories.Navigation);\n        }\n    };\n    FrameBase.prototype._navigateCore = function (backstackEntry) {\n        if (view_1.traceEnabled()) {\n            view_1.traceWrite(\"NAVIGATE CORE(\" + this._backstackEntryTrace(backstackEntry) + \"); currentPage: \" + this.currentPage, view_1.traceCategories.Navigation);\n        }\n    };\n    FrameBase.prototype._onNavigatingTo = function (backstackEntry, isBack) {\n        if (this.currentPage) {\n            this.currentPage.onNavigatingFrom(isBack);\n        }\n        backstackEntry.resolvedPage.onNavigatingTo(backstackEntry.entry.context, isBack, backstackEntry.entry.bindingContext);\n    };\n    Object.defineProperty(FrameBase.prototype, \"animated\", {\n        get: function () {\n            return this._animated;\n        },\n        set: function (value) {\n            this._animated = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameBase.prototype, \"transition\", {\n        get: function () {\n            return this._transition;\n        },\n        set: function (value) {\n            this._transition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameBase.prototype, \"backStack\", {\n        get: function () {\n            return this._backStack.slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameBase.prototype, \"currentPage\", {\n        get: function () {\n            if (this._currentEntry) {\n                return this._currentEntry.resolvedPage;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameBase.prototype, \"currentEntry\", {\n        get: function () {\n            if (this._currentEntry) {\n                return this._currentEntry.entry;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FrameBase.prototype._pushInFrameStack = function () {\n        if (this._isInFrameStack) {\n            return;\n        }\n        frameStack.push(this);\n        this._isInFrameStack = true;\n    };\n    FrameBase.prototype._popFromFrameStack = function () {\n        if (!this._isInFrameStack) {\n            return;\n        }\n        var top = topmost();\n        if (top !== this) {\n            throw new Error(\"Cannot pop a Frame which is not at the top of the navigation stack.\");\n        }\n        frameStack.pop();\n        this._isInFrameStack = false;\n    };\n    Object.defineProperty(FrameBase.prototype, \"_childrenCount\", {\n        get: function () {\n            if (this.currentPage) {\n                return 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FrameBase.prototype.eachChildView = function (callback) {\n        if (this.currentPage) {\n            callback(this.currentPage);\n        }\n    };\n    FrameBase.prototype._getIsAnimatedNavigation = function (entry) {\n        if (entry && entry.animated !== undefined) {\n            return entry.animated;\n        }\n        if (this.animated !== undefined) {\n            return this.animated;\n        }\n        return FrameBase.defaultAnimatedNavigation;\n    };\n    FrameBase.prototype._getNavigationTransition = function (entry) {\n        if (entry) {\n            if (view_1.isIOS && entry.transitioniOS !== undefined) {\n                return entry.transitioniOS;\n            }\n            if (view_1.isAndroid && entry.transitionAndroid !== undefined) {\n                return entry.transitionAndroid;\n            }\n            if (entry.transition !== undefined) {\n                return entry.transition;\n            }\n        }\n        if (this.transition !== undefined) {\n            return this.transition;\n        }\n        return FrameBase.defaultTransition;\n    };\n    Object.defineProperty(FrameBase.prototype, \"navigationBarHeight\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FrameBase.prototype._getNavBarVisible = function (page) {\n        throw new Error();\n    };\n    FrameBase.prototype._addViewToNativeVisualTree = function (child) {\n        return true;\n    };\n    FrameBase.prototype._removeViewFromNativeVisualTree = function (child) {\n        child._isAddedToNativeVisualTree = false;\n    };\n    FrameBase.prototype._printFrameBackStack = function () {\n        var length = this.backStack.length;\n        var i = length - 1;\n        console.log(\"Frame Back Stack: \");\n        while (i >= 0) {\n            var backstackEntry = this.backStack[i--];\n            console.log(\"\\t\" + backstackEntry.resolvedPage);\n        }\n    };\n    FrameBase.prototype._backstackEntryTrace = function (b) {\n        var result = \"\" + b.resolvedPage;\n        var backstackVisible = FrameBase._isEntryBackstackVisible(b);\n        if (!backstackVisible) {\n            result += \" | INVISIBLE\";\n        }\n        if (b.entry.clearHistory) {\n            result += \" | CLEAR HISTORY\";\n        }\n        var animated = this._getIsAnimatedNavigation(b.entry);\n        if (!animated) {\n            result += \" | NOT ANIMATED\";\n        }\n        var t = this._getNavigationTransition(b.entry);\n        if (t) {\n            result += \" | Transition[\" + JSON.stringify(t) + \"]\";\n        }\n        return result;\n    };\n    return FrameBase;\n}(view_1.CustomLayoutView));\nFrameBase.androidOptionSelectedEvent = \"optionSelected\";\nFrameBase.defaultAnimatedNavigation = true;\nexports.FrameBase = FrameBase;\nfunction topmost() {\n    if (frameStack.length > 0) {\n        return frameStack[frameStack.length - 1];\n    }\n    return undefined;\n}\nexports.topmost = topmost;\nfunction goBack() {\n    var top = topmost();\n    if (top.canGoBack()) {\n        top.goBack();\n        return true;\n    }\n    if (frameStack.length > 1) {\n        top._popFromFrameStack();\n    }\n    return false;\n}\nexports.goBack = goBack;\nfunction stack() {\n    return frameStack;\n}\nexports.stack = stack;\n//# sourceMappingURL=frame-common.js.map"
    },
    {
      "id": 134,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/gestures/gestures-common.js",
      "name": "./~/tns-core-modules/ui/gestures/gestures-common.js",
      "index": 59,
      "index2": 48,
      "size": 4698,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/gestures/gestures.android.js",
      "issuerId": 135,
      "issuerName": "./~/tns-core-modules/ui/gestures/gestures.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 135,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/gestures/gestures.android.js",
          "module": "./~/tns-core-modules/ui/gestures/gestures.android.js",
          "moduleName": "./~/tns-core-modules/ui/gestures/gestures.android.js",
          "type": "cjs require",
          "userRequest": "./gestures-common",
          "loc": "5:24-52"
        },
        {
          "moduleId": 135,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/gestures/gestures.android.js",
          "module": "./~/tns-core-modules/ui/gestures/gestures.android.js",
          "moduleName": "./~/tns-core-modules/ui/gestures/gestures.android.js",
          "type": "cjs require",
          "userRequest": "./gestures-common",
          "loc": "7:9-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar GestureTypes;\n(function (GestureTypes) {\n    GestureTypes[GestureTypes[\"tap\"] = 1] = \"tap\";\n    GestureTypes[GestureTypes[\"doubleTap\"] = 2] = \"doubleTap\";\n    GestureTypes[GestureTypes[\"pinch\"] = 4] = \"pinch\";\n    GestureTypes[GestureTypes[\"pan\"] = 8] = \"pan\";\n    GestureTypes[GestureTypes[\"swipe\"] = 16] = \"swipe\";\n    GestureTypes[GestureTypes[\"rotation\"] = 32] = \"rotation\";\n    GestureTypes[GestureTypes[\"longPress\"] = 64] = \"longPress\";\n    GestureTypes[GestureTypes[\"touch\"] = 128] = \"touch\";\n})(GestureTypes = exports.GestureTypes || (exports.GestureTypes = {}));\nvar GestureStateTypes;\n(function (GestureStateTypes) {\n    GestureStateTypes[GestureStateTypes[\"cancelled\"] = 0] = \"cancelled\";\n    GestureStateTypes[GestureStateTypes[\"began\"] = 1] = \"began\";\n    GestureStateTypes[GestureStateTypes[\"changed\"] = 2] = \"changed\";\n    GestureStateTypes[GestureStateTypes[\"ended\"] = 3] = \"ended\";\n})(GestureStateTypes = exports.GestureStateTypes || (exports.GestureStateTypes = {}));\nvar SwipeDirection;\n(function (SwipeDirection) {\n    SwipeDirection[SwipeDirection[\"right\"] = 1] = \"right\";\n    SwipeDirection[SwipeDirection[\"left\"] = 2] = \"left\";\n    SwipeDirection[SwipeDirection[\"up\"] = 4] = \"up\";\n    SwipeDirection[SwipeDirection[\"down\"] = 8] = \"down\";\n})(SwipeDirection = exports.SwipeDirection || (exports.SwipeDirection = {}));\nvar TouchAction;\n(function (TouchAction) {\n    TouchAction.down = \"down\";\n    TouchAction.up = \"up\";\n    TouchAction.move = \"move\";\n    TouchAction.cancel = \"cancel\";\n})(TouchAction = exports.TouchAction || (exports.TouchAction = {}));\nfunction toString(type, separator) {\n    var types = new Array();\n    if (type & GestureTypes.tap) {\n        types.push(\"tap\");\n    }\n    if (type & GestureTypes.doubleTap) {\n        types.push(\"doubleTap\");\n    }\n    if (type & GestureTypes.pinch) {\n        types.push(\"pinch\");\n    }\n    if (type & GestureTypes.pan) {\n        types.push(\"pan\");\n    }\n    if (type & GestureTypes.swipe) {\n        types.push(\"swipe\");\n    }\n    if (type & GestureTypes.rotation) {\n        types.push(\"rotation\");\n    }\n    if (type & GestureTypes.longPress) {\n        types.push(\"longPress\");\n    }\n    if (type & GestureTypes.touch) {\n        types.push(\"touch\");\n    }\n    return types.join(separator);\n}\nexports.toString = toString;\nfunction fromString(type) {\n    var t = type.trim().toLowerCase();\n    if (t === \"tap\") {\n        return GestureTypes.tap;\n    }\n    else if (t === \"doubletap\") {\n        return GestureTypes.doubleTap;\n    }\n    else if (t === \"pinch\") {\n        return GestureTypes.pinch;\n    }\n    else if (t === \"pan\") {\n        return GestureTypes.pan;\n    }\n    else if (t === \"swipe\") {\n        return GestureTypes.swipe;\n    }\n    else if (t === \"rotation\") {\n        return GestureTypes.rotation;\n    }\n    else if (t === \"longpress\") {\n        return GestureTypes.longPress;\n    }\n    else if (t === \"touch\") {\n        return GestureTypes.touch;\n    }\n    return undefined;\n}\nexports.fromString = fromString;\nvar GesturesObserverBase = (function () {\n    function GesturesObserverBase(target, callback, context) {\n        this._target = target;\n        this._callback = callback;\n        this._context = context;\n    }\n    Object.defineProperty(GesturesObserverBase.prototype, \"callback\", {\n        get: function () {\n            return this._callback;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GesturesObserverBase.prototype, \"target\", {\n        get: function () {\n            return this._target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GesturesObserverBase.prototype, \"context\", {\n        get: function () {\n            return this._context;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GesturesObserverBase.prototype.disconnect = function () {\n        if (this.target) {\n            var list = this.target.getGestureObservers(this.type);\n            if (list && list.length > 0) {\n                for (var i = 0; i < list.length; i++) {\n                    if (list[i].callback === this.callback) {\n                        break;\n                    }\n                }\n                list.length = 0;\n                this.target._gestureObservers[this.type] = undefined;\n                delete this.target._gestureObservers[this.type];\n            }\n        }\n        this._target = null;\n        this._callback = null;\n        this._context = null;\n    };\n    return GesturesObserverBase;\n}());\nexports.GesturesObserverBase = GesturesObserverBase;\n//# sourceMappingURL=gestures-common.js.map"
    },
    {
      "id": 135,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/gestures/gestures.android.js",
      "name": "./~/tns-core-modules/ui/gestures/gestures.android.js",
      "index": 58,
      "index2": 49,
      "size": 23563,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
      "issuerId": 127,
      "issuerName": "./~/tns-core-modules/ui/core/view/view-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 125,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/button/button.android.js",
          "module": "./~/tns-core-modules/ui/button/button.android.js",
          "moduleName": "./~/tns-core-modules/ui/button/button.android.js",
          "type": "cjs require",
          "userRequest": "../gestures",
          "loc": "6:17-39"
        },
        {
          "moduleId": 127,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view-common.js",
          "module": "./~/tns-core-modules/ui/core/view/view-common.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view-common.js",
          "type": "cjs require",
          "userRequest": "../../gestures",
          "loc": "8:17-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gestures_common_1 = require(\"./gestures-common\");\nvar utils_1 = require(\"../../utils/utils\");\n__export(require(\"./gestures-common\"));\nvar TapAndDoubleTapGestureListener;\nfunction initializeTapAndDoubleTapGestureListener() {\n    if (TapAndDoubleTapGestureListener) {\n        return;\n    }\n    var TapAndDoubleTapGestureListenerImpl = (function (_super) {\n        __extends(TapAndDoubleTapGestureListenerImpl, _super);\n        function TapAndDoubleTapGestureListenerImpl(observer, target, type) {\n            var _this = _super.call(this) || this;\n            _this._observer = observer;\n            _this._target = target;\n            _this._type = type;\n            return global.__native(_this);\n        }\n        TapAndDoubleTapGestureListenerImpl.prototype.onSingleTapUp = function (motionEvent) {\n            if (this._type & gestures_common_1.GestureTypes.tap) {\n                var args = _getArgs(gestures_common_1.GestureTypes.tap, this._target, motionEvent);\n                _executeCallback(this._observer, args);\n            }\n            return true;\n        };\n        TapAndDoubleTapGestureListenerImpl.prototype.onDoubleTap = function (motionEvent) {\n            if (this._type & gestures_common_1.GestureTypes.doubleTap) {\n                var args = _getArgs(gestures_common_1.GestureTypes.doubleTap, this._target, motionEvent);\n                _executeCallback(this._observer, args);\n            }\n            return true;\n        };\n        TapAndDoubleTapGestureListenerImpl.prototype.onDown = function (motionEvent) {\n            return true;\n        };\n        TapAndDoubleTapGestureListenerImpl.prototype.onLongPress = function (motionEvent) {\n            if (this._type & gestures_common_1.GestureTypes.longPress) {\n                var args = _getArgs(gestures_common_1.GestureTypes.longPress, this._target, motionEvent);\n                _executeCallback(this._observer, args);\n            }\n        };\n        return TapAndDoubleTapGestureListenerImpl;\n    }(android.view.GestureDetector.SimpleOnGestureListener));\n    TapAndDoubleTapGestureListener = TapAndDoubleTapGestureListenerImpl;\n}\nvar PinchGestureListener;\nfunction initializePinchGestureListener() {\n    if (PinchGestureListener) {\n        return;\n    }\n    var PinchGestureListenerImpl = (function (_super) {\n        __extends(PinchGestureListenerImpl, _super);\n        function PinchGestureListenerImpl(observer, target) {\n            var _this = _super.call(this) || this;\n            _this._observer = observer;\n            _this._target = target;\n            _this._density = utils_1.layout.getDisplayDensity();\n            return global.__native(_this);\n        }\n        PinchGestureListenerImpl.prototype.onScaleBegin = function (detector) {\n            this._scale = detector.getScaleFactor();\n            var args = new PinchGestureEventData(this._target, detector, this._scale, this._target, gestures_common_1.GestureStateTypes.began);\n            _executeCallback(this._observer, args);\n            return true;\n        };\n        PinchGestureListenerImpl.prototype.onScale = function (detector) {\n            this._scale *= detector.getScaleFactor();\n            var args = new PinchGestureEventData(this._target, detector, this._scale, this._target, gestures_common_1.GestureStateTypes.changed);\n            _executeCallback(this._observer, args);\n            return true;\n        };\n        PinchGestureListenerImpl.prototype.onScaleEnd = function (detector) {\n            this._scale *= detector.getScaleFactor();\n            var args = new PinchGestureEventData(this._target, detector, this._scale, this._target, gestures_common_1.GestureStateTypes.ended);\n            _executeCallback(this._observer, args);\n        };\n        return PinchGestureListenerImpl;\n    }(android.view.ScaleGestureDetector.SimpleOnScaleGestureListener));\n    PinchGestureListener = PinchGestureListenerImpl;\n}\nvar SwipeGestureListener;\nfunction initializeSwipeGestureListener() {\n    if (SwipeGestureListener) {\n        return;\n    }\n    var SwipeGestureListenerImpl = (function (_super) {\n        __extends(SwipeGestureListenerImpl, _super);\n        function SwipeGestureListenerImpl(observer, target) {\n            var _this = _super.call(this) || this;\n            _this._observer = observer;\n            _this._target = target;\n            return global.__native(_this);\n        }\n        SwipeGestureListenerImpl.prototype.onDown = function (motionEvent) {\n            return true;\n        };\n        SwipeGestureListenerImpl.prototype.onFling = function (initialEvent, currentEvent, velocityX, velocityY) {\n            var result = false;\n            var args;\n            try {\n                var deltaY = currentEvent.getY() - initialEvent.getY();\n                var deltaX = currentEvent.getX() - initialEvent.getX();\n                if (Math.abs(deltaX) > Math.abs(deltaY)) {\n                    if (Math.abs(deltaX) > SWIPE_THRESHOLD\n                        && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {\n                        if (deltaX > 0) {\n                            args = _getSwipeArgs(gestures_common_1.SwipeDirection.right, this._target, initialEvent, currentEvent);\n                            _executeCallback(this._observer, args);\n                            result = true;\n                        }\n                        else {\n                            args = _getSwipeArgs(gestures_common_1.SwipeDirection.left, this._target, initialEvent, currentEvent);\n                            _executeCallback(this._observer, args);\n                            result = true;\n                        }\n                    }\n                }\n                else {\n                    if (Math.abs(deltaY) > SWIPE_THRESHOLD\n                        && Math.abs(velocityY) > SWIPE_VELOCITY_THRESHOLD) {\n                        if (deltaY > 0) {\n                            args = _getSwipeArgs(gestures_common_1.SwipeDirection.down, this._target, initialEvent, currentEvent);\n                            _executeCallback(this._observer, args);\n                            result = true;\n                        }\n                        else {\n                            args = _getSwipeArgs(gestures_common_1.SwipeDirection.up, this._target, initialEvent, currentEvent);\n                            _executeCallback(this._observer, args);\n                            result = true;\n                        }\n                    }\n                }\n            }\n            catch (ex) {\n            }\n            return result;\n        };\n        return SwipeGestureListenerImpl;\n    }(android.view.GestureDetector.SimpleOnGestureListener));\n    SwipeGestureListener = SwipeGestureListenerImpl;\n}\nvar SWIPE_THRESHOLD = 100;\nvar SWIPE_VELOCITY_THRESHOLD = 100;\nvar INVALID_POINTER_ID = -1;\nvar TO_DEGREES = (180 / Math.PI);\nfunction observe(target, type, callback, context) {\n    var observer = new GesturesObserver(target, callback, context);\n    observer.observe(type);\n    return observer;\n}\nexports.observe = observe;\nvar GesturesObserver = (function (_super) {\n    __extends(GesturesObserver, _super);\n    function GesturesObserver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GesturesObserver.prototype.observe = function (type) {\n        var _this = this;\n        if (this.target) {\n            this.type = type;\n            this._onTargetLoaded = function (args) {\n                _this._attach(_this.target, type);\n            };\n            this._onTargetUnloaded = function (args) {\n                _this._detach();\n            };\n            this.target.on(\"loaded\", this._onTargetLoaded);\n            this.target.on(\"unloaded\", this._onTargetUnloaded);\n            if (this.target.isLoaded) {\n                this._attach(this.target, type);\n            }\n        }\n    };\n    GesturesObserver.prototype.disconnect = function () {\n        this._detach();\n        if (this.target) {\n            this.target.off(\"loaded\", this._onTargetLoaded);\n            this.target.off(\"unloaded\", this._onTargetUnloaded);\n            this._onTargetLoaded = null;\n            this._onTargetUnloaded = null;\n        }\n        _super.prototype.disconnect.call(this);\n    };\n    GesturesObserver.prototype._detach = function () {\n        this._notifyTouch = false;\n        this._simpleGestureDetector = null;\n        this._scaleGestureDetector = null;\n        this._swipeGestureDetector = null;\n        this._panGestureDetector = null;\n        this._rotateGestureDetector = null;\n        this._eventData = null;\n    };\n    GesturesObserver.prototype._attach = function (target, type) {\n        this._detach();\n        if (type & gestures_common_1.GestureTypes.tap || type & gestures_common_1.GestureTypes.doubleTap || type & gestures_common_1.GestureTypes.longPress) {\n            initializeTapAndDoubleTapGestureListener();\n            this._simpleGestureDetector = new android.support.v4.view.GestureDetectorCompat(target._context, new TapAndDoubleTapGestureListener(this, this.target, type));\n        }\n        if (type & gestures_common_1.GestureTypes.pinch) {\n            initializePinchGestureListener();\n            this._scaleGestureDetector = new android.view.ScaleGestureDetector(target._context, new PinchGestureListener(this, this.target));\n        }\n        if (type & gestures_common_1.GestureTypes.swipe) {\n            initializeSwipeGestureListener();\n            this._swipeGestureDetector = new android.support.v4.view.GestureDetectorCompat(target._context, new SwipeGestureListener(this, this.target));\n        }\n        if (type & gestures_common_1.GestureTypes.pan) {\n            this._panGestureDetector = new CustomPanGestureDetector(this, this.target);\n        }\n        if (type & gestures_common_1.GestureTypes.rotation) {\n            this._rotateGestureDetector = new CustomRotateGestureDetector(this, this.target);\n        }\n        if (type & gestures_common_1.GestureTypes.touch) {\n            this._notifyTouch = true;\n        }\n    };\n    GesturesObserver.prototype.androidOnTouchEvent = function (motionEvent) {\n        if (this._notifyTouch) {\n            if (!this._eventData) {\n                this._eventData = new TouchGestureEventData();\n            }\n            this._eventData.prepare(this.target, motionEvent);\n            _executeCallback(this, this._eventData);\n        }\n        if (this._simpleGestureDetector) {\n            this._simpleGestureDetector.onTouchEvent(motionEvent);\n        }\n        if (this._scaleGestureDetector) {\n            this._scaleGestureDetector.onTouchEvent(motionEvent);\n        }\n        if (this._swipeGestureDetector) {\n            this._swipeGestureDetector.onTouchEvent(motionEvent);\n        }\n        if (this._panGestureDetector) {\n            this._panGestureDetector.onTouchEvent(motionEvent);\n        }\n        if (this._rotateGestureDetector) {\n            this._rotateGestureDetector.onTouchEvent(motionEvent);\n        }\n    };\n    return GesturesObserver;\n}(gestures_common_1.GesturesObserverBase));\nexports.GesturesObserver = GesturesObserver;\nfunction _getArgs(type, view, e) {\n    return {\n        type: type,\n        view: view,\n        android: e,\n        ios: undefined,\n        object: view,\n        eventName: gestures_common_1.toString(type),\n    };\n}\nfunction _getSwipeArgs(direction, view, initialEvent, currentEvent) {\n    return {\n        type: gestures_common_1.GestureTypes.swipe,\n        view: view,\n        android: { initial: initialEvent, current: currentEvent },\n        direction: direction,\n        ios: undefined,\n        object: view,\n        eventName: gestures_common_1.toString(gestures_common_1.GestureTypes.swipe),\n    };\n}\nfunction _getPanArgs(deltaX, deltaY, view, state, initialEvent, currentEvent) {\n    return {\n        type: gestures_common_1.GestureTypes.pan,\n        view: view,\n        android: { initial: initialEvent, current: currentEvent },\n        deltaX: deltaX,\n        deltaY: deltaY,\n        ios: undefined,\n        object: view,\n        eventName: gestures_common_1.toString(gestures_common_1.GestureTypes.pan),\n        state: state\n    };\n}\nfunction _executeCallback(observer, args) {\n    if (observer && observer.callback) {\n        observer.callback.call(observer._context, args);\n    }\n}\nvar PinchGestureEventData = (function () {\n    function PinchGestureEventData(view, android, scale, object, state) {\n        this.view = view;\n        this.android = android;\n        this.scale = scale;\n        this.object = object;\n        this.state = state;\n        this.type = gestures_common_1.GestureTypes.pinch;\n        this.eventName = gestures_common_1.toString(gestures_common_1.GestureTypes.pinch);\n    }\n    PinchGestureEventData.prototype.getFocusX = function () {\n        return this.android.getFocusX() / utils_1.layout.getDisplayDensity();\n    };\n    PinchGestureEventData.prototype.getFocusY = function () {\n        return this.android.getFocusY() / utils_1.layout.getDisplayDensity();\n    };\n    return PinchGestureEventData;\n}());\nvar CustomPanGestureDetector = (function () {\n    function CustomPanGestureDetector(observer, target) {\n        this.observer = observer;\n        this.target = target;\n        this.isTracking = false;\n        this.density = utils_1.layout.getDisplayDensity();\n    }\n    CustomPanGestureDetector.prototype.onTouchEvent = function (event) {\n        switch (event.getActionMasked()) {\n            case android.view.MotionEvent.ACTION_UP:\n            case android.view.MotionEvent.ACTION_CANCEL:\n                this.trackStop(event, false);\n                break;\n            case android.view.MotionEvent.ACTION_DOWN:\n            case android.view.MotionEvent.ACTION_POINTER_DOWN:\n            case android.view.MotionEvent.ACTION_POINTER_UP:\n                this.trackStop(event, true);\n                break;\n            case android.view.MotionEvent.ACTION_MOVE:\n                if (!this.isTracking) {\n                    this.trackStart(event);\n                }\n                this.trackChange(event);\n                break;\n        }\n        return true;\n    };\n    CustomPanGestureDetector.prototype.trackStop = function (currentEvent, cahceEvent) {\n        if (this.isTracking) {\n            var args = _getPanArgs(this.deltaX, this.deltaY, this.target, gestures_common_1.GestureStateTypes.ended, null, currentEvent);\n            _executeCallback(this.observer, args);\n            this.deltaX = undefined;\n            this.deltaY = undefined;\n            this.isTracking = false;\n        }\n        if (cahceEvent) {\n            this.lastEventCache = currentEvent;\n        }\n        else {\n            this.lastEventCache = undefined;\n        }\n    };\n    CustomPanGestureDetector.prototype.trackStart = function (currentEvent) {\n        var inital = this.getEventCoordinates(this.lastEventCache ? this.lastEventCache : currentEvent);\n        this.initialX = inital.x;\n        this.initialY = inital.y;\n        this.isTracking = true;\n        var args = _getPanArgs(0, 0, this.target, gestures_common_1.GestureStateTypes.began, null, currentEvent);\n        _executeCallback(this.observer, args);\n    };\n    CustomPanGestureDetector.prototype.trackChange = function (currentEvent) {\n        var current = this.getEventCoordinates(currentEvent);\n        this.deltaX = current.x - this.initialX;\n        this.deltaY = current.y - this.initialY;\n        var args = _getPanArgs(this.deltaX, this.deltaY, this.target, gestures_common_1.GestureStateTypes.changed, null, currentEvent);\n        _executeCallback(this.observer, args);\n    };\n    CustomPanGestureDetector.prototype.getEventCoordinates = function (event) {\n        var count = event.getPointerCount();\n        if (count === 1) {\n            return {\n                x: event.getRawX() / this.density,\n                y: event.getRawY() / this.density\n            };\n        }\n        else {\n            var offX = event.getRawX() - event.getX();\n            var offY = event.getRawY() - event.getY();\n            var res = { x: 0, y: 0 };\n            for (var i = 0; i < count; i++) {\n                res.x += event.getX(i) + offX;\n                res.y += event.getY(i) + offY;\n            }\n            res.x /= (count * this.density);\n            res.y /= (count * this.density);\n            return res;\n        }\n    };\n    return CustomPanGestureDetector;\n}());\nvar CustomRotateGestureDetector = (function () {\n    function CustomRotateGestureDetector(observer, target) {\n        this.observer = observer;\n        this.target = target;\n        this.trackedPtrId1 = INVALID_POINTER_ID;\n        this.trackedPtrId2 = INVALID_POINTER_ID;\n    }\n    Object.defineProperty(CustomRotateGestureDetector.prototype, \"isTracking\", {\n        get: function () {\n            return this.trackedPtrId1 !== INVALID_POINTER_ID && this.trackedPtrId2 !== INVALID_POINTER_ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomRotateGestureDetector.prototype.onTouchEvent = function (event) {\n        var pointerID = event.getPointerId(event.getActionIndex());\n        var wasTracking = this.isTracking;\n        switch (event.getActionMasked()) {\n            case android.view.MotionEvent.ACTION_DOWN:\n            case android.view.MotionEvent.ACTION_POINTER_DOWN:\n                var assigned = false;\n                if (this.trackedPtrId1 === INVALID_POINTER_ID && pointerID !== this.trackedPtrId2) {\n                    this.trackedPtrId1 = pointerID;\n                    assigned = true;\n                }\n                else if (this.trackedPtrId2 === INVALID_POINTER_ID && pointerID !== this.trackedPtrId1) {\n                    this.trackedPtrId2 = pointerID;\n                    assigned = true;\n                }\n                if (assigned && this.isTracking) {\n                    this.angle = 0;\n                    this.initalPointersAngle = this.getPointersAngle(event);\n                    this.executeCallback(event, gestures_common_1.GestureStateTypes.began);\n                }\n                break;\n            case android.view.MotionEvent.ACTION_MOVE:\n                if (this.isTracking) {\n                    this.updateAngle(event);\n                    this.executeCallback(event, gestures_common_1.GestureStateTypes.changed);\n                }\n                break;\n            case android.view.MotionEvent.ACTION_UP:\n            case android.view.MotionEvent.ACTION_POINTER_UP:\n                if (pointerID === this.trackedPtrId1) {\n                    this.trackedPtrId1 = INVALID_POINTER_ID;\n                }\n                else if (pointerID === this.trackedPtrId2) {\n                    this.trackedPtrId2 = INVALID_POINTER_ID;\n                }\n                if (wasTracking && !this.isTracking) {\n                    this.executeCallback(event, gestures_common_1.GestureStateTypes.ended);\n                }\n                break;\n            case android.view.MotionEvent.ACTION_CANCEL:\n                this.trackedPtrId1 = INVALID_POINTER_ID;\n                this.trackedPtrId2 = INVALID_POINTER_ID;\n                if (wasTracking) {\n                    this.executeCallback(event, gestures_common_1.GestureStateTypes.cancelled);\n                }\n                break;\n        }\n        return true;\n    };\n    CustomRotateGestureDetector.prototype.executeCallback = function (event, state) {\n        var args = {\n            type: gestures_common_1.GestureTypes.rotation,\n            view: this.target,\n            android: event,\n            rotation: this.angle,\n            ios: undefined,\n            object: this.target,\n            eventName: gestures_common_1.toString(gestures_common_1.GestureTypes.rotation),\n            state: state\n        };\n        _executeCallback(this.observer, args);\n    };\n    CustomRotateGestureDetector.prototype.updateAngle = function (event) {\n        var newPointersAngle = this.getPointersAngle(event);\n        var result = ((newPointersAngle - this.initalPointersAngle) * TO_DEGREES) % 360;\n        if (result < -180) {\n            result += 360;\n        }\n        if (result > 180) {\n            result -= 360;\n        }\n        this.angle = result;\n    };\n    CustomRotateGestureDetector.prototype.getPointersAngle = function (event) {\n        var firstX = event.getX(event.findPointerIndex(this.trackedPtrId1));\n        var firstY = event.getY(event.findPointerIndex(this.trackedPtrId1));\n        var secondX = event.getX(event.findPointerIndex(this.trackedPtrId2));\n        var secondY = event.getY(event.findPointerIndex(this.trackedPtrId2));\n        return Math.atan2((secondY - firstY), (secondX - firstX));\n    };\n    return CustomRotateGestureDetector;\n}());\nvar Pointer = (function () {\n    function Pointer(id, event) {\n        this.event = event;\n        this.ios = undefined;\n        this.android = id;\n    }\n    Pointer.prototype.getX = function () {\n        return this.event.getX(this.android) / utils_1.layout.getDisplayDensity();\n    };\n    Pointer.prototype.getY = function () {\n        return this.event.getY(this.android) / utils_1.layout.getDisplayDensity();\n    };\n    return Pointer;\n}());\nvar TouchGestureEventData = (function () {\n    function TouchGestureEventData() {\n        this.eventName = gestures_common_1.toString(gestures_common_1.GestureTypes.touch);\n        this.type = gestures_common_1.GestureTypes.touch;\n        this.ios = undefined;\n    }\n    TouchGestureEventData.prototype.prepare = function (view, e) {\n        this.view = view;\n        this.object = view;\n        this.android = e;\n        this.action = this.getActionType(e);\n        this._activePointers = undefined;\n        this._allPointers = undefined;\n    };\n    TouchGestureEventData.prototype.getPointerCount = function () {\n        return this.android.getPointerCount();\n    };\n    TouchGestureEventData.prototype.getActivePointers = function () {\n        if (!this._activePointers) {\n            this._activePointers = [new Pointer(this.android.getActionIndex(), this.android)];\n        }\n        return this._activePointers;\n    };\n    TouchGestureEventData.prototype.getAllPointers = function () {\n        if (!this._allPointers) {\n            this._allPointers = [];\n            for (var i = 0; i < this.getPointerCount(); i++) {\n                this._allPointers.push(new Pointer(i, this.android));\n            }\n        }\n        return this._allPointers;\n    };\n    TouchGestureEventData.prototype.getX = function () {\n        return this.getActivePointers()[0].getX();\n    };\n    TouchGestureEventData.prototype.getY = function () {\n        return this.getActivePointers()[0].getY();\n    };\n    TouchGestureEventData.prototype.getActionType = function (e) {\n        switch (e.getActionMasked()) {\n            case android.view.MotionEvent.ACTION_DOWN:\n            case android.view.MotionEvent.ACTION_POINTER_DOWN:\n                return gestures_common_1.TouchAction.down;\n            case android.view.MotionEvent.ACTION_MOVE:\n                return gestures_common_1.TouchAction.move;\n            case android.view.MotionEvent.ACTION_UP:\n            case android.view.MotionEvent.ACTION_POINTER_UP:\n                return gestures_common_1.TouchAction.up;\n            case android.view.MotionEvent.ACTION_CANCEL:\n                return gestures_common_1.TouchAction.cancel;\n        }\n        return \"\";\n    };\n    return TouchGestureEventData;\n}());\n//# sourceMappingURL=gestures.android.js.map"
    },
    {
      "id": 136,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view-common.js",
      "name": "./~/tns-core-modules/ui/html-view/html-view-common.js",
      "index": 159,
      "index2": 152,
      "size": 688,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view.android.js",
      "issuerId": 251,
      "issuerName": "./~/tns-core-modules/ui/html-view/html-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 251,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view.android.js",
          "module": "./~/tns-core-modules/ui/html-view/html-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/html-view/html-view.android.js",
          "type": "cjs require",
          "userRequest": "./html-view-common",
          "loc": "5:25-54"
        },
        {
          "moduleId": 251,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view.android.js",
          "module": "./~/tns-core-modules/ui/html-view/html-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/html-view/html-view.android.js",
          "type": "cjs require",
          "userRequest": "./html-view-common",
          "loc": "6:9-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar HtmlViewBase = (function (_super) {\n    __extends(HtmlViewBase, _super);\n    function HtmlViewBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return HtmlViewBase;\n}(view_1.View));\nexports.HtmlViewBase = HtmlViewBase;\nexports.htmlProperty = new view_1.Property({ name: \"html\", defaultValue: \"\", affectsLayout: true });\nexports.htmlProperty.register(HtmlViewBase);\n//# sourceMappingURL=html-view-common.js.map"
    },
    {
      "id": 137,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
      "name": "./~/tns-core-modules/ui/image/image-common.js",
      "index": 161,
      "index2": 156,
      "size": 5261,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image.android.js",
      "issuerId": 138,
      "issuerName": "./~/tns-core-modules/ui/image/image.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 138,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image.android.js",
          "module": "./~/tns-core-modules/ui/image/image.android.js",
          "moduleName": "./~/tns-core-modules/ui/image/image.android.js",
          "type": "cjs require",
          "userRequest": "./image-common",
          "loc": "5:21-46"
        },
        {
          "moduleId": 138,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image.android.js",
          "module": "./~/tns-core-modules/ui/image/image.android.js",
          "moduleName": "./~/tns-core-modules/ui/image/image.android.js",
          "type": "cjs require",
          "userRequest": "./image-common",
          "loc": "7:9-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\nvar image_asset_1 = require(\"../../image-asset\");\nvar image_source_1 = require(\"../../image-source\");\nexports.ImageSource = image_source_1.ImageSource;\nexports.fromAsset = image_source_1.fromAsset;\nexports.fromNativeSource = image_source_1.fromNativeSource;\nexports.fromUrl = image_source_1.fromUrl;\nvar utils_1 = require(\"../../utils/utils\");\nexports.isDataURI = utils_1.isDataURI;\nexports.isFileOrResourcePath = utils_1.isFileOrResourcePath;\nexports.RESOURCE_PREFIX = utils_1.RESOURCE_PREFIX;\n__export(require(\"../core/view\"));\nvar ImageBase = (function (_super) {\n    __extends(ImageBase, _super);\n    function ImageBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ImageBase.prototype, \"tintColor\", {\n        get: function () {\n            return this.style.tintColor;\n        },\n        set: function (value) {\n            this.style.tintColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ImageBase.prototype._createImageSourceFromSrc = function () {\n        var _this = this;\n        var value = this.src;\n        var originalValue = value;\n        var sync = this.loadMode === \"sync\";\n        if (typeof value === \"string\") {\n            value = value.trim();\n            this.imageSource = null;\n            this[\"_url\"] = value;\n            this.isLoading = true;\n            var source_1 = new image_source_1.ImageSource();\n            var imageLoaded = function () {\n                var currentValue = _this.src;\n                if (currentValue !== originalValue) {\n                    return;\n                }\n                _this.imageSource = source_1;\n                _this.isLoading = false;\n            };\n            if (utils_1.isDataURI(value)) {\n                var base64Data = value.split(\",\")[1];\n                if (base64Data !== undefined) {\n                    if (sync) {\n                        source_1.loadFromBase64(base64Data);\n                        imageLoaded();\n                    }\n                    else {\n                        source_1.fromBase64(base64Data).then(imageLoaded);\n                    }\n                }\n            }\n            else if (utils_1.isFileOrResourcePath(value)) {\n                if (value.indexOf(utils_1.RESOURCE_PREFIX) === 0) {\n                    var resPath = value.substr(utils_1.RESOURCE_PREFIX.length);\n                    if (sync) {\n                        source_1.loadFromResource(resPath);\n                        imageLoaded();\n                    }\n                    else {\n                        this.imageSource = null;\n                        source_1.fromResource(resPath).then(imageLoaded);\n                    }\n                }\n                else {\n                    if (sync) {\n                        source_1.loadFromFile(value);\n                        imageLoaded();\n                    }\n                    else {\n                        this.imageSource = null;\n                        source_1.fromFile(value).then(imageLoaded);\n                    }\n                }\n            }\n            else {\n                this.imageSource = null;\n                image_source_1.fromUrl(value).then(function (r) {\n                    if (_this[\"_url\"] === value) {\n                        _this.imageSource = r;\n                        _this.isLoading = false;\n                    }\n                });\n            }\n        }\n        else if (value instanceof image_source_1.ImageSource) {\n            this.imageSource = value;\n            this.isLoading = false;\n        }\n        else if (value instanceof image_asset_1.ImageAsset) {\n            image_source_1.fromAsset(value).then(function (result) {\n                _this.imageSource = result;\n                _this.isLoading = false;\n            });\n        }\n        else {\n            this.imageSource = image_source_1.fromNativeSource(value);\n            this.isLoading = false;\n        }\n    };\n    return ImageBase;\n}(view_1.View));\nexports.ImageBase = ImageBase;\nexports.imageSourceProperty = new view_1.Property({ name: \"imageSource\" });\nexports.imageSourceProperty.register(ImageBase);\nexports.srcProperty = new view_1.Property({ name: \"src\" });\nexports.srcProperty.register(ImageBase);\nexports.loadModeProperty = new view_1.Property({ name: \"loadMode\", defaultValue: \"sync\" });\nexports.loadModeProperty.register(ImageBase);\nexports.isLoadingProperty = new view_1.Property({ name: \"isLoading\", defaultValue: false, valueConverter: view_1.booleanConverter });\nexports.isLoadingProperty.register(ImageBase);\nexports.stretchProperty = new view_1.Property({ name: \"stretch\", defaultValue: \"aspectFit\", affectsLayout: view_1.isIOS });\nexports.stretchProperty.register(ImageBase);\nexports.tintColorProperty = new view_1.InheritedCssProperty({ name: \"tintColor\", cssName: \"tint-color\", equalityComparer: view_1.Color.equals, valueConverter: function (value) { return new view_1.Color(value); } });\nexports.tintColorProperty.register(view_1.Style);\n//# sourceMappingURL=image-common.js.map"
    },
    {
      "id": 138,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image.android.js",
      "name": "./~/tns-core-modules/ui/image/image.android.js",
      "index": 160,
      "index2": 157,
      "size": 7333,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/image",
          "loc": "58:46-82"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/image",
          "loc": "60:44-80"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar image_common_1 = require(\"./image-common\");\nvar file_system_1 = require(\"../../file-system\");\n__export(require(\"./image-common\"));\nvar FILE_PREFIX = \"file:///\";\nvar ASYNC = \"async\";\nvar imageFetcher;\nvar imageCache;\nvar CacheMode;\n(function (CacheMode) {\n    CacheMode[CacheMode[\"none\"] = 0] = \"none\";\n    CacheMode[CacheMode[\"memory\"] = 1] = \"memory\";\n    CacheMode[CacheMode[\"diskAndMemory\"] = 2] = \"diskAndMemory\";\n})(CacheMode = exports.CacheMode || (exports.CacheMode = {}));\nfunction initImageCache(context, mode, memoryCacheSize, diskCacheSize) {\n    if (mode === void 0) { mode = CacheMode.diskAndMemory; }\n    if (memoryCacheSize === void 0) { memoryCacheSize = 0.25; }\n    if (diskCacheSize === void 0) { diskCacheSize = 10 * 1024 * 1024; }\n    if (exports.currentCacheMode === mode) {\n        return;\n    }\n    exports.currentCacheMode = mode;\n    if (!imageFetcher) {\n        imageFetcher = org.nativescript.widgets.image.Fetcher.getInstance(context);\n    }\n    if (mode === CacheMode.none) {\n        if (imageCache != null && imageFetcher != null) {\n            imageFetcher.clearCache();\n        }\n    }\n    var params = new org.nativescript.widgets.image.Cache.CacheParams();\n    params.memoryCacheEnabled = mode !== CacheMode.none;\n    params.setMemCacheSizePercent(memoryCacheSize);\n    params.diskCacheEnabled = mode === CacheMode.diskAndMemory;\n    params.diskCacheSize = diskCacheSize;\n    imageCache = org.nativescript.widgets.image.Cache.getInstance(params);\n    imageFetcher.addImageCache(imageCache);\n    imageFetcher.initCache();\n}\nexports.initImageCache = initImageCache;\nvar ImageLoadedListener;\nfunction initializeImageLoadedListener() {\n    if (ImageLoadedListener) {\n        return;\n    }\n    var ImageLoadedListenerImpl = (function (_super) {\n        __extends(ImageLoadedListenerImpl, _super);\n        function ImageLoadedListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        ImageLoadedListenerImpl.prototype.onImageLoaded = function (success) {\n            var owner = this.owner;\n            if (owner) {\n                owner.isLoading = false;\n            }\n        };\n        return ImageLoadedListenerImpl;\n    }(java.lang.Object));\n    ImageLoadedListenerImpl = __decorate([\n        Interfaces([org.nativescript.widgets.image.Worker.OnImageLoadedListener])\n    ], ImageLoadedListenerImpl);\n    ImageLoadedListener = ImageLoadedListenerImpl;\n}\nvar Image = (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.decodeWidth = 0;\n        _this.decodeHeight = 0;\n        _this.useCache = true;\n        return _this;\n    }\n    Image.prototype.createNativeView = function () {\n        initializeImageLoadedListener();\n        if (!imageFetcher) {\n            initImageCache(this._context);\n        }\n        var imageView = new org.nativescript.widgets.ImageView(this._context);\n        var listener = new ImageLoadedListener(this);\n        imageView.setImageLoadedListener(listener);\n        imageView.listener = listener;\n        return imageView;\n    };\n    Image.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.listener.owner = this;\n    };\n    Image.prototype.disposeNativeView = function () {\n        this.nativeView.listener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    Image.prototype._createImageSourceFromSrc = function () {\n        var imageView = this.nativeView;\n        this.imageSource = image_common_1.unsetValue;\n        if (!imageView || !this.src) {\n            return;\n        }\n        var value = this.src;\n        var async = this.loadMode === ASYNC;\n        if (typeof value === \"string\") {\n            value = value.trim();\n            this.isLoading = true;\n            if (image_common_1.isDataURI(value)) {\n                _super.prototype._createImageSourceFromSrc.call(this);\n            }\n            else if (image_common_1.isFileOrResourcePath(value)) {\n                if (value.indexOf(image_common_1.RESOURCE_PREFIX) === 0) {\n                    imageView.setUri(value, this.decodeWidth, this.decodeHeight, this.useCache, async);\n                }\n                else {\n                    var fileName = value;\n                    if (fileName.indexOf(\"~/\") === 0) {\n                        fileName = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, fileName.replace(\"~/\", \"\"));\n                    }\n                    imageView.setUri(FILE_PREFIX + fileName, this.decodeWidth, this.decodeHeight, this.useCache, async);\n                }\n            }\n            else {\n                imageView.setUri(value, this.decodeWidth, this.decodeHeight, this.useCache, true);\n            }\n        }\n        else {\n            _super.prototype._createImageSourceFromSrc.call(this);\n        }\n    };\n    Image.prototype[image_common_1.stretchProperty.getDefault] = function () {\n        return \"aspectFit\";\n    };\n    Image.prototype[image_common_1.stretchProperty.setNative] = function (value) {\n        switch (value) {\n            case \"aspectFit\":\n                this.nativeView.setScaleType(android.widget.ImageView.ScaleType.FIT_CENTER);\n                break;\n            case \"aspectFill\":\n                this.nativeView.setScaleType(android.widget.ImageView.ScaleType.CENTER_CROP);\n                break;\n            case \"fill\":\n                this.nativeView.setScaleType(android.widget.ImageView.ScaleType.FIT_XY);\n                break;\n            case \"none\":\n            default:\n                this.nativeView.setScaleType(android.widget.ImageView.ScaleType.MATRIX);\n                break;\n        }\n    };\n    Image.prototype[image_common_1.tintColorProperty.getDefault] = function () {\n        return undefined;\n    };\n    Image.prototype[image_common_1.tintColorProperty.setNative] = function (value) {\n        if (value === undefined) {\n            this.nativeView.clearColorFilter();\n        }\n        else {\n            this.nativeView.setColorFilter(value.android);\n        }\n    };\n    Image.prototype[image_common_1.imageSourceProperty.getDefault] = function () {\n        return undefined;\n    };\n    Image.prototype[image_common_1.imageSourceProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        if (value && value.android) {\n            var rotation = value.rotationAngle ? value.rotationAngle : 0;\n            nativeView.setRotationAngle(rotation);\n            nativeView.setImageBitmap(value.android);\n        }\n        else {\n            nativeView.setRotationAngle(0);\n            nativeView.setImageBitmap(null);\n        }\n    };\n    Image.prototype[image_common_1.srcProperty.getDefault] = function () {\n        return undefined;\n    };\n    Image.prototype[image_common_1.srcProperty.setNative] = function (value) {\n        this._createImageSourceFromSrc();\n    };\n    return Image;\n}(image_common_1.ImageBase));\nexports.Image = Image;\n//# sourceMappingURL=image.android.js.map"
    },
    {
      "id": 139,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
      "name": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout-common.js",
      "index": 150,
      "index2": 143,
      "size": 2544,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
      "issuerId": 252,
      "issuerName": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 252,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
          "type": "cjs require",
          "userRequest": "./absolute-layout-common",
          "loc": "5:31-66"
        },
        {
          "moduleId": 252,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
          "type": "cjs require",
          "userRequest": "./absolute-layout-common",
          "loc": "6:9-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layout-base\");\n__export(require(\"../layout-base\"));\nlayout_base_1.View.prototype.effectiveLeft = 0;\nlayout_base_1.View.prototype.effectiveTop = 0;\nfunction validateArgs(element) {\n    if (!element) {\n        throw new Error(\"element cannot be null or undefinied.\");\n    }\n    return element;\n}\nvar AbsoluteLayoutBase = (function (_super) {\n    __extends(AbsoluteLayoutBase, _super);\n    function AbsoluteLayoutBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AbsoluteLayoutBase.getLeft = function (element) {\n        return validateArgs(element).left;\n    };\n    AbsoluteLayoutBase.setLeft = function (element, value) {\n        validateArgs(element).left = value;\n    };\n    AbsoluteLayoutBase.getTop = function (element) {\n        return validateArgs(element).top;\n    };\n    AbsoluteLayoutBase.setTop = function (element, value) {\n        validateArgs(element).top = value;\n    };\n    AbsoluteLayoutBase.prototype.onLeftChanged = function (view, oldValue, newValue) {\n    };\n    AbsoluteLayoutBase.prototype.onTopChanged = function (view, oldValue, newValue) {\n    };\n    return AbsoluteLayoutBase;\n}(layout_base_1.LayoutBase));\nexports.AbsoluteLayoutBase = AbsoluteLayoutBase;\nexports.leftProperty = new layout_base_1.Property({\n    name: \"left\", defaultValue: layout_base_1.zeroLength,\n    valueChanged: function (target, oldValue, newValue) {\n        target.effectiveLeft = layout_base_1.Length.toDevicePixels(newValue, 0);\n        var layout = target.parent;\n        if (layout instanceof AbsoluteLayoutBase) {\n            layout.onLeftChanged(target, oldValue, newValue);\n        }\n    }, valueConverter: function (v) { return layout_base_1.Length.parse(v); }\n});\nexports.leftProperty.register(layout_base_1.View);\nexports.topProperty = new layout_base_1.Property({\n    name: \"top\", defaultValue: layout_base_1.zeroLength,\n    valueChanged: function (target, oldValue, newValue) {\n        target.effectiveTop = layout_base_1.Length.toDevicePixels(newValue, 0);\n        var layout = target.parent;\n        if (layout instanceof AbsoluteLayoutBase) {\n            layout.onTopChanged(target, oldValue, newValue);\n        }\n    }, valueConverter: function (v) { return layout_base_1.Length.parse(v); }\n});\nexports.topProperty.register(layout_base_1.View);\n//# sourceMappingURL=absolute-layout-common.js.map"
    },
    {
      "id": 140,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
      "name": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout-common.js",
      "index": 157,
      "index2": 150,
      "size": 1940,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
      "issuerId": 253,
      "issuerName": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 253,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
          "type": "cjs require",
          "userRequest": "./dock-layout-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 253,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
          "type": "cjs require",
          "userRequest": "./dock-layout-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layout-base\");\nfunction validateArgs(element) {\n    if (!element) {\n        throw new Error(\"element cannot be null or undefinied.\");\n    }\n    return element;\n}\n__export(require(\"../layout-base\"));\nvar DockLayoutBase = (function (_super) {\n    __extends(DockLayoutBase, _super);\n    function DockLayoutBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DockLayoutBase.getDock = function (element) {\n        return validateArgs(element).dock;\n    };\n    DockLayoutBase.setDock = function (element, value) {\n        validateArgs(element).dock = value;\n    };\n    DockLayoutBase.prototype.onDockChanged = function (view, oldValue, newValue) {\n    };\n    return DockLayoutBase;\n}(layout_base_1.LayoutBase));\nexports.DockLayoutBase = DockLayoutBase;\nexports.dockProperty = new layout_base_1.Property({\n    name: \"dock\", defaultValue: \"left\", valueChanged: function (target, oldValue, newValue) {\n        if (target instanceof layout_base_1.View) {\n            var layout = target.parent;\n            if (layout instanceof DockLayoutBase) {\n                layout.onDockChanged(target, oldValue, newValue);\n            }\n        }\n    }, valueConverter: function (v) {\n        if (v === \"left\" || v === \"top\" || v === \"right\" || v === \"bottom\") {\n            return v;\n        }\n        throw new Error(\"Invalid value for dock property: \" + v);\n    }\n});\nexports.dockProperty.register(layout_base_1.View);\nexports.stretchLastChildProperty = new layout_base_1.Property({\n    name: \"stretchLastChild\", defaultValue: true, affectsLayout: layout_base_1.isIOS, valueConverter: layout_base_1.booleanConverter\n});\nexports.stretchLastChildProperty.register(DockLayoutBase);\n//# sourceMappingURL=dock-layout-common.js.map"
    },
    {
      "id": 141,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
      "name": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout-common.js",
      "index": 184,
      "index2": 177,
      "size": 15390,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
      "issuerId": 254,
      "issuerName": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 254,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
          "type": "cjs require",
          "userRequest": "./flexbox-layout-common",
          "loc": "5:30-64"
        },
        {
          "moduleId": 254,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
          "type": "cjs require",
          "userRequest": "./flexbox-layout-common",
          "loc": "6:9-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layout-base\");\n__export(require(\"../layout-base\"));\nexports.ORDER_DEFAULT = 1;\nexports.FLEX_GROW_DEFAULT = 0.0;\nexports.FLEX_SHRINK_DEFAULT = 1.0;\nvar FlexDirection;\n(function (FlexDirection) {\n    FlexDirection.ROW = \"row\";\n    FlexDirection.ROW_REVERSE = \"row-reverse\";\n    FlexDirection.COLUMN = \"column\";\n    FlexDirection.COLUMN_REVERSE = \"column-reverse\";\n    FlexDirection.isValid = layout_base_1.makeValidator(FlexDirection.ROW, FlexDirection.ROW_REVERSE, FlexDirection.COLUMN, FlexDirection.COLUMN_REVERSE);\n    FlexDirection.parse = layout_base_1.makeParser(FlexDirection.isValid);\n})(FlexDirection = exports.FlexDirection || (exports.FlexDirection = {}));\nvar FlexWrap;\n(function (FlexWrap) {\n    FlexWrap.NOWRAP = \"nowrap\";\n    FlexWrap.WRAP = \"wrap\";\n    FlexWrap.WRAP_REVERSE = \"wrap-reverse\";\n    FlexWrap.isValid = layout_base_1.makeValidator(FlexWrap.NOWRAP, FlexWrap.WRAP, FlexWrap.WRAP_REVERSE);\n    FlexWrap.parse = layout_base_1.makeParser(FlexWrap.isValid);\n})(FlexWrap = exports.FlexWrap || (exports.FlexWrap = {}));\nvar JustifyContent;\n(function (JustifyContent) {\n    JustifyContent.FLEX_START = \"flex-start\";\n    JustifyContent.FLEX_END = \"flex-end\";\n    JustifyContent.CENTER = \"center\";\n    JustifyContent.SPACE_BETWEEN = \"space-between\";\n    JustifyContent.SPACE_AROUND = \"space-around\";\n    JustifyContent.isValid = layout_base_1.makeValidator(JustifyContent.FLEX_START, JustifyContent.FLEX_END, JustifyContent.CENTER, JustifyContent.SPACE_BETWEEN, JustifyContent.SPACE_AROUND);\n    JustifyContent.parse = layout_base_1.makeParser(JustifyContent.isValid);\n})(JustifyContent = exports.JustifyContent || (exports.JustifyContent = {}));\nvar FlexBasisPercent;\n(function (FlexBasisPercent) {\n    FlexBasisPercent.DEFAULT = -1;\n})(FlexBasisPercent = exports.FlexBasisPercent || (exports.FlexBasisPercent = {}));\nvar AlignItems;\n(function (AlignItems) {\n    AlignItems.FLEX_START = \"flex-start\";\n    AlignItems.FLEX_END = \"flex-end\";\n    AlignItems.CENTER = \"center\";\n    AlignItems.BASELINE = \"baseline\";\n    AlignItems.STRETCH = \"stretch\";\n    AlignItems.isValid = layout_base_1.makeValidator(AlignItems.FLEX_START, AlignItems.FLEX_END, AlignItems.CENTER, AlignItems.BASELINE, AlignItems.STRETCH);\n    AlignItems.parse = layout_base_1.makeParser(AlignItems.isValid);\n})(AlignItems = exports.AlignItems || (exports.AlignItems = {}));\nvar AlignContent;\n(function (AlignContent) {\n    AlignContent.FLEX_START = \"flex-start\";\n    AlignContent.FLEX_END = \"flex-end\";\n    AlignContent.CENTER = \"center\";\n    AlignContent.SPACE_BETWEEN = \"space-between\";\n    AlignContent.SPACE_AROUND = \"space-around\";\n    AlignContent.STRETCH = \"stretch\";\n    AlignContent.isValid = layout_base_1.makeValidator(AlignContent.FLEX_START, AlignContent.FLEX_END, AlignContent.CENTER, AlignContent.SPACE_BETWEEN, AlignContent.SPACE_AROUND, AlignContent.STRETCH);\n    AlignContent.parse = layout_base_1.makeParser(AlignContent.isValid);\n})(AlignContent = exports.AlignContent || (exports.AlignContent = {}));\nvar Order;\n(function (Order) {\n    function isValid(value) {\n        return isFinite(parseInt(value));\n    }\n    Order.isValid = isValid;\n    Order.parse = parseInt;\n})(Order = exports.Order || (exports.Order = {}));\nvar FlexGrow;\n(function (FlexGrow) {\n    function isValid(value) {\n        var parsed = parseInt(value);\n        return isFinite(parsed) && value >= 0;\n    }\n    FlexGrow.isValid = isValid;\n    FlexGrow.parse = parseFloat;\n})(FlexGrow = exports.FlexGrow || (exports.FlexGrow = {}));\nvar FlexShrink;\n(function (FlexShrink) {\n    function isValid(value) {\n        var parsed = parseInt(value);\n        return isFinite(parsed) && value >= 0;\n    }\n    FlexShrink.isValid = isValid;\n    FlexShrink.parse = parseFloat;\n})(FlexShrink = exports.FlexShrink || (exports.FlexShrink = {}));\nvar FlexWrapBefore;\n(function (FlexWrapBefore) {\n    function isValid(value) {\n        if (typeof value === \"boolean\") {\n            return true;\n        }\n        if (typeof value === \"string\") {\n            var str = value.trim().toLowerCase();\n            return str === \"true\" || str === \"false\";\n        }\n        return false;\n    }\n    FlexWrapBefore.isValid = isValid;\n    function parse(value) {\n        return value && value.toString().trim().toLowerCase() === \"true\";\n    }\n    FlexWrapBefore.parse = parse;\n})(FlexWrapBefore = exports.FlexWrapBefore || (exports.FlexWrapBefore = {}));\nvar AlignSelf;\n(function (AlignSelf) {\n    AlignSelf.AUTO = \"auto\";\n    AlignSelf.FLEX_START = \"flex-start\";\n    AlignSelf.FLEX_END = \"flex-end\";\n    AlignSelf.CENTER = \"center\";\n    AlignSelf.BASELINE = \"baseline\";\n    AlignSelf.STRETCH = \"stretch\";\n    AlignSelf.isValid = layout_base_1.makeValidator(AlignSelf.AUTO, AlignSelf.FLEX_START, AlignSelf.FLEX_END, AlignSelf.CENTER, AlignSelf.BASELINE, AlignSelf.STRETCH);\n    AlignSelf.parse = layout_base_1.makeParser(AlignSelf.isValid);\n})(AlignSelf = exports.AlignSelf || (exports.AlignSelf = {}));\nfunction validateArgs(element) {\n    if (!element) {\n        throw new Error(\"element cannot be null or undefinied.\");\n    }\n    return element;\n}\nvar FlexboxLayoutBase = (function (_super) {\n    __extends(FlexboxLayoutBase, _super);\n    function FlexboxLayoutBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FlexboxLayoutBase.prototype, \"flexDirection\", {\n        get: function () {\n            return this.style.flexDirection;\n        },\n        set: function (value) {\n            this.style.flexDirection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexboxLayoutBase.prototype, \"flexWrap\", {\n        get: function () {\n            return this.style.flexWrap;\n        },\n        set: function (value) {\n            this.style.flexWrap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexboxLayoutBase.prototype, \"justifyContent\", {\n        get: function () {\n            return this.style.justifyContent;\n        },\n        set: function (value) {\n            this.style.justifyContent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexboxLayoutBase.prototype, \"alignItems\", {\n        get: function () {\n            return this.style.alignItems;\n        },\n        set: function (value) {\n            this.style.alignItems = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexboxLayoutBase.prototype, \"alignContent\", {\n        get: function () {\n            return this.style.alignContent;\n        },\n        set: function (value) {\n            this.style.alignContent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FlexboxLayoutBase.setOrder = function (view, order) {\n        validateArgs(view).style.order = order;\n    };\n    FlexboxLayoutBase.getOrder = function (view) {\n        return validateArgs(view).style.order;\n    };\n    FlexboxLayoutBase.setFlexGrow = function (view, grow) {\n        validateArgs(view).style.flexGrow = grow;\n    };\n    FlexboxLayoutBase.getFlexGrow = function (view) {\n        return validateArgs(view).style.flexGrow;\n    };\n    FlexboxLayoutBase.setFlexShrink = function (view, shrink) {\n        validateArgs(view).style.flexShrink = shrink;\n    };\n    FlexboxLayoutBase.getFlexShrink = function (view) {\n        return validateArgs(view).style.flexShrink;\n    };\n    FlexboxLayoutBase.setAlignSelf = function (view, align) {\n        validateArgs(view).style.alignSelf = align;\n    };\n    FlexboxLayoutBase.getAlignSelf = function (view) {\n        return validateArgs(view).style.alignSelf;\n    };\n    FlexboxLayoutBase.setFlexWrapBefore = function (view, wrap) {\n        validateArgs(view).style.flexWrapBefore = wrap;\n    };\n    FlexboxLayoutBase.getFlexWrapBefore = function (view) {\n        return validateArgs(view).style.flexWrapBefore;\n    };\n    return FlexboxLayoutBase;\n}(layout_base_1.LayoutBase));\nexports.FlexboxLayoutBase = FlexboxLayoutBase;\nexports.flexDirectionProperty = new layout_base_1.CssProperty({ name: \"flexDirection\", cssName: \"flex-direction\", defaultValue: FlexDirection.ROW, affectsLayout: layout_base_1.isIOS, valueConverter: FlexDirection.parse });\nexports.flexDirectionProperty.register(layout_base_1.Style);\nexports.flexWrapProperty = new layout_base_1.CssProperty({ name: \"flexWrap\", cssName: \"flex-wrap\", defaultValue: \"nowrap\", affectsLayout: layout_base_1.isIOS, valueConverter: FlexWrap.parse });\nexports.flexWrapProperty.register(layout_base_1.Style);\nexports.justifyContentProperty = new layout_base_1.CssProperty({ name: \"justifyContent\", cssName: \"justify-content\", defaultValue: JustifyContent.FLEX_START, affectsLayout: layout_base_1.isIOS, valueConverter: JustifyContent.parse });\nexports.justifyContentProperty.register(layout_base_1.Style);\nexports.alignItemsProperty = new layout_base_1.CssProperty({ name: \"alignItems\", cssName: \"align-items\", defaultValue: AlignItems.STRETCH, affectsLayout: layout_base_1.isIOS, valueConverter: AlignItems.parse });\nexports.alignItemsProperty.register(layout_base_1.Style);\nexports.alignContentProperty = new layout_base_1.CssProperty({ name: \"alignContent\", cssName: \"align-content\", defaultValue: AlignContent.STRETCH, affectsLayout: layout_base_1.isIOS, valueConverter: AlignContent.parse });\nexports.alignContentProperty.register(layout_base_1.Style);\nexports.orderProperty = new layout_base_1.CssProperty({ name: \"order\", cssName: \"order\", defaultValue: exports.ORDER_DEFAULT, valueConverter: Order.parse });\nexports.orderProperty.register(layout_base_1.Style);\nObject.defineProperty(layout_base_1.View.prototype, \"order\", {\n    get: function () {\n        return this.style.order;\n    },\n    set: function (value) {\n        this.style.order = value;\n    },\n    enumerable: true,\n    configurable: true\n});\nexports.flexGrowProperty = new layout_base_1.CssProperty({ name: \"flexGrow\", cssName: \"flex-grow\", defaultValue: exports.FLEX_GROW_DEFAULT, valueConverter: FlexGrow.parse });\nexports.flexGrowProperty.register(layout_base_1.Style);\nObject.defineProperty(layout_base_1.View.prototype, \"flexGrow\", {\n    get: function () {\n        return this.style.flexGrow;\n    },\n    set: function (value) {\n        this.style.flexGrow = value;\n    },\n    enumerable: true,\n    configurable: true\n});\nexports.flexShrinkProperty = new layout_base_1.CssProperty({ name: \"flexShrink\", cssName: \"flex-shrink\", defaultValue: exports.FLEX_SHRINK_DEFAULT, valueConverter: FlexShrink.parse });\nexports.flexShrinkProperty.register(layout_base_1.Style);\nObject.defineProperty(layout_base_1.View.prototype, \"flexShrink\", {\n    get: function () {\n        return this.style.flexShrink;\n    },\n    set: function (value) {\n        this.style.flexShrink = value;\n    },\n    enumerable: true,\n    configurable: true\n});\nexports.flexWrapBeforeProperty = new layout_base_1.CssProperty({ name: \"flexWrapBefore\", cssName: \"flex-wrap-before\", defaultValue: false, valueConverter: FlexWrapBefore.parse });\nexports.flexWrapBeforeProperty.register(layout_base_1.Style);\nObject.defineProperty(layout_base_1.View.prototype, \"flexWrapBefore\", {\n    get: function () {\n        return this.style.flexWrapBefore;\n    },\n    set: function (value) {\n        this.style.flexWrapBefore = value;\n    },\n    enumerable: true,\n    configurable: true\n});\nexports.alignSelfProperty = new layout_base_1.CssProperty({ name: \"alignSelf\", cssName: \"align-self\", defaultValue: AlignSelf.AUTO, valueConverter: AlignSelf.parse });\nexports.alignSelfProperty.register(layout_base_1.Style);\nObject.defineProperty(layout_base_1.View.prototype, \"alignSelf\", {\n    get: function () {\n        return this.style.alignSelf;\n    },\n    set: function (value) {\n        this.style.alignSelf = value;\n    },\n    enumerable: true,\n    configurable: true\n});\nvar flexFlowProperty = new layout_base_1.ShorthandProperty({\n    name: \"flex-flow\", cssName: \"flex-flow\",\n    getter: function () {\n        return this.flexDirection + \" \" + this.flexWrap;\n    },\n    converter: function (value) {\n        var properties = [];\n        if (value === layout_base_1.unsetValue) {\n            properties.push([exports.flexDirectionProperty, value]);\n            properties.push([exports.flexWrapProperty, value]);\n        }\n        else {\n            var trimmed = value && value.trim();\n            if (trimmed) {\n                var values = trimmed.split(/\\s+/);\n                if (values.length >= 1 && FlexDirection.isValid(values[0])) {\n                    properties.push([exports.flexDirectionProperty, FlexDirection.parse(values[0])]);\n                }\n                if (value.length >= 2 && FlexWrap.isValid(values[1])) {\n                    properties.push([exports.flexWrapProperty, FlexWrap.parse(values[1])]);\n                }\n            }\n        }\n        return properties;\n    }\n});\nflexFlowProperty.register(layout_base_1.Style);\nvar flexProperty = new layout_base_1.ShorthandProperty({\n    name: \"flex\", cssName: \"flex\",\n    getter: function () {\n        return this.flexGrow + \" \" + this.flexShrink;\n    },\n    converter: function (value) {\n        var properties = [];\n        if (value === layout_base_1.unsetValue) {\n            properties.push([exports.flexGrowProperty, value]);\n            properties.push([exports.flexShrinkProperty, value]);\n        }\n        else {\n            var trimmed = value && value.trim();\n            if (trimmed) {\n                var values = trimmed.split(/\\s+/);\n                if (values.length === 1) {\n                    switch (values[0]) {\n                        case \"inital\":\n                            properties.push([exports.flexGrowProperty, 0]);\n                            properties.push([exports.flexShrinkProperty, 1]);\n                            break;\n                        case \"auto\":\n                            properties.push([exports.flexGrowProperty, 1]);\n                            properties.push([exports.flexShrinkProperty, 1]);\n                            break;\n                        case \"none\":\n                            properties.push([exports.flexGrowProperty, 0]);\n                            properties.push([exports.flexShrinkProperty, 0]);\n                            break;\n                        default:\n                            if (FlexGrow.isValid(values[0])) {\n                                properties.push([exports.flexGrowProperty, FlexGrow.parse(values[0])]);\n                                properties.push([exports.flexShrinkProperty, 1]);\n                            }\n                    }\n                }\n                if (values.length >= 2) {\n                    if (FlexGrow.isValid(values[0]) && FlexShrink.isValid(values[1])) {\n                        properties.push([exports.flexGrowProperty, FlexGrow.parse(values[0])]);\n                        properties.push([exports.flexShrinkProperty, FlexShrink.parse(values[1])]);\n                    }\n                }\n            }\n        }\n        return properties;\n    }\n});\nflexProperty.register(layout_base_1.Style);\n//# sourceMappingURL=flexbox-layout-common.js.map"
    },
    {
      "id": 142,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
      "name": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout-common.js",
      "index": 134,
      "index2": 130,
      "size": 12183,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
      "issuerId": 143,
      "issuerName": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 143,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
          "type": "cjs require",
          "userRequest": "./grid-layout-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 143,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
          "type": "cjs require",
          "userRequest": "./grid-layout-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layout-base\");\n__export(require(\"../layout-base\"));\nfunction validateArgs(element) {\n    if (!element) {\n        throw new Error(\"element cannot be null or undefinied.\");\n    }\n    return element;\n}\nlayout_base_1.View.prototype.row = 0;\nlayout_base_1.View.prototype.col = 0;\nlayout_base_1.View.prototype.rowSpan = 1;\nlayout_base_1.View.prototype.colSpan = 1;\nfunction validateItemSpec(itemSpec) {\n    if (!itemSpec) {\n        throw new Error(\"Value cannot be undefined.\");\n    }\n    if (itemSpec.owner) {\n        throw new Error(\"itemSpec is already added to GridLayout.\");\n    }\n}\nfunction convertGridLength(value) {\n    if (value === GridUnitType.AUTO) {\n        return ItemSpec.create(1, GridUnitType.AUTO);\n    }\n    else if (value.indexOf(\"*\") !== -1) {\n        var starCount = parseInt(value.replace(\"*\", \"\") || \"1\");\n        return ItemSpec.create(starCount, GridUnitType.STAR);\n    }\n    else if (!isNaN(parseInt(value))) {\n        return ItemSpec.create(parseInt(value), GridUnitType.PIXEL);\n    }\n    else {\n        throw new Error(\"Cannot parse item spec from string: \" + value);\n    }\n}\nfunction parseAndAddItemSpecs(value, func) {\n    var arr = value.split(/[\\s,]+/);\n    for (var i = 0, length_1 = arr.length; i < length_1; i++) {\n        var str = arr[i].trim();\n        if (str.length > 0) {\n            func(convertGridLength(arr[i].trim()));\n        }\n    }\n}\nvar ItemSpec = (function (_super) {\n    __extends(ItemSpec, _super);\n    function ItemSpec() {\n        var _this = _super.call(this) || this;\n        _this._actualLength = 0;\n        if (arguments.length === 0) {\n            _this._value = 1;\n            _this._unitType = GridUnitType.STAR;\n        }\n        else if (arguments.length === 2) {\n            var value = arguments[0];\n            var type = arguments[1];\n            if (typeof value === \"number\" && typeof type === \"string\") {\n                if (value < 0 || isNaN(value) || !isFinite(value)) {\n                    throw new Error(\"Value should not be negative, NaN or Infinity: \" + value);\n                }\n                _this._value = value;\n                _this._unitType = GridUnitType.parse(type);\n            }\n            else {\n                throw new Error(\"First argument should be number, second argument should be string.\");\n            }\n        }\n        else {\n            throw new Error(\"ItemSpec expects 0 or 2 arguments\");\n        }\n        _this.index = -1;\n        return _this;\n    }\n    ItemSpec.create = function (value, type) {\n        var spec = new ItemSpec();\n        spec._value = value;\n        spec._unitType = type;\n        return spec;\n    };\n    Object.defineProperty(ItemSpec.prototype, \"actualLength\", {\n        get: function () {\n            return this._actualLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ItemSpec.equals = function (value1, value2) {\n        return (value1.gridUnitType === value2.gridUnitType) && (value1.value === value2.value) && (value1.owner === value2.owner) && (value1.index === value2.index);\n    };\n    Object.defineProperty(ItemSpec.prototype, \"gridUnitType\", {\n        get: function () {\n            return this._unitType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ItemSpec.prototype, \"isAbsolute\", {\n        get: function () {\n            return this._unitType === GridUnitType.PIXEL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ItemSpec.prototype, \"isAuto\", {\n        get: function () {\n            return this._unitType === GridUnitType.AUTO;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ItemSpec.prototype, \"isStar\", {\n        get: function () {\n            return this._unitType === GridUnitType.STAR;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ItemSpec.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ItemSpec;\n}(layout_base_1.Observable));\nexports.ItemSpec = ItemSpec;\nvar GridLayoutBase = (function (_super) {\n    __extends(GridLayoutBase, _super);\n    function GridLayoutBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._rows = new Array();\n        _this._cols = new Array();\n        return _this;\n    }\n    GridLayoutBase.getColumn = function (element) {\n        return validateArgs(element).col;\n    };\n    GridLayoutBase.setColumn = function (element, value) {\n        validateArgs(element).col = value;\n    };\n    GridLayoutBase.getColumnSpan = function (element) {\n        return validateArgs(element).colSpan;\n    };\n    GridLayoutBase.setColumnSpan = function (element, value) {\n        validateArgs(element).colSpan = value;\n    };\n    GridLayoutBase.getRow = function (element) {\n        return validateArgs(element).row;\n    };\n    GridLayoutBase.setRow = function (element, value) {\n        validateArgs(element).row = value;\n    };\n    GridLayoutBase.getRowSpan = function (element) {\n        return validateArgs(element).rowSpan;\n    };\n    GridLayoutBase.setRowSpan = function (element, value) {\n        validateArgs(element).rowSpan = value;\n    };\n    GridLayoutBase.prototype.addRow = function (itemSpec) {\n        validateItemSpec(itemSpec);\n        itemSpec.owner = this;\n        this._rows.push(itemSpec);\n        this._onRowAdded(itemSpec);\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.addColumn = function (itemSpec) {\n        validateItemSpec(itemSpec);\n        itemSpec.owner = this;\n        this._cols.push(itemSpec);\n        this._onColumnAdded(itemSpec);\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.removeRow = function (itemSpec) {\n        if (!itemSpec) {\n            throw new Error(\"Value is null.\");\n        }\n        var index = this._rows.indexOf(itemSpec);\n        if (itemSpec.owner !== this || index < 0) {\n            throw new Error(\"Row is not child of this GridLayout\");\n        }\n        itemSpec.index = -1;\n        this._rows.splice(index, 1);\n        this._onRowRemoved(itemSpec, index);\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.removeColumn = function (itemSpec) {\n        if (!itemSpec) {\n            throw new Error(\"Value is null.\");\n        }\n        var index = this._cols.indexOf(itemSpec);\n        if (itemSpec.owner !== this || index < 0) {\n            throw new Error(\"Column is not child of this GridLayout\");\n        }\n        itemSpec.index = -1;\n        this._cols.splice(index, 1);\n        this._onColumnRemoved(itemSpec, index);\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.removeColumns = function () {\n        for (var i = this._cols.length - 1; i >= 0; i--) {\n            var colSpec = this._cols[i];\n            this._onColumnRemoved(colSpec, i);\n            colSpec.index = -1;\n        }\n        this._cols.length = 0;\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.removeRows = function () {\n        for (var i = this._rows.length - 1; i >= 0; i--) {\n            var rowSpec = this._rows[i];\n            this._onRowRemoved(rowSpec, i);\n            rowSpec.index = -1;\n        }\n        this._rows.length = 0;\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.onRowChanged = function (element, oldValue, newValue) {\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.onRowSpanChanged = function (element, oldValue, newValue) {\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.onColumnChanged = function (element, oldValue, newValue) {\n        this.invalidate();\n    };\n    GridLayoutBase.prototype.onColumnSpanChanged = function (element, oldValue, newValue) {\n        this.invalidate();\n    };\n    GridLayoutBase.prototype._onRowAdded = function (itemSpec) {\n    };\n    GridLayoutBase.prototype._onColumnAdded = function (itemSpec) {\n    };\n    GridLayoutBase.prototype._onRowRemoved = function (itemSpec, index) {\n    };\n    GridLayoutBase.prototype._onColumnRemoved = function (itemSpec, index) {\n    };\n    GridLayoutBase.prototype.getColumns = function () {\n        return this._cols.slice();\n    };\n    GridLayoutBase.prototype.getRows = function () {\n        return this._rows.slice();\n    };\n    Object.defineProperty(GridLayoutBase.prototype, \"columnsInternal\", {\n        get: function () {\n            return this._cols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridLayoutBase.prototype, \"rowsInternal\", {\n        get: function () {\n            return this._rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GridLayoutBase.prototype.invalidate = function () {\n        this.requestLayout();\n    };\n    GridLayoutBase.prototype._applyXmlAttribute = function (attributeName, attributeValue) {\n        if (attributeName === \"columns\") {\n            this._setColumns(attributeValue);\n            return true;\n        }\n        else if (attributeName === \"rows\") {\n            this._setRows(attributeValue);\n            return true;\n        }\n        return _super.prototype._applyXmlAttribute.call(this, attributeName, attributeValue);\n    };\n    GridLayoutBase.prototype._setColumns = function (value) {\n        var _this = this;\n        this.removeColumns();\n        parseAndAddItemSpecs(value, function (spec) { return _this.addColumn(spec); });\n    };\n    GridLayoutBase.prototype._setRows = function (value) {\n        var _this = this;\n        this.removeRows();\n        parseAndAddItemSpecs(value, function (spec) { return _this.addRow(spec); });\n    };\n    return GridLayoutBase;\n}(layout_base_1.LayoutBase));\nexports.GridLayoutBase = GridLayoutBase;\nexports.columnProperty = new layout_base_1.Property({\n    name: \"col\", defaultValue: 0,\n    valueChanged: function (target, oldValue, newValue) {\n        var grid = target.parent;\n        if (grid instanceof GridLayoutBase) {\n            grid.onColumnChanged(target, oldValue, newValue);\n        }\n    },\n    valueConverter: function (v) { return Math.max(0, parseInt(v)); }\n});\nexports.columnProperty.register(layout_base_1.View);\nexports.columnSpanProperty = new layout_base_1.Property({\n    name: \"colSpan\", defaultValue: 1,\n    valueChanged: function (target, oldValue, newValue) {\n        var grid = target.parent;\n        if (grid instanceof GridLayoutBase) {\n            grid.onColumnSpanChanged(target, oldValue, newValue);\n        }\n    },\n    valueConverter: function (v) { return Math.max(1, parseInt(v)); }\n});\nexports.columnSpanProperty.register(layout_base_1.View);\nexports.rowProperty = new layout_base_1.Property({\n    name: \"row\", defaultValue: 0,\n    valueChanged: function (target, oldValue, newValue) {\n        var grid = target.parent;\n        if (grid instanceof GridLayoutBase) {\n            grid.onRowChanged(target, oldValue, newValue);\n        }\n    },\n    valueConverter: function (v) { return Math.max(0, parseInt(v)); }\n});\nexports.rowProperty.register(layout_base_1.View);\nexports.rowSpanProperty = new layout_base_1.Property({\n    name: \"rowSpan\", defaultValue: 1,\n    valueChanged: function (target, oldValue, newValue) {\n        var grid = target.parent;\n        if (grid instanceof GridLayoutBase) {\n            grid.onRowSpanChanged(target, oldValue, newValue);\n        }\n    },\n    valueConverter: function (v) { return Math.max(1, parseInt(v)); }\n});\nexports.rowSpanProperty.register(layout_base_1.View);\nvar GridUnitType;\n(function (GridUnitType) {\n    GridUnitType.PIXEL = \"pixel\";\n    GridUnitType.STAR = \"star\";\n    GridUnitType.AUTO = \"auto\";\n    GridUnitType.isValid = layout_base_1.makeValidator(GridUnitType.PIXEL, GridUnitType.STAR, GridUnitType.AUTO);\n    GridUnitType.parse = layout_base_1.makeParser(GridUnitType.isValid);\n})(GridUnitType = exports.GridUnitType || (exports.GridUnitType = {}));\n//# sourceMappingURL=grid-layout-common.js.map"
    },
    {
      "id": 143,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
      "name": "./~/tns-core-modules/ui/layouts/grid-layout/grid-layout.android.js",
      "index": 133,
      "index2": 131,
      "size": 4899,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
      "issuerId": 28,
      "issuerName": "./~/tns-core-modules/ui/page/page.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
          "module": "./~/tns-core-modules/ui/page/page.android.js",
          "moduleName": "./~/tns-core-modules/ui/page/page.android.js",
          "type": "cjs require",
          "userRequest": "../layouts/grid-layout",
          "loc": "7:20-53"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/grid-layout",
          "loc": "56:51-101"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar grid_layout_common_1 = require(\"./grid-layout-common\");\n__export(require(\"./grid-layout-common\"));\nfunction makeNativeSetter(setter) {\n    return function (value) {\n        var nativeView = this.nativeView;\n        var lp = nativeView.getLayoutParams() || new org.nativescript.widgets.CommonLayoutParams();\n        if (lp instanceof org.nativescript.widgets.CommonLayoutParams) {\n            setter(lp, value);\n            nativeView.setLayoutParams(lp);\n        }\n    };\n}\ngrid_layout_common_1.View.prototype[grid_layout_common_1.rowProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.row = value; });\ngrid_layout_common_1.View.prototype[grid_layout_common_1.columnProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.column = value; });\ngrid_layout_common_1.View.prototype[grid_layout_common_1.rowSpanProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.rowSpan = value; });\ngrid_layout_common_1.View.prototype[grid_layout_common_1.columnSpanProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.columnSpan = value; });\nfunction createNativeSpec(itemSpec) {\n    switch (itemSpec.gridUnitType) {\n        case grid_layout_common_1.GridUnitType.AUTO:\n            return new org.nativescript.widgets.ItemSpec(itemSpec.value, org.nativescript.widgets.GridUnitType.auto);\n        case grid_layout_common_1.GridUnitType.STAR:\n            return new org.nativescript.widgets.ItemSpec(itemSpec.value, org.nativescript.widgets.GridUnitType.star);\n        case grid_layout_common_1.GridUnitType.PIXEL:\n            return new org.nativescript.widgets.ItemSpec(itemSpec.value * grid_layout_common_1.layout.getDisplayDensity(), org.nativescript.widgets.GridUnitType.pixel);\n        default:\n            throw new Error(\"Invalid gridUnitType: \" + itemSpec.gridUnitType);\n    }\n}\nvar ItemSpec = (function (_super) {\n    __extends(ItemSpec, _super);\n    function ItemSpec() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ItemSpec.prototype, \"actualLength\", {\n        get: function () {\n            if (this.nativeSpec) {\n                return Math.round(this.nativeSpec.getActualLength() / grid_layout_common_1.layout.getDisplayDensity());\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ItemSpec;\n}(grid_layout_common_1.ItemSpec));\nexports.ItemSpec = ItemSpec;\nvar GridLayout = (function (_super) {\n    __extends(GridLayout, _super);\n    function GridLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GridLayout.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.GridLayout(this._context);\n    };\n    GridLayout.prototype.initNativeView = function () {\n        var _this = this;\n        _super.prototype.initNativeView.call(this);\n        this.rowsInternal.forEach(function (itemSpec, index, rows) { _this._onRowAdded(itemSpec); }, this);\n        this.columnsInternal.forEach(function (itemSpec, index, rows) { _this._onColumnAdded(itemSpec); }, this);\n    };\n    GridLayout.prototype.disposeNativeView = function () {\n        for (var i = this.rowsInternal.length; i--; i >= 0) {\n            var itemSpec = this.rowsInternal[i];\n            this._onRowRemoved(itemSpec, i);\n        }\n        for (var i = this.columnsInternal.length; i--; i >= 0) {\n            var itemSpec = this.columnsInternal[i];\n            this._onColumnRemoved(itemSpec, i);\n        }\n        _super.prototype.disposeNativeView.call(this);\n    };\n    GridLayout.prototype._onRowAdded = function (itemSpec) {\n        if (this.nativeView) {\n            var nativeSpec = createNativeSpec(itemSpec);\n            itemSpec.nativeSpec = nativeSpec;\n            this.nativeView.addRow(nativeSpec);\n        }\n    };\n    GridLayout.prototype._onColumnAdded = function (itemSpec) {\n        if (this.nativeView) {\n            var nativeSpec = createNativeSpec(itemSpec);\n            itemSpec.nativeSpec = nativeSpec;\n            this.nativeView.addColumn(nativeSpec);\n        }\n    };\n    GridLayout.prototype._onRowRemoved = function (itemSpec, index) {\n        itemSpec.nativeSpec = null;\n        if (this.nativeView) {\n            this.nativeView.removeRowAt(index);\n        }\n    };\n    GridLayout.prototype._onColumnRemoved = function (itemSpec, index) {\n        itemSpec.nativeSpec = null;\n        if (this.nativeView) {\n            this.nativeView.removeColumnAt(index);\n        }\n    };\n    GridLayout.prototype.invalidate = function () {\n    };\n    return GridLayout;\n}(grid_layout_common_1.GridLayoutBase));\nexports.GridLayout = GridLayout;\n//# sourceMappingURL=grid-layout.android.js.map"
    },
    {
      "id": 144,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base-common.js",
      "name": "./~/tns-core-modules/ui/layouts/layout-base-common.js",
      "index": 136,
      "index2": 128,
      "size": 5281,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base.android.js",
      "issuerId": 4,
      "issuerName": "./~/tns-core-modules/ui/layouts/layout-base.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base.android.js",
          "module": "./~/tns-core-modules/ui/layouts/layout-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/layout-base.android.js",
          "type": "cjs require",
          "userRequest": "./layout-base-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/layout-base.android.js",
          "module": "./~/tns-core-modules/ui/layouts/layout-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/layout-base.android.js",
          "type": "cjs require",
          "userRequest": "./layout-base-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar LayoutBaseCommon = (function (_super) {\n    __extends(LayoutBaseCommon, _super);\n    function LayoutBaseCommon() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._subViews = new Array();\n        return _this;\n    }\n    LayoutBaseCommon.prototype._addChildFromBuilder = function (name, value) {\n        if (value instanceof view_1.View) {\n            this.addChild(value);\n        }\n    };\n    LayoutBaseCommon.prototype.getChildrenCount = function () {\n        return this._subViews.length;\n    };\n    Object.defineProperty(LayoutBaseCommon.prototype, \"_childrenCount\", {\n        get: function () {\n            return this._subViews.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LayoutBaseCommon.prototype.getChildAt = function (index) {\n        return this._subViews[index];\n    };\n    LayoutBaseCommon.prototype.getChildIndex = function (child) {\n        return this._subViews.indexOf(child);\n    };\n    LayoutBaseCommon.prototype.getChildById = function (id) {\n        return view_1.getViewById(this, id);\n    };\n    LayoutBaseCommon.prototype._registerLayoutChild = function (child) {\n    };\n    LayoutBaseCommon.prototype._unregisterLayoutChild = function (child) {\n    };\n    LayoutBaseCommon.prototype.addChild = function (child) {\n        this._subViews.push(child);\n        this._addView(child);\n        this._registerLayoutChild(child);\n    };\n    LayoutBaseCommon.prototype.insertChild = function (child, atIndex) {\n        this._subViews.splice(atIndex, 0, child);\n        this._addView(child, atIndex);\n        this._registerLayoutChild(child);\n    };\n    LayoutBaseCommon.prototype.removeChild = function (child) {\n        this._removeView(child);\n        var index = this._subViews.indexOf(child);\n        this._subViews.splice(index, 1);\n        this._unregisterLayoutChild(child);\n    };\n    LayoutBaseCommon.prototype.removeChildren = function () {\n        while (this.getChildrenCount() !== 0) {\n            this.removeChild(this._subViews[this.getChildrenCount() - 1]);\n        }\n    };\n    Object.defineProperty(LayoutBaseCommon.prototype, \"padding\", {\n        get: function () {\n            return this.style.padding;\n        },\n        set: function (value) {\n            this.style.padding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutBaseCommon.prototype, \"paddingTop\", {\n        get: function () {\n            return this.style.paddingTop;\n        },\n        set: function (value) {\n            this.style.paddingTop = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutBaseCommon.prototype, \"paddingRight\", {\n        get: function () {\n            return this.style.paddingRight;\n        },\n        set: function (value) {\n            this.style.paddingRight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutBaseCommon.prototype, \"paddingBottom\", {\n        get: function () {\n            return this.style.paddingBottom;\n        },\n        set: function (value) {\n            this.style.paddingBottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutBaseCommon.prototype, \"paddingLeft\", {\n        get: function () {\n            return this.style.paddingLeft;\n        },\n        set: function (value) {\n            this.style.paddingLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LayoutBaseCommon.prototype._childIndexToNativeChildIndex = function (index) {\n        if (index === undefined) {\n            return undefined;\n        }\n        var result = 0;\n        for (var i = 0; i < index && i < this._subViews.length; i++) {\n            result += this._subViews[i]._getNativeViewsCount();\n        }\n        return result;\n    };\n    LayoutBaseCommon.prototype.eachChildView = function (callback) {\n        for (var i = 0, length_1 = this._subViews.length; i < length_1; i++) {\n            var retVal = callback(this._subViews[i]);\n            if (retVal === false) {\n                break;\n            }\n        }\n    };\n    LayoutBaseCommon.prototype.eachLayoutChild = function (callback) {\n        var lastChild = null;\n        this.eachChildView(function (cv) {\n            cv._eachLayoutView(function (lv) {\n                if (lastChild && !lastChild.isCollapsed) {\n                    callback(lastChild, false);\n                }\n                lastChild = lv;\n            });\n            return true;\n        });\n        if (lastChild && !lastChild.isCollapsed) {\n            callback(lastChild, true);\n        }\n    };\n    return LayoutBaseCommon;\n}(view_1.CustomLayoutView));\nexports.LayoutBaseCommon = LayoutBaseCommon;\nexports.clipToBoundsProperty = new view_1.Property({ name: \"clipToBounds\", defaultValue: true });\nexports.clipToBoundsProperty.register(LayoutBaseCommon);\n//# sourceMappingURL=layout-base-common.js.map"
    },
    {
      "id": 145,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
      "name": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout-common.js",
      "index": 169,
      "index2": 161,
      "size": 979,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
      "issuerId": 66,
      "issuerName": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 66,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
          "type": "cjs require",
          "userRequest": "./stack-layout-common",
          "loc": "5:28-60"
        },
        {
          "moduleId": 66,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/stack-layout/stack-layout.android.js",
          "type": "cjs require",
          "userRequest": "./stack-layout-common",
          "loc": "6:9-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layout-base\");\n__export(require(\"../layout-base\"));\nvar StackLayoutBase = (function (_super) {\n    __extends(StackLayoutBase, _super);\n    function StackLayoutBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackLayoutBase;\n}(layout_base_1.LayoutBase));\nexports.StackLayoutBase = StackLayoutBase;\nexports.orientationProperty = new layout_base_1.Property({\n    name: \"orientation\", defaultValue: \"vertical\", affectsLayout: layout_base_1.isIOS,\n    valueConverter: function (v) {\n        if (v === \"horizontal\" || v === \"vertical\") {\n            return v;\n        }\n        throw new Error(\"Invalid orientation value: \" + v);\n    }\n});\nexports.orientationProperty.register(StackLayoutBase);\n//# sourceMappingURL=stack-layout-common.js.map"
    },
    {
      "id": 146,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
      "name": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout-common.js",
      "index": 194,
      "index2": 187,
      "size": 1801,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
      "issuerId": 255,
      "issuerName": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 255,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
          "type": "cjs require",
          "userRequest": "./wrap-layout-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 255,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
          "module": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
          "moduleName": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
          "type": "cjs require",
          "userRequest": "./wrap-layout-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar layout_base_1 = require(\"../layout-base\");\n__export(require(\"../layout-base\"));\nvar WrapLayoutBase = (function (_super) {\n    __extends(WrapLayoutBase, _super);\n    function WrapLayoutBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return WrapLayoutBase;\n}(layout_base_1.LayoutBase));\nexports.WrapLayoutBase = WrapLayoutBase;\nexports.itemWidthProperty = new layout_base_1.Property({\n    name: \"itemWidth\", defaultValue: \"auto\", affectsLayout: layout_base_1.isIOS, valueConverter: function (v) { return layout_base_1.Length.parse(v); },\n    valueChanged: function (target, oldValue, newValue) { return target.effectiveItemWidth = layout_base_1.Length.toDevicePixels(newValue, -1); }\n});\nexports.itemWidthProperty.register(WrapLayoutBase);\nexports.itemHeightProperty = new layout_base_1.Property({\n    name: \"itemHeight\", defaultValue: \"auto\", affectsLayout: layout_base_1.isIOS, valueConverter: function (v) { return layout_base_1.Length.parse(v); },\n    valueChanged: function (target, oldValue, newValue) { return target.effectiveItemHeight = layout_base_1.Length.toDevicePixels(newValue, -1); }\n});\nexports.itemHeightProperty.register(WrapLayoutBase);\nexports.orientationProperty = new layout_base_1.Property({\n    name: \"orientation\", defaultValue: \"horizontal\", affectsLayout: layout_base_1.isIOS,\n    valueConverter: function (v) {\n        if (v === \"horizontal\" || v === \"vertical\") {\n            return v;\n        }\n        throw new Error(\"Invalid orientation value: \" + v);\n    }\n});\nexports.orientationProperty.register(WrapLayoutBase);\n//# sourceMappingURL=wrap-layout-common.js.map"
    },
    {
      "id": 147,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker-common.js",
      "name": "./~/tns-core-modules/ui/list-picker/list-picker-common.js",
      "index": 165,
      "index2": 158,
      "size": 1771,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker.android.js",
      "issuerId": 256,
      "issuerName": "./~/tns-core-modules/ui/list-picker/list-picker.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 256,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker.android.js",
          "module": "./~/tns-core-modules/ui/list-picker/list-picker.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-picker/list-picker.android.js",
          "type": "cjs require",
          "userRequest": "./list-picker-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 256,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker.android.js",
          "module": "./~/tns-core-modules/ui/list-picker/list-picker.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-picker/list-picker.android.js",
          "type": "cjs require",
          "userRequest": "./list-picker-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar ListPickerBase = (function (_super) {\n    __extends(ListPickerBase, _super);\n    function ListPickerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ListPickerBase.prototype._getItemAsString = function (index) {\n        var items = this.items;\n        if (!items) {\n            return \" \";\n        }\n        var item = this.isItemsSource ? this.items.getItem(index) : this.items[index];\n        return (item === undefined || item === null) ? index + \"\" : item + \"\";\n    };\n    return ListPickerBase;\n}(view_1.View));\nexports.ListPickerBase = ListPickerBase;\nexports.selectedIndexProperty = new view_1.CoercibleProperty({\n    name: \"selectedIndex\", defaultValue: -1,\n    valueConverter: function (v) { return parseInt(v); },\n    coerceValue: function (target, value) {\n        var items = target.items;\n        if (items) {\n            var max = items.length - 1;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > max) {\n                value = max;\n            }\n        }\n        else {\n            value = -1;\n        }\n        return value;\n    }\n});\nexports.selectedIndexProperty.register(ListPickerBase);\nexports.itemsProperty = new view_1.Property({\n    name: \"items\", valueChanged: function (target, oldValue, newValue) {\n        var getItem = newValue && newValue.getItem;\n        target.isItemsSource = typeof getItem === \"function\";\n    }\n});\nexports.itemsProperty.register(ListPickerBase);\n//# sourceMappingURL=list-picker-common.js.map"
    },
    {
      "id": 148,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view-common.js",
      "name": "./~/tns-core-modules/ui/list-view/list-view-common.js",
      "index": 167,
      "index2": 160,
      "size": 6523,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
      "issuerId": 257,
      "issuerName": "./~/tns-core-modules/ui/list-view/list-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 257,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "type": "cjs require",
          "userRequest": "./list-view-common",
          "loc": "5:25-54"
        },
        {
          "moduleId": 257,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
          "module": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/list-view/list-view.android.js",
          "type": "cjs require",
          "userRequest": "./list-view-common",
          "loc": "9:9-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\nvar builder_1 = require(\"../builder\");\nvar label_1 = require(\"../label\");\nvar observable_array_1 = require(\"../../data/observable-array\");\nvar weak_event_listener_1 = require(\"../core/weak-event-listener\");\n__export(require(\"../core/view\"));\nvar knownTemplates;\n(function (knownTemplates) {\n    knownTemplates.itemTemplate = \"itemTemplate\";\n})(knownTemplates = exports.knownTemplates || (exports.knownTemplates = {}));\nvar knownMultiTemplates;\n(function (knownMultiTemplates) {\n    knownMultiTemplates.itemTemplates = \"itemTemplates\";\n})(knownMultiTemplates = exports.knownMultiTemplates || (exports.knownMultiTemplates = {}));\nvar autoEffectiveRowHeight = -1;\nvar ListViewBase = (function (_super) {\n    __extends(ListViewBase, _super);\n    function ListViewBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._itemTemplateSelectorBindable = new label_1.Label();\n        _this._defaultTemplate = {\n            key: \"default\",\n            createView: function () {\n                if (_this.itemTemplate) {\n                    return builder_1.parse(_this.itemTemplate, _this);\n                }\n                return undefined;\n            }\n        };\n        _this._itemTemplatesInternal = new Array(_this._defaultTemplate);\n        _this._effectiveRowHeight = autoEffectiveRowHeight;\n        return _this;\n    }\n    Object.defineProperty(ListViewBase.prototype, \"itemTemplateSelector\", {\n        get: function () {\n            return this._itemTemplateSelector;\n        },\n        set: function (value) {\n            var _this = this;\n            if (typeof value === \"string\") {\n                this._itemTemplateSelectorBindable.bind({\n                    sourceProperty: null,\n                    targetProperty: \"templateKey\",\n                    expression: value\n                });\n                this._itemTemplateSelector = function (item, index, items) {\n                    item[\"$index\"] = index;\n                    _this._itemTemplateSelectorBindable.bindingContext = item;\n                    return _this._itemTemplateSelectorBindable.get(\"templateKey\");\n                };\n            }\n            else if (typeof value === \"function\") {\n                this._itemTemplateSelector = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ListViewBase.prototype.refresh = function () {\n    };\n    ListViewBase.prototype.scrollToIndex = function (index) {\n    };\n    ListViewBase.prototype._getItemTemplate = function (index) {\n        var templateKey = \"default\";\n        if (this.itemTemplateSelector) {\n            var dataItem = this._getDataItem(index);\n            templateKey = this._itemTemplateSelector(dataItem, index, this.items);\n        }\n        for (var i = 0, length_1 = this._itemTemplatesInternal.length; i < length_1; i++) {\n            if (this._itemTemplatesInternal[i].key === templateKey) {\n                return this._itemTemplatesInternal[i];\n            }\n        }\n        return this._itemTemplatesInternal[0];\n    };\n    ListViewBase.prototype._prepareItem = function (item, index) {\n        if (item) {\n            item.bindingContext = this._getDataItem(index);\n        }\n    };\n    ListViewBase.prototype._getDataItem = function (index) {\n        var thisItems = this.items;\n        return thisItems.getItem ? thisItems.getItem(index) : thisItems[index];\n    };\n    ListViewBase.prototype._getDefaultItemContent = function (index) {\n        var lbl = new label_1.Label();\n        lbl.bind({\n            targetProperty: \"text\",\n            sourceProperty: \"$value\"\n        });\n        return lbl;\n    };\n    ListViewBase.prototype._onItemsChanged = function (args) {\n        this.refresh();\n    };\n    ListViewBase.prototype._onRowHeightPropertyChanged = function (oldValue, newValue) {\n        this.refresh();\n    };\n    ListViewBase.prototype.updateEffectiveRowHeight = function () {\n        exports.rowHeightProperty.coerce(this);\n    };\n    return ListViewBase;\n}(view_1.View));\nListViewBase.itemLoadingEvent = \"itemLoading\";\nListViewBase.itemTapEvent = \"itemTap\";\nListViewBase.loadMoreItemsEvent = \"loadMoreItems\";\nListViewBase.knownFunctions = [\"itemTemplateSelector\"];\nexports.ListViewBase = ListViewBase;\nexports.itemsProperty = new view_1.Property({\n    name: \"items\", valueChanged: function (target, oldValue, newValue) {\n        if (oldValue instanceof view_1.Observable) {\n            weak_event_listener_1.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, target._onItemsChanged, target);\n        }\n        if (newValue instanceof view_1.Observable) {\n            weak_event_listener_1.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, target._onItemsChanged, target);\n        }\n        target.refresh();\n    }\n});\nexports.itemsProperty.register(ListViewBase);\nexports.itemTemplateProperty = new view_1.Property({\n    name: \"itemTemplate\", valueChanged: function (target) {\n        target.refresh();\n    }\n});\nexports.itemTemplateProperty.register(ListViewBase);\nexports.itemTemplatesProperty = new view_1.Property({\n    name: \"itemTemplates\", valueConverter: function (value) {\n        if (typeof value === \"string\") {\n            return builder_1.parseMultipleTemplates(value);\n        }\n        return value;\n    }\n});\nexports.itemTemplatesProperty.register(ListViewBase);\nvar defaultRowHeight = \"auto\";\nexports.rowHeightProperty = new view_1.CoercibleProperty({\n    name: \"rowHeight\", defaultValue: defaultRowHeight, equalityComparer: view_1.Length.equals,\n    coerceValue: function (target, value) {\n        return target.nativeView ? value : defaultRowHeight;\n    },\n    valueChanged: function (target, oldValue, newValue) {\n        target._effectiveRowHeight = view_1.Length.toDevicePixels(newValue, autoEffectiveRowHeight);\n        target._onRowHeightPropertyChanged(oldValue, newValue);\n    }, valueConverter: view_1.Length.parse\n});\nexports.rowHeightProperty.register(ListViewBase);\nexports.separatorColorProperty = new view_1.CssProperty({ name: \"separatorColor\", cssName: \"separator-color\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.separatorColorProperty.register(view_1.Style);\n//# sourceMappingURL=list-view-common.js.map"
    },
    {
      "id": 149,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/constants.js",
      "name": "./~/tns-core-modules/ui/page/constants.js",
      "index": 65,
      "index2": 58,
      "size": 140,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
      "issuerId": 7,
      "issuerName": "./~/tns-core-modules/ui/frame/frame.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
          "module": "./~/tns-core-modules/ui/frame/frame.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame.android.js",
          "type": "cjs require",
          "userRequest": "../page/constants",
          "loc": "6:18-46"
        },
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
          "module": "./~/tns-core-modules/ui/page/page.android.js",
          "moduleName": "./~/tns-core-modules/ui/page/page.android.js",
          "type": "cjs require",
          "userRequest": "./constants",
          "loc": "8:18-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.DIALOG_FRAGMENT_TAG = \"dialog\";\n//# sourceMappingURL=constants.js.map"
    },
    {
      "id": 150,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
      "name": "./~/tns-core-modules/ui/page/page-common.js",
      "index": 129,
      "index2": 127,
      "size": 10797,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
      "issuerId": 28,
      "issuerName": "./~/tns-core-modules/ui/page/page.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
          "module": "./~/tns-core-modules/ui/page/page.android.js",
          "moduleName": "./~/tns-core-modules/ui/page/page.android.js",
          "type": "cjs require",
          "userRequest": "./page-common",
          "loc": "5:20-44"
        },
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page.android.js",
          "module": "./~/tns-core-modules/ui/page/page.android.js",
          "moduleName": "./~/tns-core-modules/ui/page/page.android.js",
          "type": "cjs require",
          "userRequest": "./page-common",
          "loc": "10:9-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar content_view_1 = require(\"../content-view\");\nvar frame_1 = require(\"../frame\");\nvar action_bar_1 = require(\"../action-bar\");\nvar style_scope_1 = require(\"../styling/style-scope\");\nvar file_system_1 = require(\"../../file-system\");\n__export(require(\"../content-view\"));\nvar PageBase = (function (_super) {\n    __extends(PageBase, _super);\n    function PageBase() {\n        var _this = _super.call(this) || this;\n        _this._cssFiles = {};\n        _this._styleScope = new style_scope_1.StyleScope();\n        return _this;\n    }\n    Object.defineProperty(PageBase.prototype, \"navigationContext\", {\n        get: function () {\n            return this._navigationContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageBase.prototype, \"css\", {\n        get: function () {\n            return this._styleScope.css;\n        },\n        set: function (value) {\n            this._styleScope.css = value;\n            this._cssFiles = {};\n            this._refreshCss();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageBase.prototype, \"actionBar\", {\n        get: function () {\n            if (!this._actionBar) {\n                this._actionBar = new action_bar_1.ActionBar();\n                this._addView(this._actionBar);\n            }\n            return this._actionBar;\n        },\n        set: function (value) {\n            if (!value) {\n                throw new Error(\"ActionBar cannot be null or undefined.\");\n            }\n            if (this._actionBar !== value) {\n                if (this._actionBar) {\n                    this._removeView(this._actionBar);\n                }\n                this._actionBar = value;\n                this._addView(this._actionBar);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageBase.prototype, \"page\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PageBase.prototype.onLoaded = function () {\n        this._refreshCss();\n        _super.prototype.onLoaded.call(this);\n    };\n    PageBase.prototype.onUnloaded = function () {\n        var styleScope = this._styleScope;\n        _super.prototype.onUnloaded.call(this);\n        this._styleScope = styleScope;\n    };\n    PageBase.prototype.addCss = function (cssString) {\n        this._addCssInternal(cssString);\n    };\n    PageBase.prototype._addCssInternal = function (cssString, cssFileName) {\n        this._styleScope.addCss(cssString, cssFileName);\n        this._refreshCss();\n    };\n    PageBase.prototype.addCssFile = function (cssFileName) {\n        if (cssFileName.indexOf(\"~/\") === 0) {\n            cssFileName = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, cssFileName.replace(\"~/\", \"\"));\n        }\n        if (!this._cssFiles[cssFileName]) {\n            if (file_system_1.File.exists(cssFileName)) {\n                var file = file_system_1.File.fromPath(cssFileName);\n                var text = file.readTextSync();\n                if (text) {\n                    this._addCssInternal(text, cssFileName);\n                    this._cssFiles[cssFileName] = true;\n                }\n            }\n        }\n    };\n    PageBase.prototype._refreshCss = function () {\n        var scopeVersion = this._styleScope.ensureSelectors();\n        if (scopeVersion !== this._cssAppliedVersion) {\n            var styleScope_1 = this._styleScope;\n            this._resetCssValues();\n            var checkSelectors = function (view) {\n                styleScope_1.applySelectors(view);\n                return true;\n            };\n            checkSelectors(this);\n            content_view_1.eachDescendant(this, checkSelectors);\n            this._cssAppliedVersion = scopeVersion;\n        }\n    };\n    PageBase.prototype.getKeyframeAnimationWithName = function (animationName) {\n        return this._styleScope.getKeyframeAnimationWithName(animationName);\n    };\n    Object.defineProperty(PageBase.prototype, \"frame\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PageBase.prototype.createNavigatedData = function (eventName, isBackNavigation) {\n        return {\n            eventName: eventName,\n            object: this,\n            context: this.navigationContext,\n            isBackNavigation: isBackNavigation\n        };\n    };\n    PageBase.prototype.onNavigatingTo = function (context, isBackNavigation, bindingContext) {\n        this._navigationContext = context;\n        if (!isBackNavigation && bindingContext !== undefined && bindingContext !== null) {\n            this.bindingContext = bindingContext;\n        }\n        this.notify(this.createNavigatedData(PageBase.navigatingToEvent, isBackNavigation));\n    };\n    PageBase.prototype.onNavigatedTo = function (isBackNavigation) {\n        this.notify(this.createNavigatedData(PageBase.navigatedToEvent, isBackNavigation));\n    };\n    PageBase.prototype.onNavigatingFrom = function (isBackNavigation) {\n        this.notify(this.createNavigatedData(PageBase.navigatingFromEvent, isBackNavigation));\n    };\n    PageBase.prototype.onNavigatedFrom = function (isBackNavigation) {\n        this.notify(this.createNavigatedData(PageBase.navigatedFromEvent, isBackNavigation));\n        this._navigationContext = undefined;\n    };\n    PageBase.prototype.showModal = function () {\n        if (arguments.length === 0) {\n            this._showNativeModalView(frame_1.topmost().currentPage, undefined, undefined, true);\n            return this;\n        }\n        else {\n            var context = arguments[1];\n            var closeCallback = arguments[2];\n            var fullscreen = arguments[3];\n            var page = void 0;\n            if (arguments[0] instanceof PageBase) {\n                page = arguments[0];\n            }\n            else {\n                page = frame_1.resolvePageFromEntry({ moduleName: arguments[0] });\n            }\n            page._showNativeModalView(this, context, closeCallback, fullscreen);\n            return page;\n        }\n    };\n    PageBase.prototype.closeModal = function () {\n        if (this._closeModalCallback) {\n            this._closeModalCallback.apply(undefined, arguments);\n        }\n    };\n    Object.defineProperty(PageBase.prototype, \"modal\", {\n        get: function () {\n            return this._modal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PageBase.prototype._addChildFromBuilder = function (name, value) {\n        if (value instanceof action_bar_1.ActionBar) {\n            this.actionBar = value;\n        }\n        else {\n            _super.prototype._addChildFromBuilder.call(this, name, value);\n        }\n    };\n    PageBase.prototype._showNativeModalView = function (parent, context, closeCallback, fullscreen) {\n        parent._modal = this;\n        var that = this;\n        this._modalContext = context;\n        this._closeModalCallback = function () {\n            if (that._closeModalCallback) {\n                that._closeModalCallback = null;\n                that._modalContext = null;\n                that._hideNativeModalView(parent);\n                if (typeof closeCallback === \"function\") {\n                    closeCallback.apply(undefined, arguments);\n                }\n            }\n        };\n    };\n    PageBase.prototype._hideNativeModalView = function (parent) {\n    };\n    PageBase.prototype._raiseShownModallyEvent = function () {\n        var args = {\n            eventName: PageBase.shownModallyEvent,\n            object: this,\n            context: this._modalContext,\n            closeCallback: this._closeModalCallback\n        };\n        this.notify(args);\n    };\n    PageBase.prototype._raiseShowingModallyEvent = function () {\n        var args = {\n            eventName: PageBase.showingModallyEvent,\n            object: this,\n            context: this._modalContext,\n            closeCallback: this._closeModalCallback\n        };\n        this.notify(args);\n    };\n    PageBase.prototype._getStyleScope = function () {\n        return this._styleScope;\n    };\n    PageBase.prototype.eachChildView = function (callback) {\n        _super.prototype.eachChildView.call(this, callback);\n        callback(this.actionBar);\n    };\n    Object.defineProperty(PageBase.prototype, \"_childrenCount\", {\n        get: function () {\n            return (this.content ? 1 : 0) + (this.actionBar ? 1 : 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PageBase.prototype._resetCssValues = function () {\n        var resetCssValuesFunc = function (view) {\n            view._cancelAllAnimations();\n            content_view_1.resetCSSProperties(view.style);\n            return true;\n        };\n        resetCssValuesFunc(this);\n        content_view_1.eachDescendant(this, resetCssValuesFunc);\n    };\n    return PageBase;\n}(content_view_1.ContentView));\nPageBase.navigatingToEvent = \"navigatingTo\";\nPageBase.navigatedToEvent = \"navigatedTo\";\nPageBase.navigatingFromEvent = \"navigatingFrom\";\nPageBase.navigatedFromEvent = \"navigatedFrom\";\nPageBase.shownModallyEvent = \"shownModally\";\nPageBase.showingModallyEvent = \"showingModally\";\nexports.PageBase = PageBase;\nexports.actionBarHiddenProperty = new content_view_1.Property({ name: \"actionBarHidden\", affectsLayout: content_view_1.isIOS, valueConverter: content_view_1.booleanConverter });\nexports.actionBarHiddenProperty.register(PageBase);\nexports.backgroundSpanUnderStatusBarProperty = new content_view_1.Property({ name: \"backgroundSpanUnderStatusBar\", defaultValue: false, affectsLayout: content_view_1.isIOS, valueConverter: content_view_1.booleanConverter });\nexports.backgroundSpanUnderStatusBarProperty.register(PageBase);\nexports.enableSwipeBackNavigationProperty = new content_view_1.Property({ name: \"enableSwipeBackNavigation\", defaultValue: true, valueConverter: content_view_1.booleanConverter });\nexports.enableSwipeBackNavigationProperty.register(PageBase);\nexports.statusBarStyleProperty = new content_view_1.CssProperty({ name: \"statusBarStyle\", cssName: \"status-bar-style\" });\nexports.statusBarStyleProperty.register(content_view_1.Style);\nexports.androidStatusBarBackgroundProperty = new content_view_1.CssProperty({\n    name: \"androidStatusBarBackground\", cssName: \"android-status-bar-background\",\n    equalityComparer: content_view_1.Color.equals, valueConverter: function (v) { return new content_view_1.Color(v); }\n});\nexports.androidStatusBarBackgroundProperty.register(content_view_1.Style);\n//# sourceMappingURL=page-common.js.map"
    },
    {
      "id": 151,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress-common.js",
      "name": "./~/tns-core-modules/ui/progress/progress-common.js",
      "index": 173,
      "index2": 166,
      "size": 1152,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress.android.js",
      "issuerId": 258,
      "issuerName": "./~/tns-core-modules/ui/progress/progress.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 258,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress.android.js",
          "module": "./~/tns-core-modules/ui/progress/progress.android.js",
          "moduleName": "./~/tns-core-modules/ui/progress/progress.android.js",
          "type": "cjs require",
          "userRequest": "./progress-common",
          "loc": "5:24-52"
        },
        {
          "moduleId": 258,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress.android.js",
          "module": "./~/tns-core-modules/ui/progress/progress.android.js",
          "moduleName": "./~/tns-core-modules/ui/progress/progress.android.js",
          "type": "cjs require",
          "userRequest": "./progress-common",
          "loc": "6:9-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar ProgressBase = (function (_super) {\n    __extends(ProgressBase, _super);\n    function ProgressBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ProgressBase;\n}(view_1.View));\nexports.ProgressBase = ProgressBase;\nexports.valueProperty = new view_1.CoercibleProperty({\n    name: \"value\",\n    defaultValue: 0,\n    coerceValue: function (t, v) {\n        return v < 0 ? 0 : Math.min(v, t.maxValue);\n    },\n    valueConverter: function (v) { return parseInt(v); }\n});\nexports.valueProperty.register(ProgressBase);\nexports.maxValueProperty = new view_1.Property({\n    name: \"maxValue\",\n    defaultValue: 100,\n    valueChanged: function (target, oldValue, newValue) {\n        exports.valueProperty.coerce(target);\n    },\n    valueConverter: function (v) { return parseInt(v); }\n});\nexports.maxValueProperty.register(ProgressBase);\n//# sourceMappingURL=progress-common.js.map"
    },
    {
      "id": 152,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view-common.js",
      "name": "./~/tns-core-modules/ui/scroll-view/scroll-view-common.js",
      "index": 176,
      "index2": 169,
      "size": 3381,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view.android.js",
      "issuerId": 260,
      "issuerName": "./~/tns-core-modules/ui/scroll-view/scroll-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 260,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view.android.js",
          "module": "./~/tns-core-modules/ui/scroll-view/scroll-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/scroll-view/scroll-view.android.js",
          "type": "cjs require",
          "userRequest": "./scroll-view-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 260,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view.android.js",
          "module": "./~/tns-core-modules/ui/scroll-view/scroll-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/scroll-view/scroll-view.android.js",
          "type": "cjs require",
          "userRequest": "./scroll-view-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar content_view_1 = require(\"../content-view\");\n__export(require(\"../content-view\"));\nvar ScrollViewBase = (function (_super) {\n    __extends(ScrollViewBase, _super);\n    function ScrollViewBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._scrollChangeCount = 0;\n        return _this;\n    }\n    ScrollViewBase.prototype.addEventListener = function (arg, callback, thisArg) {\n        _super.prototype.addEventListener.call(this, arg, callback, thisArg);\n        if (arg === ScrollViewBase.scrollEvent) {\n            this._scrollChangeCount++;\n            this.attach();\n        }\n    };\n    ScrollViewBase.prototype.removeEventListener = function (arg, callback, thisArg) {\n        _super.prototype.addEventListener.call(this, arg, callback, thisArg);\n        if (arg === ScrollViewBase.scrollEvent) {\n            this._scrollChangeCount--;\n            this.dettach();\n        }\n    };\n    ScrollViewBase.prototype.onLoaded = function () {\n        _super.prototype.onLoaded.call(this);\n        this.attach();\n    };\n    ScrollViewBase.prototype.onUnloaded = function () {\n        _super.prototype.onUnloaded.call(this);\n        this.dettach();\n    };\n    ScrollViewBase.prototype.attach = function () {\n        if (this._scrollChangeCount > 0 && this.isLoaded) {\n            this.attachNative();\n        }\n    };\n    ScrollViewBase.prototype.dettach = function () {\n        if (this._scrollChangeCount === 0 && this.isLoaded) {\n            this.dettachNative();\n        }\n    };\n    ScrollViewBase.prototype.attachNative = function () {\n    };\n    ScrollViewBase.prototype.dettachNative = function () {\n    };\n    Object.defineProperty(ScrollViewBase.prototype, \"horizontalOffset\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewBase.prototype, \"verticalOffset\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewBase.prototype, \"scrollableWidth\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewBase.prototype, \"scrollableHeight\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ScrollViewBase;\n}(content_view_1.ContentView));\nScrollViewBase.scrollEvent = \"scroll\";\nexports.ScrollViewBase = ScrollViewBase;\nexports.orientationProperty = new content_view_1.Property({\n    name: \"orientation\", defaultValue: \"vertical\", affectsLayout: true,\n    valueChanged: function (target, oldValue, newValue) {\n        target._onOrientationChanged();\n    },\n    valueConverter: function (value) {\n        if (value === \"vertical\") {\n            return \"vertical\";\n        }\n        else if (value === \"horizontal\") {\n            return \"horizontal\";\n        }\n        throw new Error(\"Orientation should be 'horizontal' or 'vertical'. Given: \" + value);\n    }\n});\nexports.orientationProperty.register(ScrollViewBase);\n//# sourceMappingURL=scroll-view-common.js.map"
    },
    {
      "id": 153,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar-common.js",
      "name": "./~/tns-core-modules/ui/search-bar/search-bar-common.js",
      "index": 178,
      "index2": 171,
      "size": 1424,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar.android.js",
      "issuerId": 261,
      "issuerName": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 261,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar.android.js",
          "module": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "type": "cjs require",
          "userRequest": "./search-bar-common",
          "loc": "6:26-56"
        },
        {
          "moduleId": 261,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar.android.js",
          "module": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
          "type": "cjs require",
          "userRequest": "./search-bar-common",
          "loc": "8:9-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar SearchBarBase = (function (_super) {\n    __extends(SearchBarBase, _super);\n    function SearchBarBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SearchBarBase;\n}(view_1.View));\nSearchBarBase.submitEvent = \"submit\";\nSearchBarBase.clearEvent = \"clear\";\nexports.SearchBarBase = SearchBarBase;\nexports.textProperty = new view_1.Property({ name: \"text\", defaultValue: \"\", affectsLayout: view_1.isIOS });\nexports.textProperty.register(SearchBarBase);\nexports.hintProperty = new view_1.Property({ name: \"hint\", defaultValue: \"\" });\nexports.hintProperty.register(SearchBarBase);\nexports.textFieldHintColorProperty = new view_1.Property({ name: \"textFieldHintColor\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.textFieldHintColorProperty.register(SearchBarBase);\nexports.textFieldBackgroundColorProperty = new view_1.Property({ name: \"textFieldBackgroundColor\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.textFieldBackgroundColorProperty.register(SearchBarBase);\n//# sourceMappingURL=search-bar-common.js.map"
    },
    {
      "id": 154,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
      "name": "./~/tns-core-modules/ui/segmented-bar/segmented-bar-common.js",
      "index": 180,
      "index2": 173,
      "size": 4369,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
      "issuerId": 155,
      "issuerName": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 155,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "module": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "type": "cjs require",
          "userRequest": "./segmented-bar-common",
          "loc": "6:29-62"
        },
        {
          "moduleId": 155,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "module": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "moduleName": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
          "type": "cjs require",
          "userRequest": "./segmented-bar-common",
          "loc": "7:9-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar knownCollections;\n(function (knownCollections) {\n    knownCollections.items = \"items\";\n})(knownCollections = exports.knownCollections || (exports.knownCollections = {}));\nvar SegmentedBarItemBase = (function (_super) {\n    __extends(SegmentedBarItemBase, _super);\n    function SegmentedBarItemBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._title = \"\";\n        return _this;\n    }\n    Object.defineProperty(SegmentedBarItemBase.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            var strValue = (value !== null && value !== undefined) ? value.toString() : \"\";\n            if (this._title !== strValue) {\n                this._title = strValue;\n                this._update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SegmentedBarItemBase;\n}(view_1.ViewBase));\nexports.SegmentedBarItemBase = SegmentedBarItemBase;\nvar SegmentedBarBase = (function (_super) {\n    __extends(SegmentedBarBase, _super);\n    function SegmentedBarBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SegmentedBarBase.prototype._addArrayFromBuilder = function (name, value) {\n        if (name === \"items\") {\n            this.items = value;\n        }\n    };\n    SegmentedBarBase.prototype._addChildFromBuilder = function (name, value) {\n        if (name === \"SegmentedBarItem\") {\n            var item = value;\n            var items = this.items;\n            if (!items) {\n                items = new Array();\n                items.push(item);\n                this.items = items;\n            }\n            else {\n                items.push(item);\n                this._addView(item);\n            }\n            if (this.nativeView) {\n                this[exports.itemsProperty.setNative](items);\n            }\n        }\n    };\n    SegmentedBarBase.prototype.onItemsChanged = function (oldItems, newItems) {\n        if (oldItems) {\n            for (var i = 0, count = oldItems.length; i < count; i++) {\n                this._removeView(oldItems[i]);\n            }\n        }\n        if (newItems) {\n            for (var i = 0, count = newItems.length; i < count; i++) {\n                this._addView(newItems[i]);\n            }\n        }\n    };\n    SegmentedBarBase.prototype.eachChild = function (callback) {\n        var items = this.items;\n        if (items) {\n            items.forEach(function (item, i) {\n                callback(item);\n            });\n        }\n    };\n    return SegmentedBarBase;\n}(view_1.View));\nSegmentedBarBase.selectedIndexChangedEvent = \"selectedIndexChanged\";\nexports.SegmentedBarBase = SegmentedBarBase;\nexports.selectedIndexProperty = new view_1.CoercibleProperty({\n    name: \"selectedIndex\", defaultValue: -1,\n    valueChanged: function (target, oldValue, newValue) {\n        target.notify({ eventName: SegmentedBarBase.selectedIndexChangedEvent, object: target, oldIndex: oldValue, newIndex: newValue });\n    },\n    coerceValue: function (target, value) {\n        var items = target.items;\n        if (items) {\n            var max = items.length - 1;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > max) {\n                value = max;\n            }\n        }\n        else {\n            value = -1;\n        }\n        return value;\n    },\n    valueConverter: function (v) { return parseInt(v); }\n});\nexports.selectedIndexProperty.register(SegmentedBarBase);\nexports.itemsProperty = new view_1.Property({\n    name: \"items\", valueChanged: function (target, oldValue, newValue) {\n        target.onItemsChanged(oldValue, newValue);\n    }\n});\nexports.itemsProperty.register(SegmentedBarBase);\nexports.selectedBackgroundColorProperty = new view_1.InheritedCssProperty({ name: \"selectedBackgroundColor\", cssName: \"selected-background-color\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.selectedBackgroundColorProperty.register(view_1.Style);\n//# sourceMappingURL=segmented-bar-common.js.map"
    },
    {
      "id": 155,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
      "name": "./~/tns-core-modules/ui/segmented-bar/segmented-bar.android.js",
      "index": 179,
      "index2": 174,
      "size": 10073,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/segmented-bar",
          "loc": "71:53-97"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/segmented-bar",
          "loc": "72:57-101"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar font_1 = require(\"../styling/font\");\nvar segmented_bar_common_1 = require(\"./segmented-bar-common\");\n__export(require(\"./segmented-bar-common\"));\nvar R_ID_TABS = 0x01020013;\nvar R_ID_TABCONTENT = 0x01020011;\nvar R_ATTR_STATE_SELECTED = 0x010100a1;\nvar TITLE_TEXT_VIEW_ID = 16908310;\nvar apiLevel;\nvar selectedIndicatorThickness;\nvar TabHost;\nvar TabChangeListener;\nvar TabContentFactory;\nfunction initializeNativeClasses() {\n    if (TabChangeListener) {\n        return;\n    }\n    apiLevel = android.os.Build.VERSION.SDK_INT;\n    selectedIndicatorThickness = segmented_bar_common_1.layout.toDevicePixels(apiLevel >= 21 ? 2 : 5);\n    var TabChangeListenerImpl = (function (_super) {\n        __extends(TabChangeListenerImpl, _super);\n        function TabChangeListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        TabChangeListenerImpl.prototype.onTabChanged = function (id) {\n            var owner = this.owner;\n            if (owner.shouldChangeSelectedIndex()) {\n                owner.selectedIndex = parseInt(id);\n            }\n        };\n        return TabChangeListenerImpl;\n    }(java.lang.Object));\n    TabChangeListenerImpl = __decorate([\n        Interfaces([android.widget.TabHost.OnTabChangeListener])\n    ], TabChangeListenerImpl);\n    var TabContentFactoryImpl = (function (_super) {\n        __extends(TabContentFactoryImpl, _super);\n        function TabContentFactoryImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        TabContentFactoryImpl.prototype.createTabContent = function (tag) {\n            var tv = new android.widget.TextView(this.owner._context);\n            tv.setVisibility(android.view.View.GONE);\n            tv.setMaxLines(1);\n            tv.setEllipsize(android.text.TextUtils.TruncateAt.END);\n            return tv;\n        };\n        return TabContentFactoryImpl;\n    }(java.lang.Object));\n    TabContentFactoryImpl = __decorate([\n        Interfaces([android.widget.TabHost.TabContentFactory])\n    ], TabContentFactoryImpl);\n    var TabHostImpl = (function (_super) {\n        __extends(TabHostImpl, _super);\n        function TabHostImpl(context, attrs) {\n            var _this = _super.call(this, context, attrs) || this;\n            return global.__native(_this);\n        }\n        TabHostImpl.prototype.onAttachedToWindow = function () {\n        };\n        return TabHostImpl;\n    }(android.widget.TabHost));\n    TabHost = TabHostImpl;\n    TabChangeListener = TabChangeListenerImpl;\n    TabContentFactory = TabContentFactoryImpl;\n}\nvar SegmentedBarItem = (function (_super) {\n    __extends(SegmentedBarItem, _super);\n    function SegmentedBarItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SegmentedBarItem.prototype.createNativeView = function () {\n        return this.nativeView;\n    };\n    SegmentedBarItem.prototype.setupNativeView = function (tabIndex) {\n        var titleTextView = this.parent.nativeView.getTabWidget().getChildAt(tabIndex).findViewById(TITLE_TEXT_VIEW_ID);\n        this.nativeView = titleTextView;\n        if (titleTextView) {\n            segmented_bar_common_1.initNativeView(this);\n            if (this.titleDirty) {\n                this._update();\n            }\n        }\n    };\n    SegmentedBarItem.prototype._update = function () {\n        var tv = this.nativeView;\n        if (tv) {\n            var title = this.title;\n            title = (title === null || title === undefined) ? \"\" : title;\n            tv.setText(title);\n            this.titleDirty = false;\n        }\n        else {\n            this.titleDirty = true;\n        }\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.colorProperty.getDefault] = function () {\n        return this.nativeView.getCurrentTextColor();\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.colorProperty.setNative] = function (value) {\n        var color = value instanceof segmented_bar_common_1.Color ? value.android : value;\n        this.nativeView.setTextColor(color);\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.fontSizeProperty.getDefault] = function () {\n        return { nativeSize: this.nativeView.getTextSize() };\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.fontSizeProperty.setNative] = function (value) {\n        if (typeof value === \"number\") {\n            this.nativeView.setTextSize(value);\n        }\n        else {\n            this.nativeView.setTextSize(android.util.TypedValue.COMPLEX_UNIT_PX, value.nativeSize);\n        }\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.fontInternalProperty.getDefault] = function () {\n        return this.nativeView.getTypeface();\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.fontInternalProperty.setNative] = function (value) {\n        this.nativeView.setTypeface(value instanceof font_1.Font ? value.getAndroidTypeface() : value);\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.selectedBackgroundColorProperty.getDefault] = function () {\n        var viewGroup = this.nativeView.getParent();\n        return viewGroup.getBackground().getConstantState();\n    };\n    SegmentedBarItem.prototype[segmented_bar_common_1.selectedBackgroundColorProperty.setNative] = function (value) {\n        var viewGroup = this.nativeView.getParent();\n        if (value instanceof segmented_bar_common_1.Color) {\n            var color = value.android;\n            var backgroundDrawable = viewGroup.getBackground();\n            if (apiLevel > 21 && backgroundDrawable && typeof backgroundDrawable.setColorFilter === \"function\") {\n                var newDrawable = backgroundDrawable.getConstantState().newDrawable();\n                newDrawable.setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);\n                org.nativescript.widgets.ViewHelper.setBackground(viewGroup, newDrawable);\n            }\n            else {\n                var stateDrawable = new android.graphics.drawable.StateListDrawable();\n                var colorDrawable = new org.nativescript.widgets.SegmentedBarColorDrawable(color, selectedIndicatorThickness);\n                var arr = Array.create(\"int\", 1);\n                arr[0] = R_ATTR_STATE_SELECTED;\n                stateDrawable.addState(arr, colorDrawable);\n                stateDrawable.setBounds(0, 15, viewGroup.getRight(), viewGroup.getBottom());\n                org.nativescript.widgets.ViewHelper.setBackground(viewGroup, stateDrawable);\n            }\n        }\n        else {\n            org.nativescript.widgets.ViewHelper.setBackground(viewGroup, value.newDrawable());\n        }\n    };\n    return SegmentedBarItem;\n}(segmented_bar_common_1.SegmentedBarItemBase));\nexports.SegmentedBarItem = SegmentedBarItem;\nvar SegmentedBar = (function (_super) {\n    __extends(SegmentedBar, _super);\n    function SegmentedBar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SegmentedBar.prototype.shouldChangeSelectedIndex = function () {\n        return !this._addingTab;\n    };\n    SegmentedBar.prototype.createNativeView = function () {\n        initializeNativeClasses();\n        var context = this._context;\n        var nativeView = new TabHost(context, null);\n        var tabHostLayout = new android.widget.LinearLayout(context);\n        tabHostLayout.setOrientation(android.widget.LinearLayout.VERTICAL);\n        var tabWidget = new android.widget.TabWidget(context);\n        tabWidget.setId(R_ID_TABS);\n        tabHostLayout.addView(tabWidget);\n        var frame = new android.widget.FrameLayout(context);\n        frame.setId(R_ID_TABCONTENT);\n        frame.setVisibility(android.view.View.GONE);\n        tabHostLayout.addView(frame);\n        nativeView.addView(tabHostLayout);\n        var listener = new TabChangeListener(this);\n        nativeView.setOnTabChangedListener(listener);\n        nativeView.listener = listener;\n        nativeView.setup();\n        return nativeView;\n    };\n    SegmentedBar.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = this;\n        this._tabContentFactory = this._tabContentFactory || new TabContentFactory(this);\n    };\n    SegmentedBar.prototype.disposeNativeView = function () {\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    SegmentedBar.prototype.insertTab = function (tabItem, index) {\n        var tabHost = this.nativeView;\n        var tab = tabHost.newTabSpec(index + \"\");\n        tab.setIndicator(tabItem.title + \"\");\n        tab.setContent(this._tabContentFactory);\n        this._addingTab = true;\n        tabHost.addTab(tab);\n        tabItem.setupNativeView(index);\n        this._addingTab = false;\n    };\n    SegmentedBar.prototype[segmented_bar_common_1.selectedIndexProperty.getDefault] = function () {\n        return -1;\n    };\n    SegmentedBar.prototype[segmented_bar_common_1.selectedIndexProperty.setNative] = function (value) {\n        this.nativeView.setCurrentTab(value);\n    };\n    SegmentedBar.prototype[segmented_bar_common_1.itemsProperty.getDefault] = function () {\n        return null;\n    };\n    SegmentedBar.prototype[segmented_bar_common_1.itemsProperty.setNative] = function (value) {\n        var _this = this;\n        this.nativeView.clearAllTabs();\n        var newItems = value;\n        if (newItems) {\n            newItems.forEach(function (item, i, arr) { return _this.insertTab(item, i); });\n        }\n        segmented_bar_common_1.selectedIndexProperty.coerce(this);\n    };\n    return SegmentedBar;\n}(segmented_bar_common_1.SegmentedBarBase));\nexports.SegmentedBar = SegmentedBar;\n//# sourceMappingURL=segmented-bar.android.js.map"
    },
    {
      "id": 156,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider-common.js",
      "name": "./~/tns-core-modules/ui/slider/slider-common.js",
      "index": 182,
      "index2": 175,
      "size": 1823,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider.android.js",
      "issuerId": 262,
      "issuerName": "./~/tns-core-modules/ui/slider/slider.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 262,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider.android.js",
          "module": "./~/tns-core-modules/ui/slider/slider.android.js",
          "moduleName": "./~/tns-core-modules/ui/slider/slider.android.js",
          "type": "cjs require",
          "userRequest": "./slider-common",
          "loc": "5:22-48"
        },
        {
          "moduleId": 262,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider.android.js",
          "module": "./~/tns-core-modules/ui/slider/slider.android.js",
          "moduleName": "./~/tns-core-modules/ui/slider/slider.android.js",
          "type": "cjs require",
          "userRequest": "./slider-common",
          "loc": "6:9-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar SliderBase = (function (_super) {\n    __extends(SliderBase, _super);\n    function SliderBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SliderBase;\n}(view_1.View));\nexports.SliderBase = SliderBase;\nexports.valueProperty = new view_1.CoercibleProperty({\n    name: \"value\", defaultValue: 0, coerceValue: function (target, value) {\n        value = Math.max(value, target.minValue);\n        value = Math.min(value, target.maxValue);\n        return value;\n    }, valueConverter: function (v) { return view_1.isIOS ? parseFloat(v) : parseInt(v); }\n});\nexports.valueProperty.register(SliderBase);\nexports.minValueProperty = new view_1.Property({\n    name: \"minValue\", defaultValue: 0, valueChanged: function (target, oldValue, newValue) {\n        exports.maxValueProperty.coerce(target);\n        exports.valueProperty.coerce(target);\n    }, valueConverter: function (v) { return view_1.isIOS ? parseFloat(v) : parseInt(v); }\n});\nexports.minValueProperty.register(SliderBase);\nexports.maxValueProperty = new view_1.CoercibleProperty({\n    name: \"maxValue\", defaultValue: 100, coerceValue: function (target, value) {\n        var minValue = target.minValue;\n        if (value < minValue) {\n            value = minValue;\n        }\n        return value;\n    },\n    valueChanged: function (target, oldValue, newValue) { return exports.valueProperty.coerce(target); },\n    valueConverter: function (v) { return view_1.isIOS ? parseFloat(v) : parseInt(v); }\n});\nexports.maxValueProperty.register(SliderBase);\n//# sourceMappingURL=slider-common.js.map"
    },
    {
      "id": 157,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
      "name": "./~/tns-core-modules/ui/styling/background.android.js",
      "index": 11,
      "index2": 14,
      "size": 6225,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
      "issuerId": 0,
      "issuerName": "./~/tns-core-modules/ui/core/view/view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view/view.android.js",
          "module": "./~/tns-core-modules/ui/core/view/view.android.js",
          "moduleName": "./~/tns-core-modules/ui/core/view/view.android.js",
          "type": "cjs require",
          "userRequest": "../../styling/background",
          "loc": "5:19-54"
        },
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "./background",
          "loc": "5:19-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"../../utils/types\");\nvar utils_1 = require(\"../../utils/utils\");\nvar css_value_1 = require(\"../../css-value\");\n__export(require(\"./background-common\"));\nvar ad;\n(function (ad) {\n    var SDK;\n    function getSDK() {\n        if (!SDK) {\n            SDK = android.os.Build.VERSION.SDK_INT;\n        }\n        return SDK;\n    }\n    var _defaultBackgrounds = new Map();\n    function isSetColorFilterOnlyWidget(nativeView) {\n        return (nativeView instanceof android.widget.Button ||\n            (nativeView instanceof android.support.v7.widget.Toolbar\n                && getSDK() >= 21));\n    }\n    function onBackgroundOrBorderPropertyChanged(view) {\n        var nativeView = view.nativeView;\n        if (!nativeView) {\n            return;\n        }\n        var background = view.style.backgroundInternal;\n        var backgroundDrawable = nativeView.getBackground();\n        var cache = view.nativeView;\n        var viewClass = types_1.getClass(view);\n        if (!_defaultBackgrounds.has(viewClass) && !types_1.isNullOrUndefined(backgroundDrawable)) {\n            _defaultBackgrounds.set(viewClass, backgroundDrawable.getConstantState());\n        }\n        if (isSetColorFilterOnlyWidget(nativeView)\n            && !types_1.isNullOrUndefined(backgroundDrawable)\n            && types_1.isFunction(backgroundDrawable.setColorFilter)\n            && !background.hasBorderWidth()\n            && !background.hasBorderRadius()\n            && !background.clipPath\n            && types_1.isNullOrUndefined(background.image)\n            && !types_1.isNullOrUndefined(background.color)) {\n            var backgroundColor = backgroundDrawable.backgroundColor = background.color.android;\n            backgroundDrawable.mutate();\n            backgroundDrawable.setColorFilter(backgroundColor, android.graphics.PorterDuff.Mode.SRC_IN);\n            backgroundDrawable.invalidateSelf();\n            backgroundDrawable.backgroundColor = backgroundColor;\n        }\n        else if (!background.isEmpty()) {\n            if (!(backgroundDrawable instanceof org.nativescript.widgets.BorderDrawable)) {\n                backgroundDrawable = new org.nativescript.widgets.BorderDrawable(utils_1.layout.getDisplayDensity(), view.toString());\n                refreshBorderDrawable(view, backgroundDrawable);\n                org.nativescript.widgets.ViewHelper.setBackground(nativeView, backgroundDrawable);\n            }\n            else {\n                refreshBorderDrawable(view, backgroundDrawable);\n            }\n            if ((background.hasBorderWidth() || background.hasBorderRadius() || background.clipPath) && getSDK() < 18) {\n                if (cache.layerType === undefined) {\n                    cache.layerType = cache.getLayerType();\n                    cache.setLayerType(android.view.View.LAYER_TYPE_SOFTWARE, null);\n                }\n            }\n        }\n        else {\n            if (_defaultBackgrounds.has(viewClass)) {\n                org.nativescript.widgets.ViewHelper.setBackground(nativeView, _defaultBackgrounds.get(viewClass).newDrawable());\n            }\n            if (cache.layerType !== undefined) {\n                cache.setLayerType(cache.layerType, null);\n                cache.layerType = undefined;\n            }\n        }\n        var leftPadding = Math.ceil(view.effectiveBorderLeftWidth + view.effectivePaddingLeft);\n        var topPadding = Math.ceil(view.effectiveBorderTopWidth + view.effectivePaddingTop);\n        var rightPadding = Math.ceil(view.effectiveBorderRightWidth + view.effectivePaddingRight);\n        var bottomPadding = Math.ceil(view.effectiveBorderBottomWidth + view.effectivePaddingBottom);\n        nativeView.setPadding(leftPadding, topPadding, rightPadding, bottomPadding);\n    }\n    ad.onBackgroundOrBorderPropertyChanged = onBackgroundOrBorderPropertyChanged;\n})(ad = exports.ad || (exports.ad = {}));\nfunction refreshBorderDrawable(view, borderDrawable) {\n    var background = view.style.backgroundInternal;\n    if (background) {\n        var backgroundPositionParsedCSSValues = null;\n        var backgroundSizeParsedCSSValues = null;\n        if (background.position) {\n            backgroundPositionParsedCSSValues = createNativeCSSValueArray(background.position);\n        }\n        if (background.size) {\n            backgroundSizeParsedCSSValues = createNativeCSSValueArray(background.size);\n        }\n        var blackColor = android.graphics.Color.BLACK;\n        borderDrawable.refresh((background.borderTopColor && background.borderTopColor.android !== undefined) ? background.borderTopColor.android : blackColor, (background.borderRightColor && background.borderRightColor.android !== undefined) ? background.borderRightColor.android : blackColor, (background.borderBottomColor && background.borderBottomColor.android !== undefined) ? background.borderBottomColor.android : blackColor, (background.borderLeftColor && background.borderLeftColor.android !== undefined) ? background.borderLeftColor.android : blackColor, background.borderTopWidth, background.borderRightWidth, background.borderBottomWidth, background.borderLeftWidth, background.borderTopLeftRadius, background.borderTopRightRadius, background.borderBottomRightRadius, background.borderBottomLeftRadius, background.clipPath, (background.color && background.color.android) ? background.color.android : 0, (background.image && background.image.android) ? background.image.android : null, background.repeat, background.position, backgroundPositionParsedCSSValues, background.size, backgroundSizeParsedCSSValues);\n    }\n}\nfunction createNativeCSSValueArray(css) {\n    if (!css) {\n        return null;\n    }\n    var cssValues = css_value_1.parse(css);\n    var nativeArray = Array.create(org.nativescript.widgets.CSSValue, cssValues.length);\n    for (var i = 0, length_1 = cssValues.length; i < length_1; i++) {\n        nativeArray[i] = new org.nativescript.widgets.CSSValue(cssValues[i].type, cssValues[i].string, cssValues[i].unit, cssValues[i].value);\n    }\n    return nativeArray;\n}\n//# sourceMappingURL=background.android.js.map"
    },
    {
      "id": 158,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font-common.js",
      "name": "./~/tns-core-modules/ui/styling/font-common.js",
      "index": 27,
      "index2": 17,
      "size": 4554,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
      "issuerId": 34,
      "issuerName": "./~/tns-core-modules/ui/styling/font.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
          "module": "./~/tns-core-modules/ui/styling/font.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/font.android.js",
          "type": "cjs require",
          "userRequest": "./font-common",
          "loc": "5:20-44"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/font.android.js",
          "module": "./~/tns-core-modules/ui/styling/font.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/font.android.js",
          "type": "cjs require",
          "userRequest": "./font-common",
          "loc": "9:9-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"../core/properties\");\nvar FontBase = (function () {\n    function FontBase(fontFamily, fontSize, fontStyle, fontWeight) {\n        this.fontFamily = fontFamily;\n        this.fontSize = fontSize;\n        this.fontStyle = fontStyle;\n        this.fontWeight = fontWeight;\n    }\n    Object.defineProperty(FontBase.prototype, \"isItalic\", {\n        get: function () {\n            return this.fontStyle === FontStyle.ITALIC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FontBase.prototype, \"isBold\", {\n        get: function () {\n            return this.fontWeight === FontWeight.BOLD\n                || this.fontWeight === \"700\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FontBase.equals = function (value1, value2) {\n        if (!value1 && !value2) {\n            return true;\n        }\n        if (!value1 || !value2) {\n            return false;\n        }\n        return value1.fontFamily === value2.fontFamily &&\n            value1.fontSize === value2.fontSize &&\n            value1.fontStyle === value2.fontStyle &&\n            value1.fontWeight === value2.fontWeight;\n    };\n    return FontBase;\n}());\nFontBase.default = undefined;\nexports.FontBase = FontBase;\nvar FontStyle;\n(function (FontStyle) {\n    FontStyle.NORMAL = \"normal\";\n    FontStyle.ITALIC = \"italic\";\n    FontStyle.isValid = properties_1.makeValidator(FontStyle.NORMAL, FontStyle.ITALIC);\n    FontStyle.parse = properties_1.makeParser(FontStyle.isValid);\n})(FontStyle = exports.FontStyle || (exports.FontStyle = {}));\nvar FontWeight;\n(function (FontWeight) {\n    FontWeight.THIN = \"100\";\n    FontWeight.EXTRA_LIGHT = \"200\";\n    FontWeight.LIGHT = \"300\";\n    FontWeight.NORMAL = \"normal\";\n    FontWeight.MEDIUM = \"500\";\n    FontWeight.SEMI_BOLD = \"600\";\n    FontWeight.BOLD = \"bold\";\n    FontWeight.EXTRA_BOLD = \"800\";\n    FontWeight.BLACK = \"900\";\n    FontWeight.isValid = properties_1.makeValidator(FontWeight.THIN, FontWeight.EXTRA_LIGHT, FontWeight.LIGHT, FontWeight.NORMAL, \"400\", FontWeight.MEDIUM, FontWeight.SEMI_BOLD, FontWeight.BOLD, \"700\", FontWeight.EXTRA_BOLD, FontWeight.BLACK);\n    FontWeight.parse = properties_1.makeParser(FontWeight.isValid);\n})(FontWeight = exports.FontWeight || (exports.FontWeight = {}));\nfunction parseFontFamily(value) {\n    var result = new Array();\n    if (!value) {\n        return result;\n    }\n    var split = value.split(\",\");\n    for (var i = 0; i < split.length; i++) {\n        var str = split[i].trim().replace(/['\"]+/g, '');\n        if (str) {\n            result.push(str);\n        }\n    }\n    return result;\n}\nexports.parseFontFamily = parseFontFamily;\nvar genericFontFamilies;\n(function (genericFontFamilies) {\n    genericFontFamilies.serif = \"serif\";\n    genericFontFamilies.sansSerif = \"sans-serif\";\n    genericFontFamilies.monospace = \"monospace\";\n    genericFontFamilies.system = \"system\";\n})(genericFontFamilies = exports.genericFontFamilies || (exports.genericFontFamilies = {}));\nvar styles = new Set();\n[\n    FontStyle.NORMAL,\n    FontStyle.ITALIC\n].forEach(function (val, i, a) { return styles.add(val); });\nvar weights = new Set();\n[\n    FontWeight.THIN,\n    FontWeight.EXTRA_LIGHT,\n    FontWeight.LIGHT,\n    FontWeight.NORMAL,\n    \"400\",\n    FontWeight.MEDIUM,\n    FontWeight.SEMI_BOLD,\n    FontWeight.BOLD,\n    \"700\",\n    FontWeight.EXTRA_BOLD,\n    FontWeight.BLACK\n].forEach(function (val, i, a) { return weights.add(val); });\nfunction parseFont(fontValue) {\n    var result = {\n        fontStyle: \"normal\",\n        fontVariant: \"normal\",\n        fontWeight: \"normal\"\n    };\n    var parts = fontValue.split(/\\s+/);\n    var part;\n    while (part = parts.shift()) {\n        if (part === \"normal\") {\n        }\n        else if (part === \"small-caps\") {\n            result.fontVariant = part;\n        }\n        else if (styles.has(part)) {\n            result.fontStyle = part;\n        }\n        else if (weights.has(part)) {\n            result.fontWeight = part;\n        }\n        else if (!result.fontSize) {\n            var sizes = part.split(\"/\");\n            result.fontSize = sizes[0];\n            result.lineHeight = sizes.length > 1 ? sizes[1] : undefined;\n        }\n        else {\n            result.fontFamily = part;\n            if (parts.length) {\n                result.fontFamily += \" \" + parts.join(\" \");\n            }\n            break;\n        }\n    }\n    return result;\n}\nexports.parseFont = parseFont;\n//# sourceMappingURL=font-common.js.map"
    },
    {
      "id": 159,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
      "name": "./~/tns-core-modules/ui/styling/style-scope.js",
      "index": 47,
      "index2": 46,
      "size": 14084,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
      "issuerId": 150,
      "issuerName": "./~/tns-core-modules/ui/page/page-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 126,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/view-base/view-base.js",
          "module": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "moduleName": "./~/tns-core-modules/ui/core/view-base/view-base.js",
          "type": "cjs require",
          "userRequest": "ui/styling/style-scope",
          "loc": "21:27-60"
        },
        {
          "moduleId": 150,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/page/page-common.js",
          "module": "./~/tns-core-modules/ui/page/page-common.js",
          "moduleName": "./~/tns-core-modules/ui/page/page-common.js",
          "type": "cjs require",
          "userRequest": "../styling/style-scope",
          "loc": "8:20-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar properties_1 = require(\"../core/properties\");\nvar css_1 = require(\"../../css\");\nvar css_selector_1 = require(\"./css-selector\");\nvar trace_1 = require(\"../../trace\");\nvar file_system_1 = require(\"../../file-system\");\nvar application = require(\"../../application\");\nvar keyframeAnimationModule;\nfunction ensureKeyframeAnimationModule() {\n    if (!keyframeAnimationModule) {\n        keyframeAnimationModule = require(\"ui/animation/keyframe-animation\");\n    }\n}\nvar cssAnimationParserModule;\nfunction ensureCssAnimationParserModule() {\n    if (!cssAnimationParserModule) {\n        cssAnimationParserModule = require(\"./css-animation-parser\");\n    }\n}\nfunction mergeCssSelectors() {\n    applicationCssSelectors = applicationSelectors.slice();\n    applicationCssSelectors.push.apply(applicationCssSelectors, applicationAdditionalSelectors);\n    applicationCssSelectorVersion++;\n}\nexports.mergeCssSelectors = mergeCssSelectors;\nvar applicationCssSelectors = [];\nvar applicationCssSelectorVersion = 0;\nvar applicationSelectors = [];\nvar applicationAdditionalSelectors = [];\nvar applicationKeyframes = {};\nvar animationsSymbol = Symbol(\"animations\");\nvar pattern = /('|\")(.*?)\\1/;\nfunction onCssChanged(args) {\n    if (args.cssText) {\n        var parsed = createSelectorsFromCss(args.cssText, args.cssFile, applicationKeyframes);\n        if (parsed) {\n            applicationAdditionalSelectors.push.apply(applicationAdditionalSelectors, parsed);\n            mergeCssSelectors();\n        }\n    }\n    else if (args.cssFile) {\n        loadCss(args.cssFile);\n    }\n}\nfunction onLiveSync(args) {\n    loadCss(application.getCssFileName());\n}\nfunction loadCss(cssFile) {\n    if (!cssFile) {\n        return undefined;\n    }\n    var result;\n    var cssFileName = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, cssFile);\n    if (file_system_1.File.exists(cssFileName)) {\n        var file = file_system_1.File.fromPath(cssFileName);\n        var applicationCss = file.readTextSync();\n        if (applicationCss) {\n            result = createSelectorsFromCss(applicationCss, cssFileName, applicationKeyframes);\n            applicationSelectors = result;\n            mergeCssSelectors();\n        }\n    }\n}\napplication.on(\"cssChanged\", onCssChanged);\napplication.on(\"livesync\", onLiveSync);\nfunction loadCssOnLaunch() {\n    loadCss(application.getCssFileName());\n    application.off(\"launch\", loadCssOnLaunch);\n}\nif (application.hasLaunched()) {\n    loadCssOnLaunch();\n}\nelse {\n    application.on(\"launch\", loadCssOnLaunch);\n}\nvar CssState = (function () {\n    function CssState(view, match) {\n        this.view = view;\n        this.match = match;\n    }\n    Object.defineProperty(CssState.prototype, \"changeMap\", {\n        get: function () {\n            return this.match.changeMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CssState.prototype.apply = function () {\n        var _this = this;\n        this.view._cancelAllAnimations();\n        properties_1.resetCSSProperties(this.view.style);\n        var matchingSelectors = this.match.selectors.filter(function (sel) { return sel.dynamic ? sel.match(_this.view) : true; });\n        if (this.view.inlineStyleSelector) {\n            matchingSelectors.push(this.view.inlineStyleSelector);\n        }\n        matchingSelectors.forEach(function (s) { return _this.applyDescriptors(_this.view, s.ruleset); });\n    };\n    CssState.prototype.applyDescriptors = function (view, ruleset) {\n        var style = view.style;\n        ruleset.declarations.forEach(function (d) {\n            try {\n                var cssPropName = \"css:\" + d.property;\n                if (cssPropName in style) {\n                    style[cssPropName] = d.value;\n                }\n                else {\n                    view[d.property] = d.value;\n                }\n            }\n            catch (e) {\n                trace_1.write(\"Failed to apply property [\" + d.property + \"] with value [\" + d.value + \"] to \" + view + \". \" + e, trace_1.categories.Error, trace_1.messageType.error);\n            }\n        });\n        var ruleAnimations = ruleset[animationsSymbol];\n        if (ruleAnimations) {\n            ensureKeyframeAnimationModule();\n            var _loop_1 = function (animationInfo) {\n                var animation = keyframeAnimationModule.KeyframeAnimation.keyframeAnimationFromInfo(animationInfo);\n                if (animation) {\n                    view._registerAnimation(animation);\n                    animation.play(view)\n                        .then(function () { view._unregisterAnimation(animation); })\n                        .catch(function (e) { view._unregisterAnimation(animation); });\n                }\n            };\n            for (var _i = 0, ruleAnimations_1 = ruleAnimations; _i < ruleAnimations_1.length; _i++) {\n                var animationInfo = ruleAnimations_1[_i];\n                _loop_1(animationInfo);\n            }\n        }\n    };\n    return CssState;\n}());\nexports.CssState = CssState;\nvar StyleScope = (function () {\n    function StyleScope() {\n        this._statesByKey = {};\n        this._viewIdToKey = {};\n        this._css = \"\";\n        this._localCssSelectors = [];\n        this._localCssSelectorVersion = 0;\n        this._localCssSelectorsAppliedVersion = 0;\n        this._applicationCssSelectorsAppliedVersion = 0;\n        this._keyframes = {};\n    }\n    Object.defineProperty(StyleScope.prototype, \"css\", {\n        get: function () {\n            return this._css;\n        },\n        set: function (value) {\n            this._cssFileName = undefined;\n            this.setCss(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StyleScope.prototype.addCss = function (cssString, cssFileName) {\n        this.appendCss(cssString, cssFileName);\n    };\n    StyleScope.prototype.setCss = function (cssString, cssFileName) {\n        this._css = cssString;\n        this._reset();\n        this._localCssSelectors = createSelectorsFromCss(this._css, cssFileName, this._keyframes);\n        this._localCssSelectorVersion++;\n        this.ensureSelectors();\n    };\n    StyleScope.prototype.appendCss = function (cssString, cssFileName) {\n        if (!cssString) {\n            return;\n        }\n        this._css = this._css + cssString;\n        this._reset();\n        var parsedCssSelectors = createSelectorsFromCss(cssString, cssFileName, this._keyframes);\n        this._localCssSelectors.push.apply(this._localCssSelectors, parsedCssSelectors);\n        this._localCssSelectorVersion++;\n        this.ensureSelectors();\n    };\n    StyleScope.prototype.getKeyframeAnimationWithName = function (animationName) {\n        var keyframes = this._keyframes[animationName];\n        if (keyframes !== undefined) {\n            ensureKeyframeAnimationModule();\n            var animation = new keyframeAnimationModule.KeyframeAnimationInfo();\n            ensureCssAnimationParserModule();\n            animation.keyframes = cssAnimationParserModule.CssAnimationParser.keyframesArrayFromCSS(keyframes);\n            return animation;\n        }\n        return undefined;\n    };\n    StyleScope.prototype.ensureSelectors = function () {\n        var toMerge;\n        if (this._applicationCssSelectorsAppliedVersion !== applicationCssSelectorVersion ||\n            this._localCssSelectorVersion !== this._localCssSelectorsAppliedVersion ||\n            !this._mergedCssSelectors) {\n            toMerge = [];\n            toMerge.push(applicationCssSelectors);\n            this._applicationCssSelectorsAppliedVersion = applicationCssSelectorVersion;\n            toMerge.push(this._localCssSelectors);\n            this._localCssSelectorsAppliedVersion = this._localCssSelectorVersion;\n            for (var keyframe in applicationKeyframes) {\n                this._keyframes[keyframe] = applicationKeyframes[keyframe];\n            }\n        }\n        if (toMerge && toMerge.length > 0) {\n            this._mergedCssSelectors = toMerge.filter(function (m) { return !!m; }).reduce(function (merged, next) { return merged.concat(next); }, []);\n            this._applyKeyframesOnSelectors();\n            this._selectors = new css_selector_1.SelectorsMap(this._mergedCssSelectors);\n        }\n        return this._getSelectorsVersion();\n    };\n    StyleScope.prototype.applySelectors = function (view) {\n        this.ensureSelectors();\n        var state = this._selectors.query(view);\n        var nextState = new CssState(view, state);\n        view._setCssState(nextState);\n    };\n    StyleScope.prototype.query = function (node) {\n        this.ensureSelectors();\n        return this._selectors.query(node).selectors;\n    };\n    StyleScope.prototype._reset = function () {\n        this._statesByKey = {};\n        this._viewIdToKey = {};\n    };\n    StyleScope.prototype._getSelectorsVersion = function () {\n        return 100000 * this._applicationCssSelectorsAppliedVersion + this._localCssSelectorsAppliedVersion;\n    };\n    StyleScope.prototype._applyKeyframesOnSelectors = function () {\n        for (var i = this._mergedCssSelectors.length - 1; i >= 0; i--) {\n            var ruleset = this._mergedCssSelectors[i];\n            var animations = ruleset[animationsSymbol];\n            if (animations !== undefined && animations.length) {\n                ensureCssAnimationParserModule();\n                for (var _i = 0, animations_1 = animations; _i < animations_1.length; _i++) {\n                    var animation = animations_1[_i];\n                    var keyframe = this._keyframes[animation.name];\n                    if (keyframe !== undefined) {\n                        animation.keyframes = cssAnimationParserModule.CssAnimationParser.keyframesArrayFromCSS(keyframe);\n                    }\n                }\n            }\n        }\n    };\n    StyleScope.prototype.getAnimations = function (ruleset) {\n        return ruleset[animationsSymbol];\n    };\n    return StyleScope;\n}());\nexports.StyleScope = StyleScope;\nfunction createSelectorsFromCss(css, cssFileName, keyframes) {\n    try {\n        var pageCssSyntaxTree = css ? css_1.parse(css, { source: cssFileName }) : null;\n        var pageCssSelectors = [];\n        if (pageCssSyntaxTree) {\n            pageCssSelectors = pageCssSelectors.concat(createSelectorsFromImports(pageCssSyntaxTree, keyframes));\n            pageCssSelectors = pageCssSelectors.concat(createSelectorsFromSyntaxTree(pageCssSyntaxTree, keyframes));\n        }\n        return pageCssSelectors;\n    }\n    catch (e) {\n        trace_1.write(\"Css styling failed: \" + e, trace_1.categories.Error, trace_1.messageType.error);\n    }\n}\nfunction createSelectorsFromImports(tree, keyframes) {\n    var selectors = [];\n    if (tree !== null && tree !== undefined) {\n        var imports = tree[\"stylesheet\"][\"rules\"].filter(function (r) { return r.type === \"import\"; });\n        for (var i = 0; i < imports.length; i++) {\n            var importItem = imports[i][\"import\"];\n            var match = importItem && importItem.match(pattern);\n            var url = match && match[2];\n            if (url !== null && url !== undefined) {\n                var appDirectory = file_system_1.knownFolders.currentApp().path;\n                var fileName = resolveFileNameFromUrl(url, appDirectory, file_system_1.File.exists);\n                if (fileName !== null) {\n                    var file = file_system_1.File.fromPath(fileName);\n                    var text = file.readTextSync();\n                    if (text) {\n                        selectors = selectors.concat(createSelectorsFromCss(text, fileName, keyframes));\n                    }\n                }\n            }\n        }\n    }\n    return selectors;\n}\nfunction createSelectorsFromSyntaxTree(ast, keyframes) {\n    var nodes = ast.stylesheet.rules;\n    nodes.filter(isKeyframe).forEach(function (node) { return keyframes[node.name] = node; });\n    var rulesets = css_selector_1.fromAstNodes(nodes);\n    if (rulesets && rulesets.length) {\n        ensureCssAnimationParserModule();\n        rulesets.forEach(function (rule) { return rule[animationsSymbol] = cssAnimationParserModule.CssAnimationParser.keyframeAnimationsFromCSSDeclarations(rule.declarations); });\n    }\n    return rulesets;\n}\nfunction resolveFileNameFromUrl(url, appDirectory, fileExists) {\n    var fileName = typeof url === \"string\" ? url.trim() : \"\";\n    if (fileName.indexOf(\"~/\") === 0) {\n        fileName = fileName.replace(\"~/\", \"\");\n    }\n    var local = file_system_1.path.join(appDirectory, fileName);\n    if (fileExists(local)) {\n        return local;\n    }\n    var external = file_system_1.path.join(appDirectory, \"tns_modules\", fileName);\n    if (fileExists(external)) {\n        return external;\n    }\n    return null;\n}\nexports.resolveFileNameFromUrl = resolveFileNameFromUrl;\nfunction applyInlineStyle(view, styleStr) {\n    var localStyle = \"local { \" + styleStr + \" }\";\n    var inlineRuleSet = createSelectorsFromCss(localStyle, null, {});\n    var style = view.style;\n    inlineRuleSet[0].declarations.forEach(function (d) {\n        var name = d.property;\n        try {\n            if (name in style) {\n                style[name] = d.value;\n            }\n            else {\n                view[name] = d.value;\n            }\n        }\n        catch (e) {\n            trace_1.write(\"Failed to apply property [\" + d.property + \"] with value [\" + d.value + \"] to \" + view + \". \" + e, trace_1.categories.Error, trace_1.messageType.error);\n        }\n    });\n}\nexports.applyInlineStyle = applyInlineStyle;\nfunction isKeyframe(node) {\n    return node.type === \"keyframes\";\n}\nvar InlineSelector = (function (_super) {\n    __extends(InlineSelector, _super);\n    function InlineSelector(ruleSet) {\n        var _this = _super.call(this) || this;\n        _this.specificity = 0x01000000;\n        _this.rarity = 0;\n        _this.dynamic = false;\n        _this.ruleset = ruleSet;\n        return _this;\n    }\n    InlineSelector.prototype.match = function (node) { return true; };\n    return InlineSelector;\n}(css_selector_1.SelectorCore));\n//# sourceMappingURL=style-scope.js.map"
    },
    {
      "id": 160,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style/style.js",
      "name": "./~/tns-core-modules/ui/styling/style/style.js",
      "index": 29,
      "index2": 15,
      "size": 414,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
      "issuerId": 21,
      "issuerName": "./~/tns-core-modules/ui/styling/style-properties.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-properties.js",
          "module": "./~/tns-core-modules/ui/styling/style-properties.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-properties.js",
          "type": "cjs require",
          "userRequest": "./style",
          "loc": "8:14-32"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/properties/properties.js",
          "module": "./~/tns-core-modules/ui/core/properties/properties.js",
          "moduleName": "./~/tns-core-modules/ui/core/properties/properties.js",
          "type": "cjs require",
          "userRequest": "../../styling/style",
          "loc": "3:14-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_1 = require(\"../../../data/observable\");\nvar Style = (function (_super) {\n    __extends(Style, _super);\n    function Style(view) {\n        var _this = _super.call(this) || this;\n        _this.view = view;\n        return _this;\n    }\n    return Style;\n}(observable_1.Observable));\nexports.Style = Style;\n//# sourceMappingURL=style.js.map"
    },
    {
      "id": 161,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch-common.js",
      "name": "./~/tns-core-modules/ui/switch/switch-common.js",
      "index": 186,
      "index2": 179,
      "size": 703,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch.android.js",
      "issuerId": 268,
      "issuerName": "./~/tns-core-modules/ui/switch/switch.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 268,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch.android.js",
          "module": "./~/tns-core-modules/ui/switch/switch.android.js",
          "moduleName": "./~/tns-core-modules/ui/switch/switch.android.js",
          "type": "cjs require",
          "userRequest": "./switch-common",
          "loc": "5:22-48"
        },
        {
          "moduleId": 268,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch.android.js",
          "module": "./~/tns-core-modules/ui/switch/switch.android.js",
          "moduleName": "./~/tns-core-modules/ui/switch/switch.android.js",
          "type": "cjs require",
          "userRequest": "./switch-common",
          "loc": "6:9-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nvar SwitchBase = (function (_super) {\n    __extends(SwitchBase, _super);\n    function SwitchBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SwitchBase;\n}(view_1.View));\nexports.SwitchBase = SwitchBase;\nexports.checkedProperty = new view_1.Property({ name: \"checked\", defaultValue: false, valueConverter: view_1.booleanConverter });\nexports.checkedProperty.register(SwitchBase);\n//# sourceMappingURL=switch-common.js.map"
    },
    {
      "id": 162,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view-common.js",
      "name": "./~/tns-core-modules/ui/tab-view/tab-view-common.js",
      "index": 188,
      "index2": 181,
      "size": 9296,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
      "issuerId": 163,
      "issuerName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 163,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "type": "cjs require",
          "userRequest": "./tab-view-common",
          "loc": "6:24-52"
        },
        {
          "moduleId": 163,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
          "module": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
          "type": "cjs require",
          "userRequest": "./tab-view-common",
          "loc": "10:9-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nexports.traceCategory = \"TabView\";\nvar TabViewItemBase = (function (_super) {\n    __extends(TabViewItemBase, _super);\n    function TabViewItemBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._title = \"\";\n        return _this;\n    }\n    Object.defineProperty(TabViewItemBase.prototype, \"textTransform\", {\n        get: function () {\n            return this.style.textTransform;\n        },\n        set: function (value) {\n            this.style.textTransform = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabViewItemBase.prototype._addChildFromBuilder = function (name, value) {\n        if (value instanceof view_1.View) {\n            this.view = value;\n        }\n    };\n    Object.defineProperty(TabViewItemBase.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (value) {\n            if (this._title !== value) {\n                this._title = value;\n                this._update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewItemBase.prototype, \"view\", {\n        get: function () {\n            return this._view;\n        },\n        set: function (value) {\n            if (this._view !== value) {\n                if (this._view) {\n                    throw new Error(\"Changing the view of an already loaded TabViewItem is not currently supported.\");\n                }\n                this._view = value;\n                this._addView(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewItemBase.prototype, \"iconSource\", {\n        get: function () {\n            return this._iconSource;\n        },\n        set: function (value) {\n            if (this._iconSource !== value) {\n                this._iconSource = value;\n                this._update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabViewItemBase.prototype.eachChild = function (callback) {\n        var view = this._view;\n        if (view) {\n            callback(view);\n        }\n    };\n    return TabViewItemBase;\n}(view_1.ViewBase));\nexports.TabViewItemBase = TabViewItemBase;\nvar knownCollections;\n(function (knownCollections) {\n    knownCollections.items = \"items\";\n})(knownCollections = exports.knownCollections || (exports.knownCollections = {}));\nvar TabViewBase = (function (_super) {\n    __extends(TabViewBase, _super);\n    function TabViewBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TabViewBase.prototype, \"androidSelectedTabHighlightColor\", {\n        get: function () {\n            return this.style.androidSelectedTabHighlightColor;\n        },\n        set: function (value) {\n            this.style.androidSelectedTabHighlightColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewBase.prototype, \"tabTextColor\", {\n        get: function () {\n            return this.style.tabTextColor;\n        },\n        set: function (value) {\n            this.style.tabTextColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewBase.prototype, \"tabBackgroundColor\", {\n        get: function () {\n            return this.style.tabBackgroundColor;\n        },\n        set: function (value) {\n            this.style.tabBackgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewBase.prototype, \"selectedTabTextColor\", {\n        get: function () {\n            return this.style.selectedTabTextColor;\n        },\n        set: function (value) {\n            this.style.selectedTabTextColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabViewBase.prototype._addArrayFromBuilder = function (name, value) {\n        if (name === \"items\") {\n            this.items = value;\n        }\n    };\n    TabViewBase.prototype._addChildFromBuilder = function (name, value) {\n        if (name === \"TabViewItem\") {\n            if (!this.items) {\n                this.items = new Array();\n            }\n            this.items.push(value);\n            this._addView(value);\n            exports.selectedIndexProperty.coerce(this);\n        }\n    };\n    Object.defineProperty(TabViewBase.prototype, \"_selectedView\", {\n        get: function () {\n            var selectedIndex = this.selectedIndex;\n            return selectedIndex > -1 ? this.items[selectedIndex].view : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabViewBase.prototype, \"_childrenCount\", {\n        get: function () {\n            if (this.items) {\n                return this.items.length;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabViewBase.prototype.eachChild = function (callback) {\n        var items = this.items;\n        if (items) {\n            items.forEach(function (item, i) {\n                callback(item);\n            });\n        }\n    };\n    TabViewBase.prototype.eachChildView = function (callback) {\n        var items = this.items;\n        if (items) {\n            items.forEach(function (item, i) {\n                callback(item.view);\n            });\n        }\n    };\n    TabViewBase.prototype.onItemsChanged = function (oldItems, newItems) {\n        if (oldItems) {\n            for (var i = 0, count = oldItems.length; i < count; i++) {\n                this._removeView(oldItems[i]);\n            }\n        }\n        if (newItems) {\n            for (var i = 0, count = newItems.length; i < count; i++) {\n                var item = newItems[i];\n                if (!item) {\n                    throw new Error(\"TabViewItem at index \" + i + \" is undefined.\");\n                }\n                if (!item.view) {\n                    throw new Error(\"TabViewItem at index \" + i + \" does not have a view.\");\n                }\n                this._addView(item);\n            }\n        }\n    };\n    return TabViewBase;\n}(view_1.View));\nTabViewBase.selectedIndexChangedEvent = \"selectedIndexChanged\";\nexports.TabViewBase = TabViewBase;\nexports.selectedIndexProperty = new view_1.CoercibleProperty({\n    name: \"selectedIndex\", defaultValue: -1, affectsLayout: view_1.isIOS,\n    valueChanged: function (target, oldValue, newValue) {\n        target.notify({ eventName: TabViewBase.selectedIndexChangedEvent, object: target, oldIndex: oldValue, newIndex: newValue });\n    },\n    coerceValue: function (target, value) {\n        var items = target.items;\n        if (items) {\n            var max = items.length - 1;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > max) {\n                value = max;\n            }\n        }\n        else {\n            value = -1;\n        }\n        return value;\n    },\n    valueConverter: function (v) { return parseInt(v); }\n});\nexports.selectedIndexProperty.register(TabViewBase);\nexports.itemsProperty = new view_1.Property({\n    name: \"items\", valueChanged: function (target, oldValue, newValue) {\n        target.onItemsChanged(oldValue, newValue);\n    }\n});\nexports.itemsProperty.register(TabViewBase);\nexports.iosIconRenderingModeProperty = new view_1.Property({ name: \"iosIconRenderingMode\", defaultValue: \"automatic\" });\nexports.iosIconRenderingModeProperty.register(TabViewBase);\nexports.androidOffscreenTabLimitProperty = new view_1.Property({\n    name: \"androidOffscreenTabLimit\", defaultValue: 1, affectsLayout: view_1.isIOS,\n    valueConverter: function (v) { return parseInt(v); }\n});\nexports.androidOffscreenTabLimitProperty.register(TabViewBase);\nexports.tabTextColorProperty = new view_1.CssProperty({ name: \"tabTextColor\", cssName: \"tab-text-color\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.tabTextColorProperty.register(view_1.Style);\nexports.tabBackgroundColorProperty = new view_1.CssProperty({ name: \"tabBackgroundColor\", cssName: \"tab-background-color\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.tabBackgroundColorProperty.register(view_1.Style);\nexports.selectedTabTextColorProperty = new view_1.CssProperty({ name: \"selectedTabTextColor\", cssName: \"selected-tab-text-color\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.selectedTabTextColorProperty.register(view_1.Style);\nexports.androidSelectedTabHighlightColorProperty = new view_1.CssProperty({ name: \"androidSelectedTabHighlightColor\", cssName: \"android-selected-tab-highlight-color\", equalityComparer: view_1.Color.equals, valueConverter: function (v) { return new view_1.Color(v); } });\nexports.androidSelectedTabHighlightColorProperty.register(view_1.Style);\n//# sourceMappingURL=tab-view-common.js.map"
    },
    {
      "id": 163,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/tab-view/tab-view.android.js",
      "name": "./~/tns-core-modules/ui/tab-view/tab-view.android.js",
      "index": 187,
      "index2": 182,
      "size": 16339,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/tab-view",
          "loc": "77:48-87"
        },
        {
          "moduleId": 78,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/tab-view.js",
          "module": "./~/nativescript-angular/directives/tab-view.js",
          "moduleName": "./~/nativescript-angular/directives/tab-view.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/tab-view",
          "loc": "3:17-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar font_1 = require(\"../styling/font\");\nvar tab_view_common_1 = require(\"./tab-view-common\");\nvar text_base_1 = require(\"../text-base\");\nvar image_source_1 = require(\"../../image-source\");\nvar utils_1 = require(\"../../utils/utils\");\n__export(require(\"./tab-view-common\"));\nvar VIEWS_STATES = \"_viewStates\";\nvar ACCENT_COLOR = \"colorAccent\";\nvar PRIMARY_COLOR = \"colorPrimary\";\nvar DEFAULT_ELEVATION = 4;\nvar PagerAdapter;\nvar PageChangedListener;\nfunction initializeNativeClasses() {\n    if (PagerAdapter) {\n        return;\n    }\n    var PagerAdapterImpl = (function (_super) {\n        __extends(PagerAdapterImpl, _super);\n        function PagerAdapterImpl(owner, items) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            _this.items = items;\n            return global.__native(_this);\n        }\n        PagerAdapterImpl.prototype.getCount = function () {\n            return this.items ? this.items.length : 0;\n        };\n        PagerAdapterImpl.prototype.getPageTitle = function (index) {\n            if (index < 0 || index >= this.items.length) {\n                return \"\";\n            }\n            return this.items[index].title;\n        };\n        PagerAdapterImpl.prototype.instantiateItem = function (container, index) {\n            if (tab_view_common_1.traceEnabled()) {\n                tab_view_common_1.traceWrite(\"TabView.PagerAdapter.instantiateItem; container: \" + container + \"; index: \" + index, tab_view_common_1.traceCategory);\n            }\n            var item = this.items[index];\n            if (this[VIEWS_STATES]) {\n                if (tab_view_common_1.traceEnabled()) {\n                    tab_view_common_1.traceWrite(\"TabView.PagerAdapter.instantiateItem; restoreHierarchyState: \" + item.view, tab_view_common_1.traceCategory);\n                }\n                item.view.nativeView.restoreHierarchyState(this[VIEWS_STATES]);\n            }\n            if (item.view.nativeView) {\n                container.addView(item.view.nativeView);\n            }\n            return item.view.nativeView;\n        };\n        PagerAdapterImpl.prototype.destroyItem = function (container, index, _object) {\n            if (tab_view_common_1.traceEnabled()) {\n                tab_view_common_1.traceWrite(\"TabView.PagerAdapter.destroyItem; container: \" + container + \"; index: \" + index + \"; _object: \" + _object, tab_view_common_1.traceCategory);\n            }\n            var item = this.items[index];\n            var nativeView = item.view.nativeView;\n            if (!nativeView || !_object) {\n                return;\n            }\n            if (nativeView.toString() !== _object.toString()) {\n                throw new Error(\"Expected \" + nativeView.toString() + \" to equal \" + _object.toString());\n            }\n            container.removeView(nativeView);\n        };\n        PagerAdapterImpl.prototype.isViewFromObject = function (view, _object) {\n            return view === _object;\n        };\n        PagerAdapterImpl.prototype.saveState = function () {\n            if (tab_view_common_1.traceEnabled()) {\n                tab_view_common_1.traceWrite(\"TabView.PagerAdapter.saveState\", tab_view_common_1.traceCategory);\n            }\n            var owner = this.owner;\n            if (owner._childrenCount === 0) {\n                return null;\n            }\n            if (!this[VIEWS_STATES]) {\n                this[VIEWS_STATES] = new android.util.SparseArray();\n            }\n            var viewStates = this[VIEWS_STATES];\n            var childCallback = function (view) {\n                var nativeView = view.nativeView;\n                if (nativeView && nativeView.isSaveFromParentEnabled && nativeView.isSaveFromParentEnabled()) {\n                    nativeView.saveHierarchyState(viewStates);\n                }\n                return true;\n            };\n            owner.eachChildView(childCallback);\n            var bundle = new android.os.Bundle();\n            bundle.putSparseParcelableArray(VIEWS_STATES, viewStates);\n            return bundle;\n        };\n        PagerAdapterImpl.prototype.restoreState = function (state, loader) {\n            if (tab_view_common_1.traceEnabled()) {\n                tab_view_common_1.traceWrite(\"TabView.PagerAdapter.restoreState\", tab_view_common_1.traceCategory);\n            }\n            var bundle = state;\n            bundle.setClassLoader(loader);\n            this[VIEWS_STATES] = bundle.getSparseParcelableArray(VIEWS_STATES);\n        };\n        return PagerAdapterImpl;\n    }(android.support.v4.view.PagerAdapter));\n    ;\n    var PageChangedListenerImpl = (function (_super) {\n        __extends(PageChangedListenerImpl, _super);\n        function PageChangedListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this._owner = owner;\n            return global.__native(_this);\n        }\n        PageChangedListenerImpl.prototype.onPageSelected = function (position) {\n            this._owner.selectedIndex = position;\n        };\n        return PageChangedListenerImpl;\n    }(android.support.v4.view.ViewPager.SimpleOnPageChangeListener));\n    PagerAdapter = PagerAdapterImpl;\n    PageChangedListener = PageChangedListenerImpl;\n}\nfunction createTabItemSpec(item) {\n    var result = new org.nativescript.widgets.TabItemSpec();\n    result.title = item.title;\n    if (item.iconSource) {\n        if (item.iconSource.indexOf(utils_1.RESOURCE_PREFIX) === 0) {\n            result.iconId = utils_1.ad.resources.getDrawableId(item.iconSource.substr(utils_1.RESOURCE_PREFIX.length));\n        }\n        else {\n            var is = image_source_1.fromFileOrResource(item.iconSource);\n            if (is) {\n                result.iconDrawable = new android.graphics.drawable.BitmapDrawable(is.android);\n            }\n        }\n    }\n    return result;\n}\nvar defaultAccentColor = undefined;\nfunction getDefaultAccentColor(context) {\n    if (defaultAccentColor === undefined) {\n        defaultAccentColor = utils_1.ad.resources.getPalleteColor(ACCENT_COLOR, context) || 0xFF33B5E5;\n    }\n    return defaultAccentColor;\n}\nvar TabViewItem = (function (_super) {\n    __extends(TabViewItem, _super);\n    function TabViewItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TabViewItem.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        if (this.nativeView) {\n            this._defaultTransformationMethod = this.nativeView.getTransformationMethod();\n        }\n    };\n    TabViewItem.prototype.resetNativeView = function () {\n        _super.prototype.resetNativeView.call(this);\n        if (this.nativeView) {\n            this.nativeView.setTransformationMethod(this._defaultTransformationMethod);\n        }\n    };\n    TabViewItem.prototype.createNativeView = function () {\n        return this.nativeView;\n    };\n    TabViewItem.prototype.setNativeView = function (textView) {\n        this.nativeView = textView;\n        if (textView) {\n            tab_view_common_1.initNativeView(this);\n        }\n    };\n    TabViewItem.prototype._update = function () {\n        var tv = this.nativeView;\n        if (tv) {\n            var tabLayout = tv.getParent();\n            tabLayout.updateItemAt(this.index, this.tabItemSpec);\n        }\n    };\n    TabViewItem.prototype[tab_view_common_1.fontSizeProperty.getDefault] = function () {\n        return { nativeSize: this.nativeView.getTextSize() };\n    };\n    TabViewItem.prototype[tab_view_common_1.fontSizeProperty.setNative] = function (value) {\n        if (typeof value === \"number\") {\n            this.nativeView.setTextSize(value);\n        }\n        else {\n            this.nativeView.setTextSize(android.util.TypedValue.COMPLEX_UNIT_PX, value.nativeSize);\n        }\n    };\n    TabViewItem.prototype[tab_view_common_1.fontInternalProperty.getDefault] = function () {\n        return this.nativeView.getTypeface();\n    };\n    TabViewItem.prototype[tab_view_common_1.fontInternalProperty.setNative] = function (value) {\n        this.nativeView.setTypeface(value instanceof font_1.Font ? value.getAndroidTypeface() : value);\n    };\n    TabViewItem.prototype[text_base_1.textTransformProperty.getDefault] = function () {\n        return \"default\";\n    };\n    TabViewItem.prototype[text_base_1.textTransformProperty.setNative] = function (value) {\n        var tv = this.nativeView;\n        if (value === \"default\") {\n            tv.setTransformationMethod(this._defaultTransformationMethod);\n            tv.setText(this.title);\n        }\n        else {\n            var result = text_base_1.getTransformedText(this.title, value);\n            tv.setText(result);\n            tv.setTransformationMethod(null);\n        }\n    };\n    return TabViewItem;\n}(tab_view_common_1.TabViewItemBase));\nexports.TabViewItem = TabViewItem;\nfunction setElevation(grid, tabLayout) {\n    var compat = android.support.v4.view.ViewCompat;\n    if (compat.setElevation) {\n        var val = DEFAULT_ELEVATION * tab_view_common_1.layout.getDisplayDensity();\n        compat.setElevation(grid, val);\n        compat.setElevation(tabLayout, val);\n    }\n}\nvar TabView = (function (_super) {\n    __extends(TabView, _super);\n    function TabView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._androidViewId = -1;\n        return _this;\n    }\n    TabView.prototype.onItemsChanged = function (oldItems, newItems) {\n        _super.prototype.onItemsChanged.call(this, oldItems, newItems);\n        if (oldItems) {\n            oldItems.forEach(function (item, i, arr) {\n                item.index = 0;\n                item.tabItemSpec = null;\n                item.setNativeView(null);\n            });\n        }\n    };\n    TabView.prototype.createNativeView = function () {\n        initializeNativeClasses();\n        if (tab_view_common_1.traceEnabled()) {\n            tab_view_common_1.traceWrite(\"TabView._createUI(\" + this + \");\", tab_view_common_1.traceCategory);\n        }\n        var context = this._context;\n        var nativeView = new org.nativescript.widgets.GridLayout(context);\n        nativeView.addRow(new org.nativescript.widgets.ItemSpec(1, org.nativescript.widgets.GridUnitType.auto));\n        nativeView.addRow(new org.nativescript.widgets.ItemSpec(1, org.nativescript.widgets.GridUnitType.star));\n        var tabLayout = new org.nativescript.widgets.TabLayout(context);\n        nativeView.addView(tabLayout);\n        nativeView.tabLayout = tabLayout;\n        setElevation(nativeView, tabLayout);\n        var accentColor = getDefaultAccentColor(context);\n        if (accentColor) {\n            tabLayout.setSelectedIndicatorColors([accentColor]);\n        }\n        var primaryColor = utils_1.ad.resources.getPalleteColor(PRIMARY_COLOR, context);\n        if (primaryColor) {\n            tabLayout.setBackgroundColor(primaryColor);\n        }\n        var viewPager = new android.support.v4.view.ViewPager(context);\n        var lp = new org.nativescript.widgets.CommonLayoutParams();\n        lp.row = 1;\n        viewPager.setLayoutParams(lp);\n        nativeView.addView(viewPager);\n        nativeView.viewPager = viewPager;\n        var listener = new PageChangedListener(this);\n        viewPager.addOnPageChangeListener(listener);\n        viewPager.listener = listener;\n        var adapter = new PagerAdapter(this, null);\n        viewPager.setAdapter(adapter);\n        viewPager.adapter = adapter;\n        return nativeView;\n    };\n    TabView.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        if (this._androidViewId < 0) {\n            this._androidViewId = android.view.View.generateViewId();\n        }\n        var nativeView = this.nativeView;\n        this._tabLayout = nativeView.tabLayout;\n        var viewPager = nativeView.viewPager;\n        viewPager.setId(this._androidViewId);\n        this._viewPager = viewPager;\n        viewPager.listener.owner = this;\n        this._pagerAdapter = viewPager.adapter;\n        this._pagerAdapter.owner = this;\n    };\n    TabView.prototype.disposeNativeView = function () {\n        this._pagerAdapter.notifyDataSetChanged();\n        this._pagerAdapter.owner = null;\n        this._pagerAdapter = null;\n        this._tabLayout = null;\n        this._viewPager.listener.owner = null;\n        this._viewPager = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    TabView.prototype.setAdapterItems = function (items) {\n        this._pagerAdapter.items = items;\n        var length = items ? items.length : 0;\n        if (length === 0) {\n            this._tabLayout.setItems(null, null);\n            return;\n        }\n        var tabItems = new Array();\n        items.forEach(function (item, i, arr) {\n            var tabItemSpec = createTabItemSpec(item);\n            item.index = i;\n            item.tabItemSpec = tabItemSpec;\n            tabItems.push(tabItemSpec);\n        });\n        var tabLayout = this._tabLayout;\n        tabLayout.setItems(tabItems, this._viewPager);\n        items.forEach(function (item, i, arr) {\n            var tv = tabLayout.getTextViewForItemAt(i);\n            item.setNativeView(tv);\n        });\n        this._pagerAdapter.notifyDataSetChanged();\n    };\n    TabView.prototype[tab_view_common_1.androidOffscreenTabLimitProperty.getDefault] = function () {\n        return this._viewPager.getOffscreenPageLimit();\n    };\n    TabView.prototype[tab_view_common_1.androidOffscreenTabLimitProperty.setNative] = function (value) {\n        this._viewPager.setOffscreenPageLimit(value);\n    };\n    TabView.prototype[tab_view_common_1.selectedIndexProperty.getDefault] = function () {\n        return -1;\n    };\n    TabView.prototype[tab_view_common_1.selectedIndexProperty.setNative] = function (value) {\n        if (tab_view_common_1.traceEnabled()) {\n            tab_view_common_1.traceWrite(\"TabView this._viewPager.setCurrentItem(\" + value + \", true);\", tab_view_common_1.traceCategory);\n        }\n        this._viewPager.setCurrentItem(value, true);\n    };\n    TabView.prototype[tab_view_common_1.itemsProperty.getDefault] = function () {\n        return null;\n    };\n    TabView.prototype[tab_view_common_1.itemsProperty.setNative] = function (value) {\n        this.setAdapterItems(value);\n        tab_view_common_1.selectedIndexProperty.coerce(this);\n    };\n    TabView.prototype[tab_view_common_1.tabBackgroundColorProperty.getDefault] = function () {\n        return this._tabLayout.getBackground().getConstantState();\n    };\n    TabView.prototype[tab_view_common_1.tabBackgroundColorProperty.setNative] = function (value) {\n        if (value instanceof tab_view_common_1.Color) {\n            this._tabLayout.setBackgroundColor(value.android);\n        }\n        else {\n            this._tabLayout.setBackground(value ? value.newDrawable() : null);\n        }\n    };\n    TabView.prototype[tab_view_common_1.tabTextColorProperty.getDefault] = function () {\n        return this._tabLayout.getTabTextColor();\n    };\n    TabView.prototype[tab_view_common_1.tabTextColorProperty.setNative] = function (value) {\n        var color = value instanceof tab_view_common_1.Color ? value.android : value;\n        this._tabLayout.setTabTextColor(color);\n    };\n    TabView.prototype[tab_view_common_1.selectedTabTextColorProperty.getDefault] = function () {\n        return this._tabLayout.getSelectedTabTextColor();\n    };\n    TabView.prototype[tab_view_common_1.selectedTabTextColorProperty.setNative] = function (value) {\n        var color = value instanceof tab_view_common_1.Color ? value.android : value;\n        this._tabLayout.setSelectedTabTextColor(color);\n    };\n    TabView.prototype[tab_view_common_1.androidSelectedTabHighlightColorProperty.getDefault] = function () {\n        return getDefaultAccentColor(this._context);\n    };\n    TabView.prototype[tab_view_common_1.androidSelectedTabHighlightColorProperty.setNative] = function (value) {\n        var tabLayout = this._tabLayout;\n        var color = value instanceof tab_view_common_1.Color ? value.android : value;\n        tabLayout.setSelectedIndicatorColors([color]);\n    };\n    return TabView;\n}(tab_view_common_1.TabViewBase));\nexports.TabView = TabView;\n//# sourceMappingURL=tab-view.android.js.map"
    },
    {
      "id": 164,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base-common.js",
      "name": "./~/tns-core-modules/ui/text-base/text-base-common.js",
      "index": 74,
      "index2": 68,
      "size": 10060,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base.android.js",
      "issuerId": 22,
      "issuerName": "./~/tns-core-modules/ui/text-base/text-base.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base.android.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "type": "cjs require",
          "userRequest": "./text-base-common",
          "loc": "7:25-54"
        },
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-base/text-base.android.js",
          "module": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-base/text-base.android.js",
          "type": "cjs require",
          "userRequest": "./text-base-common",
          "loc": "8:9-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\nvar formatted_string_1 = require(\"../../text/formatted-string\");\nexports.FormattedString = formatted_string_1.FormattedString;\nexports.Span = formatted_string_1.Span;\n__export(require(\"../core/view\"));\nvar CHILD_SPAN = \"Span\";\nvar CHILD_FORMATTED_TEXT = \"formattedText\";\nvar CHILD_FORMATTED_STRING = \"FormattedString\";\nvar TextBaseCommon = (function (_super) {\n    __extends(TextBaseCommon, _super);\n    function TextBaseCommon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TextBaseCommon.prototype, \"fontFamily\", {\n        get: function () {\n            return this.style.fontFamily;\n        },\n        set: function (value) {\n            this.style.fontFamily = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"fontSize\", {\n        get: function () {\n            return this.style.fontSize;\n        },\n        set: function (value) {\n            this.style.fontSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"fontStyle\", {\n        get: function () {\n            return this.style.fontStyle;\n        },\n        set: function (value) {\n            this.style.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"fontWeight\", {\n        get: function () {\n            return this.style.fontWeight;\n        },\n        set: function (value) {\n            this.style.fontWeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"letterSpacing\", {\n        get: function () {\n            return this.style.letterSpacing;\n        },\n        set: function (value) {\n            this.style.letterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"textAlignment\", {\n        get: function () {\n            return this.style.textAlignment;\n        },\n        set: function (value) {\n            this.style.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"textDecoration\", {\n        get: function () {\n            return this.style.textDecoration;\n        },\n        set: function (value) {\n            this.style.textDecoration = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"textTransform\", {\n        get: function () {\n            return this.style.textTransform;\n        },\n        set: function (value) {\n            this.style.textTransform = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"whiteSpace\", {\n        get: function () {\n            return this.style.whiteSpace;\n        },\n        set: function (value) {\n            this.style.whiteSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"padding\", {\n        get: function () {\n            return this.style.padding;\n        },\n        set: function (value) {\n            this.style.padding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"paddingTop\", {\n        get: function () {\n            return this.style.paddingTop;\n        },\n        set: function (value) {\n            this.style.paddingTop = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"paddingRight\", {\n        get: function () {\n            return this.style.paddingRight;\n        },\n        set: function (value) {\n            this.style.paddingRight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"paddingBottom\", {\n        get: function () {\n            return this.style.paddingBottom;\n        },\n        set: function (value) {\n            this.style.paddingBottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextBaseCommon.prototype, \"paddingLeft\", {\n        get: function () {\n            return this.style.paddingLeft;\n        },\n        set: function (value) {\n            this.style.paddingLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextBaseCommon.prototype._onFormattedTextContentsChanged = function (data) {\n        if (this.nativeView) {\n            this[exports.formattedTextProperty.setNative](data.value);\n        }\n    };\n    TextBaseCommon.prototype._addChildFromBuilder = function (name, value) {\n        if (name === CHILD_SPAN) {\n            if (!this.formattedText) {\n                var formattedText = new formatted_string_1.FormattedString();\n                formattedText.spans.push(value);\n                this.formattedText = formattedText;\n            }\n            else {\n                this.formattedText.spans.push(value);\n            }\n        }\n        else if (name === CHILD_FORMATTED_TEXT || name === CHILD_FORMATTED_STRING) {\n            this.formattedText = value;\n        }\n    };\n    TextBaseCommon.prototype._requestLayoutOnTextChanged = function () {\n        this.requestLayout();\n    };\n    TextBaseCommon.prototype.eachChild = function (callback) {\n        var text = this.formattedText;\n        if (text) {\n            callback(text);\n        }\n    };\n    TextBaseCommon.prototype._setNativeText = function () {\n    };\n    return TextBaseCommon;\n}(view_1.View));\nexports.TextBaseCommon = TextBaseCommon;\nfunction isBold(fontWeight) {\n    return fontWeight === \"bold\" || fontWeight === \"700\" || fontWeight === \"800\" || fontWeight === \"900\";\n}\nexports.isBold = isBold;\nexports.textProperty = new view_1.Property({ name: \"text\", defaultValue: \"\" });\nexports.textProperty.register(TextBaseCommon);\nexports.formattedTextProperty = new view_1.Property({\n    name: \"formattedText\",\n    affectsLayout: view_1.isIOS,\n    valueChanged: onFormattedTextPropertyChanged\n});\nexports.formattedTextProperty.register(TextBaseCommon);\nfunction onFormattedTextPropertyChanged(textBase, oldValue, newValue) {\n    if (oldValue) {\n        oldValue.off(view_1.Observable.propertyChangeEvent, textBase._onFormattedTextContentsChanged, textBase);\n        textBase._removeView(oldValue);\n    }\n    if (newValue) {\n        textBase._addView(newValue);\n        newValue.on(view_1.Observable.propertyChangeEvent, textBase._onFormattedTextContentsChanged, textBase);\n    }\n}\nvar TextAlignment;\n(function (TextAlignment) {\n    TextAlignment.LEFT = \"left\";\n    TextAlignment.CENTER = \"center\";\n    TextAlignment.RIGHT = \"right\";\n    TextAlignment.isValid = view_1.makeValidator(TextAlignment.LEFT, TextAlignment.CENTER, TextAlignment.RIGHT);\n    TextAlignment.parse = view_1.makeParser(TextAlignment.isValid);\n})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));\nexports.textAlignmentProperty = new view_1.InheritedCssProperty({\n    name: \"textAlignment\",\n    cssName: \"text-align\",\n    valueConverter: TextAlignment.parse\n});\nexports.textAlignmentProperty.register(view_1.Style);\nvar TextDecoration;\n(function (TextDecoration) {\n    TextDecoration.NONE = \"none\";\n    TextDecoration.UNDERLINE = \"underline\";\n    TextDecoration.LINE_THROUGH = \"line-through\";\n    TextDecoration.UNDERLINE_LINE_THROUGH = \"underline line-through\";\n    TextDecoration.isValid = view_1.makeValidator(TextDecoration.NONE, TextDecoration.UNDERLINE, TextDecoration.LINE_THROUGH, TextDecoration.UNDERLINE_LINE_THROUGH);\n    TextDecoration.parse = view_1.makeParser(TextDecoration.isValid);\n})(TextDecoration = exports.TextDecoration || (exports.TextDecoration = {}));\nexports.textDecorationProperty = new view_1.CssProperty({\n    name: \"textDecoration\",\n    cssName: \"text-decoration\",\n    defaultValue: \"none\",\n    valueConverter: TextDecoration.parse\n});\nexports.textDecorationProperty.register(view_1.Style);\nvar TextTransform;\n(function (TextTransform) {\n    TextTransform.NONE = \"none\";\n    TextTransform.CAPITALIZE = \"capitalize\";\n    TextTransform.UPPERCASE = \"uppercase\";\n    TextTransform.LOWERCASE = \"lowercase\";\n    TextTransform.isValid = view_1.makeValidator(TextTransform.NONE, TextTransform.CAPITALIZE, TextTransform.UPPERCASE, TextTransform.LOWERCASE);\n    TextTransform.parse = view_1.makeParser(TextTransform.isValid);\n})(TextTransform = exports.TextTransform || (exports.TextTransform = {}));\nexports.textTransformProperty = new view_1.CssProperty({\n    name: \"textTransform\",\n    cssName: \"text-transform\",\n    valueConverter: TextTransform.parse\n});\nexports.textTransformProperty.register(view_1.Style);\nvar WhiteSpace;\n(function (WhiteSpace) {\n    WhiteSpace.NORMAL = \"normal\";\n    WhiteSpace.NO_WRAP = \"nowrap\";\n    WhiteSpace.isValid = view_1.makeValidator(WhiteSpace.NORMAL, WhiteSpace.NO_WRAP);\n    WhiteSpace.parse = view_1.makeParser(WhiteSpace.isValid);\n})(WhiteSpace = exports.WhiteSpace || (exports.WhiteSpace = {}));\nexports.whiteSpaceProperty = new view_1.CssProperty({\n    name: \"whiteSpace\",\n    cssName: \"white-space\",\n    affectsLayout: view_1.isIOS,\n    valueConverter: WhiteSpace.parse\n});\nexports.whiteSpaceProperty.register(view_1.Style);\nexports.letterSpacingProperty = new view_1.CssProperty({\n    name: \"letterSpacing\",\n    cssName: \"letter-spacing\",\n    defaultValue: 0,\n    affectsLayout: view_1.isIOS,\n    valueConverter: function (v) { return parseFloat(v); }\n});\nexports.letterSpacingProperty.register(view_1.Style);\n//# sourceMappingURL=text-base-common.js.map"
    },
    {
      "id": 165,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field-common.js",
      "name": "./~/tns-core-modules/ui/text-field/text-field-common.js",
      "index": 79,
      "index2": 74,
      "size": 859,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field.android.js",
      "issuerId": 166,
      "issuerName": "./~/tns-core-modules/ui/text-field/text-field.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 166,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field.android.js",
          "module": "./~/tns-core-modules/ui/text-field/text-field.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-field/text-field.android.js",
          "type": "cjs require",
          "userRequest": "./text-field-common",
          "loc": "5:26-56"
        },
        {
          "moduleId": 166,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field.android.js",
          "module": "./~/tns-core-modules/ui/text-field/text-field.android.js",
          "moduleName": "./~/tns-core-modules/ui/text-field/text-field.android.js",
          "type": "cjs require",
          "userRequest": "./text-field-common",
          "loc": "6:9-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editable_text_base_1 = require(\"../editable-text-base\");\n__export(require(\"../editable-text-base\"));\nvar TextFieldBase = (function (_super) {\n    __extends(TextFieldBase, _super);\n    function TextFieldBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TextFieldBase;\n}(editable_text_base_1.EditableTextBase));\nTextFieldBase.returnPressEvent = \"returnPress\";\nexports.TextFieldBase = TextFieldBase;\nexports.secureProperty = new editable_text_base_1.Property({ name: \"secure\", defaultValue: false, valueConverter: editable_text_base_1.booleanConverter });\nexports.secureProperty.register(TextFieldBase);\n//# sourceMappingURL=text-field-common.js.map"
    },
    {
      "id": 166,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-field/text-field.android.js",
      "name": "./~/tns-core-modules/ui/text-field/text-field.android.js",
      "index": 78,
      "index2": 75,
      "size": 3111,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/text-field",
          "loc": "78:50-91"
        },
        {
          "moduleId": 129,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/dialogs/dialogs-common.js",
          "module": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "moduleName": "./~/tns-core-modules/ui/dialogs/dialogs-common.js",
          "type": "cjs require",
          "userRequest": "ui/text-field",
          "loc": "62:24-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar text_field_common_1 = require(\"./text-field-common\");\n__export(require(\"./text-field-common\"));\nvar TextField = (function (_super) {\n    __extends(TextField, _super);\n    function TextField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextField.prototype._configureEditText = function (editText) {\n        editText.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_NORMAL | android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);\n        editText.setLines(1);\n        editText.setMaxLines(1);\n        editText.setHorizontallyScrolling(true);\n    };\n    TextField.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_NORMAL | android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);\n    };\n    TextField.prototype._onReturnPress = function () {\n        this.notify({ eventName: TextField.returnPressEvent, object: this });\n    };\n    TextField.prototype[text_field_common_1.secureProperty.getDefault] = function () {\n        return false;\n    };\n    TextField.prototype[text_field_common_1.secureProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        var currentInputType = nativeView.getInputType();\n        var currentClass = currentInputType & android.text.InputType.TYPE_MASK_CLASS;\n        var currentFlags = currentInputType & android.text.InputType.TYPE_MASK_FLAGS;\n        var newInputType = currentInputType;\n        if (value) {\n            if (currentClass === android.text.InputType.TYPE_CLASS_TEXT) {\n                newInputType = currentClass | currentFlags | android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD;\n            }\n            else if (currentClass === android.text.InputType.TYPE_CLASS_NUMBER) {\n                newInputType = currentClass | currentFlags | android.text.InputType.TYPE_NUMBER_VARIATION_PASSWORD;\n            }\n            newInputType = newInputType & ~28672;\n        }\n        else {\n            if (currentClass === android.text.InputType.TYPE_CLASS_TEXT) {\n                newInputType = currentClass | currentFlags | android.text.InputType.TYPE_TEXT_VARIATION_NORMAL;\n            }\n            else if (currentClass === android.text.InputType.TYPE_CLASS_NUMBER) {\n                newInputType = currentClass | currentFlags | android.text.InputType.TYPE_NUMBER_VARIATION_NORMAL;\n            }\n        }\n        nativeView.setInputType(newInputType);\n    };\n    TextField.prototype[text_field_common_1.whiteSpaceProperty.getDefault] = function () {\n        return \"nowrap\";\n    };\n    TextField.prototype[text_field_common_1.whiteSpaceProperty.setNative] = function (value) {\n    };\n    return TextField;\n}(text_field_common_1.TextFieldBase));\nexports.TextField = TextField;\n//# sourceMappingURL=text-field.android.js.map"
    },
    {
      "id": 167,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/text-view/text-view.android.js",
      "name": "./~/tns-core-modules/ui/text-view/text-view.android.js",
      "index": 137,
      "index2": 134,
      "size": 1300,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
      "issuerId": 178,
      "issuerName": "./~/nativescript-angular/platform-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/text-view",
          "loc": "79:49-89"
        },
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/text-view",
          "loc": "22:18-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editable_text_base_1 = require(\"../editable-text-base\");\n__export(require(\"../text-base\"));\nvar TextView = (function (_super) {\n    __extends(TextView, _super);\n    function TextView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextView.prototype._configureEditText = function (editText) {\n        editText.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_NORMAL | android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | android.text.InputType.TYPE_TEXT_FLAG_MULTI_LINE);\n        editText.setGravity(android.view.Gravity.TOP | android.view.Gravity.LEFT);\n    };\n    TextView.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_NORMAL | android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | android.text.InputType.TYPE_TEXT_FLAG_MULTI_LINE);\n    };\n    return TextView;\n}(editable_text_base_1.EditableTextBase));\nexports.TextView = TextView;\n//# sourceMappingURL=text-view.android.js.map"
    },
    {
      "id": 168,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker-common.js",
      "name": "./~/tns-core-modules/ui/time-picker/time-picker-common.js",
      "index": 190,
      "index2": 183,
      "size": 6496,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker.android.js",
      "issuerId": 269,
      "issuerName": "./~/tns-core-modules/ui/time-picker/time-picker.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 269,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker.android.js",
          "module": "./~/tns-core-modules/ui/time-picker/time-picker.android.js",
          "moduleName": "./~/tns-core-modules/ui/time-picker/time-picker.android.js",
          "type": "cjs require",
          "userRequest": "./time-picker-common",
          "loc": "5:27-58"
        },
        {
          "moduleId": 269,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker.android.js",
          "module": "./~/tns-core-modules/ui/time-picker/time-picker.android.js",
          "moduleName": "./~/tns-core-modules/ui/time-picker/time-picker.android.js",
          "type": "cjs require",
          "userRequest": "./time-picker-common",
          "loc": "6:9-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\n__export(require(\"../core/view\"));\nfunction getValidTime(picker, hour, minute) {\n    if (picker.minuteInterval > 1) {\n        var minuteFloor = minute - (minute % picker.minuteInterval);\n        minute = minuteFloor + (minute === minuteFloor + 1 ? picker.minuteInterval : 0);\n        if (minute === 60) {\n            hour++;\n            minute = 0;\n        }\n    }\n    var time = { hour: hour, minute: minute };\n    if (!isLessThanMaxTime(picker, hour, minute)) {\n        time = { hour: picker.maxHour, minute: picker.maxMinute };\n    }\n    if (!isGreaterThanMinTime(picker, hour, minute)) {\n        time = { hour: picker.minHour, minute: picker.minMinute };\n    }\n    return time;\n}\nexports.getValidTime = getValidTime;\nfunction isValidTime(picker) {\n    return isGreaterThanMinTime(picker) && isLessThanMaxTime(picker);\n}\nfunction isHourValid(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 23;\n}\nfunction isMinuteValid(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 59;\n}\nfunction isMinuteIntervalValid(value) {\n    return typeof value === \"number\" && value >= 1 && value <= 30 && 60 % value === 0;\n}\nfunction getMinutes(hour) {\n    return hour * 60;\n}\nfunction isDefined(value) {\n    return value !== undefined;\n}\nexports.isDefined = isDefined;\nfunction isGreaterThanMinTime(picker, hour, minute) {\n    if (picker.minHour === undefined || picker.minMinute === undefined) {\n        return true;\n    }\n    return getMinutes(hour !== undefined ? hour : picker.hour) + (minute !== undefined ? minute : picker.minute) >= getMinutes(picker.minHour) + picker.minMinute;\n}\nfunction isLessThanMaxTime(picker, hour, minute) {\n    if (!isDefined(picker.maxHour) || !isDefined(picker.maxMinute)) {\n        return true;\n    }\n    return getMinutes(isDefined(hour) ? hour : picker.hour) + (isDefined(minute) ? minute : picker.minute) <= getMinutes(picker.maxHour) + picker.maxMinute;\n}\nfunction toString(value) {\n    if (value instanceof Date) {\n        return value + \"\";\n    }\n    return value < 10 ? \"0\" + value : \"\" + value;\n}\nfunction getMinMaxTimeErrorMessage(picker) {\n    return \"Min time: (\" + toString(picker.minHour) + \":\" + toString(picker.minMinute) + \"), max time: (\" + toString(picker.maxHour) + \":\" + toString(picker.maxMinute) + \")\";\n}\nfunction getErrorMessage(picker, propertyName, newValue) {\n    return propertyName + \" property value (\" + toString(newValue) + \":\" + toString(picker.minute) + \") is not valid. \" + getMinMaxTimeErrorMessage(picker) + \".\";\n}\nvar TimePickerBase = (function (_super) {\n    __extends(TimePickerBase, _super);\n    function TimePickerBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TimePickerBase;\n}(view_1.View));\nexports.TimePickerBase = TimePickerBase;\nexports.minHourProperty = new view_1.Property({\n    name: \"minHour\", defaultValue: 0, valueChanged: function (picker, oldValue, newValue) {\n        if (!isHourValid(newValue) || !isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"minHour\", newValue));\n        }\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.minHourProperty.register(TimePickerBase);\nexports.maxHourProperty = new view_1.Property({\n    name: \"maxHour\", defaultValue: 23, valueChanged: function (picker, oldValue, newValue) {\n        if (!isHourValid(newValue) || !isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"maxHour\", newValue));\n        }\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.maxHourProperty.register(TimePickerBase);\nexports.minMinuteProperty = new view_1.Property({\n    name: \"minMinute\", defaultValue: 0, valueChanged: function (picker, oldValue, newValue) {\n        if (!isMinuteValid(newValue) || !isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"minMinute\", newValue));\n        }\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.minMinuteProperty.register(TimePickerBase);\nexports.maxMinuteProperty = new view_1.Property({\n    name: \"maxMinute\", defaultValue: 59, valueChanged: function (picker, oldValue, newValue) {\n        if (!isMinuteValid(newValue) || !isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"maxMinute\", newValue));\n        }\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.maxMinuteProperty.register(TimePickerBase);\nexports.minuteIntervalProperty = new view_1.Property({\n    name: \"minuteInterval\", defaultValue: 1, valueChanged: function (picker, oldValue, newValue) {\n        if (!isMinuteIntervalValid(newValue)) {\n            throw new Error(getErrorMessage(picker, \"minuteInterval\", newValue));\n        }\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.minuteIntervalProperty.register(TimePickerBase);\nfunction dateComparer(x, y) {\n    return (x <= y && x >= y) ? true : false;\n}\nexports.minuteProperty = new view_1.Property({\n    name: \"minute\", defaultValue: 0, valueChanged: function (picker, oldValue, newValue) {\n        if (!isMinuteValid(newValue) || !isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"minute\", newValue));\n        }\n        picker.time = new Date(0, 0, 0, picker.hour, picker.minute);\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.minuteProperty.register(TimePickerBase);\nexports.hourProperty = new view_1.Property({\n    name: \"hour\", defaultValue: 0, valueChanged: function (picker, oldValue, newValue) {\n        if (!isHourValid(newValue) || !isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"Hour\", newValue));\n        }\n        picker.time = new Date(0, 0, 0, picker.hour, picker.minute);\n    }, valueConverter: function (v) { return parseInt(v); }\n});\nexports.hourProperty.register(TimePickerBase);\nexports.timeProperty = new view_1.Property({\n    name: \"time\", equalityComparer: dateComparer, valueChanged: function (picker, oldValue, newValue) {\n        if (!isValidTime(picker)) {\n            throw new Error(getErrorMessage(picker, \"time\", newValue));\n        }\n        picker.hour = newValue.getHours();\n        picker.minute = newValue.getMinutes();\n    }\n});\nexports.timeProperty.register(TimePickerBase);\n//# sourceMappingURL=time-picker-common.js.map"
    },
    {
      "id": 169,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view-common.js",
      "name": "./~/tns-core-modules/ui/web-view/web-view-common.js",
      "index": 192,
      "index2": 185,
      "size": 3407,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view.android.js",
      "issuerId": 273,
      "issuerName": "./~/tns-core-modules/ui/web-view/web-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 273,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view.android.js",
          "module": "./~/tns-core-modules/ui/web-view/web-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/web-view/web-view.android.js",
          "type": "cjs require",
          "userRequest": "./web-view-common",
          "loc": "5:24-52"
        },
        {
          "moduleId": 273,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view.android.js",
          "module": "./~/tns-core-modules/ui/web-view/web-view.android.js",
          "moduleName": "./~/tns-core-modules/ui/web-view/web-view.android.js",
          "type": "cjs require",
          "userRequest": "./web-view-common",
          "loc": "6:9-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"../core/view\");\nvar utils_1 = require(\"../../utils/utils\");\nvar file_system_1 = require(\"../../file-system\");\nexports.File = file_system_1.File;\nexports.knownFolders = file_system_1.knownFolders;\nexports.path = file_system_1.path;\n__export(require(\"../core/view\"));\nexports.srcProperty = new view_1.Property({ name: \"src\" });\nvar WebViewBase = (function (_super) {\n    __extends(WebViewBase, _super);\n    function WebViewBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebViewBase.prototype._onLoadFinished = function (url, error) {\n        var args = {\n            eventName: WebViewBase.loadFinishedEvent,\n            object: this,\n            url: url,\n            navigationType: undefined,\n            error: error\n        };\n        this.notify(args);\n    };\n    WebViewBase.prototype._onLoadStarted = function (url, navigationType) {\n        var args = {\n            eventName: WebViewBase.loadStartedEvent,\n            object: this,\n            url: url,\n            navigationType: navigationType,\n            error: undefined\n        };\n        this.notify(args);\n    };\n    Object.defineProperty(WebViewBase.prototype, \"canGoBack\", {\n        get: function () {\n            throw new Error(\"This member is abstract.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebViewBase.prototype, \"canGoForward\", {\n        get: function () {\n            throw new Error(\"This member is abstract.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebViewBase.prototype[exports.srcProperty.getDefault] = function () {\n        return \"\";\n    };\n    WebViewBase.prototype[exports.srcProperty.setNative] = function (src) {\n        this.stopLoading();\n        if (utils_1.isFileOrResourcePath(src)) {\n            if (src.indexOf(\"~/\") === 0) {\n                src = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, src.replace(\"~/\", \"\"));\n            }\n            if (file_system_1.File.exists(src)) {\n                var file = file_system_1.File.fromPath(src);\n                var content = file.readTextSync();\n                this._loadFileOrResource(src, content);\n            }\n        }\n        else if (src.toLowerCase().indexOf(\"http://\") === 0 || src.toLowerCase().indexOf(\"https://\") === 0) {\n            this._loadHttp(src);\n        }\n        else {\n            this._loadData(src);\n        }\n    };\n    Object.defineProperty(WebViewBase.prototype, \"url\", {\n        get: function () {\n            throw new Error(\"Property url of WebView is deprecated. Use src istead\");\n        },\n        set: function (value) {\n            throw new Error(\"Property url of WebView is deprecated. Use src istead\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return WebViewBase;\n}(view_1.View));\nWebViewBase.loadStartedEvent = \"loadStarted\";\nWebViewBase.loadFinishedEvent = \"loadFinished\";\nWebViewBase.navigationTypes = [\n    \"linkClicked\",\n    \"formSubmitted\",\n    \"backForward\",\n    \"reload\",\n    \"formResubmitted\",\n    \"other\"\n];\nexports.WebViewBase = WebViewBase;\nexports.srcProperty.register(WebViewBase);\n//# sourceMappingURL=web-view-common.js.map"
    },
    {
      "id": 170,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/http/@angular/http.es5.js",
      "name": "./~/@angular/http/@angular/http.es5.js",
      "index": 246,
      "index2": 245,
      "size": 72673,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "@angular/http",
          "loc": "9:0-24"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "BrowserXhr",
        "JSONPBackend",
        "JSONPConnection",
        "CookieXSRFStrategy",
        "XHRBackend",
        "XHRConnection",
        "BaseRequestOptions",
        "RequestOptions",
        "BaseResponseOptions",
        "ResponseOptions",
        "ReadyState",
        "RequestMethod",
        "ResponseContentType",
        "ResponseType",
        "Headers",
        "Http",
        "Jsonp",
        "HttpModule",
        "JsonpModule",
        "Connection",
        "ConnectionBackend",
        "XSRFStrategy",
        "Request",
        "Response",
        "QueryEncoder",
        "URLSearchParams",
        "VERSION",
        "ɵg",
        "ɵa",
        "ɵf",
        "ɵb",
        "ɵc",
        "ɵd"
      ],
      "depth": 1,
      "source": "var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\nvar Headers = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * @return {?}\n     */\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n    };\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\nvar ResponseOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\nvar BaseResponseOptions = (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    return BaseResponseOptions;\n}(ResponseOptions));\nBaseResponseOptions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBaseResponseOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n    return XSRFStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\nvar QueryEncoder = (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nvar URLSearchParams = (function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar Body = (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     * @return {?}\n     */\n    Body.prototype.text = function () {\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    return BrowserJsonp;\n}());\nBrowserJsonp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserJsonp.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @abstract\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = function (data) { };\n    return JSONPConnection;\n}());\nvar JSONPConnection_ = (function (_super) {\n    __extends(JSONPConnection_, _super);\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._dom = _dom;\n        _this.baseResponseOptions = baseResponseOptions;\n        _this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this.request = req;\n        _this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n        return _this;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPBackend = (function (_super) {\n    __extends(JSONPBackend, _super);\n    function JSONPBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return JSONPBackend;\n}(ConnectionBackend));\nvar JSONPBackend_ = (function (_super) {\n    __extends(JSONPBackend_, _super);\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    return JSONPBackend_;\n}(JSONPBackend));\nJSONPBackend_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJSONPBackend_.ctorParameters = function () { return [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\nvar XHRConnection = (function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\nvar CookieXSRFStrategy = (function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var /** @type {?} */ xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nvar XHRBackend = (function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    return XHRBackend;\n}());\nXHRBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nXHRBackend.ctorParameters = function () { return [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n    { type: XSRFStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar RequestOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function RequestOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, params = _b.params, withCredentials = _b.withCredentials, responseType = _b.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar BaseRequestOptions = (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    return BaseRequestOptions;\n}(RequestOptions));\nBaseRequestOptions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBaseRequestOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        if (requestOptions.params) {\n            var params = requestOptions.params.toString();\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = ((w) /** TODO #9100 */)['FormData'] || noop;\nvar Blob$1 = ((w) /** TODO #9100 */)['Blob'] || noop;\nvar ArrayBuffer$1 = ((w) /** TODO #9100 */)['ArrayBuffer'] || noop;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\nvar Http = (function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    return Http;\n}());\nHttp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * \\@experimental\n */\nvar Jsonp = (function (_super) {\n    __extends(Jsonp, _super);\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    return Jsonp;\n}(Http));\nJsonp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\nvar HttpModule = (function () {\n    function HttpModule() {\n    }\n    return HttpModule;\n}());\nHttpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpModule.ctorParameters = function () { return []; };\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\nvar JsonpModule = (function () {\n    function JsonpModule() {\n    }\n    return JsonpModule;\n}());\nJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    { provide: JSONPBackend, useClass: JSONPBackend_ },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION, BrowserJsonp as ɵg, JSONPBackend_ as ɵa, Body as ɵf, _createDefaultCookieXSRFStrategy as ɵb, httpFactory as ɵc, jsonpFactory as ɵd };\n//# sourceMappingURL=http.es5.js.map\n"
    },
    {
      "id": 171,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/forms.js",
      "name": "./~/nativescript-angular/forms.js",
      "index": 266,
      "index2": 265,
      "size": 1525,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/forms",
          "loc": "12:0-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar text_value_accessor_1 = require(\"./value-accessors/text-value-accessor\");\nvar checked_value_accessor_1 = require(\"./value-accessors/checked-value-accessor\");\nvar date_value_accessor_1 = require(\"./value-accessors/date-value-accessor\");\nvar time_value_accessor_1 = require(\"./value-accessors/time-value-accessor\");\nvar number_value_accessor_1 = require(\"./value-accessors/number-value-accessor\");\nvar selectedIndex_value_accessor_1 = require(\"./value-accessors/selectedIndex-value-accessor\");\nexports.FORMS_DIRECTIVES = [\n    text_value_accessor_1.TextValueAccessor,\n    checked_value_accessor_1.CheckedValueAccessor,\n    date_value_accessor_1.DateValueAccessor,\n    time_value_accessor_1.TimeValueAccessor,\n    selectedIndex_value_accessor_1.SelectedIndexValueAccessor,\n    number_value_accessor_1.NumberValueAccessor,\n];\nvar NativeScriptFormsModule = (function () {\n    function NativeScriptFormsModule() {\n    }\n    return NativeScriptFormsModule;\n}());\nNativeScriptFormsModule = __decorate([\n    core_1.NgModule({\n        declarations: exports.FORMS_DIRECTIVES,\n        providers: [],\n        imports: [\n            forms_1.FormsModule\n        ],\n        exports: [\n            forms_1.FormsModule,\n            exports.FORMS_DIRECTIVES,\n        ]\n    })\n], NativeScriptFormsModule);\nexports.NativeScriptFormsModule = NativeScriptFormsModule;\n//# sourceMappingURL=forms.js.map"
    },
    {
      "id": 172,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "name": "./~/nativescript-angular/router.js",
      "index": 267,
      "index2": 274,
      "size": 3182,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "nativescript-angular/router",
          "loc": "13:0-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar common_1 = require(\"@angular/common\");\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar ns_router_link_1 = require(\"./router/ns-router-link\");\nvar ns_router_link_active_1 = require(\"./router/ns-router-link-active\");\nvar page_router_outlet_1 = require(\"./router/page-router-outlet\");\nvar ns_location_strategy_1 = require(\"./router/ns-location-strategy\");\nvar ns_platform_location_1 = require(\"./router/ns-platform-location\");\nvar router_extensions_1 = require(\"./router/router-extensions\");\nvar nativescript_module_1 = require(\"./nativescript.module\");\nvar page_router_outlet_2 = require(\"./router/page-router-outlet\");\nexports.PageRoute = page_router_outlet_2.PageRoute;\nvar router_extensions_2 = require(\"./router/router-extensions\");\nexports.RouterExtensions = router_extensions_2.RouterExtensions;\nvar ns_module_factory_loader_1 = require(\"./router/ns-module-factory-loader\");\nexports.NSModuleFactoryLoader = ns_module_factory_loader_1.NSModuleFactoryLoader;\nvar NativeScriptRouterModule = (function () {\n    function NativeScriptRouterModule() {\n    }\n    NativeScriptRouterModule.forRoot = function (routes, config) {\n        return router_1.RouterModule.forRoot(routes, config);\n    };\n    NativeScriptRouterModule.forChild = function (routes) {\n        return router_1.RouterModule.forChild(routes);\n    };\n    return NativeScriptRouterModule;\n}());\nNativeScriptRouterModule = __decorate([\n    core_1.NgModule({\n        declarations: [\n            ns_router_link_1.NSRouterLink,\n            ns_router_link_active_1.NSRouterLinkActive,\n            page_router_outlet_1.PageRouterOutlet\n        ],\n        providers: [\n            {\n                provide: ns_location_strategy_1.NSLocationStrategy,\n                useFactory: provideLocationStrategy,\n                deps: [[ns_location_strategy_1.NSLocationStrategy, new core_1.Optional(), new core_1.SkipSelf()], frame_1.Frame]\n            },\n            { provide: common_1.LocationStrategy, useExisting: ns_location_strategy_1.NSLocationStrategy },\n            ns_platform_location_1.NativescriptPlatformLocation,\n            { provide: common_1.PlatformLocation, useClass: ns_platform_location_1.NativescriptPlatformLocation },\n            router_extensions_1.RouterExtensions,\n            core_1.SystemJsNgModuleLoader,\n        ],\n        imports: [\n            router_1.RouterModule,\n            nativescript_module_1.NativeScriptModule\n        ],\n        exports: [\n            router_1.RouterModule,\n            ns_router_link_1.NSRouterLink,\n            ns_router_link_active_1.NSRouterLinkActive,\n            page_router_outlet_1.PageRouterOutlet\n        ],\n        schemas: [core_1.NO_ERRORS_SCHEMA]\n    })\n], NativeScriptRouterModule);\nexports.NativeScriptRouterModule = NativeScriptRouterModule;\nfunction provideLocationStrategy(locationStrategy, frame) {\n    return locationStrategy ? locationStrategy : new ns_location_strategy_1.NSLocationStrategy(frame);\n}\nexports.provideLocationStrategy = provideLocationStrategy;\n//# sourceMappingURL=router.js.map"
    },
    {
      "id": 173,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "name": "./app/app.module.ngfactory.ts",
      "index": 141,
      "index2": 241,
      "size": 9930,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/main.aot.ts",
      "issuerId": 186,
      "issuerName": "./app/main.aot.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 186,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/main.aot.ts",
          "module": "./app/main.aot.ts",
          "moduleName": "./app/main.aot.ts",
          "type": "cjs require",
          "userRequest": "./app.module.ngfactory",
          "loc": "5:29-62"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar import0 = require(\"@angular/core\");\nvar import1 = require(\"./app.module\");\nvar import2 = require(\"@angular/common\");\nvar import3 = require(\"nativescript-angular/nativescript.module\");\nvar import4 = require(\"nativescript-telerik-ui-pro/chart/angular/chart-directives\");\nvar import5 = require(\"nativescript-angular/renderer\");\nvar import6 = require(\"nativescript-angular/directives/dialogs\");\nvar import7 = require(\"../node_modules/nativescript-angular/common/detached-loader.ngfactory\");\nvar import8 = require(\"./app.component.ngfactory\");\nvar import9 = require(\"nativescript-angular/platform-providers\");\nvar import10 = require(\"tns-core-modules/ui/frame/frame\");\nvar import11 = require(\"tns-core-modules/ui/page/page\");\nvar AppModuleInjector = (function (_super) {\n    __extends(AppModuleInjector, _super);\n    function AppModuleInjector(parent) {\n        return _super.call(this, parent, [\n            import7.DetachedLoaderNgFactory,\n            import8.AppComponentNgFactory\n        ], [import8.AppComponentNgFactory]) || this;\n    }\n    Object.defineProperty(AppModuleInjector.prototype, \"_LOCALE_ID_10\", {\n        get: function () {\n            if ((this.__LOCALE_ID_10 == null)) {\n                (this.__LOCALE_ID_10 = import0.ɵn(this.parent.get(import0.LOCALE_ID, null)));\n            }\n            return this.__LOCALE_ID_10;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_NgLocalization_11\", {\n        get: function () {\n            if ((this.__NgLocalization_11 == null)) {\n                (this.__NgLocalization_11 = new import2.NgLocaleLocalization(this._LOCALE_ID_10));\n            }\n            return this.__NgLocalization_11;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Compiler_12\", {\n        get: function () {\n            if ((this.__Compiler_12 == null)) {\n                (this.__Compiler_12 = new import0.Compiler());\n            }\n            return this.__Compiler_12;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_APP_ID_13\", {\n        get: function () {\n            if ((this.__APP_ID_13 == null)) {\n                (this.__APP_ID_13 = import0.ɵg());\n            }\n            return this.__APP_ID_13;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_IterableDiffers_14\", {\n        get: function () {\n            if ((this.__IterableDiffers_14 == null)) {\n                (this.__IterableDiffers_14 = import0.ɵl());\n            }\n            return this.__IterableDiffers_14;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_KeyValueDiffers_15\", {\n        get: function () {\n            if ((this.__KeyValueDiffers_15 == null)) {\n                (this.__KeyValueDiffers_15 = import0.ɵm());\n            }\n            return this.__KeyValueDiffers_15;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Frame_16\", {\n        get: function () {\n            if ((this.__Frame_16 == null)) {\n                (this.__Frame_16 = import9.getDefaultFrame());\n            }\n            return this.__Frame_16;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_Page_17\", {\n        get: function () {\n            if ((this.__Page_17 == null)) {\n                (this.__Page_17 = import9.getDefaultPage());\n            }\n            return this.__Page_17;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_DEVICE_18\", {\n        get: function () {\n            if ((this.__DEVICE_18 == null)) {\n                (this.__DEVICE_18 = import9.getDefaultDevice());\n            }\n            return this.__DEVICE_18;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_NativeScriptRendererFactory_19\", {\n        get: function () {\n            if ((this.__NativeScriptRendererFactory_19 == null)) {\n                (this.__NativeScriptRendererFactory_19 = new import5.NativeScriptRendererFactory(this.parent.get(import9.APP_ROOT_VIEW, null), this._DEVICE_18, this.parent.get(import0.NgZone)));\n            }\n            return this.__NativeScriptRendererFactory_19;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_RendererFactory2_20\", {\n        get: function () {\n            if ((this.__RendererFactory2_20 == null)) {\n                (this.__RendererFactory2_20 = new import5.NativeScriptRendererFactory(this.parent.get(import9.APP_ROOT_VIEW, null), this._DEVICE_18, this.parent.get(import0.NgZone)));\n            }\n            return this.__RendererFactory2_20;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppModuleInjector.prototype, \"_ModalDialogService_21\", {\n        get: function () {\n            if ((this.__ModalDialogService_21 == null)) {\n                (this.__ModalDialogService_21 = new import6.ModalDialogService());\n            }\n            return this.__ModalDialogService_21;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AppModuleInjector.prototype.createInternal = function () {\n        this._CommonModule_0 = new import2.CommonModule();\n        this._ErrorHandler_1 = import3.errorHandlerFactory();\n        this._APP_INITIALIZER_2 = [import0.ɵo];\n        this._ApplicationInitStatus_3 = new import0.ApplicationInitStatus(this._APP_INITIALIZER_2);\n        this._ɵf_4 = new import0.ɵf(this.parent.get(import0.NgZone), this.parent.get(import0.ɵConsole), this, this._ErrorHandler_1, this.componentFactoryResolver, this._ApplicationInitStatus_3);\n        this._ApplicationRef_5 = this._ɵf_4;\n        this._ApplicationModule_6 = new import0.ApplicationModule(this._ApplicationRef_5);\n        this._NativeScriptModule_7 = new import3.NativeScriptModule();\n        this._NativeScriptUIChartModule_8 = new import4.NativeScriptUIChartModule();\n        this._AppModule_9 = new import1.AppModule();\n        return this._AppModule_9;\n    };\n    AppModuleInjector.prototype.getInternal = function (token, notFoundResult) {\n        if ((token === import2.CommonModule)) {\n            return this._CommonModule_0;\n        }\n        if ((token === import0.ErrorHandler)) {\n            return this._ErrorHandler_1;\n        }\n        if ((token === import0.APP_INITIALIZER)) {\n            return this._APP_INITIALIZER_2;\n        }\n        if ((token === import0.ApplicationInitStatus)) {\n            return this._ApplicationInitStatus_3;\n        }\n        if ((token === import0.ɵf)) {\n            return this._ɵf_4;\n        }\n        if ((token === import0.ApplicationRef)) {\n            return this._ApplicationRef_5;\n        }\n        if ((token === import0.ApplicationModule)) {\n            return this._ApplicationModule_6;\n        }\n        if ((token === import3.NativeScriptModule)) {\n            return this._NativeScriptModule_7;\n        }\n        if ((token === import4.NativeScriptUIChartModule)) {\n            return this._NativeScriptUIChartModule_8;\n        }\n        if ((token === import1.AppModule)) {\n            return this._AppModule_9;\n        }\n        if ((token === import0.LOCALE_ID)) {\n            return this._LOCALE_ID_10;\n        }\n        if ((token === import2.NgLocalization)) {\n            return this._NgLocalization_11;\n        }\n        if ((token === import0.Compiler)) {\n            return this._Compiler_12;\n        }\n        if ((token === import0.APP_ID)) {\n            return this._APP_ID_13;\n        }\n        if ((token === import0.IterableDiffers)) {\n            return this._IterableDiffers_14;\n        }\n        if ((token === import0.KeyValueDiffers)) {\n            return this._KeyValueDiffers_15;\n        }\n        if ((token === import10.Frame)) {\n            return this._Frame_16;\n        }\n        if ((token === import11.Page)) {\n            return this._Page_17;\n        }\n        if ((token === import9.DEVICE)) {\n            return this._DEVICE_18;\n        }\n        if ((token === import5.NativeScriptRendererFactory)) {\n            return this._NativeScriptRendererFactory_19;\n        }\n        if ((token === import0.RendererFactory2)) {\n            return this._RendererFactory2_20;\n        }\n        if ((token === import6.ModalDialogService)) {\n            return this._ModalDialogService_21;\n        }\n        return notFoundResult;\n    };\n    AppModuleInjector.prototype.destroyInternal = function () {\n        this._ɵf_4.ngOnDestroy();\n    };\n    return AppModuleInjector;\n}(import0.ɵNgModuleInjector));\nexports.AppModuleNgFactory = new import0.NgModuleFactory(AppModuleInjector, import1.AppModule);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9hcHAvYXBwLm1vZHVsZS5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvYXBwL2FwcC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n//# sourceMappingURL=app.module.ngfactory.js.map"
    },
    {
      "id": 174,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor-platform.android.ts",
      "name": "./app/vendor-platform.android.ts",
      "index": 244,
      "index2": 244,
      "size": 1133,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "issuerId": 187,
      "issuerName": "./app/vendor.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 187,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
          "module": "./app/vendor.ts",
          "moduleName": "./app/vendor.ts",
          "type": "cjs require",
          "userRequest": "./vendor-platform",
          "loc": "3:0-28"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "// Resolve JavaScript classes that extend a Java class, and need to resolve\n// their JavaScript module from a bundled script. For example:\n// NativeScriptApplication, NativeScriptActivity, etc.\n//\n// This module gets bundled together with the rest of the app code and the\n// `require` calls get resolved to the correct bundling import call.\n//\n// At runtime the module gets loaded *before* the rest of the app code, so code\n// placed here needs to be careful about its dependencies.\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"application\");\nrequire(\"ui/frame\");\nrequire(\"ui/frame/activity\");\nif (global.TNS_WEBPACK) {\n    global.__requireOverride = function (name, dir) {\n        if (name === \"./tns_modules/application/application.js\") {\n            return require(\"application\");\n        }\n        else if (name === \"./tns_modules/ui/frame/frame.js\") {\n            return require(\"ui/frame\");\n        }\n        else if (name === \"./tns_modules/ui/frame/activity.js\") {\n            return require(\"ui/frame/activity\");\n        }\n    };\n}\n//# sourceMappingURL=vendor-platform.android.js.map"
    },
    {
      "id": 175,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/extract-text-webpack-plugin/loader.js??ref--1-0!/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
      "name": "./app/app.css",
      "index": 276,
      "index2": 278,
      "size": 41,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        1
      ],
      "assets": [],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "usedExports": true,
      "providedExports": null,
      "depth": 0,
      "source": "// removed by extract-text-webpack-plugin"
    },
    {
      "id": 176,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/collection-facade.js",
      "name": "./~/nativescript-angular/collection-facade.js",
      "index": 199,
      "index2": 194,
      "size": 5061,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
      "issuerId": 76,
      "issuerName": "./~/nativescript-angular/directives/list-view-comp.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 76,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives/list-view-comp.js",
          "module": "./~/nativescript-angular/directives/list-view-comp.js",
          "moduleName": "./~/nativescript-angular/directives/list-view-comp.js",
          "type": "cjs require",
          "userRequest": "../collection-facade",
          "loc": "3:26-57"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable */\n//Copied unexported functions from @angular/core/src/facade/collection\nvar lang_facade_1 = require(\"./lang-facade\");\nfunction isListLikeIterable(obj) {\n    if (!lang_facade_1.isJsObject(obj))\n        return false;\n    return lang_facade_1.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            lang_facade_1.getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nexports.isListLikeIterable = isListLikeIterable;\nvar ListWrapper = (function () {\n    function ListWrapper() {\n    }\n    // JS has no way to express a statically fixed size list, but dart does so we\n    // keep both methods.\n    ListWrapper.createFixedSize = function (size) { return new Array(size); };\n    ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n    ListWrapper.clone = function (array) { return array.slice(0); };\n    ListWrapper.forEachWithIndex = function (array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            fn(array[i], i);\n        }\n    };\n    ListWrapper.first = function (array) {\n        if (!array)\n            return null;\n        return array[0];\n    };\n    ListWrapper.last = function (array) {\n        if (!array || array.length == 0)\n            return null;\n        return array[array.length - 1];\n    };\n    ListWrapper.indexOf = function (array, value, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return array.indexOf(value, startIndex);\n    };\n    ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n    ListWrapper.reversed = function (array) {\n        var a = ListWrapper.clone(array);\n        return a.reverse();\n    };\n    ListWrapper.concat = function (a, b) { return a.concat(b); };\n    ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n    ListWrapper.removeAt = function (list, index) {\n        var res = list[index];\n        list.splice(index, 1);\n        return res;\n    };\n    ListWrapper.removeAll = function (list, items) {\n        for (var i = 0; i < items.length; ++i) {\n            var index = list.indexOf(items[i]);\n            list.splice(index, 1);\n        }\n    };\n    ListWrapper.remove = function (list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n            return true;\n        }\n        return false;\n    };\n    ListWrapper.clear = function (list) { list.length = 0; };\n    ListWrapper.isEmpty = function (list) { return list.length == 0; };\n    ListWrapper.fill = function (list, value, start, end) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = null; }\n        list.fill(value, start, end === null ? list.length : end);\n    };\n    ListWrapper.equals = function (a, b) {\n        if (a.length != b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    };\n    ListWrapper.slice = function (l, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return l.slice(from, to === null ? undefined : to);\n    };\n    ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n    ListWrapper.sort = function (l, compareFn) {\n        if (lang_facade_1.isPresent(compareFn)) {\n            l.sort(compareFn);\n        }\n        else {\n            l.sort();\n        }\n    };\n    ListWrapper.toString = function (l) { return l.toString(); };\n    ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n    ListWrapper.maximum = function (list, predicate) {\n        if (list.length == 0) {\n            return null;\n        }\n        var solution = null;\n        var maxValue = -Infinity;\n        for (var index = 0; index < list.length; index++) {\n            var candidate = list[index];\n            if (lang_facade_1.isBlank(candidate)) {\n                continue;\n            }\n            var candidateValue = predicate(candidate);\n            if (candidateValue > maxValue) {\n                solution = candidate;\n                maxValue = candidateValue;\n            }\n        }\n        return solution;\n    };\n    ListWrapper.flatten = function (list) {\n        var target = [];\n        _flattenArray(list, target);\n        return target;\n    };\n    ListWrapper.addAll = function (list, source) {\n        for (var i = 0; i < source.length; i++) {\n            list.push(source[i]);\n        }\n    };\n    return ListWrapper;\n}());\nexports.ListWrapper = ListWrapper;\nfunction _flattenArray(source, target) {\n    if (lang_facade_1.isPresent(source)) {\n        for (var i = 0; i < source.length; i++) {\n            var item = source[i];\n            if (lang_facade_1.isArray(item)) {\n                _flattenArray(item, target);\n            }\n            else {\n                target.push(item);\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=collection-facade.js.map"
    },
    {
      "id": 177,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/directives.js",
      "name": "./~/nativescript-angular/directives.js",
      "index": 197,
      "index2": 214,
      "size": 2603,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
      "issuerId": 79,
      "issuerName": "./~/nativescript-angular/nativescript.module.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 79,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/nativescript.module.js",
          "module": "./~/nativescript-angular/nativescript.module.js",
          "moduleName": "./~/nativescript-angular/nativescript.module.js",
          "type": "cjs require",
          "userRequest": "./directives",
          "loc": "15:19-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar list_view_comp_1 = require(\"./directives/list-view-comp\");\nvar tab_view_1 = require(\"./directives/tab-view\");\nvar action_bar_1 = require(\"./directives/action-bar\");\nvar platform_filters_1 = require(\"./directives/platform-filters\");\nexports.NS_DIRECTIVES = [\n    list_view_comp_1.ListViewComponent,\n    list_view_comp_1.TemplateKeyDirective,\n    tab_view_1.TabViewDirective,\n    tab_view_1.TabViewItemDirective,\n    action_bar_1.ActionBarComponent,\n    action_bar_1.ActionBarScope,\n    action_bar_1.ActionItemDirective,\n    action_bar_1.NavigationButtonDirective,\n    platform_filters_1.AndroidFilterComponent,\n    platform_filters_1.IosFilterComponent,\n];\nvar list_view_comp_2 = require(\"./directives/list-view-comp\");\nexports.ListViewComponent = list_view_comp_2.ListViewComponent;\nexports.TemplateKeyDirective = list_view_comp_2.TemplateKeyDirective;\nvar text_value_accessor_1 = require(\"./value-accessors/text-value-accessor\");\nexports.TextValueAccessor = text_value_accessor_1.TextValueAccessor;\nvar checked_value_accessor_1 = require(\"./value-accessors/checked-value-accessor\");\nexports.CheckedValueAccessor = checked_value_accessor_1.CheckedValueAccessor;\nvar date_value_accessor_1 = require(\"./value-accessors/date-value-accessor\");\nexports.DateValueAccessor = date_value_accessor_1.DateValueAccessor;\nvar time_value_accessor_1 = require(\"./value-accessors/time-value-accessor\");\nexports.TimeValueAccessor = time_value_accessor_1.TimeValueAccessor;\nvar number_value_accessor_1 = require(\"./value-accessors/number-value-accessor\");\nexports.NumberValueAccessor = number_value_accessor_1.NumberValueAccessor;\nvar selectedIndex_value_accessor_1 = require(\"./value-accessors/selectedIndex-value-accessor\");\nexports.SelectedIndexValueAccessor = selectedIndex_value_accessor_1.SelectedIndexValueAccessor;\nvar tab_view_2 = require(\"./directives/tab-view\");\nexports.TabViewDirective = tab_view_2.TabViewDirective;\nexports.TabViewItemDirective = tab_view_2.TabViewItemDirective;\nvar action_bar_2 = require(\"./directives/action-bar\");\nexports.ActionBarComponent = action_bar_2.ActionBarComponent;\nexports.ActionBarScope = action_bar_2.ActionBarScope;\nexports.ActionItemDirective = action_bar_2.ActionItemDirective;\nexports.NavigationButtonDirective = action_bar_2.NavigationButtonDirective;\nvar platform_filters_2 = require(\"./directives/platform-filters\");\nexports.AndroidFilterComponent = platform_filters_2.AndroidFilterComponent;\nexports.IosFilterComponent = platform_filters_2.IosFilterComponent;\n//# sourceMappingURL=directives.js.map"
    },
    {
      "id": 178,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
      "name": "./~/nativescript-angular/platform-common.js",
      "index": 2,
      "index2": 138,
      "size": 7294,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-static.js",
      "issuerId": 46,
      "issuerName": "./~/nativescript-angular/platform-static.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-static.js",
          "module": "./~/nativescript-angular/platform-static.js",
          "moduleName": "./~/nativescript-angular/platform-static.js",
          "type": "cjs require",
          "userRequest": "./platform-common",
          "loc": "3:24-52"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\n// Initial imports and polyfills\nrequire(\"tns-core-modules/globals\");\n// Require application early to work around a circular import\nrequire(\"tns-core-modules/application\");\nrequire(\"./zone-js/dist/zone-nativescript\");\nrequire(\"reflect-metadata\");\nrequire(\"./polyfills/array\");\nrequire(\"./polyfills/console\");\nvar core_1 = require(\"@angular/core\");\n// Work around a TS bug requiring an import of OpaqueToken without using it\nif (global.___TS_UNUSED) {\n    (function () {\n        return core_1.OpaqueToken;\n    })();\n}\nvar trace_1 = require(\"./trace\");\nvar platform_providers_1 = require(\"./platform-providers\");\nvar application_1 = require(\"tns-core-modules/application\");\nvar frame_1 = require(\"tns-core-modules/ui/frame\");\nvar page_1 = require(\"tns-core-modules/ui/page\");\nvar text_view_1 = require(\"tns-core-modules/ui/text-view\");\nrequire(\"nativescript-intl\");\nexports.onBeforeLivesync = new core_1.EventEmitter();\nexports.onAfterLivesync = new core_1.EventEmitter();\nvar lastBootstrappedModule;\nvar NativeScriptSanitizer = (function (_super) {\n    __extends(NativeScriptSanitizer, _super);\n    function NativeScriptSanitizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NativeScriptSanitizer.prototype.sanitize = function (_context, value) {\n        return value;\n    };\n    return NativeScriptSanitizer;\n}(core_1.Sanitizer));\nexports.NativeScriptSanitizer = NativeScriptSanitizer;\nexports.COMMON_PROVIDERS = [\n    platform_providers_1.defaultPageFactoryProvider,\n    { provide: core_1.Sanitizer, useClass: NativeScriptSanitizer },\n];\nvar NativeScriptPlatformRef = (function (_super) {\n    __extends(NativeScriptPlatformRef, _super);\n    function NativeScriptPlatformRef(platform, appOptions) {\n        var _this = _super.call(this) || this;\n        _this.platform = platform;\n        _this.appOptions = appOptions;\n        return _this;\n    }\n    NativeScriptPlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n        var _this = this;\n        this._bootstrapper = function () { return _this.platform.bootstrapModuleFactory(moduleFactory); };\n        this.bootstrapApp();\n        return null; // Make the compiler happy\n    };\n    NativeScriptPlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        this._bootstrapper = function () { return _this.platform.bootstrapModule(moduleType, compilerOptions); };\n        this.bootstrapApp();\n        return null; // Make the compiler happy\n    };\n    NativeScriptPlatformRef.prototype.bootstrapApp = function () {\n        var _this = this;\n        global.__onLiveSyncCore = function () { return _this.livesyncModule(); };\n        var mainPageEntry = this.createNavigationEntry(this._bootstrapper);\n        if (this.appOptions && typeof this.appOptions.cssFile === \"string\") {\n            // TODO: All exported fields in ES6 modules should be read-only\n            // Change the case when tns-core-modules become ES6 compatible and there is a legal way to set cssFile\n            application_1.setCssFileName(this.appOptions.cssFile);\n        }\n        application_1.start(mainPageEntry);\n    };\n    NativeScriptPlatformRef.prototype.livesyncModule = function () {\n        trace_1.rendererLog(\"ANGULAR LiveSync Started\");\n        exports.onBeforeLivesync.next(lastBootstrappedModule ? lastBootstrappedModule.get() : null);\n        var mainPageEntry = this.createNavigationEntry(this._bootstrapper, function (compRef) { return exports.onAfterLivesync.next(compRef); }, function (error) { return exports.onAfterLivesync.error(error); }, true);\n        mainPageEntry.animated = false;\n        mainPageEntry.clearHistory = true;\n        var frame = frame_1.topmost();\n        if (frame) {\n            if (frame.currentPage && frame.currentPage.modal) {\n                frame.currentPage.modal.closeModal();\n            }\n            frame.navigate(mainPageEntry);\n        }\n    };\n    NativeScriptPlatformRef.prototype.onDestroy = function (callback) {\n        this.platform.onDestroy(callback);\n    };\n    Object.defineProperty(NativeScriptPlatformRef.prototype, \"injector\", {\n        get: function () {\n            return this.platform.injector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    NativeScriptPlatformRef.prototype.destroy = function () {\n        this.platform.destroy();\n    };\n    Object.defineProperty(NativeScriptPlatformRef.prototype, \"destroyed\", {\n        get: function () {\n            return this.platform.destroyed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NativeScriptPlatformRef.prototype.createNavigationEntry = function (bootstrapAction, resolve, reject, isLivesync, isReboot) {\n        var _this = this;\n        if (isLivesync === void 0) { isLivesync = false; }\n        if (isReboot === void 0) { isReboot = false; }\n        var pageFactory = this.platform.injector.get(platform_providers_1.PAGE_FACTORY);\n        var navEntry = {\n            create: function () {\n                var page = pageFactory({ isBootstrap: true, isLivesync: isLivesync });\n                platform_providers_1.setRootPage(page);\n                if (_this.appOptions) {\n                    page.actionBarHidden = _this.appOptions.startPageActionBarHidden;\n                }\n                var initHandler = function () {\n                    page.off(page_1.Page.navigatingToEvent, initHandler);\n                    // profiling.stop(\"application-start\");\n                    trace_1.rendererLog(\"Page loaded\");\n                    // profiling.start(\"ng-bootstrap\");\n                    trace_1.rendererLog(\"BOOTSTRAPPING...\");\n                    bootstrapAction().then(function (moduleRef) {\n                        // profiling.stop(\"ng-bootstrap\");\n                        trace_1.rendererLog(\"ANGULAR BOOTSTRAP DONE.\");\n                        lastBootstrappedModule = new WeakRef(moduleRef);\n                        if (resolve) {\n                            resolve(moduleRef);\n                        }\n                        return moduleRef;\n                    }, function (err) {\n                        trace_1.rendererError(\"ERROR BOOTSTRAPPING ANGULAR\");\n                        var errorMessage = err.message + \"\\n\\n\" + err.stack;\n                        trace_1.rendererError(errorMessage);\n                        var view = new text_view_1.TextView();\n                        view.text = errorMessage;\n                        page.content = view;\n                        if (reject) {\n                            reject(err);\n                        }\n                    });\n                };\n                page.on(page_1.Page.navigatingToEvent, initHandler);\n                return page;\n            }\n        };\n        if (isReboot) {\n            navEntry.animated = false;\n            navEntry.clearHistory = true;\n        }\n        return navEntry;\n    };\n    NativeScriptPlatformRef.prototype.liveSyncApp = function () {\n    };\n    return NativeScriptPlatformRef;\n}(core_1.PlatformRef));\nexports.NativeScriptPlatformRef = NativeScriptPlatformRef;\n//# sourceMappingURL=platform-common.js.map"
    },
    {
      "id": 179,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router-url-tree.js",
      "name": "./~/nativescript-angular/router-url-tree.js",
      "index": 273,
      "index2": 270,
      "size": 2718,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link-active.js",
      "issuerId": 182,
      "issuerName": "./~/nativescript-angular/router/ns-router-link-active.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 182,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link-active.js",
          "module": "./~/nativescript-angular/router/ns-router-link-active.js",
          "moduleName": "./~/nativescript-angular/router/ns-router-link-active.js",
          "type": "cjs require",
          "userRequest": "../router-url-tree",
          "loc": "4:24-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:forin */\n// Copied unexported functions from @angular/router/src/url_tree\nvar router_1 = require(\"@angular/router\");\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalSegmentGroups(container.root, containee.root);\n    }\n    else {\n        return containsSegmentGroup(container.root, containee.root);\n    }\n}\nexports.containsTree = containsTree;\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments)) {\n        return false;\n    }\n    if (container.numberOfChildren !== containee.numberOfChildren) {\n        return false;\n    }\n    for (var c in containee.children) {\n        if (!container.children[c]) {\n            return false;\n        }\n        if (!equalSegmentGroups(container.children[c], containee.children[c])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths)) {\n            return false;\n        }\n        if (containee.hasChildren()) {\n            return false;\n        }\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths)) {\n            return false;\n        }\n        for (var c in containee.children) {\n            if (!container.children[c]) {\n                return false;\n            }\n            if (!containsSegmentGroup(container.children[c], containee.children[c])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current)) {\n            return false;\n        }\n        if (!container.children[router_1.PRIMARY_OUTLET]) {\n            return false;\n        }\n        return containsSegmentGroupHelper(container.children[router_1.PRIMARY_OUTLET], containee, next);\n    }\n}\nfunction equalPath(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i].path !== b[i].path) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalPath = equalPath;\n//# sourceMappingURL=router-url-tree.js.map"
    },
    {
      "id": 180,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-module-factory-loader.js",
      "name": "./~/nativescript-angular/router/ns-module-factory-loader.js",
      "index": 275,
      "index2": 273,
      "size": 2021,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/ns-module-factory-loader",
          "loc": "17:33-77"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar file_system_1 = require(\"tns-core-modules/file-system\");\nvar SEPARATOR = \"#\";\nvar NSModuleFactoryLoader = (function () {\n    function NSModuleFactoryLoader(compiler, ngModuleLoader) {\n        this.compiler = compiler;\n        this.ngModuleLoader = ngModuleLoader;\n        this.offlineMode = compiler instanceof core_1.Compiler;\n    }\n    NSModuleFactoryLoader.prototype.load = function (path) {\n        if (this.offlineMode) {\n            return this.ngModuleLoader.load(path);\n        }\n        else {\n            return this.loadAndCompile(path);\n        }\n    };\n    NSModuleFactoryLoader.prototype.loadAndCompile = function (path) {\n        var _a = splitPath(path), modulePath = _a.modulePath, exportName = _a.exportName;\n        var loadedModule = global.require(modulePath)[exportName];\n        checkNotEmpty(loadedModule, modulePath, exportName);\n        return Promise.resolve(this.compiler.compileModuleAsync(loadedModule));\n    };\n    return NSModuleFactoryLoader;\n}());\nNSModuleFactoryLoader = __decorate([\n    core_1.Injectable(),\n    __metadata(\"design:paramtypes\", [core_1.Compiler, core_1.SystemJsNgModuleLoader])\n], NSModuleFactoryLoader);\nexports.NSModuleFactoryLoader = NSModuleFactoryLoader;\nfunction splitPath(path) {\n    var _a = path.split(SEPARATOR), modulePath = _a[0], exportName = _a[1];\n    modulePath = getAbsolutePath(modulePath);\n    if (typeof exportName === \"undefined\") {\n        exportName = \"default\";\n    }\n    return { modulePath: modulePath, exportName: exportName };\n}\nfunction getAbsolutePath(relativePath) {\n    return file_system_1.path.normalize(file_system_1.path.join(file_system_1.knownFolders.currentApp().path, relativePath));\n}\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n//# sourceMappingURL=ns-module-factory-loader.js.map"
    },
    {
      "id": 181,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-platform-location.js",
      "name": "./~/nativescript-angular/router/ns-platform-location.js",
      "index": 274,
      "index2": 272,
      "size": 2655,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/ns-platform-location",
          "loc": "10:29-69"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar ns_location_strategy_1 = require(\"./ns-location-strategy\");\nvar common_1 = require(\"@angular/common\");\nvar core_1 = require(\"@angular/core\");\nvar trace_1 = require(\"../trace\");\nvar NativescriptPlatformLocation = (function (_super) {\n    __extends(NativescriptPlatformLocation, _super);\n    function NativescriptPlatformLocation(locationStartegy) {\n        var _this = _super.call(this) || this;\n        _this.locationStartegy = locationStartegy;\n        trace_1.routerLog(\"NativescriptPlatformLocation.constructor()\");\n        return _this;\n    }\n    NativescriptPlatformLocation.prototype.getBaseHrefFromDOM = function () {\n        return \"/\";\n    };\n    NativescriptPlatformLocation.prototype.onPopState = function (fn) {\n        this.locationStartegy.onPopState(fn);\n    };\n    NativescriptPlatformLocation.prototype.onHashChange = function (_fn) {\n    };\n    Object.defineProperty(NativescriptPlatformLocation.prototype, \"search\", {\n        get: function () {\n            return \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NativescriptPlatformLocation.prototype, \"hash\", {\n        get: function () {\n            return \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NativescriptPlatformLocation.prototype, \"pathname\", {\n        get: function () {\n            return this.locationStartegy.path();\n        },\n        set: function (_newPath) {\n            throw new Error(\"NativescriptPlatformLocation set pathname - not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NativescriptPlatformLocation.prototype.pushState = function (state, title, url) {\n        this.locationStartegy.pushState(state, title, url, null);\n    };\n    NativescriptPlatformLocation.prototype.replaceState = function (state, title, url) {\n        this.locationStartegy.replaceState(state, title, url, null);\n    };\n    NativescriptPlatformLocation.prototype.forward = function () {\n        throw new Error(\"NativescriptPlatformLocation.forward() - not implemented\");\n    };\n    NativescriptPlatformLocation.prototype.back = function () {\n        this.locationStartegy.back();\n    };\n    return NativescriptPlatformLocation;\n}(common_1.PlatformLocation));\nNativescriptPlatformLocation = __decorate([\n    core_1.Injectable(),\n    __metadata(\"design:paramtypes\", [ns_location_strategy_1.NSLocationStrategy])\n], NativescriptPlatformLocation);\nexports.NativescriptPlatformLocation = NativescriptPlatformLocation;\n//# sourceMappingURL=ns-platform-location.js.map"
    },
    {
      "id": 182,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router/ns-router-link-active.js",
      "name": "./~/nativescript-angular/router/ns-router-link-active.js",
      "index": 272,
      "index2": 271,
      "size": 4404,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
      "issuerId": 172,
      "issuerName": "./~/nativescript-angular/router.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 172,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/router.js",
          "module": "./~/nativescript-angular/router.js",
          "moduleName": "./~/nativescript-angular/router.js",
          "type": "cjs require",
          "userRequest": "./router/ns-router-link-active",
          "loc": "7:30-71"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar router_url_tree_1 = require(\"../router-url-tree\");\nvar ns_router_link_1 = require(\"./ns-router-link\");\n/**\n * The NSRouterLinkActive directive lets you add a CSS class to an element when the link\"s route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either \"/user\" or \"/user/bob\", the active-link class will\n * be added to the component. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"class1 class2\">Bob</a>\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"[\"class1\", \"class2\"]\">Bob</a>\n * ```\n *\n * You can configure NSRouterLinkActive by passing `exact: true`. This will add the\n * classes only when the url matches the link exactly.\n *\n * ```\n * <a [nsRouterLink]=\"/user/bob\" [nsRouterLinkActive]=\"active-link\"\n * [nsRouterLinkActiveOptions]=\"{exact: true}\">Bob</a>\n * ```\n *\n * Finally, you can apply the NSRouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div [nsRouterLinkActive]=\"active-link\" [nsRouterLinkActiveOptions]=\"{exact: true}\">\n *   <a [nsRouterLink]=\"/user/jim\">Jim</a>\n *   <a [nsRouterLink]=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either \"/user/jim\" or\n * \"/user/bob\".\n *\n * @stable\n */\nvar NSRouterLinkActive = (function () {\n    function NSRouterLinkActive(router, element, renderer) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.classes = [];\n        this.nsRouterLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof router_1.NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    NSRouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function () { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(NSRouterLinkActive.prototype, \"nsRouterLinkActive\", {\n        set: function (data) {\n            if (Array.isArray(data)) {\n                this.classes = data;\n            }\n            else {\n                this.classes = data.split(\" \");\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NSRouterLinkActive.prototype.ngOnChanges = function (_) { this.update(); };\n    NSRouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    NSRouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links) {\n            return;\n        }\n        var currentUrlTree = this.router.parseUrl(this.router.url);\n        var isActiveLinks = this.reduceList(currentUrlTree, this.links);\n        this.classes.forEach(function (c) { return _this.renderer.setElementClass(_this.element.nativeElement, c, isActiveLinks); });\n    };\n    NSRouterLinkActive.prototype.reduceList = function (currentUrlTree, q) {\n        var _this = this;\n        return q.reduce(function (res, link) {\n            return res || router_url_tree_1.containsTree(currentUrlTree, link.urlTree, _this.nsRouterLinkActiveOptions.exact);\n        }, false);\n    };\n    return NSRouterLinkActive;\n}());\n__decorate([\n    core_1.ContentChildren(ns_router_link_1.NSRouterLink),\n    __metadata(\"design:type\", core_1.QueryList)\n], NSRouterLinkActive.prototype, \"links\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], NSRouterLinkActive.prototype, \"nsRouterLinkActiveOptions\", void 0);\n__decorate([\n    core_1.Input(\"nsRouterLinkActive\"),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], NSRouterLinkActive.prototype, \"nsRouterLinkActive\", null);\nNSRouterLinkActive = __decorate([\n    core_1.Directive({ selector: \"[nsRouterLinkActive]\" }),\n    __metadata(\"design:paramtypes\", [router_1.Router, core_1.ElementRef, core_1.Renderer])\n], NSRouterLinkActive);\nexports.NSRouterLinkActive = NSRouterLinkActive;\n//# sourceMappingURL=ns-router-link-active.js.map"
    },
    {
      "id": 183,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
      "name": "./app/app.component.ngfactory.ts",
      "index": 240,
      "index2": 240,
      "size": 8188,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "./app.component.ngfactory",
          "loc": "17:14-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar import0 = require(\"@angular/core\");\nvar import1 = require(\"../node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory\");\nvar import2 = require(\"nativescript-telerik-ui-pro/chart/angular/chart-directives\");\nvar import3 = require(\"./app.component\");\nvar styles_AppComponent = [];\nexports.RenderType_AppComponent = import0.ɵcrt({\n    encapsulation: 2,\n    styles: styles_AppComponent,\n    data: {}\n});\nfunction View_AppComponent_0(l) {\n    return import0.ɵvid(0, [\n        (l()(), import0.ɵted(null, ['\\n        '])),\n        (l()(), import0.ɵeld(0, null, null, 20, 'RadCartesianChart', [\n            [\n                'id',\n                'cartesianChart'\n            ],\n            [\n                'tkExampleTitle',\n                ''\n            ],\n            [\n                'tkToggleNavButton',\n                ''\n            ]\n        ], null, null, null, import1.View_RadCartesianChartComponent_0, import1.RenderType_RadCartesianChartComponent)),\n        import0.ɵdid(24576, null, 0, import2.RadCartesianChartComponent, [import0.ElementRef], null, null),\n        (l()(), import0.ɵted(null, ['\\n            '])),\n        (l()(), import0.ɵeld(0, null, null, 2, 'CategoricalAxis', [[\n                'tkCartesianHorizontalAxis',\n                ''\n            ]\n        ], null, null, null, null, null)),\n        import0.ɵdid(40960, null, 0, import2.TKCartesianHorizontalAxisDirective, [\n            import2.RadCartesianChartComponent,\n            import0.ElementRef\n        ], null, null),\n        import0.ɵdid(8192, null, 0, import2.CategoricalAxisDirective, [], null, null),\n        (l()(), import0.ɵted(null, ['\\n            '])),\n        (l()(), import0.ɵeld(0, null, null, 2, 'LinearAxis', [\n            [\n                'id',\n                'verBarAxis'\n            ],\n            [\n                'tkCartesianVerticalAxis',\n                ''\n            ]\n        ], null, null, null, null, null)),\n        import0.ɵdid(40960, null, 0, import2.TKCartesianVerticalAxisDirective, [\n            import2.RadCartesianChartComponent,\n            import0.ElementRef\n        ], null, null),\n        import0.ɵdid(8192, null, 0, import2.LinearAxisDirective, [], null, null),\n        (l()(), import0.ɵted(null, ['\\n\\n            '])),\n        (l()(), import0.ɵeld(0, null, null, 2, 'BarSeries', [\n            [\n                'categoryProperty',\n                'Country'\n            ],\n            [\n                'tkCartesianSeries',\n                ''\n            ],\n            [\n                'valueProperty',\n                'Amount'\n            ]\n        ], [[\n                8,\n                'items',\n                0\n            ]\n        ], null, null, null, null)),\n        import0.ɵdid(8192, null, 0, import2.BarSeriesDirective, [import0.ElementRef], null, null),\n        import0.ɵdid(40960, null, 0, import2.TKCartesianSeriesDirective, [\n            import2.RadCartesianChartComponent,\n            import0.ElementRef\n        ], null, null),\n        (l()(), import0.ɵted(null, ['\\n            '])),\n        (l()(), import0.ɵted(null, ['\\n            '])),\n        (l()(), import0.ɵeld(0, null, null, 2, 'ChartPlotBandAnnotation', [\n            [\n                'axisId',\n                'verBarAxis'\n            ],\n            [\n                'fillColor',\n                '#DDFFFF00'\n            ],\n            [\n                'maxValue',\n                '4'\n            ],\n            [\n                'minValue',\n                '2'\n            ],\n            [\n                'strokeColor',\n                'Red'\n            ],\n            [\n                'strokeDashPattern',\n                '3,3,5,5'\n            ],\n            [\n                'strokeWidth',\n                '2'\n            ],\n            [\n                'tkCartesianAnnotations',\n                ''\n            ],\n            [\n                'zPosition',\n                'AboveSeries'\n            ]\n        ], null, null, null, null, null)),\n        import0.ɵdid(40960, null, 0, import2.TKCartesianAnnotationsDirective, [\n            import2.RadCartesianChartComponent,\n            import0.ElementRef\n        ], null, null),\n        import0.ɵdid(8192, null, 0, import2.ChartPlotBandAnnotationDirective, [], null, null),\n        (l()(), import0.ɵted(null, ['\\n            '])),\n        (l()(), import0.ɵted(null, ['\\n        '])),\n        (l()(), import0.ɵted(null, ['\\n    ']))\n    ], function (ck, v) {\n        ck(v, 5, 0);\n        ck(v, 9, 0);\n        ck(v, 14, 0);\n        ck(v, 18, 0);\n    }, function (ck, v) {\n        var co = v.component;\n        var currVal_0 = co.categoricalSource;\n        ck(v, 12, 0, currVal_0);\n    });\n}\nexports.View_AppComponent_0 = View_AppComponent_0;\nfunction View_AppComponent_Host_0(l) {\n    return import0.ɵvid(0, [\n        (l()(), import0.ɵeld(0, null, null, 1, 'ns-app', [], null, null, null, View_AppComponent_0, exports.RenderType_AppComponent)),\n        import0.ɵdid(57344, null, 0, import3.AppComponent, [], null, null)\n    ], function (ck, v) {\n        ck(v, 1, 0);\n    }, null);\n}\nexports.AppComponentNgFactory = import0.ɵccf('ns-app', import3.AppComponent, View_AppComponent_Host_0, {}, {}, []);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9hcHAvYXBwLmNvbXBvbmVudC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvYXBwL2FwcC5jb21wb25lbnQudHMiLCJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvYXBwL2FwcC5jb21wb25lbnQudHMuQXBwQ29tcG9uZW50Lmh0bWwiLCJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvYXBwL2FwcC5jb21wb25lbnQudHMuQXBwQ29tcG9uZW50X0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiXG4gICAgICAgIDxSYWRDYXJ0ZXNpYW5DaGFydCBpZD1cImNhcnRlc2lhbkNoYXJ0XCIgdGtFeGFtcGxlVGl0bGUgdGtUb2dnbGVOYXZCdXR0b24+XG4gICAgICAgICAgICA8Q2F0ZWdvcmljYWxBeGlzIHRrQ2FydGVzaWFuSG9yaXpvbnRhbEF4aXM+PC9DYXRlZ29yaWNhbEF4aXM+XG4gICAgICAgICAgICA8TGluZWFyQXhpcyB0a0NhcnRlc2lhblZlcnRpY2FsQXhpcyBpZD1cInZlckJhckF4aXNcIj48L0xpbmVhckF4aXM+XG5cbiAgICAgICAgICAgIDxCYXJTZXJpZXMgdGtDYXJ0ZXNpYW5TZXJpZXMgW2l0ZW1zXT1cImNhdGVnb3JpY2FsU291cmNlXCIgY2F0ZWdvcnlQcm9wZXJ0eT1cIkNvdW50cnlcIiB2YWx1ZVByb3BlcnR5PVwiQW1vdW50XCI+PC9CYXJTZXJpZXM+XG4gICAgICAgICAgICA8IS0tID4+IGNoYXJ0LWFuZ3VsYXItcGxvdC1iYW5kLWFubm90YXRpb25zIC0tPlxuICAgICAgICAgICAgPENoYXJ0UGxvdEJhbmRBbm5vdGF0aW9uIHRrQ2FydGVzaWFuQW5ub3RhdGlvbnMgYXhpc0lkPVwidmVyQmFyQXhpc1wiIG1pblZhbHVlPVwiMlwiIG1heFZhbHVlPVwiNFwiIHpQb3NpdGlvbj1cIkFib3ZlU2VyaWVzXCIgc3Ryb2tlV2lkdGg9XCIyXCJcbiAgICAgICAgICAgICAgICBmaWxsQ29sb3I9XCIjRERGRkZGMDBcIiBzdHJva2VDb2xvcj1cIlJlZFwiIHN0cm9rZURhc2hQYXR0ZXJuPVwiMywzLDUsNVwiPjwvQ2hhcnRQbG90QmFuZEFubm90YXRpb24+XG4gICAgICAgICAgICA8IS0tIDw8IGNoYXJ0LWFuZ3VsYXItcGxvdC1iYW5kLWFubm90YXRpb25zIC0tPlxuICAgICAgICA8L1JhZENhcnRlc2lhbkNoYXJ0PlxuICAgICIsIjxucy1hcHA+PC9ucy1hcHA+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDQUE7SUFDUTtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQUE7SUFBd0U7TUFDcEU7UUFBQTtRQUFBO01BQUE7SUFBQTtnQkFBQTs7O0lBQUE7S0FBQTtnQkFBQTtJQUE2RDtJQUM3RDtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQUE7OztJQUFBO0tBQUE7Z0JBQUE7SUFBaUU7SUFFakU7TUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7TUFBQTs7SUFBQTtPQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtnQkFBQTtnQkFBQTs7O0lBQUE7S0FBQTtJQUF1SDtJQUN4RTtJQUMvQztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQUE7OztJQUFBO0tBQUE7Z0JBQUE7SUFDa0c7SUFDbkQ7SUFDL0I7OztJQVJoQjtJQUNBO0lBRUE7SUFFQTs7O0lBRjZCO0lBQTdCLFVBQTZCLFNBQTdCOzs7OztJQ0xaO2dCQUFBOzs7SUFBQTs7OyJ9\n//# sourceMappingURL=app.component.ngfactory.js.map"
    },
    {
      "id": 184,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ts",
      "name": "./app/app.component.ts",
      "index": 242,
      "index2": 239,
      "size": 1540,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
      "issuerId": 183,
      "issuerName": "./app/app.component.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 183,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
          "module": "./app/app.component.ngfactory.ts",
          "moduleName": "./app/app.component.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "./app.component",
          "loc": "12:14-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_array_1 = require(\"data/observable-array\");\nvar Country = (function () {\n    function Country(Country, Amount, SecondVal, ThirdVal, Impact, Year) {\n        this.Country = Country;\n        this.Amount = Amount;\n        this.SecondVal = SecondVal;\n        this.ThirdVal = ThirdVal;\n        this.Impact = Impact;\n        this.Year = Year;\n    }\n    return Country;\n}());\nvar AppComponent = (function () {\n    function AppComponent() {\n    }\n    Object.defineProperty(AppComponent.prototype, \"categoricalSource\", {\n        get: function () {\n            return this._categoricalSource;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AppComponent.prototype.ngOnInit = function () {\n        this._categoricalSource = new observable_array_1.ObservableArray([\n            { Country: \"Germany\", Amount: 15, SecondVal: 14, ThirdVal: 24, Impact: 0, Year: 0 },\n            { Country: \"France\", Amount: 13, SecondVal: 23, ThirdVal: 25, Impact: 0, Year: 0 },\n            { Country: \"Bulgaria\", Amount: 24, SecondVal: 17, ThirdVal: 23, Impact: 0, Year: 0 },\n            { Country: \"Spain\", Amount: 11, SecondVal: 19, ThirdVal: 24, Impact: 0, Year: 0 },\n            { Country: \"USA\", Amount: 18, SecondVal: 8, ThirdVal: 21, Impact: 0, Year: 0 }\n        ]);\n    };\n    AppComponent.ctorParameters = function () { return []; };\n    return AppComponent;\n}());\nexports.AppComponent = AppComponent;\n//# sourceMappingURL=app.component.js.map"
    },
    {
      "id": 185,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ts",
      "name": "./app/app.module.ts",
      "index": 142,
      "index2": 140,
      "size": 238,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "./app.module",
          "loc": "10:14-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AppModule = (function () {\n    function AppModule() {\n    }\n    return AppModule;\n}());\nexports.AppModule = AppModule;\n//# sourceMappingURL=app.module.js.map"
    },
    {
      "id": 186,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/main.aot.ts",
      "name": "./app/main.aot.ts",
      "index": 0,
      "index2": 242,
      "size": 465,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "usedExports": true,
      "providedExports": null,
      "depth": 0,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// this import should be first in order to load some required settings (like globals and reflect-metadata)\nvar platform_static_1 = require(\"nativescript-angular/platform-static\");\nvar app_module_ngfactory_1 = require(\"./app.module.ngfactory\");\nplatform_static_1.platformNativeScript().bootstrapModuleFactory(app_module_ngfactory_1.AppModuleNgFactory);\n//# sourceMappingURL=main.aot.js.map"
    },
    {
      "id": 187,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/vendor.ts",
      "name": "./app/vendor.ts",
      "index": 243,
      "index2": 275,
      "size": 525,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "usedExports": true,
      "providedExports": null,
      "depth": 0,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./vendor-platform\");\nrequire(\"reflect-metadata\");\nrequire(\"@angular/platform-browser\");\nrequire(\"@angular/core\");\nrequire(\"@angular/common\");\nrequire(\"@angular/forms\");\nrequire(\"@angular/http\");\nrequire(\"@angular/router\");\nrequire(\"nativescript-angular/platform-static\");\nrequire(\"nativescript-angular/forms\");\nrequire(\"nativescript-angular/router\");\nrequire(\"nativescript-telerik-ui-pro/chart/angular\");\n//# sourceMappingURL=vendor.js.map"
    },
    {
      "id": 188,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/common/detached-loader.ngfactory.ts",
      "name": "./~/nativescript-angular/common/detached-loader.ngfactory.ts",
      "index": 239,
      "index2": 237,
      "size": 2499,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
      "issuerId": 173,
      "issuerName": "./app/app.module.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 173,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.module.ngfactory.ts",
          "module": "./app/app.module.ngfactory.ts",
          "moduleName": "./app/app.module.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "../node_modules/nativescript-angular/common/detached-loader.ngfactory",
          "loc": "16:14-94"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar import0 = require(\"@angular/core\");\nvar import1 = require(\"nativescript-angular/common/detached-loader\");\nvar styles_DetachedLoader = [];\nexports.RenderType_DetachedLoader = import0.ɵcrt({\n    encapsulation: 2,\n    styles: styles_DetachedLoader,\n    data: {}\n});\nfunction View_DetachedLoader_0(l) {\n    return import0.ɵvid(0, [(l()(), import0.ɵeld(0, [[\n                'loader',\n                1\n            ]\n        ], null, 0, 'Placeholder', [], null, null, null, null, null))], null, null);\n}\nexports.View_DetachedLoader_0 = View_DetachedLoader_0;\nfunction View_DetachedLoader_Host_0(l) {\n    return import0.ɵvid(0, [\n        (l()(), import0.ɵeld(8388608, null, null, 1, 'DetachedContainer', [], null, null, null, View_DetachedLoader_0, exports.RenderType_DetachedLoader)),\n        import0.ɵdid(24576, null, 0, import1.DetachedLoader, [\n            import0.ComponentFactoryResolver,\n            import0.ChangeDetectorRef,\n            import0.ViewContainerRef\n        ], null, null)\n    ], null, null);\n}\nexports.DetachedLoaderNgFactory = import0.ɵccf('DetachedContainer', import1.DetachedLoader, View_DetachedLoader_Host_0, {}, {}, []);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9ub2RlX21vZHVsZXMvbmF0aXZlc2NyaXB0LWFuZ3VsYXIvY29tbW9uL2RldGFjaGVkLWxvYWRlci5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvbm9kZV9tb2R1bGVzL25hdGl2ZXNjcmlwdC1hbmd1bGFyL2NvbW1vbi9kZXRhY2hlZC1sb2FkZXIuZC50cyIsIm5nOi8vL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9ub2RlX21vZHVsZXMvbmF0aXZlc2NyaXB0LWFuZ3VsYXIvY29tbW9uL2RldGFjaGVkLWxvYWRlci5kLnRzLkRldGFjaGVkTG9hZGVyLmh0bWwiLCJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvbm9kZV9tb2R1bGVzL25hdGl2ZXNjcmlwdC1hbmd1bGFyL2NvbW1vbi9kZXRhY2hlZC1sb2FkZXIuZC50cy5EZXRhY2hlZExvYWRlcl9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxQbGFjZWhvbGRlciAjbG9hZGVyPjwvUGxhY2Vob2xkZXI+IiwiPERldGFjaGVkQ29udGFpbmVyPjwvRGV0YWNoZWRDb250YWluZXI+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQ0FBO1FBQUE7UUFBQTtNQUFBO0VBQUE7Ozs7SUNBQTtnQkFBQTs7OztJQUFBO0tBQUE7Ozs7In0=\n//# sourceMappingURL=detached-loader.ngfactory.js.map"
    },
    {
      "id": 189,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
      "name": "./~/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory.ts",
      "index": 241,
      "index2": 238,
      "size": 4365,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
      "issuerId": 183,
      "issuerName": "./app/app.component.ngfactory.ts",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 183,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/tns-aot-loader.js!/home/svlaeva@bedford.progress.com/chart/node_modules/@ngtools/webpack/src/index.js!/home/svlaeva@bedford.progress.com/chart/app/app.component.ngfactory.ts",
          "module": "./app/app.component.ngfactory.ts",
          "moduleName": "./app/app.component.ngfactory.ts",
          "type": "cjs require",
          "userRequest": "../node_modules/nativescript-telerik-ui-pro/chart/angular/chart-directives.ngfactory",
          "loc": "10:14-109"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar import0 = require(\"@angular/core\");\nvar import1 = require(\"nativescript-telerik-ui-pro/chart/angular/chart-directives\");\nvar NativeScriptUIChartModuleInjector = (function (_super) {\n    __extends(NativeScriptUIChartModuleInjector, _super);\n    function NativeScriptUIChartModuleInjector(parent) {\n        return _super.call(this, parent, [], []) || this;\n    }\n    NativeScriptUIChartModuleInjector.prototype.createInternal = function () {\n        this._NativeScriptUIChartModule_0 = new import1.NativeScriptUIChartModule();\n        return this._NativeScriptUIChartModule_0;\n    };\n    NativeScriptUIChartModuleInjector.prototype.getInternal = function (token, notFoundResult) {\n        if ((token === import1.NativeScriptUIChartModule)) {\n            return this._NativeScriptUIChartModule_0;\n        }\n        return notFoundResult;\n    };\n    NativeScriptUIChartModuleInjector.prototype.destroyInternal = function () {\n    };\n    return NativeScriptUIChartModuleInjector;\n}(import0.ɵNgModuleInjector));\nexports.NativeScriptUIChartModuleNgFactory = new import0.NgModuleFactory(NativeScriptUIChartModuleInjector, import1.NativeScriptUIChartModule);\nvar styles_RadCartesianChartComponent = [];\nexports.RenderType_RadCartesianChartComponent = import0.ɵcrt({\n    encapsulation: 2,\n    styles: styles_RadCartesianChartComponent,\n    data: {}\n});\nfunction View_RadCartesianChartComponent_0(l) {\n    return import0.ɵvid(0, [], null, null);\n}\nexports.View_RadCartesianChartComponent_0 = View_RadCartesianChartComponent_0;\nfunction View_RadCartesianChartComponent_Host_0(l) {\n    return import0.ɵvid(0, [\n        (l()(), import0.ɵeld(0, null, null, 1, 'RadCartesianChart', [], null, null, null, View_RadCartesianChartComponent_0, exports.RenderType_RadCartesianChartComponent)),\n        import0.ɵdid(24576, null, 0, import1.RadCartesianChartComponent, [import0.ElementRef], null, null)\n    ], null, null);\n}\nexports.RadCartesianChartComponentNgFactory = import0.ɵccf('RadCartesianChart', import1.RadCartesianChartComponent, View_RadCartesianChartComponent_Host_0, {}, {}, []);\nvar styles_RadPieChartComponent = [];\nexports.RenderType_RadPieChartComponent = import0.ɵcrt({\n    encapsulation: 2,\n    styles: styles_RadPieChartComponent,\n    data: {}\n});\nfunction View_RadPieChartComponent_0(l) {\n    return import0.ɵvid(0, [], null, null);\n}\nexports.View_RadPieChartComponent_0 = View_RadPieChartComponent_0;\nfunction View_RadPieChartComponent_Host_0(l) {\n    return import0.ɵvid(0, [\n        (l()(), import0.ɵeld(0, null, null, 1, 'RadPieChart', [], null, null, null, View_RadPieChartComponent_0, exports.RenderType_RadPieChartComponent)),\n        import0.ɵdid(24576, null, 0, import1.RadPieChartComponent, [import0.ElementRef], null, null)\n    ], null, null);\n}\nexports.RadPieChartComponentNgFactory = import0.ɵccf('RadPieChart', import1.RadPieChartComponent, View_RadPieChartComponent_Host_0, {}, {}, []);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9ub2RlX21vZHVsZXMvbmF0aXZlc2NyaXB0LXRlbGVyaWstdWktcHJvL2NoYXJ0L2FuZ3VsYXIvY2hhcnQtZGlyZWN0aXZlcy5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL3N2bGFldmFAYmVkZm9yZC5wcm9ncmVzcy5jb20vY2hhcnQvbm9kZV9tb2R1bGVzL25hdGl2ZXNjcmlwdC10ZWxlcmlrLXVpLXByby9jaGFydC9hbmd1bGFyL2NoYXJ0LWRpcmVjdGl2ZXMuZC50cyIsIm5nOi8vL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9ub2RlX21vZHVsZXMvbmF0aXZlc2NyaXB0LXRlbGVyaWstdWktcHJvL2NoYXJ0L2FuZ3VsYXIvY2hhcnQtZGlyZWN0aXZlcy5kLnRzLlJhZENhcnRlc2lhbkNoYXJ0Q29tcG9uZW50X0hvc3QuaHRtbCIsIm5nOi8vL2hvbWUvc3ZsYWV2YUBiZWRmb3JkLnByb2dyZXNzLmNvbS9jaGFydC9ub2RlX21vZHVsZXMvbmF0aXZlc2NyaXB0LXRlbGVyaWstdWktcHJvL2NoYXJ0L2FuZ3VsYXIvY2hhcnQtZGlyZWN0aXZlcy5kLnRzLlJhZFBpZUNoYXJ0Q29tcG9uZW50X0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiPFJhZENhcnRlc2lhbkNoYXJ0PjwvUmFkQ2FydGVzaWFuQ2hhcnQ+IiwiPFJhZFBpZUNoYXJ0PjwvUmFkUGllQ2hhcnQ+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDQUE7Z0JBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDQUE7Z0JBQUE7Ozs7In0=\n//# sourceMappingURL=chart-directives.ngfactory.js.map"
    },
    {
      "id": 190,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/index.js",
      "name": "./~/nativescript-intl/index.js",
      "index": 138,
      "index2": 137,
      "size": 481,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
      "issuerId": 178,
      "issuerName": "./~/nativescript-angular/platform-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 178,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/platform-common.js",
          "module": "./~/nativescript-angular/platform-common.js",
          "moduleName": "./~/nativescript-angular/platform-common.js",
          "type": "cjs require",
          "userRequest": "nativescript-intl",
          "loc": "23:0-28"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nativescript_intl_1 = require(\"./nativescript-intl\");\nvar nativescript_intl_2 = require(\"./nativescript-intl\");\nexports.DateTimeFormat = nativescript_intl_2.DateTimeFormat;\nexports.NumberFormat = nativescript_intl_2.NumberFormat;\nif (!global.Intl) {\n    global.Intl = {};\n}\nglobal.Intl.DateTimeFormat = nativescript_intl_1.DateTimeFormat;\nglobal.Intl.NumberFormat = nativescript_intl_1.NumberFormat;\n"
    },
    {
      "id": 191,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/nativescript-intl-common.js",
      "name": "./~/nativescript-intl/nativescript-intl-common.js",
      "index": 140,
      "index2": 135,
      "size": 8770,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/nativescript-intl.android.js",
      "issuerId": 92,
      "issuerName": "./~/nativescript-intl/nativescript-intl.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 92,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-intl/nativescript-intl.android.js",
          "module": "./~/nativescript-intl/nativescript-intl.android.js",
          "moduleName": "./~/nativescript-intl/nativescript-intl.android.js",
          "type": "cjs require",
          "userRequest": "./nativescript-intl-common",
          "loc": "3:33-70"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NUMERIC = \"numeric\";\nexports.LONG = \"long\";\nexports.SHORT = \"short\";\nexports.TWODIGIT = \"2-digit\";\nexports.FULL = \"full\";\nexports.resolvedPatterns = new Map();\nvar DateTimeFormat = (function () {\n    function DateTimeFormat(locale, options, pattern) {\n        this.locale = locale;\n        this.options = options;\n        this.pattern = pattern;\n        this.dateTimeFormatElements = {\n            \"M\": \"month\",\n            \"E\": \"weekday\",\n            \"c\": \"weekday\",\n            \"d\": \"day\",\n            \"y\": \"year\",\n            \"h\": \"hour\",\n            \"H\": \"hour\",\n            \"m\": \"minute\",\n            \"s\": \"second\",\n            \"z\": \"timeZoneName\",\n            \"G\": \"era\",\n            \"a\": \"hour12\"\n        };\n        if (options && options.minute === exports.NUMERIC) {\n            this.options.minute = exports.TWODIGIT;\n        }\n        if (options && options.hour === exports.NUMERIC) {\n            this.options.hour = exports.TWODIGIT;\n        }\n    }\n    DateTimeFormat.prototype.hasTimeOptions = function (options) {\n        return options.hour !== undefined || options.minute !== undefined || options.second !== undefined;\n    };\n    DateTimeFormat.prototype.hasDateOptions = function (options) {\n        return options.weekday !== undefined ||\n            options.year !== undefined ||\n            options.month !== undefined ||\n            options.day !== undefined;\n    };\n    DateTimeFormat.prototype.useFullDatePattern = function (intlOptions) {\n        var i;\n        var propsArray = Object.keys(intlOptions);\n        var propsArrayLength = propsArray.length;\n        var result = false;\n        for (i = 0; i < propsArrayLength; i++) {\n            if (intlOptions[propsArray[i]] === exports.LONG || intlOptions[propsArray[i]] === exports.SHORT) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    };\n    DateTimeFormat.prototype.getNativePattern = function (patternDefinition, locale) {\n        return \"\";\n    };\n    DateTimeFormat.prototype.getCorrectPatternForLocale = function () {\n        var dateTimePatternOptions = {};\n        if (this.hasDateOptions(this.options)) {\n            if (this.useFullDatePattern(this.options)) {\n                dateTimePatternOptions.date = exports.FULL;\n            }\n            else {\n                dateTimePatternOptions.date = exports.SHORT;\n            }\n        }\n        if (this.hasTimeOptions(this.options)) {\n            dateTimePatternOptions.time = exports.FULL;\n        }\n        var result = this.getNativePattern(dateTimePatternOptions, this.locale);\n        if (this.options.hour) {\n            if (this.options.hour12 !== undefined) {\n                result = this.options.hour12 ? result.replace(/H/g, \"h\") : result.replace(/h/g, \"H\");\n            }\n            else {\n                this.options.hour12 = !(result.indexOf(\"H\") > -1);\n            }\n        }\n        return result;\n    };\n    DateTimeFormat.prototype.getDateElementsFromPattern = function (pattern) {\n        var result = [];\n        var patternLength = pattern.length;\n        var i = 0;\n        var stringInsidePattern = false;\n        while (i < patternLength) {\n            if (pattern[i] === '\"' || pattern[i] === \"'\") {\n                var p = i + 1;\n                while (p < patternLength && pattern[i] !== pattern[p]) {\n                    p++;\n                }\n                for (var j = i; j < p + 1; j++) {\n                    result.push({\n                        \"isDateElement\": false,\n                        \"patternValue\": pattern[j]\n                    });\n                }\n                i = p + 1;\n                continue;\n            }\n            if (this.dateTimeFormatElements.hasOwnProperty(pattern[i])) {\n                var j = i;\n                while (i < patternLength && pattern[i] === pattern[j]) {\n                    i++;\n                }\n                result.push({\n                    \"isDateElement\": true,\n                    \"patternValue\": pattern.substr(j, i - j),\n                    \"intlOption\": this.dateTimeFormatElements[pattern[j]]\n                });\n            }\n            else {\n                result.push({\n                    \"isDateElement\": false,\n                    \"patternValue\": pattern[i]\n                });\n                i++;\n            }\n        }\n        return result;\n    };\n    DateTimeFormat.prototype.prepareDateElement = function (intlOption, dateElement) {\n        switch (intlOption) {\n            case exports.NUMERIC:\n                return dateElement;\n            case exports.TWODIGIT:\n                return dateElement.repeat(2);\n            case exports.SHORT:\n                return dateElement.repeat(3);\n            case exports.LONG:\n                return dateElement.repeat(4);\n            case true:\n                return dateElement;\n            case false:\n                return \"\";\n            default:\n                return dateElement;\n        }\n    };\n    DateTimeFormat.prototype.preparePattern = function (pattern, options) {\n        var patternOptions = this.getDateElementsFromPattern(pattern);\n        var patternOptionsLength = patternOptions.length;\n        for (var i_1 = 0; i_1 < patternOptionsLength; i_1++) {\n            if (patternOptions[i_1].isDateElement) {\n                var formatChar = patternOptions[i_1].patternValue[0];\n                var intlOptionValue = options[patternOptions[i_1].intlOption];\n                if (intlOptionValue !== undefined) {\n                    var newPatternValue = this.prepareDateElement(intlOptionValue, formatChar);\n                    patternOptions[i_1].patternValue = newPatternValue;\n                }\n                else {\n                    if (i_1 > 0) {\n                        var j = i_1 - 1;\n                        while (patternOptions[j] && patternOptions[j].isDateElement === false) {\n                            if (patternOptions[j].patternValue !== \" \") {\n                                if (patternOptions[j].patternValue !== '\"' && patternOptions[j].patternValue !== \"'\") {\n                                    patternOptions[j].patternValue = \"\";\n                                }\n                                break;\n                            }\n                            else {\n                                patternOptions[j].patternValue = \"\";\n                            }\n                            j--;\n                        }\n                    }\n                    patternOptions[i_1].patternValue = \"\";\n                }\n            }\n        }\n        var result = [];\n        var i = 0;\n        while (patternOptions[i].patternValue === \"\" || patternOptions[i].isDateElement === false) {\n            i++;\n        }\n        for (i; i < patternOptionsLength; i++) {\n            result.push(patternOptions[i].patternValue);\n        }\n        return result.join(\"\");\n    };\n    DateTimeFormat.prototype.formatNative = function (pattern, locale, date) {\n        return \"\";\n    };\n    Object.defineProperty(DateTimeFormat.prototype, \"preparedPattern\", {\n        get: function () {\n            if (!this._preparedPattern) {\n                if (this.pattern) {\n                    this._preparedPattern = this.pattern;\n                }\n                else {\n                    if (exports.resolvedPatterns.has({ locale: this.locale, options: this.options })) {\n                        this._preparedPattern = exports.resolvedPatterns.get({ locale: this.locale, options: this.options });\n                    }\n                    else {\n                        this._preparedPattern = this.preparePattern(this.getCorrectPatternForLocale(), this.options);\n                        exports.resolvedPatterns.set({ locale: this.locale, options: this.options }, this._preparedPattern);\n                    }\n                }\n            }\n            return this._preparedPattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateTimeFormat.prototype.format = function (date) {\n        return this.formatNative(this.preparedPattern, this.locale, date);\n    };\n    return DateTimeFormat;\n}());\nexports.DateTimeFormat = DateTimeFormat;\nvar NumberFormat = (function () {\n    function NumberFormat(locale, options, pattern) {\n        this.locale = locale;\n        this.options = options;\n        this.pattern = pattern;\n    }\n    NumberFormat.prototype.formatNative = function (value, locale, options, pattern) {\n        return \"\";\n    };\n    NumberFormat.prototype.format = function (value) {\n        return this.formatNative(value, this.locale, this.options, this.pattern);\n    };\n    return NumberFormat;\n}());\nexports.NumberFormat = NumberFormat;\n"
    },
    {
      "id": 192,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/misc/chart-event-data-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/misc/chart-event-data-common.js",
      "index": 225,
      "index2": 221,
      "size": 379,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./misc/chart-event-data-common",
          "loc": "4:28-69"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar ChartEventData = (function () {\n    function ChartEventData() {\n    }\n    return ChartEventData;\n}());\nexports.ChartEventData = ChartEventData;\nvar TrackballSelection = (function () {\n    function TrackballSelection() {\n    }\n    return TrackballSelection;\n}());\nexports.TrackballSelection = TrackballSelection;\n"
    },
    {
      "id": 193,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation-common.js",
      "index": 235,
      "index2": 230,
      "size": 7486,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
      "issuerId": 194,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 194,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
          "type": "cjs require",
          "userRequest": "./chart-annotation-common",
          "loc": "2:23-59"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar CartesianChartAnnotation = (function (_super) {\n    __extends(CartesianChartAnnotation, _super);\n    function CartesianChartAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CartesianChartAnnotation.prototype.onAxisIdPropertyChanged = function (oldValue, newValue) {\n        this.onAxisIdChanged(oldValue, newValue);\n    };\n    CartesianChartAnnotation.prototype.onZPositionPropertyChanged = function (oldValue, newValue) {\n        this.onZPositionChanged(oldValue, newValue);\n    };\n    CartesianChartAnnotation.prototype.onHiddenPropertyChanged = function (oldValue, newValue) {\n        this.onHiddenChanged(oldValue, newValue);\n    };\n    CartesianChartAnnotation.prototype.onStrokeWidthPropertyChanged = function (oldValue, newValue) {\n        this.onStrokeWidthChanged(oldValue, newValue);\n    };\n    CartesianChartAnnotation.prototype.onStrokeColorPropertyChanged = function (oldValue, newValue) {\n        this.onStrokeColorChanged(oldValue, newValue);\n    };\n    CartesianChartAnnotation.prototype.onStrokeDashPatternPropertyChanged = function (oldValue, newValue) {\n        this.onStrokeDashPatternChanged(oldValue, newValue);\n    };\n    CartesianChartAnnotation.prototype.onAxisIdChanged = function (oldValue, newValue) {\n    };\n    CartesianChartAnnotation.prototype.onZPositionChanged = function (oldValue, newValue) {\n    };\n    CartesianChartAnnotation.prototype.onHiddenChanged = function (oldValue, newValue) {\n    };\n    CartesianChartAnnotation.prototype.onStrokeWidthChanged = function (oldValue, newValue) {\n    };\n    CartesianChartAnnotation.prototype.onStrokeColorChanged = function (oldValue, newValue) {\n    };\n    CartesianChartAnnotation.prototype.onStrokeDashPatternChanged = function (oldValue, newValue) {\n    };\n    CartesianChartAnnotation.prototype.onOwnerChanged = function () {\n    };\n    Object.defineProperty(CartesianChartAnnotation.prototype, \"owner\", {\n        get: function () {\n            return this._owner;\n        },\n        set: function (value) {\n            this._owner = value;\n            this.onOwnerChanged();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CartesianChartAnnotation;\n}(view_1.ViewBase));\nCartesianChartAnnotation.axisIdProperty = new view_1.Property({\n    name: \"axisId\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onAxisIdPropertyChanged(oldValue, newValue);\n    },\n});\nCartesianChartAnnotation.zPositionProperty = new view_1.Property({\n    name: \"zPosition\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onZPositionPropertyChanged(oldValue, newValue);\n    },\n});\nCartesianChartAnnotation.hiddenProperty = new view_1.Property({\n    name: \"hidden\",\n    defaultValue: undefined,\n    valueConverter: view_1.booleanConverter,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHiddenPropertyChanged(oldValue, newValue);\n    },\n});\nCartesianChartAnnotation.strokeWidthProperty = new view_1.Property({\n    name: \"strokeWidth\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onStrokeWidthPropertyChanged(oldValue, newValue);\n    },\n});\nCartesianChartAnnotation.strokeColorProperty = new view_1.Property({\n    name: \"strokeColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onStrokeColorPropertyChanged(oldValue, newValue);\n    },\n});\nCartesianChartAnnotation.strokeDashPatternProperty = new view_1.Property({\n    name: \"strokeDashPattern\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onStrokeDashPatternPropertyChanged(oldValue, newValue);\n    },\n});\nexports.CartesianChartAnnotation = CartesianChartAnnotation;\nCartesianChartAnnotation.axisIdProperty.register(CartesianChartAnnotation);\nCartesianChartAnnotation.zPositionProperty.register(CartesianChartAnnotation);\nCartesianChartAnnotation.hiddenProperty.register(CartesianChartAnnotation);\nCartesianChartAnnotation.strokeWidthProperty.register(CartesianChartAnnotation);\nCartesianChartAnnotation.strokeColorProperty.register(CartesianChartAnnotation);\nCartesianChartAnnotation.strokeDashPatternProperty.register(CartesianChartAnnotation);\nvar ChartGridLineAnnotation = (function (_super) {\n    __extends(ChartGridLineAnnotation, _super);\n    function ChartGridLineAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChartGridLineAnnotation.prototype.onValuePropertyChanged = function (oldValue, newValue) {\n        this.onValueChanged(oldValue, newValue);\n    };\n    ChartGridLineAnnotation.prototype.onValueChanged = function (oldValue, newValue) {\n    };\n    return ChartGridLineAnnotation;\n}(CartesianChartAnnotation));\nChartGridLineAnnotation.valueProperty = new view_1.Property({\n    name: \"value\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onValuePropertyChanged(oldValue, newValue);\n    },\n});\nexports.ChartGridLineAnnotation = ChartGridLineAnnotation;\nChartGridLineAnnotation.valueProperty.register(ChartGridLineAnnotation);\nvar ChartPlotBandAnnotation = (function (_super) {\n    __extends(ChartPlotBandAnnotation, _super);\n    function ChartPlotBandAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChartPlotBandAnnotation.prototype.onMinValuePropertyChanged = function (oldValue, newValue) {\n        this.onMinValueChanged(oldValue, newValue);\n    };\n    ChartPlotBandAnnotation.prototype.onMaxValuePropertyChanged = function (oldValue, newValue) {\n        this.onMaxValueChanged(oldValue, newValue);\n    };\n    ChartPlotBandAnnotation.prototype.onFillColorPropertyChanged = function (oldValue, newValue) {\n        this.onFillColorChanged(oldValue, newValue);\n    };\n    ChartPlotBandAnnotation.prototype.onMinValueChanged = function (oldValue, newValue) {\n    };\n    ChartPlotBandAnnotation.prototype.onMaxValueChanged = function (oldValue, newValue) {\n    };\n    ChartPlotBandAnnotation.prototype.onFillColorChanged = function (oldValue, newValue) {\n    };\n    return ChartPlotBandAnnotation;\n}(CartesianChartAnnotation));\nChartPlotBandAnnotation.minValueProperty = new view_1.Property({\n    name: \"minValue\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onMinValuePropertyChanged(oldValue, newValue);\n    },\n});\nChartPlotBandAnnotation.maxValueProperty = new view_1.Property({\n    name: \"maxValue\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onMaxValuePropertyChanged(oldValue, newValue);\n    },\n});\nChartPlotBandAnnotation.fillColorProperty = new view_1.Property({\n    name: \"fillColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onFillColorPropertyChanged(oldValue, newValue);\n    },\n});\nexports.ChartPlotBandAnnotation = ChartPlotBandAnnotation;\nChartPlotBandAnnotation.minValueProperty.register(ChartPlotBandAnnotation);\nChartPlotBandAnnotation.maxValueProperty.register(ChartPlotBandAnnotation);\nChartPlotBandAnnotation.fillColorProperty.register(ChartPlotBandAnnotation);\n"
    },
    {
      "id": 194,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-annotation.android.js",
      "index": 234,
      "index2": 231,
      "size": 16044,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-annotation",
          "loc": "13:23-72"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar annotationModule = require(\"./chart-annotation-common\");\nvar chartModule = require(\"../../\");\nvar utilsModule = require(\"tns-core-modules/utils/utils\");\nvar color_1 = require(\"tns-core-modules/color\");\nvar chart_public_enum_1 = require(\"../../misc/chart-public-enum\");\nvar floatType = java.lang.Float.class.getField(\"TYPE\").get(null);\nvar ChartGridLineAnnotation = (function (_super) {\n    __extends(ChartGridLineAnnotation, _super);\n    function ChartGridLineAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ChartGridLineAnnotation.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartGridLineAnnotation.prototype._init = function (owner) {\n        this._owner = owner;\n    };\n    ChartGridLineAnnotation.prototype.createAnnotation = function () {\n        if (!this.axisId) {\n            console.log(\"ERROR: axisId property is mandatory for any annotation.\");\n            return;\n        }\n        if (!this._owner || !this._owner.androidView) {\n            console.log(\"ERROR: You cannot create annotation if owner chart is not set and native instance is not created\");\n            return;\n        }\n        var forAxis = this._owner.getAxixByID(this.axisId);\n        if (typeof (this.value) == \"string\") {\n            if (forAxis instanceof chartModule.LinearAxis) {\n                this._android = new com.telerik.widget.chart.visualization.annotations.cartesian.CartesianGridLineAnnotation(forAxis.android, new java.lang.Float(parseFloat(this.value)));\n            }\n            else {\n                this._android = new com.telerik.widget.chart.visualization.annotations.cartesian.CartesianGridLineAnnotation(forAxis.android, new java.lang.String(this.value));\n            }\n        }\n        else if (typeof (this.value) == \"number\") {\n            this._android = new com.telerik.widget.chart.visualization.annotations.cartesian.CartesianGridLineAnnotation(forAxis.android, new java.lang.Float(this.value));\n        }\n        else {\n            console.log(\"ERROR: Unsupported value type for annotation\");\n            return;\n        }\n        this._android.setVisible(this.hidden ? false : true);\n        if (this.value) {\n            if (!isNaN(this.value)) {\n                this._android.setValue(new java.lang.Float(parseFloat(this.value)));\n            }\n            else {\n                this._android.setValue(new java.lang.String(this.value));\n            }\n        }\n        else {\n            console.log(\"WARNING: value property is mandatory for grid line annotation.\");\n        }\n        if (this.zPosition) {\n            switch (this.zPosition.toLowerCase()) {\n                case chart_public_enum_1.ChartAnnotationZPosition.AboveSeries.toLowerCase():\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX + 100);\n                    break;\n                default:\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX - 100);\n            }\n        }\n        if (this.strokeColor || !isNaN(+this.strokeWidth)) {\n            var nvPalette = this._owner.androidView.getPalette().clone();\n            var nvPaletteEntry = nvPalette.getEntry(\"CartesianGridLineAnnotation\");\n            this._android.setCanApplyPalette(false);\n            if (this.strokeColor) {\n                this._android.setStrokeColor((new color_1.Color(this.strokeColor)).android);\n            }\n            else {\n                this._android.setStrokeColor(nvPaletteEntry.getStroke());\n            }\n            if (!isNaN(+this.strokeWidth)) {\n                this._android.setStrokeWidth(this.strokeWidth * utilsModule.layout.getDisplayDensity());\n            }\n            else {\n                this._android.setStrokeWidth(2 * utilsModule.layout.getDisplayDensity());\n                //TODO: replace the statement above when bug with storke width getter of pallete entry is fixed\n                //this._android.setStrokeWidth(nvPaletteEntry.getStrokeWidth())\n            }\n        }\n        if (this.strokeDashPattern) {\n            var array = JSON.parse(\"[\" + this.strokeDashPattern + \"]\");\n            var arrNative = java.lang.reflect.Array.newInstance(floatType, array.length);\n            for (var i = 0; i < array.length; ++i) {\n                arrNative[i] = parseFloat(array[i]) * utilsModule.layout.getDisplayDensity();\n            }\n            var effect = new android.graphics.DashPathEffect(arrNative, 0);\n            this._android.setStrokeEffect(effect);\n        }\n    };\n    ChartGridLineAnnotation.prototype._onOwnerUICreated = function () {\n        this.createAnnotation();\n    };\n    ChartGridLineAnnotation.prototype._createNative = function () {\n        this.createAnnotation();\n    };\n    ChartGridLineAnnotation.prototype.onValueChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            if (!isNaN(newValue)) {\n                this._android.setValue(new java.lang.Float(parseFloat(newValue)));\n            }\n            else {\n                this._android.setValue(new java.lang.String(newValue));\n            }\n        }\n    };\n    ChartGridLineAnnotation.prototype.onAxisIdChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            var forAxis = this._owner.getAxixByID(newValue);\n            this._android.setAxis(forAxis.android);\n        }\n    };\n    ChartGridLineAnnotation.prototype.onZPositionChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        if (newValue) {\n            switch (newValue.toLowerCase()) {\n                case chart_public_enum_1.ChartAnnotationZPosition.AboveSeries.toLowerCase():\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX + 100);\n                    break;\n                default:\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX - 100);\n            }\n            this._android.requestLayout();\n        }\n    };\n    ChartGridLineAnnotation.prototype.onHiddenChanged = function (oldValue, newValue) {\n        if (this._android) {\n            this._android.setVisible(newValue ? false : true);\n        }\n    };\n    ChartGridLineAnnotation.prototype.onStrokeWidthChanged = function (oldValue, newValue) {\n        if (this._android && !isNaN(+newValue)) {\n            this._android.setStrokeWidth(newValue);\n        }\n    };\n    ChartGridLineAnnotation.prototype.onStrokeColorChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            this._android.setStrokeColor((new color_1.Color(newValue)).android);\n        }\n    };\n    ChartGridLineAnnotation.prototype.onStrokeDashPatternChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            var array = JSON.parse(\"[\" + newValue + \"]\");\n            var arrNative = java.lang.reflect.Array.newInstance(floatType, array.length);\n            for (var i = 0; i < array.length; ++i) {\n                arrNative[i] = parseFloat(array[i]) * utilsModule.layout.getDisplayDensity();\n            }\n            var effect = new android.graphics.DashPathEffect(arrNative, 0);\n            this._android.setStrokeEffect(effect);\n        }\n    };\n    return ChartGridLineAnnotation;\n}(annotationModule.ChartGridLineAnnotation));\nexports.ChartGridLineAnnotation = ChartGridLineAnnotation;\nvar ChartPlotBandAnnotation = (function (_super) {\n    __extends(ChartPlotBandAnnotation, _super);\n    function ChartPlotBandAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ChartPlotBandAnnotation.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartPlotBandAnnotation.prototype._init = function (owner) {\n        this._owner = owner;\n    };\n    ChartPlotBandAnnotation.prototype.createAnnotation = function () {\n        if (!this.axisId) {\n            console.log(\"ERROR: axisId property is mandatory for any anotation.\");\n            return;\n        }\n        if (!this._owner || !this._owner.androidView) {\n            console.log(\"ERROR: You cannot create annotation if owner chart is not set and native instance is not created\");\n            return;\n        }\n        var forAxis = this._owner.getAxixByID(this.axisId);\n        if (typeof (this.minValue) == \"string\") {\n            var currentMinValue = this.minValue;\n            this._android = new com.telerik.widget.chart.visualization.annotations.cartesian.CartesianPlotBandAnnotation(forAxis.android, currentMinValue, this.maxValue);\n        }\n        else if (typeof (this.minValue) == \"number\") {\n            this._android = new com.telerik.widget.chart.visualization.annotations.cartesian.CartesianPlotBandAnnotation(forAxis.android, java.lang.Float.valueOf(this.minValue), java.lang.Float.valueOf(this.maxValue));\n        }\n        else {\n            console.log(\"ERROR: Unsupported value type for annotation\");\n            return;\n        }\n        this._android.setVisible(this.hidden ? false : true);\n        if (this.minValue) {\n            if (!isNaN(this.minValue)) {\n                this._android.setFrom(new java.lang.Float(parseFloat(this.minValue)));\n            }\n            else {\n                this._android.setFrom(new java.lang.String(this.minValue));\n            }\n        }\n        else {\n            console.log(\"WARNING: minValue is mandatory for band annotation\");\n        }\n        if (this.maxValue) {\n            if (!isNaN(this.maxValue)) {\n                this._android.setTo(new java.lang.Float(parseFloat(this.maxValue)));\n            }\n            else {\n                this._android.setTo(new java.lang.String(this.maxValue));\n            }\n        }\n        else {\n            console.log(\"WARNING: maxValue is mandatory for band annotation\");\n        }\n        if (this.zPosition) {\n            switch (this.zPosition.toLowerCase()) {\n                case chart_public_enum_1.ChartAnnotationZPosition.AboveSeries.toLowerCase():\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX + 100);\n                    break;\n                default:\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX - 100);\n            }\n        }\n        if (this.fillColor || this.strokeColor || !isNaN(this.strokeWidth)) {\n            var nvPalette = this._owner.androidView.getPalette().clone();\n            var nvPaletteEntry = nvPalette.getEntry(\"CartesianPlotBandAnnotation\");\n            this._android.setCanApplyPalette(false);\n            if (this.fillColor) {\n                this._android.setFillColor((new color_1.Color(this.fillColor)).android);\n            }\n            else {\n                this._android.setFillColor(nvPaletteEntry.getFill());\n            }\n            if (this.strokeColor) {\n                this._android.setStrokeColor((new color_1.Color(this.strokeColor)).android);\n            }\n            else {\n                this._android.setStrokeColor(nvPaletteEntry.getStroke());\n            }\n            if (!isNaN(+this.strokeWidth)) {\n                this._android.setStrokeWidth(this.strokeWidth * utilsModule.layout.getDisplayDensity());\n            }\n            else {\n                this._android.setStrokeWidth(2 * utilsModule.layout.getDisplayDensity());\n                //TODO: replace the statement above when bug with storke with getter of pallete entry is fixed\n                //this._android.setStrokeWidth(nvPaletteEntry.getStrokeWidth())\n            }\n        }\n        if (this.strokeDashPattern) {\n            var array = JSON.parse(\"[\" + this.strokeDashPattern + \"]\");\n            var arrNative = java.lang.reflect.Array.newInstance(floatType, array.length);\n            for (var i = 0; i < array.length; ++i) {\n                arrNative[i] = parseFloat(array[i]) * utilsModule.layout.getDisplayDensity();\n            }\n            var effect = new android.graphics.DashPathEffect(arrNative, 0);\n            this._android.setStrokeEffect(effect);\n        }\n    };\n    ChartPlotBandAnnotation.prototype._onOwnerUICreated = function () {\n        this.createAnnotation();\n    };\n    ChartPlotBandAnnotation.prototype._createNative = function () {\n        this.createAnnotation();\n    };\n    ChartPlotBandAnnotation.prototype.onMinValueChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            if (!isNaN(newValue)) {\n                this._android.setFrom(new java.lang.Float(parseFloat(newValue)));\n            }\n            else {\n                this._android.setFrom(new java.lang.String(newValue));\n            }\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onMaxValueChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            if (!isNaN(newValue)) {\n                this._android.setTo(new java.lang.Float(parseFloat(newValue)));\n            }\n            else {\n                this._android.setTo(new java.lang.String(newValue));\n            }\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onFillColorChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            this._android.setFillColor((new color_1.Color(newValue)).android);\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onAxisIdChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            var forAxis = this._owner.getAxixByID(newValue);\n            this._android.setAxis(forAxis.android);\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onZPositionChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        if (newValue) {\n            switch (newValue.toLowerCase()) {\n                case chart_public_enum_1.ChartAnnotationZPosition.AboveSeries.toLowerCase():\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX + 100);\n                    break;\n                default:\n                    this._android.setZIndex(com.telerik.widget.chart.visualization.common.ChartSeries.SERIES_Z_INDEX - 100);\n            }\n            this._android.requestLayout();\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onHiddenChanged = function (oldValue, newValue) {\n        if (this._android) {\n            this._android.setVisible(newValue ? false : true);\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onStrokeWidthChanged = function (oldValue, newValue) {\n        if (this._android && !isNaN(+newValue)) {\n            this._android.setStrokeWidth(newValue);\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onStrokeColorChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            this._android.setStrokeColor((new color_1.Color(newValue)).android);\n        }\n    };\n    ChartPlotBandAnnotation.prototype.onStrokeDashPatternChanged = function (oldValue, newValue) {\n        if (this._android && newValue) {\n            var array = JSON.parse(\"[\" + newValue + \"]\");\n            var arrNative = java.lang.reflect.Array.newInstance(floatType, array.length);\n            for (var i = 0; i < array.length; ++i) {\n                arrNative[i] = parseFloat(array[i]) * utilsModule.layout.getDisplayDensity();\n            }\n            var effect = new android.graphics.DashPathEffect(arrNative, 0);\n            this._android.setStrokeEffect(effect);\n        }\n    };\n    return ChartPlotBandAnnotation;\n}(annotationModule.ChartPlotBandAnnotation));\nexports.ChartPlotBandAnnotation = ChartPlotBandAnnotation;\n"
    },
    {
      "id": 195,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-cartesian-chart-grid.android.js",
      "index": 236,
      "index2": 232,
      "size": 6797,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-cartesian-chart-grid",
          "loc": "14:31-90"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar cartesianChartGridModule = require(\"./chart-cartesian-chart-grid-common\");\nvar utilsModule = require(\"tns-core-modules/utils/utils\");\nvar color_1 = require(\"tns-core-modules/color\");\nvar RadCartesianChartGrid = (function (_super) {\n    __extends(RadCartesianChartGrid, _super);\n    function RadCartesianChartGrid() {\n        var _this = _super.call(this) || this;\n        _this._android = new com.telerik.widget.chart.visualization.cartesianChart.CartesianChartGrid();\n        _this._android.setCanApplyPalette(false);\n        return _this;\n    }\n    RadCartesianChartGrid.prototype.onVerticalLinesVisibleChanged = function (oldValue, newValue) {\n        if (newValue === true) {\n            if (this.horizontalLinesVisible === true) {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);\n            }\n            else {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);\n            }\n        }\n        else {\n            if (this.horizontalLinesVisible === true) {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);\n            }\n            else {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);\n            }\n        }\n    };\n    RadCartesianChartGrid.prototype.onHorizontalLinesVisibleChanged = function (oldValue, newValue) {\n        if (newValue === true) {\n            if (this.verticalLinesVisible === true) {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);\n            }\n            else {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);\n            }\n        }\n        else {\n            if (this.verticalLinesVisible === true) {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);\n            }\n            else {\n                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);\n            }\n        }\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStripLinesVisibleChanged = function (oldValue, newValue) {\n        if (newValue === true) {\n            if (this.verticalStripLinesVisible === true) {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);\n            }\n            else {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);\n            }\n        }\n        else {\n            if (this.verticalStripLinesVisible === true) {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);\n            }\n            else {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);\n            }\n        }\n    };\n    RadCartesianChartGrid.prototype.onVerticalStripLinesVisibleChanged = function (oldValue, newValue) {\n        if (newValue === true) {\n            if (this.horizontalStripLinesVisible === true) {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);\n            }\n            else {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);\n            }\n        }\n        else {\n            if (this.horizontalStripLinesVisible === true) {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);\n            }\n            else {\n                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);\n            }\n        }\n    };\n    RadCartesianChartGrid.prototype.onVerticalStrokeColorChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this._android.setVerticalLineColor((new color_1.Color(newValue)).android);\n            this._android.requestRender();\n        }\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStrokeColorChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this._android.setLineColor((new color_1.Color(newValue)).android);\n            this._android.requestRender();\n        }\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStrokeWidthChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue)) {\n            this._android.setLineThickness(newValue * utilsModule.layout.getDisplayDensity());\n            this._android.requestRender();\n        }\n    };\n    RadCartesianChartGrid.prototype.onVerticalStrokeWidthChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue)) {\n            this._android.setVerticalLineThickness(newValue * utilsModule.layout.getDisplayDensity());\n            this._android.requestRender();\n        }\n    };\n    RadCartesianChartGrid.prototype.onVerticalStripLineColorChanged = function (oldValue, newValue) {\n        if (!newValue) {\n            return;\n        }\n        this._android.getXStripeBrushes().clear();\n        var colors = newValue.split(',');\n        for (var i = 0; i < colors.length; i++) {\n            var stripePaint = new android.graphics.Paint();\n            stripePaint.setStyle(android.graphics.Paint.Style.FILL);\n            stripePaint.setColor((new color_1.Color(colors[i].trim())).android);\n            this._android.getXStripeBrushes().add(stripePaint);\n        }\n        this._android.requestRender();\n    };\n    RadCartesianChartGrid.prototype.onHorizontalStripLineColorChanged = function (oldValue, newValue) {\n        if (!newValue) {\n            return;\n        }\n        this._android.getYStripeBrushes().clear();\n        var colors = newValue.split(',');\n        for (var i = 0; i < colors.length; i++) {\n            var stripePaint = new android.graphics.Paint();\n            stripePaint.setStyle(android.graphics.Paint.Style.FILL);\n            stripePaint.setColor((new color_1.Color(colors[i].trim())).android);\n            this._android.getYStripeBrushes().add(stripePaint);\n        }\n        this._android.requestRender();\n    };\n    return RadCartesianChartGrid;\n}(cartesianChartGridModule.RadCartesianChartGrid));\nexports.RadCartesianChartGrid = RadCartesianChartGrid;\n"
    },
    {
      "id": 196,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-label-style-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-label-style-common.js",
      "index": 226,
      "index2": 222,
      "size": 2291,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-label-style-common",
          "loc": "6:29-86"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar PointLabelStyle = (function (_super) {\n    __extends(PointLabelStyle, _super);\n    function PointLabelStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PointLabelStyle;\n}(view_1.ViewBase));\nPointLabelStyle.strokeColorProperty = new view_1.Property({\n    name: \"strokeColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nPointLabelStyle.fillColorProperty = new view_1.Property({\n    name: \"fillColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nPointLabelStyle.textColorProperty = new view_1.Property({\n    name: \"textColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nPointLabelStyle.textSizeProperty = new view_1.Property({\n    name: \"textSize\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nPointLabelStyle.marginProperty = new view_1.Property({\n    name: \"margin\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nPointLabelStyle.textFormatProperty = new view_1.Property({\n    name: \"textFormat\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n    },\n});\nPointLabelStyle.fontNameProperty = new view_1.Property({\n    name: \"fontName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nPointLabelStyle.fontStyleProperty = new view_1.Property({\n    name: \"fontStyle\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) { },\n});\nexports.PointLabelStyle = PointLabelStyle;\nPointLabelStyle.strokeColorProperty.register(PointLabelStyle);\nPointLabelStyle.fillColorProperty.register(PointLabelStyle);\nPointLabelStyle.textColorProperty.register(PointLabelStyle);\nPointLabelStyle.textSizeProperty.register(PointLabelStyle);\nPointLabelStyle.marginProperty.register(PointLabelStyle);\nPointLabelStyle.textFormatProperty.register(PointLabelStyle);\nPointLabelStyle.fontNameProperty.register(PointLabelStyle);\nPointLabelStyle.fontStyleProperty.register(PointLabelStyle);\n"
    },
    {
      "id": 197,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-palette-common.js",
      "index": 227,
      "index2": 223,
      "size": 6623,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-palette-common",
          "loc": "7:26-79"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_array_1 = require(\"tns-core-modules/data/observable-array\");\nvar observable_1 = require(\"tns-core-modules/data/observable\");\nvar weakEvents = require(\"tns-core-modules/ui/core/weak-event-listener\");\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar Palette = (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        var _this = _super.call(this) || this;\n        _this.entries = new observable_array_1.ObservableArray();\n        return _this;\n    }\n    Palette.prototype._addArrayFromBuilder = function (name, value) {\n        if (name === \"entries\") {\n            this.entries = new observable_array_1.ObservableArray(value);\n            for (var i = 0; i < this.entries.length; i++) {\n                this.entries.getItem(i).ownerPalette = this;\n            }\n        }\n    };\n    Palette.prototype.onEntriesPropertyChanged = function (oldValue, newValue) {\n        this.onEntriesChanged(oldValue, newValue);\n    };\n    Palette.prototype.onEntriesChanged = function (oldValue, newValue) {\n        if (oldValue instanceof observable_1.Observable) {\n            weakEvents.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, this.entriesCollectionChangedInternal, this);\n        }\n        if (newValue instanceof observable_1.Observable) {\n            var collection = newValue;\n            if (collection.length >= 0) {\n                for (var i = 0; i < collection.length; i++) {\n                    this.entries.getItem(i).ownerPalette = this;\n                }\n                this.updateOwner();\n            }\n            weakEvents.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, this.entriesCollectionChangedInternal, this);\n        }\n    };\n    Palette.prototype.entriesCollectionChangedInternal = function (data) {\n        if (data.eventName && data.eventName.toLowerCase() === \"change\") {\n            if (data.action && data.action.toLowerCase() === \"add\") {\n                for (var i = 0; i < data.addedCount; i++) {\n                    this.entries.getItem(data.index).ownerPalette = this;\n                }\n            }\n        }\n        this.updateOwner();\n    };\n    Palette.prototype.seriesNamePropertyChanged = function (oldValue, newValue) {\n        this.onSeriesNamePropertyChanged(oldValue, newValue);\n    };\n    Palette.prototype.onSeriesNamePropertyChanged = function (oldValue, newValue) {\n        this.updateOwner();\n    };\n    Palette.prototype.seriesStatePropertyChanged = function (oldValue, newValue) {\n        this.onSeriesStatePropertyChanged(oldValue, newValue);\n    };\n    Palette.prototype.onSeriesStatePropertyChanged = function (oldValue, newValue) {\n        this.updateOwner();\n    };\n    Palette.prototype.updateOwner = function () {\n        if (this.owner && this.owner.reloadPalettes) {\n            this.owner.reloadPalettes();\n        }\n    };\n    Object.defineProperty(Palette.prototype, \"owner\", {\n        get: function () {\n            return this._owner;\n        },\n        set: function (value) {\n            this._owner = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Palette;\n}(view_1.ViewBase));\nPalette.entriesProperty = new view_1.Property({\n    name: \"entries\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onEntriesPropertyChanged(oldValue, newValue);\n    },\n});\nPalette.seriesNameProperty = new view_1.Property({\n    name: \"seriesName\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.seriesNamePropertyChanged(oldValue, newValue);\n    },\n});\nPalette.seriesStateProperty = new view_1.Property({\n    name: \"seriesState\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.seriesStatePropertyChanged(oldValue, newValue);\n    },\n});\nexports.Palette = Palette;\nPalette.entriesProperty.register(Palette);\nPalette.seriesNameProperty.register(Palette);\nPalette.seriesStateProperty.register(Palette);\nvar PaletteEntry = (function (_super) {\n    __extends(PaletteEntry, _super);\n    function PaletteEntry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PaletteEntry.prototype.fillColorPropertyChanged = function (oldValue, newValue) {\n        this.onFillColorChanged(oldValue, newValue);\n    };\n    PaletteEntry.prototype.strokeWidthPropertyChanged = function (oldValue, newValue) {\n        this.onStrokeWidthChanged(oldValue, newValue);\n    };\n    PaletteEntry.prototype.strokeColorPropertyChanged = function (oldValue, newValue) {\n        this.onStrokeColorChanged(oldValue, newValue);\n    };\n    PaletteEntry.prototype.onFillColorChanged = function (oldValue, newValue) {\n        this.updateOwner();\n    };\n    PaletteEntry.prototype.onStrokeWidthChanged = function (oldValue, newValue) {\n        this.updateOwner();\n    };\n    PaletteEntry.prototype.onStrokeColorChanged = function (oldValue, newValue) {\n        this.updateOwner();\n    };\n    PaletteEntry.prototype.updateOwner = function () {\n        if (this.ownerPalette && this.ownerPalette.owner && this.ownerPalette.owner.reloadPalettes) {\n            this.ownerPalette.owner.reloadPalettes();\n        }\n    };\n    Object.defineProperty(PaletteEntry.prototype, \"ownerPalette\", {\n        get: function () {\n            return this._owner;\n        },\n        set: function (value) {\n            this._owner = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PaletteEntry;\n}(view_1.ViewBase));\nPaletteEntry.fillColorProperty = new view_1.Property({\n    name: \"fillColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.fillColorPropertyChanged(oldValue, newValue);\n    },\n});\nPaletteEntry.strokeWidthProperty = new view_1.Property({\n    name: \"strokeWidth\",\n    defaultValue: undefined,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.strokeWidthPropertyChanged(oldValue, newValue);\n    },\n});\nPaletteEntry.strokeColorProperty = new view_1.Property({\n    name: \"strokeColor\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.strokeColorPropertyChanged(oldValue, newValue);\n    },\n});\nexports.PaletteEntry = PaletteEntry;\nPaletteEntry.fillColorProperty.register(PaletteEntry);\nPaletteEntry.strokeWidthProperty.register(PaletteEntry);\nPaletteEntry.strokeColorProperty.register(PaletteEntry);\n"
    },
    {
      "id": 198,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/parts/chart-track-ball.android.js",
      "index": 237,
      "index2": 233,
      "size": 2136,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/parts/chart-track-ball",
          "loc": "15:22-71"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar trackBallModule = require(\"./chart-track-ball-common\");\nvar chart_public_enum_1 = require(\"../../misc/chart-public-enum\");\nvar Trackball = (function (_super) {\n    __extends(Trackball, _super);\n    function Trackball() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(Trackball.prototype, \"android\", {\n        //private _android: com.telerik.widget.chart.visualization.behaviors.ChartTrackBallBehavior;\n        get: function () {\n            return this._android;\n        },\n        set: function (value) {\n            this._android = value;\n            this.updateTrackballSnapMode(this.snapMode);\n            this.updateShowIntrsectionPoints(this.showIntersectionPoints);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Trackball.prototype.onSnapModeChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        this.updateTrackballSnapMode(newValue);\n    };\n    Trackball.prototype.onShowIntersectionPointsChanged = function (oldValue, newValue) {\n        if (!this._android) {\n            return;\n        }\n        this.updateShowIntrsectionPoints(newValue);\n    };\n    Trackball.prototype.updateShowIntrsectionPoints = function (value) {\n        this._android.setShowIntersectionPoints(value);\n    };\n    Trackball.prototype.updateTrackballSnapMode = function (snapMode) {\n        if (snapMode.toLowerCase() === chart_public_enum_1.TrackballSnapMode.ClosestPoint.toLowerCase()) {\n            this.android.setSnapMode(com.telerik.widget.chart.visualization.behaviors.TrackBallSnapMode.CLOSEST_POINT);\n        }\n        else if (snapMode.toLowerCase() === chart_public_enum_1.TrackballSnapMode.AllClosestPoints.toLowerCase()) {\n            this.android.setSnapMode(com.telerik.widget.chart.visualization.behaviors.TrackBallSnapMode.ALL_CLOSE_POINTS);\n        }\n        else {\n            console.log(\"WARNING: Unsupported trackball snap mode set: \" + snapMode);\n        }\n    };\n    return Trackball;\n}(trackBallModule.Trackball));\nexports.Trackball = Trackball;\n"
    },
    {
      "id": 199,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-axis.android.js",
      "index": 232,
      "index2": 228,
      "size": 12974,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/views/chart-axis",
          "loc": "11:17-60"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar axisCommonModule = require(\"./chart-axis-common\");\nvar publicEnumModule = require(\"../../misc/chart-public-enum\");\nvar CategoricalAxis = (function (_super) {\n    __extends(CategoricalAxis, _super);\n    function CategoricalAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CategoricalAxis.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.axes.CategoricalAxis();\n                this._android.setCanApplyPalette(false);\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoricalAxis.prototype.onMajorTickIntervalChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this.android.setMajorTickInterval(newValue);\n        }\n    };\n    return CategoricalAxis;\n}(axisCommonModule.CategoricalAxis));\nexports.CategoricalAxis = CategoricalAxis;\nvar DateTimeContinuousAxis = (function (_super) {\n    __extends(DateTimeContinuousAxis, _super);\n    function DateTimeContinuousAxis() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(DateTimeContinuousAxis.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.axes.DateTimeContinuousAxis();\n                this._android.setPlotMode(com.telerik.widget.chart.engine.axes.common.AxisPlotMode.BETWEEN_TICKS);\n                //this._android.setMaximumTicks(10);\n                this._android.setCanApplyPalette(false);\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateTimeContinuousAxis.prototype.onDateFormatChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this.android.setDateTimeFormat(new java.text.SimpleDateFormat(newValue));\n        }\n    };\n    DateTimeContinuousAxis.prototype.onLabelFormatChanged = function (oldValue, newValue) {\n        console.log(\"WARNING: labelFormat property is not supported for DateTimeCategoricalAxis. Use dateFormat instead.\");\n    };\n    DateTimeContinuousAxis.prototype.onSourceDateFormatChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this.android.setSourceDateTimeFormat(new java.text.SimpleDateFormat(newValue));\n        }\n    };\n    DateTimeContinuousAxis.prototype.onPlotModeChanged = function (oldValue, newValue) {\n        if (newValue) {\n            var plotMode = newValue.toLowerCase();\n            switch (plotMode) {\n                case publicEnumModule.AxisPlotMode.BetweenTicks.toLowerCase():\n                    this.android.setPlotMode(com.telerik.widget.chart.engine.axes.common.AxisPlotMode.BETWEEN_TICKS);\n                    break;\n                case publicEnumModule.AxisPlotMode.OnTicks.toLowerCase():\n                    this.android.setPlotMode(com.telerik.widget.chart.engine.axes.common.AxisPlotMode.ON_TICKS);\n                    break;\n                default:\n                    console.log(\"WARNING: Unsupported plot mode set: \" + newValue);\n            }\n        }\n    };\n    DateTimeContinuousAxis.prototype.onMinimumChanged = function (oldValue, newValue) {\n        if (newValue === undefined) {\n            this.android.setMinimum(undefined);\n            return;\n        }\n        if (typeof newValue === \"string\") {\n            var formatter = new java.text.SimpleDateFormat(\"dd/MM/yyyy\");\n            var parsedDate = formatter.parse(newValue);\n            var millis = parsedDate.getTime();\n            var nativeValue = java.util.Calendar.getInstance();\n            nativeValue.setTimeInMillis(millis);\n            this.android.setMinimum(nativeValue);\n        }\n        else {\n            this.android.setMinimum(newValue);\n        }\n    };\n    DateTimeContinuousAxis.prototype.onMaximumChanged = function (oldValue, newValue) {\n        if (newValue === undefined) {\n            this.android.setMaximum(undefined);\n            return;\n        }\n        if (typeof newValue === \"string\") {\n            var formatter = new java.text.SimpleDateFormat(\"dd/MM/yyyy\");\n            var parsedDate = formatter.parse(newValue);\n            var millis = parsedDate.getTime();\n            var nativeValue = java.util.Calendar.getInstance();\n            nativeValue.setTimeInMillis(millis);\n            this.android.setMaximum(nativeValue);\n        }\n        else {\n            this.android.setMaximum(newValue);\n        }\n    };\n    DateTimeContinuousAxis.prototype.onMajorStepChanged = function (oldValue, newValue) {\n        if (newValue) {\n            switch (newValue.toString().toLowerCase()) {\n                case publicEnumModule.DateTimeComponent.Second.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.SECOND);\n                    this.android.setMajorStep(1);\n                    break;\n                case publicEnumModule.DateTimeComponent.Minute.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.MINUTE);\n                    this.android.setMajorStep(1);\n                    break;\n                case publicEnumModule.DateTimeComponent.Hour.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.HOUR);\n                    this.android.setMajorStep(1);\n                    break;\n                case publicEnumModule.DateTimeComponent.Day.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.DAY);\n                    this.android.setMajorStep(1);\n                    break;\n                case publicEnumModule.DateTimeComponent.Week.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.WEEK);\n                    this.android.setMajorStep(1);\n                    break;\n                case publicEnumModule.DateTimeComponent.Month.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.MONTH);\n                    this.android.setMajorStep(1);\n                    break;\n                case publicEnumModule.DateTimeComponent.Year.toLowerCase():\n                    this.android.setMajorStepUnit(com.telerik.widget.chart.engine.axes.common.TimeInterval.YEAR);\n                    this.android.setMajorStep(1);\n                    break;\n            }\n        }\n    };\n    return DateTimeContinuousAxis;\n}(axisCommonModule.DateTimeContinuousAxis));\nexports.DateTimeContinuousAxis = DateTimeContinuousAxis;\nvar DateTimeCategoricalAxis = (function (_super) {\n    __extends(DateTimeCategoricalAxis, _super);\n    function DateTimeCategoricalAxis() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(DateTimeCategoricalAxis.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.axes.DateTimeCategoricalAxis();\n                this._android.setCanApplyPalette(false);\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateTimeCategoricalAxis.prototype.onDateFormatChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this.android.setDateTimeFormat(new java.text.SimpleDateFormat(newValue));\n        }\n    };\n    DateTimeCategoricalAxis.prototype.onLabelFormatChanged = function (oldValue, newValue) {\n        console.log(\"WARNING: labelFormat property is not supported for DateTimeCategoricalAxis. Use dateFormat instead.\");\n    };\n    DateTimeCategoricalAxis.prototype.onDateTimeComponentChanged = function (oldValue, newValue) {\n        if (newValue) {\n            switch (newValue.toLowerCase()) {\n                case publicEnumModule.DateTimeComponent.Second.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.SECOND);\n                    break;\n                case publicEnumModule.DateTimeComponent.Minute.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.MINUTE);\n                    break;\n                case publicEnumModule.DateTimeComponent.Hour.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.HOUR);\n                    break;\n                case publicEnumModule.DateTimeComponent.Day.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.DAY);\n                    break;\n                case publicEnumModule.DateTimeComponent.Week.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.WEEK);\n                    break;\n                case publicEnumModule.DateTimeComponent.Month.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.MONTH);\n                    break;\n                case publicEnumModule.DateTimeComponent.Year.toLowerCase():\n                    this.android.setDateTimeComponent(com.telerik.widget.chart.engine.axes.common.DateTimeComponent.YEAR);\n                    break;\n            }\n        }\n    };\n    return DateTimeCategoricalAxis;\n}(axisCommonModule.DateTimeCategoricalAxis));\nexports.DateTimeCategoricalAxis = DateTimeCategoricalAxis;\n////////////////////////////////////////////////////////////////////////\n// LogarithmicAxis\n////////////////////////////////////////////////////////////////////////\nvar LogarithmicAxis = (function (_super) {\n    __extends(LogarithmicAxis, _super);\n    function LogarithmicAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LogarithmicAxis.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.axes.LogarithmicAxis();\n                this._android.setCanApplyPalette(false);\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LogarithmicAxis.prototype.onExponentStepChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue) && newValue > 0) {\n            this.android.setExponentStep(newValue);\n        }\n    };\n    LogarithmicAxis.prototype.onLogarithmBaseChanged = function (oldValue, newValue) {\n        if (!isNaN(newValue)) {\n            this.android.setLogarithmBase(newValue);\n        }\n    };\n    LogarithmicAxis.prototype.onMajorStepChanged = function (oldValue, newValue) {\n        console.log(\"WARNING: majorStep property is not used for LogarithmicAxis. Use exponentStep property instead.\");\n    };\n    LogarithmicAxis.prototype.onMinimumChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue)) {\n            this.android.setMinimum(parseFloat(newValue));\n        }\n    };\n    LogarithmicAxis.prototype.onMaximumChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue)) {\n            this.android.setMaximum(parseFloat(newValue));\n        }\n    };\n    return LogarithmicAxis;\n}(axisCommonModule.LogarithmicAxis));\nexports.LogarithmicAxis = LogarithmicAxis;\nvar LinearAxis = (function (_super) {\n    __extends(LinearAxis, _super);\n    function LinearAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LinearAxis.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.axes.LinearAxis();\n                this._android.setCanApplyPalette(false);\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinearAxis.prototype.onMajorStepChanged = function (oldValue, newValue) {\n        if (newValue) {\n            this.android.setMajorStep(newValue);\n        }\n    };\n    LinearAxis.prototype.onMinimumChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue)) {\n            this.android.setMinimum(parseFloat(newValue));\n        }\n    };\n    LinearAxis.prototype.onMaximumChanged = function (oldValue, newValue) {\n        if (!isNaN(+newValue)) {\n            this.android.setMaximum(parseFloat(newValue));\n        }\n    };\n    return LinearAxis;\n}(axisCommonModule.LinearAxis));\nexports.LinearAxis = LinearAxis;\n"
    },
    {
      "id": 200,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view-common.js",
      "index": 231,
      "index2": 226,
      "size": 3400,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
      "issuerId": 201,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 201,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
          "type": "cjs require",
          "userRequest": "./chart-legend-view-common",
          "loc": "2:29-66"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar view_1 = require(\"tns-core-modules/ui/core/view\");\nvar chart_public_enum_1 = require(\"../../misc/chart-public-enum\");\nvar RadLegendView = (function (_super) {\n    __extends(RadLegendView, _super);\n    function RadLegendView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RadLegendView.prototype.onPositionPropertyChanged = function (oldValue, newValue) {\n        this.onPositionChanged(oldValue, newValue);\n    };\n    RadLegendView.prototype.onPositionChanged = function (oldValue, newValue) {\n    };\n    RadLegendView.prototype.onOffsetOriginPropertyChanged = function (oldValue, newValue) {\n        this.onOffsetOriginChanged(oldValue, newValue);\n    };\n    RadLegendView.prototype.onOffsetOriginChanged = function (oldValue, newValue) {\n    };\n    RadLegendView.prototype.onHorizontalOffsetPropertyChanged = function (oldValue, newValue) {\n        this.onHorizontalOffsetChanged(oldValue, newValue);\n    };\n    RadLegendView.prototype.onHorizontalOffsetChanged = function (oldValue, newValue) {\n    };\n    RadLegendView.prototype.onVerticalOffsetPropertyChanged = function (oldValue, newValue) {\n        this.onVerticalOffsetChanged(oldValue, newValue);\n    };\n    RadLegendView.prototype.onVerticalOffsetChanged = function (oldValue, newValue) {\n    };\n    RadLegendView.prototype.onTitlePropertyChanged = function (oldValue, newValue) {\n        this.onTitleChanged(oldValue, newValue);\n    };\n    RadLegendView.prototype.onTitleChanged = function (oldValue, newValue) {\n    };\n    RadLegendView.prototype.updateLegendView = function (chartView) {\n    };\n    return RadLegendView;\n}(view_1.View));\nRadLegendView.positionProperty = new view_1.Property({\n    name: \"position\",\n    defaultValue: chart_public_enum_1.ChartLegendPosition.Bottom,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onPositionPropertyChanged(oldValue, newValue);\n    },\n});\nRadLegendView.offsetOriginProperty = new view_1.Property({\n    name: \"offsetOrigin\",\n    defaultValue: chart_public_enum_1.ChartLegendOffsetOrigin.TopLeft,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onOffsetOriginPropertyChanged(oldValue, newValue);\n    },\n});\nRadLegendView.horizontalOffsetProperty = new view_1.Property({\n    name: \"horizontalOffset\",\n    defaultValue: 0,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onHorizontalOffsetPropertyChanged(oldValue, newValue);\n    },\n});\nRadLegendView.verticalOffsetProperty = new view_1.Property({\n    name: \"verticalOffset\",\n    defaultValue: 0,\n    valueConverter: parseFloat,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onVerticalOffsetPropertyChanged(oldValue, newValue);\n    },\n});\nRadLegendView.titleProperty = new view_1.Property({\n    name: \"title\",\n    defaultValue: undefined,\n    valueChanged: function (target, oldValue, newValue) {\n        target.onTitlePropertyChanged(oldValue, newValue);\n    },\n});\nexports.RadLegendView = RadLegendView;\nRadLegendView.positionProperty.register(RadLegendView);\nRadLegendView.offsetOriginProperty.register(RadLegendView);\nRadLegendView.horizontalOffsetProperty.register(RadLegendView);\nRadLegendView.verticalOffsetProperty.register(RadLegendView);\nRadLegendView.titleProperty.register(RadLegendView);\n"
    },
    {
      "id": 201,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-legend-view.android.js",
      "index": 230,
      "index2": 227,
      "size": 9446,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/views/chart-legend-view",
          "loc": "10:23-73"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar legendViewCommonModule = require(\"./chart-legend-view-common\");\nvar chartModule = require(\"../../chart-common\");\nvar chart_public_enum_1 = require(\"../../misc/chart-public-enum\");\nvar utilsModule = require(\"tns-core-modules/utils/utils\");\nvar style_properties_1 = require(\"tns-core-modules/ui/styling/style-properties\");\nvar RadLegendView = (function (_super) {\n    __extends(RadLegendView, _super);\n    function RadLegendView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RadLegendView.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadLegendView.prototype.updateLegendView = function (chartView) {\n        if (!(chartView)) {\n            return;\n        }\n        if (!(chartView instanceof chartModule.RadChartBase)) {\n            return;\n        }\n        if (!chartView._context) {\n            return;\n        }\n        if (!this.position) {\n            return;\n        }\n        if (!this._android) {\n            this._android = new com.telerik.widget.primitives.legend.RadLegendView(chartView._context);\n        }\n        if (!this._chart) {\n            this._chart = chartView;\n        }\n        this._android.setLegendProvider(chartView['androidView']);\n        var parent = this._android.getParent();\n        if (parent) {\n            parent.removeView(this._android);\n        }\n        var lParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n        var cParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n        chartView['androidView'].setId(android.view.View.generateViewId());\n        this._android.setId(android.view.View.generateViewId());\n        var widthPixels = style_properties_1.PercentLength.toDevicePixels(this.width, 0, this._android.getWidth());\n        var heightPixels = style_properties_1.PercentLength.toDevicePixels(this.height, 0, this._android.getHeight());\n        switch (this.position.toLowerCase()) {\n            case chart_public_enum_1.ChartLegendPosition.Left.toLowerCase():\n                if (isNaN(+widthPixels)) {\n                    console.log(\"WARNING: Width property is required if legend position is set to left.\");\n                }\n                lParams.width = widthPixels;\n                lParams.height = (!isNaN(heightPixels) && heightPixels > 0 ? heightPixels : android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_LEFT);\n                lParams.addRule(android.widget.RelativeLayout.CENTER_VERTICAL);\n                cParams.width = android.widget.RelativeLayout.LayoutParams.FILL_PARENT;\n                cParams.height = android.widget.RelativeLayout.LayoutParams.FILL_PARENT;\n                cParams.addRule(android.widget.RelativeLayout.RIGHT_OF, this._android.getId());\n                cParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_RIGHT);\n                break;\n            case chart_public_enum_1.ChartLegendPosition.Right.toLowerCase():\n                if (isNaN(+widthPixels)) {\n                    console.log(\"WARNING: Width property is required if legend position is set to right.\");\n                }\n                lParams.width = widthPixels;\n                lParams.height = (!isNaN(heightPixels) && heightPixels > 0 ? heightPixels : android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_RIGHT, this._android.getId());\n                lParams.addRule(android.widget.RelativeLayout.CENTER_VERTICAL);\n                cParams.width = android.widget.RelativeLayout.LayoutParams.FILL_PARENT;\n                cParams.height = android.widget.RelativeLayout.LayoutParams.FILL_PARENT;\n                cParams.addRule(android.widget.RelativeLayout.LEFT_OF, this._android.getId());\n                cParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_LEFT);\n                break;\n            case chart_public_enum_1.ChartLegendPosition.Top.toLowerCase():\n                lParams.width = android.widget.RelativeLayout.LayoutParams.MATCH_PARENT;\n                lParams.height = (!isNaN(heightPixels) && heightPixels > 0 ? heightPixels : android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_TOP);\n                cParams.addRule(android.widget.RelativeLayout.BELOW, this._android.getId());\n                break;\n            case chart_public_enum_1.ChartLegendPosition.Bottom.toLowerCase():\n                lParams.width = android.widget.RelativeLayout.LayoutParams.MATCH_PARENT;\n                lParams.height = (!isNaN(heightPixels) && heightPixels > 0 ? heightPixels : android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM);\n                cParams.addRule(android.widget.RelativeLayout.ABOVE, this._android.getId());\n                break;\n            case chart_public_enum_1.ChartLegendPosition.Floating.toLowerCase():\n                var params = this.getFloatingPositionParams();\n                lParams = params.legendParam;\n                cParams = params.chartParam;\n                break;\n        }\n        chartView['androidView'].setLayoutParams(cParams);\n        this._android.setLayoutParams(lParams);\n        chartView.rootLayout.addView(this._android);\n    };\n    RadLegendView.prototype.getFloatingPositionParams = function () {\n        var lParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n        var cParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n        var vertOff = utilsModule.layout.toDeviceIndependentPixels(this.verticalOffset);\n        var horzOff = utilsModule.layout.toDeviceIndependentPixels(this.horizontalOffset);\n        switch (this.offsetOrigin.toLowerCase()) {\n            case chart_public_enum_1.ChartLegendOffsetOrigin.TopRight.toLowerCase():\n                lParams.setMargins(0, vertOff, horzOff, 0);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_TOP);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_RIGHT);\n                break;\n            case chart_public_enum_1.ChartLegendOffsetOrigin.BottomLeft.toLowerCase():\n                lParams.setMargins(horzOff, 0, 0, vertOff);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_LEFT);\n                break;\n            case chart_public_enum_1.ChartLegendOffsetOrigin.BottomRight.toLowerCase():\n                lParams.setMargins(0, 0, horzOff, vertOff);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_RIGHT);\n                break;\n            case chart_public_enum_1.ChartLegendOffsetOrigin.TopLeft.toLowerCase():\n            default:\n                lParams.setMargins(horzOff, vertOff, 0, 0);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_TOP);\n                lParams.addRule(android.widget.RelativeLayout.ALIGN_PARENT_LEFT);\n                break;\n        }\n        var widthPixels = style_properties_1.PercentLength.toDevicePixels(this.width, 0, this._android.getWidth());\n        var heightPixels = style_properties_1.PercentLength.toDevicePixels(this.height, 0, this._android.getHeight());\n        if (isNaN(widthPixels) || widthPixels === 0) {\n            console.log(\"WARNING: Width property is required if legend position is set to Floating.\");\n        }\n        lParams.width = widthPixels;\n        lParams.height = (!isNaN(heightPixels) && heightPixels > 0 ? heightPixels : android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);\n        cParams.width = android.widget.RelativeLayout.LayoutParams.MATCH_PARENT;\n        cParams.height = android.widget.RelativeLayout.LayoutParams.MATCH_PARENT;\n        return { legendParam: lParams, chartParam: cParams };\n    };\n    RadLegendView.prototype.onTitleChanged = function (oldValue, newValue) {\n        console.log(\"WARNING: Android chart legend doesn't support 'title' property.\");\n    };\n    RadLegendView.prototype.onPositionChanged = function (oldValue, newValue) {\n        this.updateLegendView(this._chart);\n    };\n    RadLegendView.prototype.onOffsetOriginChanged = function (oldValue, newValue) {\n        this.updateLegendView(this._chart);\n    };\n    RadLegendView.prototype.onHorizontalOffsetChanged = function (oldValue, newValue) {\n        this.updateLegendView(this._chart);\n    };\n    RadLegendView.prototype.onVerticalOffsetChanged = function (oldValue, newValue) {\n        this.updateLegendView(this._chart);\n    };\n    return RadLegendView;\n}(legendViewCommonModule.RadLegendView));\nexports.RadLegendView = RadLegendView;\n"
    },
    {
      "id": 202,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
      "name": "./~/nativescript-telerik-ui-pro/chart/visualization/views/chart-series.android.js",
      "index": 233,
      "index2": 229,
      "size": 12630,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
      "issuerId": 93,
      "issuerName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 93,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-telerik-ui-pro/chart/chart.android.js",
          "module": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "moduleName": "./~/nativescript-telerik-ui-pro/chart/chart.android.js",
          "type": "cjs require",
          "userRequest": "./visualization/views/chart-series",
          "loc": "12:19-64"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar seriesCommonModule = require(\"./chart-series-common\");\nvar utilsModule = require(\"tns-core-modules/utils/utils\");\nvar PieSeries = (function (_super) {\n    __extends(PieSeries, _super);\n    function PieSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PieSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.pieChart.PieSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PieSeries;\n}(seriesCommonModule.PieSeries));\nexports.PieSeries = PieSeries;\nvar DonutSeries = (function (_super) {\n    __extends(DonutSeries, _super);\n    function DonutSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(DonutSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.pieChart.DoughnutSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DonutSeries;\n}(seriesCommonModule.DonutSeries));\nexports.DonutSeries = DonutSeries;\nvar LineSeries = (function (_super) {\n    __extends(LineSeries, _super);\n    function LineSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(LineSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.LineSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineSeries;\n}(seriesCommonModule.CategoricalSeries));\nexports.LineSeries = LineSeries;\nvar OhlcSeries = (function (_super) {\n    __extends(OhlcSeries, _super);\n    function OhlcSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(OhlcSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.OhlcSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OhlcSeries.prototype.onValuePropertyChanged = function (oldValue, newValue) {\n    };\n    OhlcSeries.prototype.onHighPropertyNameChanged = function (oldValue, newValue) {\n        if (!newValue) {\n            return;\n        }\n        var highPropertyName = this.highPropertyName;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[highPropertyName];\n            }\n        }));\n        this.android.setHighBinding(binding);\n    };\n    OhlcSeries.prototype.onLowPropertyNameChanged = function (oldValue, newValue) {\n        var lowPropertyName = this.lowPropertyName;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[lowPropertyName];\n            }\n        }));\n        this.android.setLowBinding(binding);\n    };\n    OhlcSeries.prototype.onOpenPropertyNameChanged = function (oldValue, newValue) {\n        var openPropertyName = this.openPropertyName;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[openPropertyName];\n            }\n        }));\n        this.android.setOpenBinding(binding);\n    };\n    OhlcSeries.prototype.onClosePropertyNameChanged = function (oldValue, newValue) {\n        var closePropertyName = this.closePropertyName;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[closePropertyName];\n            }\n        }));\n        this.android.setCloseBinding(binding);\n    };\n    return OhlcSeries;\n}(seriesCommonModule.OhlcSeries));\nexports.OhlcSeries = OhlcSeries;\nvar CandlestickSeries = (function (_super) {\n    __extends(CandlestickSeries, _super);\n    function CandlestickSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(CandlestickSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.CandlestickSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CandlestickSeries;\n}(OhlcSeries));\nexports.CandlestickSeries = CandlestickSeries;\nvar SplineSeries = (function (_super) {\n    __extends(SplineSeries, _super);\n    function SplineSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(SplineSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.SplineSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SplineSeries;\n}(LineSeries));\nexports.SplineSeries = SplineSeries;\nvar AreaSeries = (function (_super) {\n    __extends(AreaSeries, _super);\n    function AreaSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(AreaSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.AreaSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AreaSeries;\n}(seriesCommonModule.CategoricalSeries));\nexports.AreaSeries = AreaSeries;\nvar SplineAreaSeries = (function (_super) {\n    __extends(SplineAreaSeries, _super);\n    function SplineAreaSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(SplineAreaSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.SplineAreaSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SplineAreaSeries;\n}(AreaSeries));\nexports.SplineAreaSeries = SplineAreaSeries;\nvar ScatterBubbleSeries = (function (_super) {\n    __extends(ScatterBubbleSeries, _super);\n    function ScatterBubbleSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(ScatterBubbleSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.scatter.ScatterBubbleSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ScatterBubbleSeries;\n}(seriesCommonModule.ScatterBubbleSeries));\nexports.ScatterBubbleSeries = ScatterBubbleSeries;\nvar BubbleSeries = (function (_super) {\n    __extends(BubbleSeries, _super);\n    function BubbleSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(BubbleSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.BubbleSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BubbleSeries.prototype.onBubbleScaleChanged = function (oldValue, newValue) {\n        if (newValue) {\n            //todo: we use (scale^2) because of bug in Android scale calculation. Update this hack when it is fixed.\n            this.android.setBubbleScale(Math.pow(newValue * utilsModule.layout.getDisplayDensity(), 2));\n        }\n    };\n    BubbleSeries.prototype.onBubbleSizePropertyChanged = function (oldValue, newValue) {\n        if (!this.bubbleSizeProperty) {\n            return;\n        }\n        var propertyName = this.bubbleSizeProperty;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[propertyName];\n            }\n        }));\n        this.android.setBubbleSizeBinding(binding);\n    };\n    return BubbleSeries;\n}(seriesCommonModule.BubbleSeries));\nexports.BubbleSeries = BubbleSeries;\nvar ScatterSeries = (function (_super) {\n    __extends(ScatterSeries, _super);\n    function ScatterSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ScatterSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.scatter.ScatterPointSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ScatterSeries;\n}(seriesCommonModule.ScatterSeries));\nexports.ScatterSeries = ScatterSeries;\nvar BarSeries = (function (_super) {\n    __extends(BarSeries, _super);\n    function BarSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(BarSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.BarSeries();\n                this._android.setCombineMode(com.telerik.widget.chart.engine.series.combination.ChartSeriesCombineMode.CLUSTER);\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BarSeries;\n}(seriesCommonModule.CategoricalSeries));\nexports.BarSeries = BarSeries;\nvar RangeBarSeries = (function (_super) {\n    __extends(RangeBarSeries, _super);\n    function RangeBarSeries() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(RangeBarSeries.prototype, \"android\", {\n        get: function () {\n            if (!this._android) {\n                this._android = new com.telerik.widget.chart.visualization.cartesianChart.series.categorical.RangeBarSeries();\n            }\n            return this._android;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RangeBarSeries.prototype.onValuePropertyChanged = function (oldValue, newValue) {\n        console.log(\"WARNING: Range bar series doesn't use valueProperty property.\");\n    };\n    RangeBarSeries.prototype.onHighPropertyNameChanged = function (oldValue, newValue) {\n        if (!newValue) {\n            return;\n        }\n        var highPropertyName = this.highPropertyName;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[highPropertyName];\n            }\n        }));\n        this.android.setHighBinding(binding);\n    };\n    RangeBarSeries.prototype.onLowPropertyNameChanged = function (oldValue, newValue) {\n        var lowPropertyName = this.lowPropertyName;\n        var binding = new com.telerik.widget.chart.engine.databinding.GenericDataPointBinding(new com.telerik.android.common.Function({\n            apply: function (arg) {\n                var item = JSON.parse(arg);\n                return item[lowPropertyName];\n            }\n        }));\n        this.android.setLowBinding(binding);\n    };\n    return RangeBarSeries;\n}(seriesCommonModule.RangeBarSeries));\nexports.RangeBarSeries = RangeBarSeries;\n"
    },
    {
      "id": 203,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/InnerSubscriber.js",
      "name": "./~/rxjs/InnerSubscriber.js",
      "index": 118,
      "index2": 110,
      "size": 1289,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
      "issuerId": 41,
      "issuerName": "./~/rxjs/util/subscribeToResult.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 41,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/subscribeToResult.js",
          "module": "./~/rxjs/util/subscribeToResult.js",
          "moduleName": "./~/rxjs/util/subscribeToResult.js",
          "type": "cjs require",
          "userRequest": "../InnerSubscriber",
          "loc": "8:24-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map"
    },
    {
      "id": 204,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Notification.js",
      "name": "./~/rxjs/Notification.js",
      "index": 254,
      "index2": 249,
      "size": 4747,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/observeOn.js",
      "issuerId": 224,
      "issuerName": "./~/rxjs/operator/observeOn.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 224,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/observeOn.js",
          "module": "./~/rxjs/operator/observeOn.js",
          "moduleName": "./~/rxjs/operator/observeOn.js",
          "type": "cjs require",
          "userRequest": "../Notification",
          "loc": "8:21-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map"
    },
    {
      "id": 205,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/SubjectSubscription.js",
      "name": "./~/rxjs/SubjectSubscription.js",
      "index": 124,
      "index2": 116,
      "size": 1401,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
      "issuerId": 32,
      "issuerName": "./~/rxjs/Subject.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subject.js",
          "module": "./~/rxjs/Subject.js",
          "moduleName": "./~/rxjs/Subject.js",
          "type": "cjs require",
          "userRequest": "./SubjectSubscription",
          "loc": "11:28-60"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map"
    },
    {
      "id": 206,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ArrayLikeObservable.js",
      "name": "./~/rxjs/observable/ArrayLikeObservable.js",
      "index": 252,
      "index2": 248,
      "size": 2562,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 209,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./ArrayLikeObservable",
          "loc": "13:28-60"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map"
    },
    {
      "id": 207,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ConnectableObservable.js",
      "name": "./~/rxjs/observable/ConnectableObservable.js",
      "index": 121,
      "index2": 118,
      "size": 6365,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/multicast.js",
      "issuerId": 223,
      "issuerName": "./~/rxjs/operator/multicast.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 223,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/multicast.js",
          "module": "./~/rxjs/operator/multicast.js",
          "moduleName": "./~/rxjs/operator/multicast.js",
          "type": "cjs require",
          "userRequest": "../observable/ConnectableObservable",
          "loc": "2:30-76"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return this.lift(new RefCountOperator(this));\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subscribe: { value: ConnectableObservable.prototype._subscribe },\n    getSubject: { value: ConnectableObservable.prototype.getSubject },\n    connect: { value: ConnectableObservable.prototype.connect },\n    refCount: { value: ConnectableObservable.prototype.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map"
    },
    {
      "id": 208,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/ForkJoinObservable.js",
      "name": "./~/rxjs/observable/ForkJoinObservable.js",
      "index": 207,
      "index2": 200,
      "size": 4175,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/forkJoin.js",
      "issuerId": 211,
      "issuerName": "./~/rxjs/observable/forkJoin.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 211,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/forkJoin.js",
          "module": "./~/rxjs/observable/forkJoin.js",
          "moduleName": "./~/rxjs/observable/forkJoin.js",
          "type": "cjs require",
          "userRequest": "./ForkJoinObservable",
          "loc": "2:27-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isArray_1 = require('../util/isArray');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map"
    },
    {
      "id": 209,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "name": "./~/rxjs/observable/FromObservable.js",
      "index": 250,
      "index2": 251,
      "size": 5043,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/from.js",
      "issuerId": 212,
      "issuerName": "./~/rxjs/observable/from.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 212,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/from.js",
          "module": "./~/rxjs/observable/from.js",
          "moduleName": "./~/rxjs/observable/from.js",
          "type": "cjs require",
          "userRequest": "./FromObservable",
          "loc": "2:23-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isArrayLike_1 = require('../util/isArrayLike');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operator/observeOn');\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.$$observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.$$iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.$$observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.$$observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map"
    },
    {
      "id": 210,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/IteratorObservable.js",
      "name": "./~/rxjs/observable/IteratorObservable.js",
      "index": 251,
      "index2": 247,
      "size": 5037,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 209,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "./IteratorObservable",
          "loc": "11:27-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.$$iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.$$iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.$$iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.$$iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map"
    },
    {
      "id": 211,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/forkJoin.js",
      "name": "./~/rxjs/observable/forkJoin.js",
      "index": 206,
      "index2": 201,
      "size": 177,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
      "issuerId": 20,
      "issuerName": "./~/@angular/forms/@angular/forms.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 20,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/forms/@angular/forms.es5.js",
          "module": "./~/@angular/forms/@angular/forms.es5.js",
          "moduleName": "./~/@angular/forms/@angular/forms.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/observable/forkJoin",
          "loc": "12:0-52"
        }
      ],
      "usedExports": [
        "forkJoin"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar ForkJoinObservable_1 = require('./ForkJoinObservable');\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map"
    },
    {
      "id": 212,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/from.js",
      "name": "./~/rxjs/observable/from.js",
      "index": 249,
      "index2": 252,
      "size": 153,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/observable/from",
          "loc": "14:0-44"
        }
      ],
      "usedExports": [
        "from"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar FromObservable_1 = require('./FromObservable');\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map"
    },
    {
      "id": 213,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/merge.js",
      "name": "./~/rxjs/observable/merge.js",
      "index": 106,
      "index2": 114,
      "size": 128,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
      "issuerId": 1,
      "issuerName": "./~/@angular/core/@angular/core.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
          "module": "./~/@angular/core/@angular/core.es5.js",
          "moduleName": "./~/@angular/core/@angular/core.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/observable/merge",
          "loc": "12:0-46"
        }
      ],
      "usedExports": [
        "merge"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar merge_1 = require('../operator/merge');\nexports.merge = merge_1.mergeStatic;\n//# sourceMappingURL=merge.js.map"
    },
    {
      "id": 214,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/of.js",
      "name": "./~/rxjs/observable/of.js",
      "index": 255,
      "index2": 253,
      "size": 149,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/observable/of",
          "loc": "15:0-40"
        }
      ],
      "usedExports": [
        "of"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map"
    },
    {
      "id": 215,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/catch.js",
      "name": "./~/rxjs/operator/catch.js",
      "index": 262,
      "index2": 260,
      "size": 3979,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/catch",
          "loc": "23:0-45"
        }
      ],
      "usedExports": [
        "_catch"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map"
    },
    {
      "id": 216,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/concatAll.js",
      "name": "./~/rxjs/operator/concatAll.js",
      "index": 263,
      "index2": 261,
      "size": 2095,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/concatAll",
          "loc": "24:0-52"
        }
      ],
      "usedExports": [
        "concatAll"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar mergeAll_1 = require('./mergeAll');\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return this.lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map"
    },
    {
      "id": 217,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/concatMap.js",
      "name": "./~/rxjs/operator/concatMap.js",
      "index": 256,
      "index2": 255,
      "size": 3279,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/concatMap",
          "loc": "16:0-52"
        }
      ],
      "usedExports": [
        "concatMap"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar mergeMap_1 = require('./mergeMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged from the projected\n * Observables as they were subscribed to, one at a time. Optionally, these\n * values may have been projected from a passed `projectResult` argument.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map"
    },
    {
      "id": 218,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/every.js",
      "name": "./~/rxjs/operator/every.js",
      "index": 258,
      "index2": 256,
      "size": 2733,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/every",
          "loc": "17:0-44"
        }
      ],
      "usedExports": [
        "every"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return this.lift(new EveryOperator(predicate, thisArg, this));\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map"
    },
    {
      "id": 219,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/filter.js",
      "name": "./~/rxjs/operator/filter.js",
      "index": 265,
      "index2": 263,
      "size": 3582,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/filter",
          "loc": "30:0-46"
        }
      ],
      "usedExports": [
        "filter"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map"
    },
    {
      "id": 220,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/first.js",
      "name": "./~/rxjs/operator/first.js",
      "index": 259,
      "index2": 258,
      "size": 5770,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/first",
          "loc": "18:0-44"
        }
      ],
      "usedExports": [
        "first"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map"
    },
    {
      "id": 221,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/last.js",
      "name": "./~/rxjs/operator/last.js",
      "index": 264,
      "index2": 262,
      "size": 4342,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/last",
          "loc": "27:0-42"
        }
      ],
      "usedExports": [
        "last"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map"
    },
    {
      "id": 222,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/merge.js",
      "name": "./~/rxjs/operator/merge.js",
      "index": 107,
      "index2": 113,
      "size": 6263,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/merge.js",
      "issuerId": 213,
      "issuerName": "./~/rxjs/observable/merge.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 213,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/merge.js",
          "module": "./~/rxjs/observable/merge.js",
          "moduleName": "./~/rxjs/observable/merge.js",
          "type": "cjs require",
          "userRequest": "../operator/merge",
          "loc": "2:14-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar Observable_1 = require('../Observable');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map"
    },
    {
      "id": 223,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/multicast.js",
      "name": "./~/rxjs/operator/multicast.js",
      "index": 120,
      "index2": 119,
      "size": 2475,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/share.js",
      "issuerId": 226,
      "issuerName": "./~/rxjs/operator/share.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 226,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/share.js",
          "module": "./~/rxjs/operator/share.js",
          "moduleName": "./~/rxjs/operator/share.js",
          "type": "cjs require",
          "userRequest": "./multicast",
          "loc": "2:18-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory;\n    if (typeof subjectOrSubjectFactory === 'function') {\n        subjectFactory = subjectOrSubjectFactory;\n    }\n    else {\n        subjectFactory = function subjectFactory() {\n            return subjectOrSubjectFactory;\n        };\n    }\n    if (typeof selector === 'function') {\n        return this.lift(new MulticastOperator(subjectFactory, selector));\n    }\n    var connectable = Object.create(this, ConnectableObservable_1.connectableObservableDescriptor);\n    connectable.source = this;\n    connectable.subjectFactory = subjectFactory;\n    return connectable;\n}\nexports.multicast = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexports.MulticastOperator = MulticastOperator;\n//# sourceMappingURL=multicast.js.map"
    },
    {
      "id": 224,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/observeOn.js",
      "name": "./~/rxjs/operator/observeOn.js",
      "index": 253,
      "index2": 250,
      "size": 2864,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
      "issuerId": 209,
      "issuerName": "./~/rxjs/observable/FromObservable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 209,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/observable/FromObservable.js",
          "module": "./~/rxjs/observable/FromObservable.js",
          "moduleName": "./~/rxjs/observable/FromObservable.js",
          "type": "cjs require",
          "userRequest": "../operator/observeOn",
          "loc": "16:18-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map"
    },
    {
      "id": 225,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/reduce.js",
      "name": "./~/rxjs/operator/reduce.js",
      "index": 261,
      "index2": 259,
      "size": 4950,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
      "issuerId": 23,
      "issuerName": "./~/@angular/router/@angular/router.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/router/@angular/router.es5.js",
          "module": "./~/@angular/router/@angular/router.es5.js",
          "moduleName": "./~/@angular/router/@angular/router.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/reduce",
          "loc": "21:0-46"
        }
      ],
      "usedExports": [
        "reduce"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));\n}\nexports.reduce = reduce;\nvar ReduceOperator = (function () {\n    function ReduceOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ReduceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ReduceOperator;\n}());\nexports.ReduceOperator = ReduceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ReduceSubscriber = (function (_super) {\n    __extends(ReduceSubscriber, _super);\n    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n        this.hasValue = false;\n        this.acc = seed;\n        if (!this.hasSeed) {\n            this.index++;\n        }\n    }\n    ReduceSubscriber.prototype._next = function (value) {\n        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n            this._tryReduce(value);\n        }\n        else {\n            this.acc = value;\n            this.hasValue = true;\n        }\n    };\n    ReduceSubscriber.prototype._tryReduce = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.acc, value, this.index++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.acc = result;\n    };\n    ReduceSubscriber.prototype._complete = function () {\n        if (this.hasValue || this.hasSeed) {\n            this.destination.next(this.acc);\n        }\n        this.destination.complete();\n    };\n    return ReduceSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ReduceSubscriber = ReduceSubscriber;\n//# sourceMappingURL=reduce.js.map"
    },
    {
      "id": 226,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/operator/share.js",
      "name": "./~/rxjs/operator/share.js",
      "index": 119,
      "index2": 120,
      "size": 923,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
      "issuerId": 1,
      "issuerName": "./~/@angular/core/@angular/core.es5.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/@angular/core/@angular/core.es5.js",
          "module": "./~/@angular/core/@angular/core.es5.js",
          "moduleName": "./~/@angular/core/@angular/core.es5.js",
          "type": "harmony import",
          "userRequest": "rxjs/operator/share",
          "loc": "13:0-44"
        }
      ],
      "usedExports": [
        "share"
      ],
      "providedExports": null,
      "depth": 2,
      "source": "\"use strict\";\nvar multicast_1 = require('./multicast');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map"
    },
    {
      "id": 227,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/UnsubscriptionError.js",
      "name": "./~/rxjs/util/UnsubscriptionError.js",
      "index": 102,
      "index2": 94,
      "size": 1068,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "issuerId": 40,
      "issuerName": "./~/rxjs/Subscription.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 40,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/UnsubscriptionError",
          "loc": "7:28-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map"
    },
    {
      "id": 228,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/toSubscriber.js",
      "name": "./~/rxjs/util/toSubscriber.js",
      "index": 94,
      "index2": 99,
      "size": 764,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
      "issuerId": 5,
      "issuerName": "./~/rxjs/Observable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Observable.js",
          "module": "./~/rxjs/Observable.js",
          "moduleName": "./~/rxjs/Observable.js",
          "type": "cjs require",
          "userRequest": "./util/toSubscriber",
          "loc": "3:21-51"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map"
    },
    {
      "id": 229,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/util/tryCatch.js",
      "name": "./~/rxjs/util/tryCatch.js",
      "index": 100,
      "index2": 93,
      "size": 422,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
      "issuerId": 40,
      "issuerName": "./~/rxjs/Subscription.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 40,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/rxjs/Subscription.js",
          "module": "./~/rxjs/Subscription.js",
          "moduleName": "./~/rxjs/Subscription.js",
          "type": "cjs require",
          "userRequest": "./util/tryCatch",
          "loc": "5:17-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map"
    },
    {
      "id": 230,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color-common.js",
      "name": "./~/tns-core-modules/color/color-common.js",
      "index": 22,
      "index2": 11,
      "size": 6483,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color.android.js",
      "issuerId": 18,
      "issuerName": "./~/tns-core-modules/color/color.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color.android.js",
          "module": "./~/tns-core-modules/color/color.android.js",
          "moduleName": "./~/tns-core-modules/color/color.android.js",
          "type": "cjs require",
          "userRequest": "./color-common",
          "loc": "2:13-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar types = require(\"../utils/types\");\nvar knownColors = require(\"./known-colors\");\nvar SHARP = \"#\";\nvar HEX_REGEX = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i;\nvar Color = (function () {\n    function Color() {\n        if (arguments.length === 1) {\n            var arg = arguments[0];\n            if (types.isString(arg)) {\n                if (isRgbOrRgba(arg)) {\n                    this._argb = argbFromRgbOrRgba(arg);\n                }\n                else if (knownColors.isKnownName(arg)) {\n                    var hex = knownColors.getKnownColor(arg);\n                    this._name = arg;\n                    this._argb = this._argbFromString(hex);\n                }\n                else if (HEX_REGEX.test(arg)) {\n                    var hex = this._normalizeHex(arg);\n                    this._argb = this._argbFromString(hex);\n                }\n                else {\n                    throw new Error(\"Invalid color: \" + arg);\n                }\n            }\n            else if (types.isNumber(arg)) {\n                this._argb = arg >>> 0;\n            }\n            else {\n                throw new Error(\"Expected 1 or 4 constructor parameters.\");\n            }\n        }\n        else if (arguments.length === 4) {\n            this._argb = (arguments[0] & 0xFF) * 0x01000000\n                + (arguments[1] & 0xFF) * 0x00010000\n                + (arguments[2] & 0xFF) * 0x00000100\n                + (arguments[3] & 0xFF) * 0x00000001;\n        }\n        else {\n            throw new Error(\"Expected 1 or 4 constructor parameters.\");\n        }\n    }\n    Object.defineProperty(Color.prototype, \"a\", {\n        get: function () { return (this._argb / 0x01000000) & 0xFF; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"r\", {\n        get: function () { return (this._argb / 0x00010000) & 0xFF; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"g\", {\n        get: function () { return (this._argb / 0x00000100) & 0xFF; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"b\", {\n        get: function () { return (this._argb / 0x00000001) & 0xFF; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"argb\", {\n        get: function () {\n            return this._argb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"hex\", {\n        get: function () {\n            if (this.a === 0xFF) {\n                return (\"#\" + this._componentToHex(this.r) + this._componentToHex(this.g) + this._componentToHex(this.b)).toUpperCase();\n            }\n            else {\n                return (\"#\" + this._componentToHex(this.a) + this._componentToHex(this.r) + this._componentToHex(this.g) + this._componentToHex(this.b)).toUpperCase();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"ios\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"android\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Color.prototype._argbFromString = function (hex) {\n        if (hex.charAt(0) === \"#\") {\n            hex = hex.substr(1);\n        }\n        if (hex.length === 3) {\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        else if (hex.length === 4) {\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n        }\n        var intVal = parseInt(hex, 16);\n        if (hex.length === 6) {\n            intVal = (intVal & 0x00FFFFFF) + 0xFF000000;\n        }\n        return intVal;\n    };\n    Color.prototype.equals = function (value) {\n        return value && this.argb === value.argb;\n    };\n    Color.equals = function (value1, value2) {\n        if (!value1 && !value2) {\n            return true;\n        }\n        if (!value1 || !value2) {\n            return false;\n        }\n        return value1.equals(value2);\n    };\n    Color.isValid = function (value) {\n        if (types.isNullOrUndefined(value) || value instanceof Color) {\n            return true;\n        }\n        if (!types.isString(value)) {\n            return false;\n        }\n        if (knownColors.isKnownName(value)) {\n            return true;\n        }\n        return HEX_REGEX.test(value) || isRgbOrRgba(value);\n    };\n    Color.prototype._componentToHex = function (component) {\n        var hex = component.toString(16);\n        if (hex.length === 1) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    };\n    Color.prototype._normalizeHex = function (hexStr) {\n        if (hexStr.charAt(0) === SHARP && hexStr.length === 4) {\n            hexStr = hexStr.charAt(0)\n                + hexStr.charAt(1) + hexStr.charAt(1)\n                + hexStr.charAt(2) + hexStr.charAt(2)\n                + hexStr.charAt(3) + hexStr.charAt(3);\n        }\n        return hexStr;\n    };\n    Color.prototype.toString = function () {\n        return this.hex;\n    };\n    return Color;\n}());\nexports.Color = Color;\nfunction isRgbOrRgba(value) {\n    var toLower = value.toLowerCase();\n    return (toLower.indexOf(\"rgb(\") === 0 || toLower.indexOf(\"rgba(\") === 0) && toLower.indexOf(\")\") === (toLower.length - 1);\n}\nfunction argbFromRgbOrRgba(value) {\n    var toLower = value.toLowerCase();\n    var parts = toLower.replace(\"rgba(\", \"\").replace(\"rgb(\", \"\").replace(\")\", \"\").trim().split(\",\");\n    var r = 255;\n    var g = 255;\n    var b = 255;\n    var a = 255;\n    if (parts[0]) {\n        r = parseInt(parts[0].trim());\n    }\n    if (parts[1]) {\n        g = parseInt(parts[1].trim());\n    }\n    if (parts[2]) {\n        b = parseInt(parts[2].trim());\n    }\n    if (parts[3]) {\n        a = Math.round(parseFloat(parts[3].trim()) * 255);\n    }\n    return (a & 0xFF) * 0x01000000\n        + (r & 0xFF) * 0x00010000\n        + (g & 0xFF) * 0x00000100\n        + (b & 0xFF) * 0x00000001;\n}\n//# sourceMappingURL=color-common.js.map"
    },
    {
      "id": 231,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/known-colors.js",
      "name": "./~/tns-core-modules/color/known-colors.js",
      "index": 23,
      "index2": 10,
      "size": 5034,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color-common.js",
      "issuerId": 230,
      "issuerName": "./~/tns-core-modules/color/color-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 230,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/color/color-common.js",
          "module": "./~/tns-core-modules/color/color-common.js",
          "moduleName": "./~/tns-core-modules/color/color-common.js",
          "type": "cjs require",
          "userRequest": "./known-colors",
          "loc": "3:18-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transparent = \"#00000000\";\nexports.AliceBlue = \"#F0F8FF\";\nexports.AntiqueWhite = \"#FAEBD7\";\nexports.Aqua = \"#00FFFF\";\nexports.Aquamarine = \"#7FFFD4\";\nexports.Azure = \"#F0FFFF\";\nexports.Beige = \"#F5F5DC\";\nexports.Bisque = \"#FFE4C4\";\nexports.Black = \"#000000\";\nexports.BlanchedAlmond = \"#FFEBCD\";\nexports.Blue = \"#0000FF\";\nexports.BlueViolet = \"#8A2BE2\";\nexports.Brown = \"#A52A2A\";\nexports.BurlyWood = \"#DEB887\";\nexports.CadetBlue = \"#5F9EA0\";\nexports.Chartreuse = \"#7FFF00\";\nexports.Chocolate = \"#D2691E\";\nexports.Coral = \"#FF7F50\";\nexports.CornflowerBlue = \"#6495ED\";\nexports.Cornsilk = \"#FFF8DC\";\nexports.Crimson = \"#DC143C\";\nexports.Cyan = \"#00FFFF\";\nexports.DarkBlue = \"#00008B\";\nexports.DarkCyan = \"#008B8B\";\nexports.DarkGoldenRod = \"#B8860B\";\nexports.DarkGray = \"#A9A9A9\";\nexports.DarkGreen = \"#006400\";\nexports.DarkKhaki = \"#BDB76B\";\nexports.DarkMagenta = \"#8B008B\";\nexports.DarkOliveGreen = \"#556B2F\";\nexports.DarkOrange = \"#FF8C00\";\nexports.DarkOrchid = \"#9932CC\";\nexports.DarkRed = \"#8B0000\";\nexports.DarkSalmon = \"#E9967A\";\nexports.DarkSeaGreen = \"#8FBC8F\";\nexports.DarkSlateBlue = \"#483D8B\";\nexports.DarkSlateGray = \"#2F4F4F\";\nexports.DarkTurquoise = \"#00CED1\";\nexports.DarkViolet = \"#9400D3\";\nexports.DeepPink = \"#FF1493\";\nexports.DeepSkyBlue = \"#00BFFF\";\nexports.DimGray = \"#696969\";\nexports.DodgerBlue = \"#1E90FF\";\nexports.FireBrick = \"#B22222\";\nexports.FloralWhite = \"#FFFAF0\";\nexports.ForestGreen = \"#228B22\";\nexports.Fuchsia = \"#FF00FF\";\nexports.Gainsboro = \"#DCDCDC\";\nexports.GhostWhite = \"#F8F8FF\";\nexports.Gold = \"#FFD700\";\nexports.GoldenRod = \"#DAA520\";\nexports.Gray = \"#808080\";\nexports.Green = \"#008000\";\nexports.GreenYellow = \"#ADFF2F\";\nexports.HoneyDew = \"#F0FFF0\";\nexports.HotPink = \"#FF69B4\";\nexports.IndianRed = \"#CD5C5C\";\nexports.Indigo = \"#4B0082\";\nexports.Ivory = \"#FFFFF0\";\nexports.Khaki = \"#F0E68C\";\nexports.Lavender = \"#E6E6FA\";\nexports.LavenderBlush = \"#FFF0F5\";\nexports.LawnGreen = \"#7CFC00\";\nexports.LemonChiffon = \"#FFFACD\";\nexports.LightBlue = \"#ADD8E6\";\nexports.LightCoral = \"#F08080\";\nexports.LightCyan = \"#E0FFFF\";\nexports.LightGoldenRodYellow = \"#FAFAD2\";\nexports.LightGray = \"#D3D3D3\";\nexports.LightGreen = \"#90EE90\";\nexports.LightPink = \"#FFB6C1\";\nexports.LightSalmon = \"#FFA07A\";\nexports.LightSeaGreen = \"#20B2AA\";\nexports.LightSkyBlue = \"#87CEFA\";\nexports.LightSlateGray = \"#778899\";\nexports.LightSteelBlue = \"#B0C4DE\";\nexports.LightYellow = \"#FFFFE0\";\nexports.Lime = \"#00FF00\";\nexports.LimeGreen = \"#32CD32\";\nexports.Linen = \"#FAF0E6\";\nexports.Magenta = \"#FF00FF\";\nexports.Maroon = \"#800000\";\nexports.MediumAquaMarine = \"#66CDAA\";\nexports.MediumBlue = \"#0000CD\";\nexports.MediumOrchid = \"#BA55D3\";\nexports.MediumPurple = \"#9370DB\";\nexports.MediumSeaGreen = \"#3CB371\";\nexports.MediumSlateBlue = \"#7B68EE\";\nexports.MediumSpringGreen = \"#00FA9A\";\nexports.MediumTurquoise = \"#48D1CC\";\nexports.MediumVioletRed = \"#C71585\";\nexports.MidnightBlue = \"#191970\";\nexports.MintCream = \"#F5FFFA\";\nexports.MistyRose = \"#FFE4E1\";\nexports.Moccasin = \"#FFE4B5\";\nexports.NavajoWhite = \"#FFDEAD\";\nexports.Navy = \"#000080\";\nexports.OldLace = \"#FDF5E6\";\nexports.Olive = \"#808000\";\nexports.OliveDrab = \"#6B8E23\";\nexports.Orange = \"#FFA500\";\nexports.OrangeRed = \"#FF4500\";\nexports.Orchid = \"#DA70D6\";\nexports.PaleGoldenRod = \"#EEE8AA\";\nexports.PaleGreen = \"#98FB98\";\nexports.PaleTurquoise = \"#AFEEEE\";\nexports.PaleVioletRed = \"#DB7093\";\nexports.PapayaWhip = \"#FFEFD5\";\nexports.PeachPuff = \"#FFDAB9\";\nexports.Peru = \"#CD853F\";\nexports.Pink = \"#FFC0CB\";\nexports.Plum = \"#DDA0DD\";\nexports.PowderBlue = \"#B0E0E6\";\nexports.Purple = \"#800080\";\nexports.Red = \"#FF0000\";\nexports.RosyBrown = \"#BC8F8F\";\nexports.RoyalBlue = \"#4169E1\";\nexports.SaddleBrown = \"#8B4513\";\nexports.Salmon = \"#FA8072\";\nexports.SandyBrown = \"#F4A460\";\nexports.SeaGreen = \"#2E8B57\";\nexports.SeaShell = \"#FFF5EE\";\nexports.Sienna = \"#A0522D\";\nexports.Silver = \"#C0C0C0\";\nexports.SkyBlue = \"#87CEEB\";\nexports.SlateBlue = \"#6A5ACD\";\nexports.SlateGray = \"#708090\";\nexports.Snow = \"#FFFAFA\";\nexports.SpringGreen = \"#00FF7F\";\nexports.SteelBlue = \"#4682B4\";\nexports.Tan = \"#D2B48C\";\nexports.Teal = \"#008080\";\nexports.Thistle = \"#D8BFD8\";\nexports.Tomato = \"#FF6347\";\nexports.Turquoise = \"#40E0D0\";\nexports.Violet = \"#EE82EE\";\nexports.Wheat = \"#F5DEB3\";\nexports.White = \"#FFFFFF\";\nexports.WhiteSmoke = \"#F5F5F5\";\nexports.Yellow = \"#FFFF00\";\nexports.YellowGreen = \"#9ACD32\";\nvar _allColors = {};\n(function () {\n    var name;\n    var underscore = \"_\";\n    for (var p in exports) {\n        name = p;\n        if (name.charAt(0) !== underscore) {\n            _allColors[name.toLowerCase()] = exports[p];\n        }\n    }\n})();\nfunction isKnownName(name) {\n    if (!name) {\n        return undefined;\n    }\n    return name.toLowerCase() in _allColors;\n}\nexports.isKnownName = isKnownName;\nfunction getKnownColor(name) {\n    if (!name) {\n        return undefined;\n    }\n    return _allColors[name.toLowerCase()];\n}\nexports.getKnownColor = getKnownColor;\n//# sourceMappingURL=known-colors.js.map"
    },
    {
      "id": 232,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/console/console.js",
      "name": "./~/tns-core-modules/console/console.js",
      "index": 85,
      "index2": 81,
      "size": 13402,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "issuerId": 62,
      "issuerName": "./~/tns-core-modules/globals/globals.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "console",
          "loc": "98:24-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction __message(message, level) {\n    if (global.__consoleMessage) {\n        global.__consoleMessage(message, level);\n    }\n}\nvar Console = (function () {\n    function Console() {\n        this.TAG = \"JS\";\n        this._timers = {};\n        this._stripFirstTwoLinesRegEx = /^([^\\n]*?\\n){2}((.|\\n)*)$/gmi;\n    }\n    Console.prototype.sprintf = function (message) {\n        var regex = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgGj])/g;\n        var a = arguments;\n        var i = 0;\n        var format = a[i++];\n        var pad = function (str, len, chr, leftJustify) {\n            if (!chr) {\n                chr = ' ';\n            }\n            var padding = (str.length >= len) ? '' : new Array(1 + len - str.length >>> 0)\n                .join(chr);\n            return leftJustify ? str + padding : padding + str;\n        };\n        var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n            var diff = minWidth - value.length;\n            if (diff > 0) {\n                if (leftJustify || !zeroPad) {\n                    value = pad(value, minWidth, customPadChar, leftJustify);\n                }\n                else {\n                    value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n                }\n            }\n            return value;\n        };\n        var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n            var number = value >>> 0;\n            prefix = prefix && number && {\n                '2': '0b',\n                '8': '0',\n                '16': '0x'\n            }[base] || '';\n            value = prefix + pad(number.toString(base), precision || 0, '0', false);\n            return justify(value, prefix, leftJustify, minWidth, zeroPad);\n        };\n        var formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n            if (precision != null) {\n                value = value.slice(0, precision);\n            }\n            return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar);\n        };\n        var that = this;\n        var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {\n            var number, prefix, method, textTransform, value;\n            if (substring === '%%') {\n                return '%';\n            }\n            var leftJustify = false;\n            var positivePrefix = '';\n            var zeroPad = false;\n            var prefixBaseX = false;\n            var customPadChar = ' ';\n            var flagsl = flags.length;\n            for (var j = 0; flags && j < flagsl; j++) {\n                switch (flags.charAt(j)) {\n                    case ' ':\n                        positivePrefix = ' ';\n                        break;\n                    case '+':\n                        positivePrefix = '+';\n                        break;\n                    case '-':\n                        leftJustify = true;\n                        break;\n                    case \"'\":\n                        customPadChar = flags.charAt(j + 1);\n                        break;\n                    case '0':\n                        zeroPad = true;\n                        customPadChar = '0';\n                        break;\n                    case '#':\n                        prefixBaseX = true;\n                        break;\n                }\n            }\n            if (!minWidth) {\n                minWidth = 0;\n            }\n            else if (minWidth === '*') {\n                minWidth = +a[i++];\n            }\n            else if (minWidth.charAt(0) === '*') {\n                minWidth = +a[minWidth.slice(1, -1)];\n            }\n            else {\n                minWidth = +minWidth;\n            }\n            if (minWidth < 0) {\n                minWidth = -minWidth;\n                leftJustify = true;\n            }\n            if (!isFinite(minWidth)) {\n                throw new Error('sprintf: (minimum-)width must be finite');\n            }\n            if (!precision) {\n                precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type === 'd') ? 0 : undefined;\n            }\n            else if (precision === '*') {\n                precision = +a[i++];\n            }\n            else if (precision.charAt(0) === '*') {\n                precision = +a[precision.slice(1, -1)];\n            }\n            else {\n                precision = +precision;\n            }\n            value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n            switch (type) {\n                case 's':\n                    return formatString(String(value), leftJustify, minWidth, precision, zeroPad, customPadChar);\n                case 'c':\n                    return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);\n                case 'b':\n                    return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n                case 'o':\n                    return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n                case 'x':\n                    return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n                case 'X':\n                    return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n                        .toUpperCase();\n                case 'u':\n                    return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n                case 'i':\n                case 'd':\n                    number = +value || 0;\n                    number = Math.round(number - number % 1);\n                    prefix = number < 0 ? '-' : positivePrefix;\n                    value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n                    return justify(value, prefix, leftJustify, minWidth, zeroPad);\n                case 'e':\n                case 'E':\n                case 'f':\n                case 'F':\n                case 'g':\n                case 'G':\n                    number = +value;\n                    prefix = number < 0 ? '-' : positivePrefix;\n                    method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n                    textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];\n                    value = prefix + Math.abs(number)[method](precision);\n                    return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();\n                case 'j':\n                    return that.createDump(value);\n                default:\n                    return substring;\n            }\n        };\n        return format.replace(regex, doFormat);\n    };\n    Console.prototype.formatParams = function (message) {\n        if (arguments.length <= 1) {\n            return \"\" + message;\n        }\n        var res = this.sprintf.apply(this, arguments);\n        if (res === message) {\n            var args = Array.prototype.slice.call(arguments);\n            return args.join(' ');\n        }\n        return res;\n    };\n    Console.prototype.timeMillis = function () {\n        return java.lang.System.nanoTime() / 1000000;\n    };\n    Console.prototype.time = function (reportName) {\n        var name = reportName ? '__' + reportName : '__internal_console_time__';\n        if (this._timers[name] === undefined || this._timers.hasOwnProperty(name)) {\n            this._timers[name] = this.timeMillis();\n        }\n        else {\n            this.warn('invalid name for timer console.time(' + reportName + ')');\n        }\n    };\n    Console.prototype.timeEnd = function (reportName) {\n        var name = reportName ? '__' + reportName : '__internal_console_time__';\n        if (this._timers.hasOwnProperty(name)) {\n            var val = this._timers[name];\n            if (val) {\n                var time = this.timeMillis();\n                this.info('console.time(' + reportName + '): %.6f ms', (time - val));\n                this._timers[name] = undefined;\n            }\n            else {\n                this.warn('undefined console.time(' + reportName + ')');\n            }\n        }\n    };\n    Console.prototype.assert = function (test, message) {\n        var formatParams = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            formatParams[_i - 2] = arguments[_i];\n        }\n        if (!test) {\n            Array.prototype.shift.apply(arguments);\n            var formatedMessage = this.formatParams.apply(this, arguments);\n            this.error(formatedMessage, 3);\n            __message(formatedMessage, \"error\");\n        }\n    };\n    Console.prototype.info = function (message) {\n        var formatParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            formatParams[_i - 1] = arguments[_i];\n        }\n        this.logMessage(this.formatParams.apply(this, arguments), 1);\n    };\n    Console.prototype.warn = function (message) {\n        var formatParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            formatParams[_i - 1] = arguments[_i];\n        }\n        var formatedMessage = this.formatParams.apply(this, arguments);\n        this.logMessage(formatedMessage, 2);\n        __message(formatedMessage, \"warning\");\n    };\n    Console.prototype.error = function (message) {\n        var formatParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            formatParams[_i - 1] = arguments[_i];\n        }\n        var formatedMessage = this.formatParams.apply(this, arguments);\n        this.logMessage(formatedMessage, 3);\n        __message(formatedMessage, \"error\");\n    };\n    Console.prototype.log = function (message) {\n        var formatParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            formatParams[_i - 1] = arguments[_i];\n        }\n        var formatedMessage = this.formatParams.apply(this, arguments);\n        this.logMessage(formatedMessage, 0);\n        __message(formatedMessage, \"log\");\n    };\n    Console.prototype.logMessage = function (message, messageType) {\n        if (!global.android) {\n            return;\n        }\n        var arrayToLog = [];\n        if (message.length > 4000) {\n            for (var i = 0; i * 4000 < message.length; i++) {\n                arrayToLog.push(message.substr((i * 4000), 4000));\n            }\n        }\n        else {\n            arrayToLog.push(message);\n        }\n        for (var i = 0; i < arrayToLog.length; i++) {\n            switch (messageType) {\n                case 0: {\n                    android.util.Log.v(this.TAG, arrayToLog[i]);\n                    break;\n                }\n                case 2: {\n                    android.util.Log.w(this.TAG, arrayToLog[i]);\n                    break;\n                }\n                case 3: {\n                    android.util.Log.e(this.TAG, arrayToLog[i]);\n                    break;\n                }\n                case 1: {\n                    android.util.Log.i(this.TAG, arrayToLog[i]);\n                    break;\n                }\n            }\n        }\n    };\n    Console.prototype.trace = function () {\n        var stack;\n        stack = (new Error()).stack.toString();\n        stack = stack.replace(this._stripFirstTwoLinesRegEx, \"$2\");\n        stack = \"Stack Trace:\\n\" + stack;\n        this.log(stack);\n    };\n    Console.prototype.createDump = function (obj) {\n        var result = [];\n        if (null == obj) {\n            result.push(\"=== dump(): object is 'null' ===\");\n            return result.join('');\n        }\n        if (obj === undefined) {\n            result.push(\"=== dump(): object is 'undefined' ===\");\n            return result.join('');\n        }\n        result.push('=== dump(): dumping members ===\\n');\n        var stringifyValueCache = [];\n        var stringifyKeyCache = [];\n        result.push(JSON.stringify(obj, function (k, v) {\n            stringifyKeyCache.push(k);\n            if (typeof v === 'object' && v !== null) {\n                if (stringifyValueCache.indexOf(v) !== -1) {\n                    return \"#CR:\" + (v.toString ? v.toString() : v);\n                }\n                stringifyValueCache.push(v);\n            }\n            if (typeof v === 'function') {\n                return k + \"()\" + v;\n            }\n            return v;\n        }, 4));\n        result.push('\\n=== dump(): dumping function and properties names ===\\n');\n        for (var id in obj) {\n            try {\n                if (typeof (obj[id]) === 'function') {\n                    result.push(id + '()\\n');\n                }\n                else {\n                    if (typeof (obj[id]) !== 'object' && stringifyKeyCache.indexOf(id) === -1) {\n                        result.push(id + \": \" + (obj[id] + '\\n'));\n                    }\n                }\n            }\n            catch (err) {\n                result.push(id + ': inaccessible');\n            }\n        }\n        stringifyValueCache = null;\n        stringifyKeyCache = null;\n        result.push('=== dump(): finished ===');\n        return result.join('');\n    };\n    Console.prototype.dir = function (obj) {\n        var dump = this.createDump(obj);\n        this.log(dump);\n    };\n    return Console;\n}());\nexports.Console = Console;\n//# sourceMappingURL=console.js.map"
    },
    {
      "id": 233,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/css/index.js",
      "name": "./~/tns-core-modules/css/index.js",
      "index": 48,
      "index2": 37,
      "size": 40,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
      "issuerId": 159,
      "issuerName": "./~/tns-core-modules/ui/styling/style-scope.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "../../css",
          "loc": "3:12-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "exports.parse = require('./lib/parse');\n"
    },
    {
      "id": 234,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/css/lib/parse/index.js",
      "name": "./~/tns-core-modules/css/lib/parse/index.js",
      "index": 49,
      "index2": 36,
      "size": 10812,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/css/index.js",
      "issuerId": 233,
      "issuerName": "./~/tns-core-modules/css/index.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 233,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/css/index.js",
          "module": "./~/tns-core-modules/css/index.js",
          "moduleName": "./~/tns-core-modules/css/index.js",
          "type": "cjs require",
          "userRequest": "./lib/parse",
          "loc": "1:16-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   */\n\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node){\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node\n   */\n\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string\n   */\n\n  Position.prototype.content = css;\n\n  /**\n   * Error `msg`.\n   */\n\n  var errorsList = [];\n\n  function error(msg) {\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    var rulesList = rules();\n\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) != '}' && (node = atrule() || rule())) {\n      if (node !== false) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css.charAt(0) || '*' != css.charAt(1)) return;\n\n    var i = 2;\n    while (\"\" != css.charAt(i) && ('*' != css.charAt(i) || '/' != css.charAt(i + 1))) ++i;\n    i += 2;\n\n    if (\"\" === css.charAt(i-1)) {\n      return error('End of comment missing');\n    }\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    /* @fix Remove all comments from selectors\n     * http://ostermiller.org/findcomment.html */\n    return trim(m[0])\n      .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n      .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n        return m.replace(/,/g, '\\u200C');\n      })\n      .split(/\\s*(?![^(]*\\)),\\s*/)\n      .map(function(s) {\n        return s.replace(/\\u200C/g, ',');\n      });\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!prop) return;\n    prop = trim(prop[0]);\n\n    // :\n    if (!match(/^:\\s*/)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop.replace(commentre, ''),\n      value: val ? trim(val[0]).replace(commentre, '') : ''\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return error(\"missing '{'\");\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    if (!close()) return error(\"missing '}'\");\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return error(\"@keyframes missing name\");\n    var name = m[1];\n\n    if (!open()) return error(\"@keyframes missing '{'\");\n\n    var frame;\n    var frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) return error(\"@keyframes missing '}'\");\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = trim(m[1]);\n\n    if (!open()) return error(\"@supports missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@supports missing '}'\");\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse host.\n   */\n\n  function athost() {\n    var pos = position();\n    var m = match(/^@host\\s*/);\n\n    if (!m) return;\n\n    if (!open()) return error(\"@host missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@host missing '}'\");\n\n    return pos({\n      type: 'host',\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = trim(m[1]);\n\n    if (!open()) return error(\"@media missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@media missing '}'\");\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n\n  /**\n   * Parse custom-media.\n   */\n\n  function atcustommedia() {\n    var pos = position();\n    var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) return;\n\n    return pos({\n      type: 'custom-media',\n      name: trim(m[1]),\n      media: trim(m[2])\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n\n    if (!open()) return error(\"@page missing '{'\");\n    var decls = comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@page missing '}'\");\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = trim(m[1]);\n    var doc = trim(m[2]);\n\n    if (!open()) return error(\"@document missing '{'\");\n\n    var style = comments().concat(rules());\n\n    if (!close()) return error(\"@document missing '}'\");\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse font-face.\n   */\n\n  function atfontface() {\n    var pos = position();\n    var m = match(/^@font-face\\s*/);\n    if (!m) return;\n\n    if (!open()) return error(\"@font-face missing '{'\");\n    var decls = comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@font-face missing '}'\");\n\n    return pos({\n      type: 'font-face',\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  var atimport = _compileAtrule('import');\n\n  /**\n   * Parse charset\n   */\n\n  var atcharset = _compileAtrule('charset');\n\n  /**\n   * Parse namespace\n   */\n\n  var atnamespace = _compileAtrule('namespace');\n\n  /**\n   * Parse non-block at-rules\n   */\n\n\n  function _compileAtrule(name) {\n    var re = new RegExp('^@' + name + '\\\\s*([^;]+);');\n    return function() {\n      var pos = position();\n      var m = match(re);\n      if (!m) return;\n      var ret = { type: name };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    }\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    if (css[0] != '@') return;\n\n    return atkeyframes()\n      || atmedia()\n      || atcustommedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage()\n      || athost()\n      || atfontface();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return error('selector missing');\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return addParent(stylesheet());\n};\n\n/**\n * Trim `str`.\n */\n\nfunction trim(str) {\n  return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\n}\n\n/**\n * Adds non-enumerable parent node reference to each node.\n */\n\nfunction addParent(obj, parent) {\n  var isNode = obj && typeof obj.type === 'string';\n  var childParent = isNode ? obj : parent;\n\n  for (var k in obj) {\n    var value = obj[k];\n    if (Array.isArray(value)) {\n      value.forEach(function(v) { addParent(v, childParent); });\n    } else if (value && typeof value === 'object') {\n      addParent(value, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, 'parent', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n\n  return obj;\n}\n"
    },
    {
      "id": 235,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/debugger/debugger.js",
      "name": "./~/tns-core-modules/debugger/debugger.js",
      "index": 37,
      "index2": 23,
      "size": 3304,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http-request/http-request.android.js",
      "issuerId": 238,
      "issuerName": "./~/tns-core-modules/http/http-request/http-request.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 238,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http-request/http-request.android.js",
          "module": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "moduleName": "./~/tns-core-modules/http/http-request/http-request.android.js",
          "type": "cjs require",
          "userRequest": "../../debugger/debugger",
          "loc": "2:17-51"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 7,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar network;\nfunction getNetwork() {\n    return network;\n}\nexports.getNetwork = getNetwork;\nfunction setNetwork(newNetwork) {\n    network = newNetwork;\n}\nexports.setNetwork = setNetwork;\nvar NetworkAgent;\n(function (NetworkAgent) {\n    function responseReceived(requestId, result, headers) {\n        var requestIdStr = requestId.toString();\n        var mimeType = headers[\"Content-Type\"] || headers[\"content-type\"];\n        var response = {\n            url: result.url || \"\",\n            status: result.statusCode,\n            statusText: result.statusText || \"\",\n            headers: headers,\n            mimeType: mimeType,\n            fromDiskCache: false\n        };\n        var responseData = {\n            requestId: requestIdStr,\n            type: mimeTypeToType(response.mimeType),\n            response: response,\n            timestamp: getTimeStamp()\n        };\n        global.__inspector.responseReceived(responseData);\n        global.__inspector.loadingFinished({ requestId: requestIdStr, timestamp: getTimeStamp() });\n        var hasTextContent = responseData.type === \"Document\" || responseData.type === \"Script\";\n        var data;\n        if (!hasTextContent) {\n            if (responseData.type === \"Image\") {\n                var bitmap = result.responseAsImage;\n                if (bitmap) {\n                    var outputStream = new java.io.ByteArrayOutputStream();\n                    bitmap.compress(android.graphics.Bitmap.CompressFormat.PNG, 100, outputStream);\n                    var base64Image = android.util.Base64.encodeToString(outputStream.toByteArray(), android.util.Base64.DEFAULT);\n                    data = base64Image;\n                }\n            }\n        }\n        else {\n            data = result.responseAsString;\n        }\n        var successfulRequestData = {\n            requestId: requestIdStr,\n            data: data,\n            hasTextContent: hasTextContent\n        };\n        global.__inspector.dataForRequestId(successfulRequestData);\n    }\n    NetworkAgent.responseReceived = responseReceived;\n    function requestWillBeSent(requestId, options) {\n        var request = {\n            url: options.url,\n            method: options.method,\n            headers: options.headers || {},\n            postData: options.content ? options.content.toString() : \"\"\n        };\n        var requestData = {\n            requestId: requestId.toString(),\n            url: request.url,\n            request: request,\n            timestamp: getTimeStamp(),\n            type: \"Document\"\n        };\n        global.__inspector.requestWillBeSent(requestData);\n    }\n    NetworkAgent.requestWillBeSent = requestWillBeSent;\n    function getTimeStamp() {\n        var d = new Date();\n        return Math.round(d.getTime() / 1000);\n    }\n    function mimeTypeToType(mimeType) {\n        var type = \"Document\";\n        if (mimeType) {\n            if (mimeType.indexOf(\"image\") === 0) {\n                type = \"Image\";\n            }\n            else if (mimeType.indexOf(\"javascript\") !== -1 || mimeType.indexOf(\"json\") !== -1) {\n                type = \"Script\";\n            }\n        }\n        return type;\n    }\n})(NetworkAgent = exports.NetworkAgent || (exports.NetworkAgent = {}));\n//# sourceMappingURL=debugger.js.map"
    },
    {
      "id": 236,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system-access.android.js",
      "name": "./~/tns-core-modules/file-system/file-system-access.android.js",
      "index": 31,
      "index2": 19,
      "size": 13023,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system.js",
      "issuerId": 8,
      "issuerName": "./~/tns-core-modules/file-system/file-system.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system.js",
          "module": "./~/tns-core-modules/file-system/file-system.js",
          "moduleName": "./~/tns-core-modules/file-system/file-system.js",
          "type": "cjs require",
          "userRequest": "./file-system-access",
          "loc": "2:25-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar textModule = require(\"../text\");\nvar application_1 = require(\"../application\");\nvar applicationContext;\nfunction getApplicationContext() {\n    if (!applicationContext) {\n        applicationContext = application_1.getNativeApplication().getApplicationContext();\n    }\n    return applicationContext;\n}\nvar FileSystemAccess = (function () {\n    function FileSystemAccess() {\n        this._pathSeparator = \"/\";\n    }\n    FileSystemAccess.prototype.getLastModified = function (path) {\n        var javaFile = new java.io.File(path);\n        return new Date(javaFile.lastModified());\n    };\n    FileSystemAccess.prototype.getParent = function (path, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            var parent = javaFile.getParentFile();\n            return { path: parent.getAbsolutePath(), name: parent.getName() };\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n            return undefined;\n        }\n    };\n    FileSystemAccess.prototype.getFile = function (path, onError) {\n        return this.ensureFile(new java.io.File(path), false, onError);\n    };\n    FileSystemAccess.prototype.getFolder = function (path, onError) {\n        var javaFile = new java.io.File(path);\n        var dirInfo = this.ensureFile(javaFile, true, onError);\n        if (!dirInfo) {\n            return undefined;\n        }\n        return { path: dirInfo.path, name: dirInfo.name };\n    };\n    FileSystemAccess.prototype.eachEntity = function (path, onEntity, onError) {\n        if (!onEntity) {\n            return;\n        }\n        this.enumEntities(path, onEntity, onError);\n    };\n    FileSystemAccess.prototype.getEntities = function (path, onError) {\n        var fileInfos = new Array();\n        var onEntity = function (entity) {\n            fileInfos.push(entity);\n            return true;\n        };\n        var errorOccurred;\n        var localError = function (error) {\n            if (onError) {\n                onError(error);\n            }\n            errorOccurred = true;\n        };\n        this.enumEntities(path, onEntity, localError);\n        if (!errorOccurred) {\n            return fileInfos;\n        }\n        return null;\n    };\n    FileSystemAccess.prototype.fileExists = function (path) {\n        var file = new java.io.File(path);\n        return file.exists();\n    };\n    FileSystemAccess.prototype.folderExists = function (path) {\n        var file = new java.io.File(path);\n        return file.exists() && file.isDirectory();\n    };\n    FileSystemAccess.prototype.deleteFile = function (path, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            if (!javaFile.isFile()) {\n                if (onError) {\n                    onError({ message: \"The specified parameter is not a File entity.\" });\n                }\n                return;\n            }\n            if (!javaFile.delete()) {\n                if (onError) {\n                    onError({ message: \"File deletion failed\" });\n                }\n            }\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.deleteFolder = function (path, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            if (!javaFile.getCanonicalFile().isDirectory()) {\n                if (onError) {\n                    onError({ message: \"The specified parameter is not a Folder entity.\" });\n                }\n                return;\n            }\n            this.deleteFolderContent(javaFile);\n            if (!javaFile.delete()) {\n                if (onError) {\n                    onError({ message: \"Folder deletion failed.\" });\n                }\n            }\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.emptyFolder = function (path, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            if (!javaFile.getCanonicalFile().isDirectory()) {\n                if (onError) {\n                    onError({ message: \"The specified parameter is not a Folder entity.\" });\n                }\n                return;\n            }\n            this.deleteFolderContent(javaFile);\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.rename = function (path, newPath, onError) {\n        var javaFile = new java.io.File(path);\n        if (!javaFile.exists()) {\n            if (onError) {\n                onError(new Error(\"The file to rename does not exist\"));\n            }\n            return;\n        }\n        var newFile = new java.io.File(newPath);\n        if (newFile.exists()) {\n            if (onError) {\n                onError(new Error(\"A file with the same name already exists.\"));\n            }\n            return;\n        }\n        if (!javaFile.renameTo(newFile)) {\n            if (onError) {\n                onError(new Error(\"Failed to rename file '\" + path + \"' to '\" + newPath + \"'\"));\n            }\n        }\n    };\n    FileSystemAccess.prototype.getDocumentsFolderPath = function () {\n        var dir = getApplicationContext().getFilesDir();\n        return dir.getAbsolutePath();\n    };\n    FileSystemAccess.prototype.getLogicalRootPath = function () {\n        var dir = getApplicationContext().getFilesDir();\n        return dir.getCanonicalPath();\n    };\n    FileSystemAccess.prototype.getTempFolderPath = function () {\n        var dir = getApplicationContext().getCacheDir();\n        return dir.getAbsolutePath();\n    };\n    FileSystemAccess.prototype.getCurrentAppPath = function () {\n        return this.getLogicalRootPath() + \"/app\";\n    };\n    FileSystemAccess.prototype.read = function (path, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            var stream = new java.io.FileInputStream(javaFile);\n            var bytes = Array.create(\"byte\", javaFile.length());\n            var dataInputStream = new java.io.DataInputStream(stream);\n            dataInputStream.readFully(bytes);\n            return bytes;\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.write = function (path, bytes, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            var stream = new java.io.FileOutputStream(javaFile);\n            stream.write(bytes, 0, bytes.length);\n            stream.close();\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.readText = function (path, onError, encoding) {\n        try {\n            var javaFile = new java.io.File(path);\n            var stream = new java.io.FileInputStream(javaFile);\n            var actualEncoding = encoding;\n            if (!actualEncoding) {\n                actualEncoding = textModule.encoding.UTF_8;\n            }\n            var reader = new java.io.InputStreamReader(stream, actualEncoding);\n            var bufferedReader = new java.io.BufferedReader(reader);\n            var line = undefined;\n            var result = \"\";\n            while (true) {\n                line = bufferedReader.readLine();\n                if (line === null) {\n                    break;\n                }\n                if (result.length > 0) {\n                    result += \"\\n\";\n                }\n                result += line;\n            }\n            if (actualEncoding === textModule.encoding.UTF_8) {\n                result = FileSystemAccess._removeUtf8Bom(result);\n            }\n            bufferedReader.close();\n            return result;\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess._removeUtf8Bom = function (s) {\n        if (s.charCodeAt(0) === 0xFEFF) {\n            s = s.slice(1);\n        }\n        return s;\n    };\n    FileSystemAccess.prototype.writeText = function (path, content, onError, encoding) {\n        try {\n            var javaFile = new java.io.File(path);\n            var stream = new java.io.FileOutputStream(javaFile);\n            var actualEncoding = encoding;\n            if (!actualEncoding) {\n                actualEncoding = textModule.encoding.UTF_8;\n            }\n            var writer = new java.io.OutputStreamWriter(stream, actualEncoding);\n            writer.write(content);\n            writer.close();\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.deleteFolderContent = function (file) {\n        var filesList = file.listFiles();\n        if (filesList.length === 0) {\n            return true;\n        }\n        var i, childFile, success = false;\n        for (i = 0; i < filesList.length; i++) {\n            childFile = filesList[i];\n            if (childFile.getCanonicalFile().isDirectory()) {\n                success = this.deleteFolderContent(childFile);\n                if (!success) {\n                    break;\n                }\n            }\n            success = childFile.delete();\n        }\n        return success;\n    };\n    FileSystemAccess.prototype.ensureFile = function (javaFile, isFolder, onError) {\n        try {\n            if (!javaFile.exists()) {\n                var created;\n                if (isFolder) {\n                    created = javaFile.mkdirs();\n                }\n                else {\n                    javaFile.getParentFile().mkdirs();\n                    created = javaFile.createNewFile();\n                }\n                if (!created) {\n                    if (onError) {\n                        onError(\"Failed to create new java File for path \" + javaFile.getAbsolutePath());\n                    }\n                    return undefined;\n                }\n                else {\n                    javaFile.setReadable(true);\n                    javaFile.setWritable(true);\n                }\n            }\n            var path = javaFile.getAbsolutePath();\n            return { path: path, name: javaFile.getName(), extension: this.getFileExtension(path) };\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n            return undefined;\n        }\n    };\n    FileSystemAccess.prototype.getFileExtension = function (path) {\n        var dotIndex = path.lastIndexOf(\".\");\n        if (dotIndex && dotIndex >= 0 && dotIndex < path.length) {\n            return path.substring(dotIndex);\n        }\n        return \"\";\n    };\n    FileSystemAccess.prototype.enumEntities = function (path, callback, onError) {\n        try {\n            var javaFile = new java.io.File(path);\n            if (!javaFile.getCanonicalFile().isDirectory()) {\n                if (onError) {\n                    onError(\"There is no folder existing at path \" + path);\n                }\n                return;\n            }\n            var filesList = javaFile.listFiles();\n            var length = filesList.length;\n            var i;\n            var info;\n            var retVal;\n            for (i = 0; i < length; i++) {\n                javaFile = filesList[i];\n                info = {\n                    path: javaFile.getAbsolutePath(),\n                    name: javaFile.getName()\n                };\n                if (javaFile.isFile()) {\n                    info.extension = this.getFileExtension(info.path);\n                }\n                retVal = callback(info);\n                if (retVal === false) {\n                    break;\n                }\n            }\n        }\n        catch (exception) {\n            if (onError) {\n                onError(exception);\n            }\n        }\n    };\n    FileSystemAccess.prototype.getPathSeparator = function () {\n        return this._pathSeparator;\n    };\n    FileSystemAccess.prototype.normalizePath = function (path) {\n        var file = new java.io.File(path);\n        return file.getAbsolutePath();\n    };\n    FileSystemAccess.prototype.joinPath = function (left, right) {\n        var file1 = new java.io.File(left);\n        var file2 = new java.io.File(file1, right);\n        return file2.getPath();\n    };\n    FileSystemAccess.prototype.joinPaths = function (paths) {\n        if (!paths || paths.length === 0) {\n            return \"\";\n        }\n        if (paths.length === 1) {\n            return paths[0];\n        }\n        var i, result = paths[0];\n        for (i = 1; i < paths.length; i++) {\n            result = this.joinPath(result, paths[i]);\n        }\n        return result;\n    };\n    return FileSystemAccess;\n}());\nexports.FileSystemAccess = FileSystemAccess;\n//# sourceMappingURL=file-system-access.android.js.map"
    },
    {
      "id": 237,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/decorators.js",
      "name": "./~/tns-core-modules/globals/decorators.js",
      "index": 4,
      "index2": 0,
      "size": 1285,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
      "issuerId": 62,
      "issuerName": "./~/tns-core-modules/globals/globals.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/globals/globals.js",
          "module": "./~/tns-core-modules/globals/globals.js",
          "moduleName": "./~/tns-core-modules/globals/globals.js",
          "type": "cjs require",
          "userRequest": "./decorators",
          "loc": "2:0-23"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "if (typeof global.__decorate !== \"function\") {\n    global.__decorate = function (decorators, target, key, desc) {\n        var c = arguments.length;\n        var r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof global.Reflect === \"object\" && typeof global.Reflect.decorate === \"function\") {\n            r = global.Reflect.decorate(decorators, target, key, desc);\n        }\n        else {\n            for (var i = decorators.length - 1; i >= 0; i--) {\n                if (d = decorators[i]) {\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n                }\n            }\n        }\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n}\nif (typeof global.__metadata !== \"function\") {\n    global.__metadata = function (k, v) {\n        if (typeof global.Reflect === \"object\" && typeof global.Reflect.metadata === \"function\") {\n            return global.Reflect.metadata(k, v);\n        }\n    };\n}\nif (typeof global.__param !== \"function\") {\n    global.__param = (global && global.__param) || function (paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    };\n}\n//# sourceMappingURL=decorators.js.map"
    },
    {
      "id": 238,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http-request/http-request.android.js",
      "name": "./~/tns-core-modules/http/http-request/http-request.android.js",
      "index": 36,
      "index2": 24,
      "size": 6884,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http.js",
      "issuerId": 115,
      "issuerName": "./~/tns-core-modules/http/http.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 115,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/http/http.js",
          "module": "./~/tns-core-modules/http/http.js",
          "moduleName": "./~/tns-core-modules/http/http.js",
          "type": "cjs require",
          "userRequest": "./http-request",
          "loc": "2:18-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar debugger_1 = require(\"../../debugger/debugger\");\nfunction parseJSON(source) {\n    var src = source.trim();\n    if (src.lastIndexOf(\")\") === src.length - 1) {\n        return JSON.parse(src.substring(src.indexOf(\"(\") + 1, src.lastIndexOf(\")\")));\n    }\n    return JSON.parse(src);\n}\nvar requestIdCounter = 0;\nvar pendingRequests = {};\nvar imageSource;\nfunction ensureImageSource() {\n    if (!imageSource) {\n        imageSource = require(\"image-source\");\n    }\n}\nvar platform;\nfunction ensurePlatform() {\n    if (!platform) {\n        platform = require(\"platform\");\n    }\n}\nvar completeCallback;\nfunction ensureCompleteCallback() {\n    if (completeCallback) {\n        return;\n    }\n    completeCallback = new org.nativescript.widgets.Async.CompleteCallback({\n        onComplete: function (result, context) {\n            onRequestComplete(context, result);\n        }\n    });\n}\nfunction onRequestComplete(requestId, result) {\n    var callbacks = pendingRequests[requestId];\n    delete pendingRequests[requestId];\n    if (result.error) {\n        callbacks.rejectCallback(new Error(result.error.toString()));\n        return;\n    }\n    var headers = {};\n    if (result.headers) {\n        var jHeaders = result.headers;\n        var length = jHeaders.size();\n        var i;\n        var pair;\n        for (i = 0; i < length; i++) {\n            pair = jHeaders.get(i);\n            addHeader(headers, pair.key, pair.value);\n        }\n    }\n    if (global.__inspector && global.__inspector.isConnected) {\n        debugger_1.NetworkAgent.responseReceived(requestId, result, headers);\n    }\n    callbacks.resolveCallback({\n        content: {\n            raw: result.raw,\n            toString: function (encoding) {\n                var str;\n                if (encoding) {\n                    str = decodeResponse(result.raw, encoding);\n                }\n                else {\n                    str = result.responseAsString;\n                }\n                if (typeof str === \"string\") {\n                    return str;\n                }\n                else {\n                    throw new Error(\"Response content may not be converted to string\");\n                }\n            },\n            toJSON: function (encoding) {\n                var str;\n                if (encoding) {\n                    str = decodeResponse(result.raw, encoding);\n                }\n                else {\n                    str = result.responseAsString;\n                }\n                return parseJSON(str);\n            },\n            toImage: function () {\n                ensureImageSource();\n                return new Promise(function (resolveImage, rejectImage) {\n                    if (result.responseAsImage != null) {\n                        resolveImage(imageSource.fromNativeSource(result.responseAsImage));\n                    }\n                    else {\n                        rejectImage(new Error(\"Response content may not be converted to an Image\"));\n                    }\n                });\n            },\n            toFile: function (destinationFilePath) {\n                var fs = require(\"file-system\");\n                var fileName = callbacks.url;\n                if (!destinationFilePath) {\n                    destinationFilePath = fs.path.join(fs.knownFolders.documents().path, fileName.substring(fileName.lastIndexOf('/') + 1));\n                }\n                var stream;\n                try {\n                    var javaFile = new java.io.File(destinationFilePath);\n                    stream = new java.io.FileOutputStream(javaFile);\n                    stream.write(result.raw.toByteArray());\n                    return fs.File.fromPath(destinationFilePath);\n                }\n                catch (exception) {\n                    throw new Error(\"Cannot save file with path: \" + destinationFilePath + \".\");\n                }\n                finally {\n                    if (stream) {\n                        stream.close();\n                    }\n                }\n            }\n        },\n        statusCode: result.statusCode,\n        headers: headers\n    });\n}\nfunction buildJavaOptions(options) {\n    if (typeof options.url !== \"string\") {\n        throw new Error(\"Http request must provide a valid url.\");\n    }\n    var javaOptions = new org.nativescript.widgets.Async.Http.RequestOptions();\n    javaOptions.url = options.url;\n    if (typeof options.method === \"string\") {\n        javaOptions.method = options.method;\n    }\n    if (typeof options.content === \"string\" || options.content instanceof FormData) {\n        javaOptions.content = options.content.toString();\n    }\n    if (typeof options.timeout === \"number\") {\n        javaOptions.timeout = options.timeout;\n    }\n    if (typeof options.dontFollowRedirects === \"boolean\") {\n        javaOptions.dontFollowRedirects = options.dontFollowRedirects;\n    }\n    if (options.headers) {\n        var arrayList = new java.util.ArrayList();\n        var pair = org.nativescript.widgets.Async.Http.KeyValuePair;\n        for (var key in options.headers) {\n            arrayList.add(new pair(key, options.headers[key] + \"\"));\n        }\n        javaOptions.headers = arrayList;\n    }\n    ensurePlatform();\n    var screen = platform.screen.mainScreen;\n    javaOptions.screenWidth = screen.widthPixels;\n    javaOptions.screenHeight = screen.heightPixels;\n    return javaOptions;\n}\nfunction request(options) {\n    if (options === undefined || options === null) {\n        return;\n    }\n    return new Promise(function (resolve, reject) {\n        try {\n            var javaOptions = buildJavaOptions(options);\n            if (global.__inspector && global.__inspector.isConnected) {\n                debugger_1.NetworkAgent.requestWillBeSent(requestIdCounter, options);\n            }\n            var callbacks = {\n                url: options.url,\n                resolveCallback: resolve,\n                rejectCallback: reject\n            };\n            pendingRequests[requestIdCounter] = callbacks;\n            ensureCompleteCallback();\n            org.nativescript.widgets.Async.Http.MakeRequest(javaOptions, completeCallback, new java.lang.Integer(requestIdCounter));\n            requestIdCounter++;\n        }\n        catch (ex) {\n            reject(ex);\n        }\n    });\n}\nexports.request = request;\nfunction decodeResponse(raw, encoding) {\n    var charsetName = \"UTF-8\";\n    if (encoding === 1) {\n        charsetName = 'GBK';\n    }\n    return raw.toString(charsetName);\n}\nfunction addHeader(headers, key, value) {\n    if (!headers[key]) {\n        headers[key] = value;\n    }\n    else if (Array.isArray(headers[key])) {\n        headers[key].push(value);\n    }\n    else {\n        var values = [headers[key]];\n        values.push(value);\n        headers[key] = values;\n    }\n}\nexports.addHeader = addHeader;\n//# sourceMappingURL=http-request.android.js.map"
    },
    {
      "id": 239,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset-common.js",
      "name": "./~/tns-core-modules/image-asset/image-asset-common.js",
      "index": 163,
      "index2": 154,
      "size": 2855,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset.android.js",
      "issuerId": 240,
      "issuerName": "./~/tns-core-modules/image-asset/image-asset.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 240,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset.android.js",
          "module": "./~/tns-core-modules/image-asset/image-asset.android.js",
          "moduleName": "./~/tns-core-modules/image-asset/image-asset.android.js",
          "type": "cjs require",
          "userRequest": "./image-asset-common",
          "loc": "3:13-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable = require(\"../data/observable\");\nvar platform = require(\"../platform\");\nvar ImageAsset = (function (_super) {\n    __extends(ImageAsset, _super);\n    function ImageAsset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ImageAsset.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (value) {\n            this._options = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageAsset.prototype, \"ios\", {\n        get: function () {\n            return this._ios;\n        },\n        set: function (value) {\n            this._ios = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageAsset.prototype, \"android\", {\n        get: function () {\n            return this._android;\n        },\n        set: function (value) {\n            this._android = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageAsset.prototype, \"nativeImage\", {\n        get: function () {\n            return this._nativeImage;\n        },\n        set: function (value) {\n            this._nativeImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ImageAsset.prototype.getImageAsync = function (callback) {\n    };\n    return ImageAsset;\n}(observable.Observable));\nexports.ImageAsset = ImageAsset;\nfunction getAspectSafeDimensions(sourceWidth, sourceHeight, reqWidth, reqHeight) {\n    var widthCoef = sourceWidth / reqWidth;\n    var heightCoef = sourceHeight / reqHeight;\n    var aspectCoef = widthCoef > heightCoef ? widthCoef : heightCoef;\n    return {\n        width: Math.floor(sourceWidth / aspectCoef),\n        height: Math.floor(sourceHeight / aspectCoef)\n    };\n}\nexports.getAspectSafeDimensions = getAspectSafeDimensions;\nfunction getRequestedImageSize(src, options) {\n    var reqWidth = platform.screen.mainScreen.widthDIPs;\n    var reqHeight = platform.screen.mainScreen.heightDIPs;\n    if (options && options.width) {\n        reqWidth = (options.width > 0 && options.width < reqWidth) ? options.width : reqWidth;\n    }\n    if (options && options.height) {\n        reqHeight = (options.height > 0 && options.height < reqHeight) ? options.height : reqHeight;\n    }\n    if (options && options.keepAspectRatio) {\n        var safeAspectSize = getAspectSafeDimensions(src.width, src.height, reqWidth, reqHeight);\n        reqWidth = safeAspectSize.width;\n        reqHeight = safeAspectSize.height;\n    }\n    return {\n        width: reqWidth,\n        height: reqHeight\n    };\n}\nexports.getRequestedImageSize = getRequestedImageSize;\n//# sourceMappingURL=image-asset-common.js.map"
    },
    {
      "id": 240,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/image-asset/image-asset.android.js",
      "name": "./~/tns-core-modules/image-asset/image-asset.android.js",
      "index": 162,
      "index2": 155,
      "size": 2228,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
      "issuerId": 137,
      "issuerName": "./~/tns-core-modules/ui/image/image-common.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 137,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/image/image-common.js",
          "module": "./~/tns-core-modules/ui/image/image-common.js",
          "moduleName": "./~/tns-core-modules/ui/image/image-common.js",
          "type": "cjs require",
          "userRequest": "../../image-asset",
          "loc": "6:20-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar platform = require(\"../platform\");\nvar common = require(\"./image-asset-common\");\nglobal.moduleMerge(common, exports);\nvar ImageAsset = (function (_super) {\n    __extends(ImageAsset, _super);\n    function ImageAsset(asset) {\n        var _this = _super.call(this) || this;\n        _this.android = asset;\n        return _this;\n    }\n    ImageAsset.prototype.getImageAsync = function (callback) {\n        var bitmapOptions = new android.graphics.BitmapFactory.Options();\n        bitmapOptions.inJustDecodeBounds = true;\n        var bitmap = android.graphics.BitmapFactory.decodeFile(this.android, bitmapOptions);\n        var sourceSize = {\n            width: bitmapOptions.outWidth,\n            height: bitmapOptions.outHeight\n        };\n        var requestedSize = common.getRequestedImageSize(sourceSize, this.options);\n        var sampleSize = calculateInSampleSize(bitmapOptions.outWidth, bitmapOptions.outHeight, requestedSize.width, requestedSize.height);\n        var finalBitmapOptions = new android.graphics.BitmapFactory.Options();\n        finalBitmapOptions.inSampleSize = sampleSize;\n        try {\n            bitmap = android.graphics.BitmapFactory.decodeFile(this.android, finalBitmapOptions);\n            callback(bitmap, null);\n        }\n        catch (ex) {\n            callback(null, ex);\n        }\n    };\n    return ImageAsset;\n}(common.ImageAsset));\nexports.ImageAsset = ImageAsset;\nvar calculateInSampleSize = function (imageWidth, imageHeight, reqWidth, reqHeight) {\n    var sampleSize = 1;\n    var displayWidth = platform.screen.mainScreen.widthDIPs;\n    var displayHeigth = platform.screen.mainScreen.heightDIPs;\n    reqWidth = (reqWidth > 0 && reqWidth < displayWidth) ? reqWidth : displayWidth;\n    reqHeight = (reqHeight > 0 && reqHeight < displayHeigth) ? reqHeight : displayHeigth;\n    if (imageWidth > reqWidth && imageHeight > reqHeight) {\n        var halfWidth = imageWidth / 2;\n        var halfHeight = imageHeight / 2;\n        while ((halfWidth / sampleSize) > reqWidth && (halfHeight / sampleSize) > reqHeight) {\n            sampleSize *= 2;\n        }\n    }\n    return sampleSize;\n};\n//# sourceMappingURL=image-asset.android.js.map"
    },
    {
      "id": 241,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/easysax/easysax.js",
      "name": "./~/tns-core-modules/js-libs/easysax/easysax.js",
      "index": 63,
      "index2": 53,
      "size": 20858,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/xml/xml.js",
      "issuerId": 276,
      "issuerName": "./~/tns-core-modules/xml/xml.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 276,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/xml/xml.js",
          "module": "./~/tns-core-modules/xml/xml.js",
          "moduleName": "./~/tns-core-modules/xml/xml.js",
          "type": "cjs require",
          "userRequest": "../js-libs/easysax",
          "loc": "2:14-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "﻿\t/*\n\tnew function() {\n\t\tvar parser = new EasySAXParser();\n\n\t\tparser.ns('rss', { // or false\n\t\t\trss: 'http://purl.org/rss/1.0/',\n\t\t\tatom: 'http://www.w3.org/2005/Atom',\n\t\t\txhtml: 'http://www.w3.org/1999/xhtml',\n\t\t\tmedia: 'http://search.yahoo.com/mrss/'\n\t\t});\n\n\n\t\tparser.on('error', function(msg) {\n\t\t\t//console.log(msg)\n\t\t});\n\n\t\tparser.on('startNode', function(elem, attr, uq, tagend, getStrNode) {\n\t\t\tattr();\n\t\t\treturn;\n\t\t\tif (tagend) {\n\t\t\t\tconsole.log('   '+str)\n\t\t\t} else {\n\t\t\t\tconsole.log('+  '+str)\n\t\t\t};\n\t\t});\n\n\t\tparser.on('endNode', function(elem, uq, tagstart, str) {\n\t\t\treturn;\n\t\t\tif (!tagstart) console.log('-  ' + str)\n\t\t});\n\n\t\tparser.on('textNode', function(s, uq) {\n\t\t\tuq(s);\n\t\t\treturn\n\t\t\tconsole.log('   '+s)\n\t\t});\n\n\t\tparser.on('cdata', function(data) {\n\t\t});\n\n\n\t\tparser.on('comment', function(text) {\n\t\t\t//console.log('--'+text+'--')\n\t\t});\n\n\t\t//parser.on('question', function() {}); // <? ... ?>\n\t\t//parser.on('attention', function() {}); // <!XXXXX zzzz=\"eeee\">\n\n\t\tconsole.time('easysax');\n\t\tfor(var z=1000;z--;) {\n\t\t\tparser.parse(xml)\n\t\t};\n\t\tconsole.timeEnd('easysax');\n\t};\n\n\n\t*/\n\n// << ------------------------------------------------------------------------ >> //\n\n\nif (typeof exports === 'object' /*&& this == exports*/) {\n\tmodule.exports.EasySAXParser = EasySAXParser;\n};\n\nfunction EasySAXParser() {\n\t'use strict';\n\n\tif (!this) return null;\n\n    this.angularSyntax = false;\n\n\tfunction nullFunc() {};\n\n\tthis.onTextNode = nullFunc;\n    this.onStartNode = nullFunc;\n    this.onEndNode = nullFunc;\n    this.onCDATA = nullFunc;\n    this.onError = nullFunc;\n    this.onComment = null;\n    this.onQuestion = null;\n    this.onAttention = null;\n\tthis.is_onComment = this.is_onQuestion = this.is_onAttention = false;\n\n\tthis.isNamespace = false;\n    this.useNS = null;\n    this.default_xmlns = null;\n    this.xmlns = null;\n\tthis.nsmatrix = {xmlns: this.xmlns};\n\tthis.hasSurmiseNS = false;\n\t;\n\n\n\tthis.attr_string = ''; // строка атрибутов\n\tthis.attr_posstart = 0; //\n\tthis.attr_res; // закешированный результат разбора атрибутов , null - разбор не проводился, object - хеш атрибутов, true - нет атрибутов, false - невалидный xml\n}\n\nEasySAXParser.prototype.on = function(name, cb) {\n    if (typeof cb !== 'function') {\n        if (cb !== null) return;\n    };\n\n    switch(name) {\n        case 'error': this.onError = cb || nullFunc; break;\n        case 'startNode': this.onStartNode = cb || nullFunc; break;\n        case 'endNode': this.onEndNode = cb || nullFunc; break;\n        case 'textNode': this.onTextNode = cb || nullFunc; break;\n        case 'cdata': this.onCDATA = cb || nullFunc; break;\n\n        case 'comment': this.onComment = cb; this.is_onComment = !!cb; break;\n        case 'question': this.onQuestion = cb; this.is_onQuestion = !!cb; break; // <? ....  ?>\n        case 'attention': this.onAttention = cb; this.is_onAttention = !!cb; break; // <!XXXXX zzzz=\"eeee\">\n    };\n};\n\nEasySAXParser.prototype.ns = function(root, ns) {\n    if (!root || typeof root !== 'string' || !ns) {\n        return;\n    };\n\n    var u, x = {}, ok, v, i;\n\n    for(i in ns) {\n        v = ns[i];\n        if (typeof v === 'string') {\n            if (root === v) ok = true;\n            x[i] = v;\n        };\n    };\n\n    if (ok) {\n        this.isNamespace = true;\n        this.default_xmlns = root;\n        this.useNS = x;\n    };\n};\n\n\nEasySAXParser.prototype.parse = function(xml) {\n    if (typeof xml !== 'string') {\n        return;\n    };\n\n    if (this.isNamespace) {\n        this.nsmatrix = {xmlns: this.default_xmlns};\n\n        parse(xml);\n\n        this.nsmatrix = false;\n\n    } else {\n        parse(xml);\n    };\n\n    this.attr_res = true;\n};\n\n// -----------------------------------------------------\n\nvar xharsQuot={constructor: false, hasOwnProperty: false, isPrototypeOf: false, propertyIsEnumerable: false, toLocaleString: false, toString: false, valueOf: false\n    , quot: '\"'\n    , QUOT: '\"'\n    , amp: '&'\n    , AMP: '&'\n    , nbsp: '\\u00A0'\n    , apos: '\\''\n    , lt: '<'\n    , LT: '<'\n    , gt: '>'\n    , GT: '>'\n    , copy: '\\u00A9'\n    , laquo: '\\u00AB'\n    , raquo: '\\u00BB'\n    , reg: '\\u00AE'\n    , deg: '\\u00B0'\n    , plusmn: '\\u00B1'\n    , sup2: '\\u00B2'\n    , sup3: '\\u00B3'\n    , micro: '\\u00B5'\n    , para: '\\u00B6'\n};\n\n\nfunction rpEntities(s, d, x, z) {\n    if (z) {\n        return xharsQuot[z] || '\\x01';\n    };\n\n    if (d) {\n        return String.fromCharCode(d);\n    };\n\n    return String.fromCharCode(parseInt(x, 16));\n};\n\nfunction unEntities(s, i) {\n    s = String(s);\n    if (s.length > 3 && s.indexOf('&') !== -1) {\n        if (s.indexOf('&gt;') !== -1) s = s.replace(/&gt;/g, '>');\n        if (s.indexOf('&lt;') !== -1) s = s.replace(/&lt;/g, '<');\n        if (s.indexOf('&quot;') !== -1) s = s.replace(/&quot;/g, '\"');\n\n        if (s.indexOf('&') !== -1) {\n            s = s.replace(/&#(\\d+);|&#x([0123456789abcdef]+);|&(\\w+);/ig, rpEntities);\n        };\n    };\n\n    return s;\n};\n\n\nEasySAXParser.prototype.allowedAngularAttributeChars = function(w) {\n    if (!this.angularSyntax) {\n        return false;\n    } else {\n        return (\n            w === 40 || // (\n            w === 41 || // )\n            w === 91 || // [\n            w === 93 || // ]\n            w === 94 || // ^\n            w === 35    // #\n        );\n    }\n};\n\n\t/*\n\t\tпарсит атрибуты по требованию. Важно! - функция не генерирует исключения.\n\n\t\tесли была ошибка разбора возврашается false\n\t\tесли атрибутов нет и разбор удачен то возврашается true\n\t\tесли есть атрибуты то возврашается обьект(хеш)\n\t*/\n\nEasySAXParser.prototype.getAttrs = function() {\n    if (this.attr_res !== null) {\n        return this.attr_res;\n    };\n\n    /*\n    if (xxtest !== u && attr_string.indexOf(xxtest) === -1) {\n        / *\n            // для ускорения\n            if (getAttrs('html').type == 'html') {\n                ...\n            };\n        * /\n        return true;\n    };\n    */\n\n    var u\n    , res = {}\n    , s = this.attr_string\n    , i = this.attr_posstart\n    , l = s.length\n    , attr_list = this.hasSurmiseNS ? [] : false\n    , name, value = ''\n    , ok = false\n    , noValueAttribute = false\n    , j, w, nn, n\n    , hasNewMatrix\n    , alias, newalias\n    ;\n\n    aa:\n    for(; i < l; i++) {\n        w = s.charCodeAt(i);\n\n        if (w===32 || (w<14 && w > 8) ) { // \\f\\n\\r\\t\\v\n            continue\n        };\n\n        // Check for valid attribute start char\n        if ((w < 65 && !this.allowedAngularAttributeChars(w)) ||\n                w > 122 || (w > 90 && w < 97 && !this.allowedAngularAttributeChars(w)) ) { // ожидаем символ\n            return this.attr_res = false; // error. invalid char\n        };\n\n        for(j = i + 1; j < l; j++) { // проверяем все символы имени атрибута\n            w = s.charCodeAt(j);\n\n            if (w > 96 && w < 123 || w > 64 && w < 91 || w > 47 && w < 59 || w === 45 || w === 95 || w === 46 /* https://github.com/telerik/xPlatCore/issues/179 */) {\n                if (noValueAttribute) {\n                    j--; //Started next attribute. Get back and break out of the loop.\n                    break;\n                } else {\n                    continue;\n                }\n            };\n\n            if (this.allowedAngularAttributeChars(w)) {\n                continue;\n            }\n\n            if (w === 32 || (w > 8 && w < 14) ) {  // \\f\\n\\r\\t\\v пробел\n                noValueAttribute = true;\n                continue;\n            } else if (w === 61) { // \"=\" == 61\n                noValueAttribute = false;\n                break;\n            } else {\n                //console.log('error 2');\n                if (!noValueAttribute)\n                    return this.attr_res = false; // error. invalid char\n            };\n\n            break;\n        };\n\n        name = s.substring(i, j).trim();\n        ok = true;\n\n        if (name === 'xmlns:xmlns') {\n            //console.log('error 6')\n            return this.attr_res = false; // error. invalid name\n        };\n\n        w = s.charCodeAt(j+1);\n\n        while (w = s.charCodeAt(j+1)) {\n            if (w===32 || (w > 8 && w<14) ) {  // \\f\\n\\r\\t\\v пробел\n                j++;\n            } else {\n                break;\n            }\n        }\n\n        if (!noValueAttribute) {\n            if (w === 34) {  // '\"'\n                j = s.indexOf('\"', i = j+2 );\n\n            } else {\n                if (w === 39) {\n                    j = s.indexOf('\\'', i = j+2 );\n\n                } else {  // \"'\"\n                    return this.attr_res = false; // error. invalid char\n                };\n            };\n        }\n\n        if (j === -1) {\n            //console.log('error 4')\n            return this.attr_res = false; // error. invalid char\n        };\n\n\n        if (j+1 < l && !noValueAttribute) {\n            w = s.charCodeAt(j+1);\n\n            if (w > 32 || w < 9 || (w < 32 && w > 13)) {\n                // error. invalid char\n                //console.log('error 5')\n                return this.attr_res = false;\n            };\n        };\n\n\n        if (noValueAttribute) {\n            value = '';\n        } else {\n            value = s.substring(i, j);\n        }\n\n        //i = j + 1; // след. семвол уже проверен потому проверять нужно следуюший\n        i = j; // след. семвол уже проверен потому проверять нужно следуюший\n\n        if (this.isNamespace) { //\n            if (this.hasSurmiseNS) {\n                // есть подозрение что в атрибутах присутствует xmlns\n\n                if (newalias = name === 'xmlns' ? 'xmlns' : name.charCodeAt(0) === 120 && name.substr(0, 6) === 'xmlns:' && name.substr(6) ) {\n                    alias = this.useNS[unEntities(value)];\n\n                    if (alias) {\n                        if (this.nsmatrix[newalias] !== alias) {\n                            if (!hasNewMatrix) {\n                                hasNewMatrix = true;\n                                nn = {}; for (n in this.nsmatrix) nn[n] = this.nsmatrix[n];\n                                this.nsmatrix = nn;\n                            };\n\n                            this.nsmatrix[newalias] = alias;\n                        };\n                    } else {\n                        if (this.nsmatrix[newalias]) {\n                            if (!hasNewMatrix) {\n                                hasNewMatrix = true;\n                                nn = {}; for (n in this.nsmatrix) nn[n] = this.nsmatrix[n];\n                                this.nsmatrix = nn;\n                            };\n\n                            this.nsmatrix[newalias] = false;\n                        };\n                    };\n\n                    res[name] = value;\n                    continue;\n                };\n\n                attr_list.push(name, value);\n                continue;\n            };\n\n            w = name.length;\n            while(--w) {\n                if (name.charCodeAt(w) === 58) { // ':'\n                    if (w = this.nsmatrix[name.substring(0, w)] ) {\n                        res[w + name.substr(w)] = value;\n                    };\n                    continue aa;\n\n                    // 'xml:base' ???\n                };\n            };\n        };\n\n        res[name] = value;\n        noValueAttribute = false;\n    };\n\n\n    if (!ok) {\n        return this.attr_res = true;  // атрибутов нет, ошибок тоже нет\n    };\n\n\n    if (this.hasSurmiseNS)  {\n        bb:\n\n        for (i = 0, l = attr_list.length; i < l; i++) {\n            name = attr_list[i++];\n\n            w = name.length;\n            while(--w) { // name.indexOf(':')\n                if (name.charCodeAt(w) === 58) { // ':'\n                    if (w = this.nsmatrix[name.substring(0, w)]) {\n                        res[w + name.substr(w)] = attr_list[i];\n                    };\n                    continue bb;\n                    break;\n                };\n            };\n\n            res[name] = attr_list[i];\n        };\n    };\n\n    return this.attr_res = res;\n};\n\n\n// xml - string\nEasySAXParser.prototype.parse = function(xml) {\n    var u\n    , xml = String(xml)\n    , nodestack = []\n    , stacknsmatrix = []\n    //, string_node\n    , elem\n    , tagend = false\n    , tagstart = false\n    , j = 0, i = 0, k = 0, len\n    , x, y, q, w\n    , xmlns\n    , stopIndex = 0\n    , stop // используется при разборе \"namespace\" . если встретился неизвестное пространство то события не генерируются\n    , _nsmatrix\n    , ok\n    , pos = 0, ln = 0, lnStart = -2, lnEnd = -1\n    ;\n\n    len = xml.length;\n    function getStringNode() {\n        return xml.substring(i, j+1)\n    };\n    function findLineAndColumnFromPos() {\n        while (lnStart < lnEnd && lnEnd < pos) {\n            lnStart = lnEnd;\n            lnEnd = xml.indexOf(\"\\n\", lnEnd + 1);\n            ++ln;\n        }\n        return { line: ln, column: pos - lnStart };\n    }\n    function position(p) {\n        pos = p;\n        return findLineAndColumnFromPos;\n    }\n\n    while(j !== -1) {\n        stop = stopIndex > 0;\n\n        if (xml.charCodeAt(j) === 60) { // \"<\"\n            i = j;\n        } else {\n            i = xml.indexOf('<', j);\n        };\n\n        if (i === -1) { // конец разбора\n\n            if (nodestack.length) {\n                this.onError('end file', position(j));\n                return;\n            };\n\n            return;\n        };\n\n        if (j !== i && !stop) {\n            ok = this.onTextNode(xml.substring(j, i), unEntities, position(j));\n            if (ok === false) return;\n        };\n\n        w = xml.charCodeAt(i+1);\n\n        if (w === 33) { // \"!\"\n            w = xml.charCodeAt(i+2);\n            if (w === 91 && xml.substr(i+3, 6) === 'CDATA[') { // 91 == \"[\"\n                j = xml.indexOf(']]>', i);\n                if (j === -1) {\n                    this.onError('cdata', position(i));\n                    return;\n                };\n\n                //x = xml.substring(i+9, j);\n                if (!stop) {\n                    ok = this.onCDATA(xml.substring(i+9, j), false, position(i));\n                    if (ok === false) return;\n                };\n\n                j += 3;\n                continue;\n            };\n\n            if (w === 45 && xml.charCodeAt(i+3) === 45) { // 45 == \"-\"\n                j = xml.indexOf('-->', i);\n                if (j === -1) {\n                    this.onError('expected -->', position(i));\n                    return;\n                };\n\n\n                if (this.is_onComment && !stop) {\n                    ok = this.onComment(xml.substring(i+4, j), unEntities, position(i));\n                    if (ok === false) return;\n                };\n\n                j += 3;\n                continue;\n            };\n\n            j = xml.indexOf('>', i+1);\n            if (j === -1) {\n                this.onError('expected \">\"', position(i + 1));\n                return;\n            };\n\n            if (this.is_onAttention && !stop) {\n                ok = this.onAttention(xml.substring(i, j+1), unEntities, position(i));\n                if (ok === false) return;\n            };\n\n            j += 1;\n            continue;\n\n        } else {\n            if (w === 63) { // \"?\"\n                j = xml.indexOf('?>', i);\n                if (j === -1) { // error\n                    this.onError('...?>', position(i));\n                    return;\n                };\n\n                if (this.is_onQuestion) {\n                    ok = this.onQuestion(xml.substring(i, j+2), position(i));\n                    if (ok === false) return;\n                };\n\n                j += 2;\n                continue;\n            };\n        };\n\n        var inside=false;\n        for (k=i,j=-1;k<len;k++) {\n            var c = xml.charCodeAt(k);\n            if (!inside) {\n\n                if (c === 34) { // '\"'\n                    inside = c;\n                }\n                else if (c === 39) { // \"'\"\n                    inside = c;\n                }\n                else if (c === 62) { // <\n                    j = k; break;\n                }\n            } else {\n                if (c === inside) { inside = false; }\n            }\n        }\n\n        if (j == -1) { // error\n            this.onError('...>', position(i + 1));\n            return;\n        };\n\n        this.attr_res = true; // атрибутов нет\n\n        //if (xml.charCodeAt(i+1) === 47) { // </...\n        if (w === 47) { // </...\n            tagstart = false;\n            tagend = true;\n\n            // проверяем что должен быть закрыт тотже тег что и открывался\n            x = elem = nodestack.pop();\n            q = i + 2 + x.length;\n\n            //console.log()\n            if (xml.substring(i+2, q) !== x) {\n                this.onError('close tagname', position(i + 2));\n                return;\n            };\n\n            // проверим что в закрываюшем теге нет лишнего\n            for(; q < j; q++) {\n                w = xml.charCodeAt(q);\n\n                if (w===32 || (w > 8 && w<14) ) {  // \\f\\n\\r\\t\\v пробел\n                    continue;\n                };\n\n                this.onError('close tag', position(i + 2));\n                return;\n            };\n\n        } else {\n            if (xml.charCodeAt(j-1) ===  47) { // .../>\n                x = elem = xml.substring(i+1, j-1);\n\n                tagstart = true;\n                tagend = true;\n            } else {\n                x = elem = xml.substring(i+1, j);\n\n                tagstart = true;\n                tagend = false;\n            };\n\n            if ( !(w > 96  && w < 123 || w > 64 && w <91) ) {\n                this.onError('first char nodeName', position(i + 1));\n                return;\n            };\n\n            for(q = 1, y = x.length; q < y; q++) {\n                w = x.charCodeAt(q);\n\n                if (w > 96 && w < 123 || w > 64 && w < 91 || w > 47 && w < 59 || w === 45 || w === 95 || w === 46 /* https://github.com/telerik/xPlatCore/issues/179 */) {\n                    continue;\n                };\n\n                if (w===32 || (w<14 && w > 8)) { // \\f\\n\\r\\t\\v пробел\n                    elem = x.substring(0, q)\n                    this.attr_res = null; // возможно есть атирибуты\n                    break;\n                };\n\n                this.onError('invalid nodeName', position(i + 1));\n                return;\n            };\n\n            if (!tagend) {\n                nodestack.push(elem);\n            };\n        };\n\n\n        if (this.isNamespace) {\n            if (stop) {\n                if (tagend) {\n                    if (!tagstart) {\n                        if (--stopIndex === 0) {\n                            this.nsmatrix = stacknsmatrix.pop();\n                        };\n                    };\n\n                } else {\n                    stopIndex += 1;\n                };\n\n\n                j += 1;\n                continue;\n            };\n\n            _nsmatrix = this.nsmatrix;\n\n            if (!tagend) {\n                stacknsmatrix.push(this.nsmatrix);\n\n                if (this.attr_res !== true) {\n                    if (this.hasSurmiseNS = x.indexOf('xmlns', q) !== -1) {\n                        this.attr_string = x;\n                        this.attr_posstart = q;\n\n                        this.getAttrs();\n\n                        this.hasSurmiseNS = false;\n                    };\n                };\n            };\n\n\n            w = elem.indexOf(':');\n            if (w !== -1) {\n                xmlns = this.nsmatrix[elem.substring(0, w)];\n                elem = elem.substr(w+1);\n\n            } else {\n                xmlns = this.nsmatrix.xmlns;\n            };\n\n            if (!xmlns) {\n                if (tagend) {\n                    if (tagstart) {\n                        this.nsmatrix = _nsmatrix;\n                    } else {\n                        this.nsmatrix = stacknsmatrix.pop();\n                    };\n                } else {\n                    stopIndex = 1; // первый элемент для которого не определено пространство имен\n                    this.attr_res = true;\n                };\n\n                j += 1;\n                continue;\n            };\n\n            elem = xmlns + ':' + elem;\n        };\n\n        //string_node = xml.substring(i, j+1); // текст ноды как есть\n\n        if (tagstart) { // is_onStartNode\n            this.attr_string = x;\n            this.attr_posstart = q;\n\n            var that = this;\n            ok = this.onStartNode(elem, function() { return that.getAttrs() }, unEntities, tagend\n                , getStringNode, position(i)\n            );\n\n            if (ok === false) {\n                return;\n            };\n\n            this.attr_res = true;\n        };\n\n        if (tagend) {\n            ok = this.onEndNode(elem, unEntities, tagstart\n                , getStringNode, position(i)\n            );\n\n            if (ok === false) {\n                return;\n            };\n\n            if (this.isNamespace) {\n                if (tagstart) {\n                    this.nsmatrix = _nsmatrix;\n                } else {\n                    this.nsmatrix = stacknsmatrix.pop();\n                };\n            };\n        };\n\n        j += 1;\n    };\n};\n"
    },
    {
      "id": 242,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/esprima/esprima.js",
      "name": "./~/tns-core-modules/js-libs/esprima/esprima.js",
      "index": 45,
      "index2": 32,
      "size": 28428,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
      "issuerId": 244,
      "issuerName": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 244,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
          "module": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
          "moduleName": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
          "type": "cjs require",
          "userRequest": "js-libs/esprima",
          "loc": "8:14-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 8,
      "source": "﻿/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function (global) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        Syntax,\n        Messages,\n        source,\n        index,\n        length,\n        delegate,\n        lookahead,\n        state;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n\n    Syntax = {\n        ArrayExpression: 'ArrayExpression',\n        BinaryExpression: 'BinaryExpression',\n        CallExpression: 'CallExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        Identifier: 'Identifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        ObjectExpression: 'ObjectExpression',\n        Program: 'Program',\n        Property: 'Property',\n        ThisExpression: 'ThisExpression',\n        UnaryExpression: 'UnaryExpression'\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken: 'Unexpected token %0',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared'\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 32) ||  // space\n            (ch === 9) ||      // tab\n            (ch === 0xB) ||\n            (ch === 0xC) ||\n            (ch === 0xA0) ||\n            (ch >= 0x1680 && '\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\uFEFF'.indexOf(String.fromCharCode(ch)) > 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 10) || (ch === 13) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122);          // a..z\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch >= 48 && ch <= 57);           // 0..9\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        return (id === 'this')\n    }\n\n    // 7.4 Comments\n\n    function skipWhitespace() {\n        while (index < length && isWhiteSpace(source.charCodeAt(index))) {\n            ++index;\n        }\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        id = getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            range: [start, index]\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2;\n\n        switch (code) {\n\n            // Check for most common single-character punctuators.\n            case 46:   // . dot\n            case 40:   // ( open bracket\n            case 41:   // ) close bracket\n            case 59:   // ; semicolon\n            case 44:   // , comma\n            case 123:  // { open curly brace\n            case 125:  // } close curly brace\n            case 91:   // [\n            case 93:   // ]\n            case 58:   // :\n            case 63:   // ?\n                ++index;\n                return {\n                    type: Token.Punctuator,\n                    value: String.fromCharCode(code),\n                    range: [start, index]\n                };\n\n            default:\n                code2 = source.charCodeAt(index + 1);\n\n                // '=' (char #61) marks an assignment or comparison operator.\n                if (code2 === 61) {\n                    switch (code) {\n                        case 37:  // %\n                        case 38:  // &\n                        case 42:  // *:\n                        case 43:  // +\n                        case 45:  // -\n                        case 47:  // /\n                        case 60:  // <\n                        case 62:  // >\n                        case 124: // |\n                            index += 2;\n                            return {\n                                type: Token.Punctuator,\n                                value: String.fromCharCode(code) + String.fromCharCode(code2),\n                                range: [start, index]\n                            };\n\n                        case 33: // !\n                        case 61: // =\n                            index += 2;\n\n                            // !== and ===\n                            if (source.charCodeAt(index) === 61) {\n                                ++index;\n                            }\n                            return {\n                                type: Token.Punctuator,\n                                value: source.slice(start, index),\n                                range: [start, index]\n                            };\n                        default:\n                            break;\n                    }\n                }\n                break;\n        }\n\n        // Peek more characters.\n\n        ch2 = source[index + 1];\n\n        // Other 2-character punctuators: && ||\n\n        if (ch1 === ch2 && ('&|'.indexOf(ch1) >= 0)) {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch1 + ch2,\n                range: [start, index]\n            };\n        }\n\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                range: [start, index]\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            if (number === '0') {\n                // decimal number starts with '0' such as '09' is illegal.\n                if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            range: [start, index]\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, octal = false;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                        case 'n':\n                            str += '\\n';\n                            break;\n                        case 'r':\n                            str += '\\r';\n                            break;\n                        case 't':\n                            str += '\\t';\n                            break;\n                        case 'b':\n                            str += '\\b';\n                            break;\n                        case 'f':\n                            str += '\\f';\n                            break;\n                        case 'v':\n                            str += '\\x0B';\n                            break;\n\n                        default:\n                            str += ch;\n                            break;\n                    }\n                } else {\n                    if (ch === '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            range: [start, index]\n        };\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advance() {\n        var ch;\n\n        skipWhitespace();\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                range: [index, index]\n            };\n        }\n\n        ch = source.charCodeAt(index);\n\n        // Very common: ( and ) and ;\n        if (ch === 40 || ch === 41 || ch === 58) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (#39) or double quote (#34).\n        if (ch === 39 || ch === 34) {\n            return scanStringLiteral();\n        }\n\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Dot (.) char #46 can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 46) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        return scanPunctuator();\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.range[1];\n\n        lookahead = advance();\n\n        index = token.range[1];\n\n        return token;\n    }\n\n    function peek() {\n        var pos;\n\n        pos = index;\n        lookahead = advance();\n        index = pos;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, index) {\n                    assert(index < args.length, 'Message reference must be in range');\n                    return args[index];\n                }\n            );\n\n        error = new Error(msg);\n        error.index = index;\n        error.description = msg;\n        throw error;\n    }\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword) {\n        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n    }\n\n    function consumeSemicolon() {\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n            return;\n        }\n\n        skipWhitespace();\n\n        if (match(';')) {\n            lex();\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [];\n\n        expect('[');\n\n        while (!match(']')) {\n            if (match(',')) {\n                lex();\n                elements.push(null);\n            } else {\n                elements.push(parseExpression());\n\n                if (!match(']')) {\n                    expect(',');\n                }\n            }\n        }\n\n        expect(']');\n\n        return delegate.createArrayExpression(elements);\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parseObjectPropertyKey() {\n        var token;\n\n        skipWhitespace();\n        token = lex();\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            return delegate.createLiteral(token);\n        }\n\n        return delegate.createIdentifier(token.value);\n    }\n\n    function parseObjectProperty() {\n        var token, key;\n\n        token = lookahead;\n        skipWhitespace();\n\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            throwUnexpected(token);\n        }\n\n        key = parseObjectPropertyKey();\n        expect(':');\n        return delegate.createProperty('init', key, parseExpression());\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [];\n\n        expect('{');\n\n        while (!match('}')) {\n            properties.push(parseObjectProperty());\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return delegate.createObjectExpression(properties);\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr;\n\n        expect('(');\n\n        expr = parseExpression();\n\n        expect(')');\n\n        return expr;\n    }\n\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var type, token, expr;\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        type = lookahead.type;\n\n        if (type === Token.Identifier) {\n            expr = delegate.createIdentifier(lex().value);\n        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            expr = delegate.createLiteral(lex());\n        } else if (type === Token.Keyword) {\n            if (matchKeyword('this')) {\n                lex();\n                expr = delegate.createThisExpression();\n            }\n        } else if (type === Token.BooleanLiteral) {\n            token = lex();\n            token.value = (token.value === 'true');\n            expr = delegate.createLiteral(token);\n        } else if (type === Token.NullLiteral) {\n            token = lex();\n            token.value = null;\n            expr = delegate.createLiteral(token);\n        } else if (match('[')) {\n            expr = parseArrayInitialiser();\n        } else if (match('{')) {\n            expr = parseObjectInitialiser();\n        }\n\n        if (expr) {\n            return expr;\n        }\n\n        throwUnexpected(lex());\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [];\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                args.push(parseExpression());\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseNonComputedProperty() {\n        var token;\n\n        token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return delegate.createIdentifier(token.value);\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, args, property;\n\n        expr = parsePrimaryExpression();\n\n        while (true) {\n            if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else if (match('.')) {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            } else if (match('(')) {\n                args = parseArguments();\n                expr = delegate.createCallExpression(expr, args);\n            } else {\n                break;\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    var parsePostfixExpression = parseLeftHandSideExpression;\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var token, expr;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            expr = parsePostfixExpression();\n        } else if (match('+') || match('-') || match('!')) {\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            throwError({}, Messages.UnexpectedToken);\n        } else {\n            expr = parsePostfixExpression();\n        }\n\n        return expr;\n    }\n\n    function binaryPrecedence(token) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n            case '||':\n                prec = 1;\n                break;\n\n            case '&&':\n                prec = 2;\n                break;\n\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                prec = 6;\n                break;\n\n            case '<':\n            case '>':\n            case '<=':\n            case '>=':\n            case 'instanceof':\n                prec = 7;\n                break;\n\n            case 'in':\n                prec = 7;\n                break;\n\n            case '+':\n            case '-':\n                prec = 9;\n                break;\n\n            case '*':\n            case '/':\n            case '%':\n                prec = 11;\n                break;\n\n            default:\n                break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var expr, token, prec, stack, right, operator, left, i;\n\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                stack.push(expr);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, consequent, alternate;\n\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            consequent = parseConditionalExpression();\n            expect(':');\n            alternate = parseConditionalExpression();\n\n            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n        }\n\n        return expr;\n    }\n\n    // Simplification since we do not support AssignmentExpression.\n    var parseExpression = parseConditionalExpression;\n\n    // Polymer Syntax extensions\n\n    // Filter ::\n    //   Identifier\n    //   Identifier \"(\" \")\"\n    //   Identifier \"(\" FilterArguments \")\"\n\n    function parseFilter() {\n        var identifier, args;\n\n        identifier = lex();\n\n        if (identifier.type !== Token.Identifier) {\n            throwUnexpected(identifier);\n        }\n\n        args = match('(') ? parseArguments() : [];\n\n        return delegate.createFilter(identifier.value, args);\n    }\n\n    // Filters ::\n    //   \"|\" Filter\n    //   Filters \"|\" Filter\n\n    function parseFilters() {\n        while (match('|')) {\n            lex();\n            parseFilter();\n        }\n    }\n\n    // TopLevel ::\n    //   LabelledExpressions\n    //   AsExpression\n    //   InExpression\n    //   FilterExpression\n\n    // AsExpression ::\n    //   FilterExpression as Identifier\n\n    // InExpression ::\n    //   Identifier, Identifier in FilterExpression\n    //   Identifier in FilterExpression\n\n    // FilterExpression ::\n    //   Expression\n    //   Expression Filters\n\n    function parseTopLevel() {\n        skipWhitespace();\n        peek();\n\n        var expr = parseExpression();\n        if (expr) {\n            if (lookahead.value === ',' || lookahead.value == 'in' &&\n                       expr.type === Syntax.Identifier) {\n                parseInExpression(expr);\n            } else {\n                parseFilters();\n                if (lookahead.value === 'as') {\n                    parseAsExpression(expr);\n                } else {\n                    delegate.createTopLevel(expr);\n                }\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    function parseAsExpression(expr) {\n        lex();  // as\n        var identifier = lex().value;\n        delegate.createAsExpression(expr, identifier);\n    }\n\n    function parseInExpression(identifier) {\n        var indexName;\n        if (lookahead.value === ',') {\n            lex();\n            if (lookahead.type !== Token.Identifier)\n                throwUnexpected(lookahead);\n            indexName = lex().value;\n        }\n\n        lex();  // in\n        var expr = parseExpression();\n        parseFilters();\n        delegate.createInExpression(identifier.name, indexName, expr);\n    }\n\n    function parse(code, inDelegate) {\n        delegate = inDelegate;\n        source = code;\n        index = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            labelSet: {}\n        };\n\n        return parseTopLevel();\n    }\n\n    global.esprima = {\n        parse: parse\n    };\n})(module.exports);"
    },
    {
      "id": 243,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/polymer-expressions/path-parser.js",
      "name": "./~/tns-core-modules/js-libs/polymer-expressions/path-parser.js",
      "index": 46,
      "index2": 33,
      "size": 9797,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
      "issuerId": 244,
      "issuerName": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 244,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
          "module": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
          "moduleName": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
          "type": "cjs require",
          "userRequest": "js-libs/polymer-expressions/path-parser",
          "loc": "9:11-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 8,
      "source": "﻿/*\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n'use strict';\n\nfunction detectEval() {\n    // Don't test for eval if we're running in a Chrome App environment.\n    // We check for APIs set that only exist in a Chrome App context.\n    if (typeof chrome !== 'undefined' && chrome.app && chrome.app.runtime) {\n        return false;\n    }\n\n    // Firefox OS Apps do not allow eval. This feature detection is very hacky\n    // but even if some other platform adds support for this function this code\n    // will continue to work.\n    if (typeof navigator != 'undefined' && navigator.getDeviceStorage) {\n        return false;\n    }\n\n    try {\n        var f = new Function('', 'return true;');\n        return f();\n    } catch (ex) {\n        return false;\n    }\n}\n\nvar hasEval = detectEval();\n\nfunction isIndex(s) {\n    return +s === s >>> 0 && s !== '';\n}\n\nfunction toNumber(s) {\n    return +s;\n}\n\nfunction isObject(obj) {\n    return obj === Object(obj);\n}\n\nvar numberIsNaN = Number.isNaN || function (value) {\n    return typeof value === 'number' && isNaN(value);\n}\n\nfunction areSameValue(left, right) {\n    if (left === right)\n        return left !== 0 || 1 / left === 1 / right;\n    if (numberIsNaN(left) && numberIsNaN(right))\n        return true;\n\n    return left !== left && right !== right;\n}\n\nvar createObject = ('__proto__' in {}) ?\n  function (obj) { return obj; } :\n  function (obj) {\n      var proto = obj.__proto__;\n      if (!proto)\n          return obj;\n      var newObject = Object.create(proto);\n      Object.getOwnPropertyNames(obj).forEach(function (name) {\n          Object.defineProperty(newObject, name,\n                               Object.getOwnPropertyDescriptor(obj, name));\n      });\n      return newObject;\n  };\n\nvar identStart = '[\\$_a-zA-Z]';\nvar identPart = '[\\$_a-zA-Z0-9]';\nvar identRegExp = new RegExp('^' + identStart + '+' + identPart + '*' + '$');\n\nfunction getPathCharType(char) {\n    if (char === undefined)\n        return 'eof';\n\n    var code = char.charCodeAt(0);\n\n    switch (code) {\n        case 0x5B: // [\n        case 0x5D: // ]\n        case 0x2E: // .\n        case 0x22: // \"\n        case 0x27: // '\n        case 0x30: // 0\n            return char;\n\n        case 0x5F: // _\n        case 0x24: // $\n            return 'ident';\n\n        case 0x20: // Space\n        case 0x09: // Tab\n        case 0x0A: // Newline\n        case 0x0D: // Return\n        case 0xA0:  // No-break space\n        case 0xFEFF:  // Byte Order Mark\n        case 0x2028:  // Line Separator\n        case 0x2029:  // Paragraph Separator\n            return 'ws';\n    }\n\n    // a-z, A-Z\n    if ((0x61 <= code && code <= 0x7A) || (0x41 <= code && code <= 0x5A))\n        return 'ident';\n\n    // 1-9\n    if (0x31 <= code && code <= 0x39)\n        return 'number';\n\n    return 'else';\n}\n\nvar pathStateMachine = {\n    'beforePath': {\n        'ws': ['beforePath'],\n        'ident': ['inIdent', 'append'],\n        '[': ['beforeElement'],\n        'eof': ['afterPath']\n    },\n\n    'inPath': {\n        'ws': ['inPath'],\n        '.': ['beforeIdent'],\n        '[': ['beforeElement'],\n        'eof': ['afterPath']\n    },\n\n    'beforeIdent': {\n        'ws': ['beforeIdent'],\n        'ident': ['inIdent', 'append']\n    },\n\n    'inIdent': {\n        'ident': ['inIdent', 'append'],\n        '0': ['inIdent', 'append'],\n        'number': ['inIdent', 'append'],\n        'ws': ['inPath', 'push'],\n        '.': ['beforeIdent', 'push'],\n        '[': ['beforeElement', 'push'],\n        'eof': ['afterPath', 'push']\n    },\n\n    'beforeElement': {\n        'ws': ['beforeElement'],\n        '0': ['afterZero', 'append'],\n        'number': ['inIndex', 'append'],\n        \"'\": ['inSingleQuote', 'append', ''],\n        '\"': ['inDoubleQuote', 'append', '']\n    },\n\n    'afterZero': {\n        'ws': ['afterElement', 'push'],\n        ']': ['inPath', 'push']\n    },\n\n    'inIndex': {\n        '0': ['inIndex', 'append'],\n        'number': ['inIndex', 'append'],\n        'ws': ['afterElement'],\n        ']': ['inPath', 'push']\n    },\n\n    'inSingleQuote': {\n        \"'\": ['afterElement'],\n        'eof': ['error'],\n        'else': ['inSingleQuote', 'append']\n    },\n\n    'inDoubleQuote': {\n        '\"': ['afterElement'],\n        'eof': ['error'],\n        'else': ['inDoubleQuote', 'append']\n    },\n\n    'afterElement': {\n        'ws': ['afterElement'],\n        ']': ['inPath', 'push']\n    }\n}\n\nfunction noop() { }\n\nfunction parsePath(path) {\n    var keys = [];\n    var index = -1;\n    var c, newChar, key, type, transition, action, typeMap, mode = 'beforePath';\n\n    var actions = {\n        push: function () {\n            if (key === undefined)\n                return;\n\n            keys.push(key);\n            key = undefined;\n        },\n\n        append: function () {\n            if (key === undefined)\n                key = newChar\n            else\n                key += newChar;\n        }\n    };\n\n    function maybeUnescapeQuote() {\n        if (index >= path.length)\n            return;\n\n        var nextChar = path[index + 1];\n        if ((mode == 'inSingleQuote' && nextChar == \"'\") ||\n            (mode == 'inDoubleQuote' && nextChar == '\"')) {\n            index++;\n            newChar = nextChar;\n            actions.append();\n            return true;\n        }\n    }\n\n    while (mode) {\n        index++;\n        c = path[index];\n\n        if (c == '\\\\' && maybeUnescapeQuote(mode))\n            continue;\n\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap['else'] || 'error';\n\n        if (transition == 'error')\n            return; // parse error;\n\n        mode = transition[0];\n        action = actions[transition[1]] || noop;\n        newChar = transition[2] === undefined ? c : transition[2];\n        action();\n\n        if (mode === 'afterPath') {\n            return keys;\n        }\n    }\n\n    return; // parse error\n}\n\nfunction isIdent(s) {\n    return identRegExp.test(s);\n}\n\nvar constructorIsPrivate = {};\n\nfunction Path(parts, privateToken) {\n    if (privateToken !== constructorIsPrivate)\n        throw Error('Use Path.get to retrieve path objects');\n\n    for (var i = 0; i < parts.length; i++) {\n        this.push(String(parts[i]));\n    }\n\n    if (hasEval && this.length) {\n        this.getValueFrom = this.compiledGetValueFromFn();\n    }\n}\n\n// TODO(rafaelw): Make simple LRU cache\nvar pathCache = {};\n\nfunction getPath(pathString) {\n    if (pathString instanceof Path)\n        return pathString;\n\n    if (pathString == null || pathString.length == 0)\n        pathString = '';\n\n    if (typeof pathString != 'string') {\n        if (isIndex(pathString.length)) {\n            // Constructed with array-like (pre-parsed) keys\n            return new Path(pathString, constructorIsPrivate);\n        }\n\n        pathString = String(pathString);\n    }\n\n    var path = pathCache[pathString];\n    if (path)\n        return path;\n\n    var parts = parsePath(pathString);\n    if (!parts)\n        return invalidPath;\n\n    var path = new Path(parts, constructorIsPrivate);\n    pathCache[pathString] = path;\n    return path;\n}\n\nPath.get = getPath;\n\nfunction formatAccessor(key) {\n    if (isIndex(key)) {\n        return '[' + key + ']';\n    } else {\n        return '[\"' + key.replace(/\"/g, '\\\\\"') + '\"]';\n    }\n}\n\nPath.prototype = createObject({\n    __proto__: [],\n    valid: true,\n\n    toString: function () {\n        var pathString = '';\n        for (var i = 0; i < this.length; i++) {\n            var key = this[i];\n            if (isIdent(key)) {\n                pathString += i ? '.' + key : key;\n            } else {\n                pathString += formatAccessor(key);\n            }\n        }\n\n        return pathString;\n    },\n\n    getValueFrom: function (obj, directObserver) {\n        for (var i = 0; i < this.length; i++) {\n            if (obj == null)\n                return;\n            obj = obj[this[i]];\n        }\n        return obj;\n    },\n\n    iterateObjects: function (obj, observe) {\n        for (var i = 0; i < this.length; i++) {\n            if (i)\n                obj = obj[this[i - 1]];\n            if (!isObject(obj))\n                return;\n            observe(obj, this[i]);\n        }\n    },\n\n    compiledGetValueFromFn: function () {\n        var str = '';\n        var pathString = 'obj';\n        str += 'if (obj != null';\n        var i = 0;\n        var key;\n        for (; i < (this.length - 1) ; i++) {\n            key = this[i];\n            pathString += isIdent(key) ? '.' + key : formatAccessor(key);\n            str += ' &&\\n     ' + pathString + ' != null';\n        }\n        str += ')\\n';\n\n        var key = this[i];\n        pathString += isIdent(key) ? '.' + key : formatAccessor(key);\n\n        str += '  return ' + pathString + ';\\nelse\\n  return undefined;';\n        return new Function('obj', str);\n    },\n\n    setValueFrom: function (obj, value) {\n        if (!this.length)\n            return false;\n\n        for (var i = 0; i < this.length - 1; i++) {\n            if (!isObject(obj))\n                return false;\n            obj = obj[this[i]];\n        }\n\n        if (!isObject(obj))\n            return false;\n\n        obj[this[i]] = value;\n        return true;\n    }\n});\n\nvar invalidPath = new Path('', constructorIsPrivate);\ninvalidPath.valid = false;\ninvalidPath.getValueFrom = invalidPath.setValueFrom = function () { };\n\nexports.Path = Path;\n"
    },
    {
      "id": 244,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
      "name": "./~/tns-core-modules/js-libs/polymer-expressions/polymer-expressions.js",
      "index": 44,
      "index2": 34,
      "size": 18249,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
      "issuerId": 64,
      "issuerName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 64,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/core/bindable/bindable.js",
          "module": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "moduleName": "./~/tns-core-modules/ui/core/bindable/bindable.js",
          "type": "cjs require",
          "userRequest": "../../../js-libs/polymer-expressions",
          "loc": "18:25-72"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 7,
      "source": "﻿// Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n// This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n// The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n// The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n// Code distributed by Google as part of the polymer project is also\n// subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n\nvar esprima = require(\"js-libs/esprima\").esprima;\nvar Path = require(\"js-libs/polymer-expressions/path-parser\").Path;\n\n(function (global) {\n    'use strict';\n\n    // TODO(rafaelw): Implement simple LRU.\n    var expressionParseCache = Object.create(null);\n\n    function getExpression(expressionText) {\n        var expression = expressionParseCache[expressionText];\n        if (!expression) {\n            var delegate = new ASTDelegate();\n            esprima.parse(expressionText, delegate);\n            expression = new Expression(delegate);\n            expressionParseCache[expressionText] = expression;\n        }\n        return expression;\n    }\n\n    function Literal(value) {\n        this.value = value;\n        this.valueFn_ = undefined;\n    }\n\n    Literal.prototype = {\n        valueFn: function () {\n            if (!this.valueFn_) {\n                var value = this.value;\n                this.valueFn_ = function () {\n                    return value;\n                }\n            }\n\n            return this.valueFn_;\n        }\n    }\n\n    function IdentPath(name) {\n        this.name = name;\n        this.path = Path.get(name);\n    }\n\n    IdentPath.prototype = {\n        valueFn: function () {\n            if (!this.valueFn_) {\n                var name = this.name;\n                var path = this.path;\n                this.valueFn_ = function (model, observer, changedModel) {\n                    if (observer)\n                        observer.addPath(model, path);\n\n                    if (changedModel) {\n                        var result = path.getValueFrom(changedModel);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n\n                    return path.getValueFrom(model);\n                }\n            }\n\n            return this.valueFn_;\n        },\n\n        setValue: function (model, newValue) {\n            if (this.path.length == 1) {\n                model = findScope(model, this.path[0]);\n            }\n\n            return this.path.setValueFrom(model, newValue);\n        }\n    };\n\n    function MemberExpression(object, property, accessor) {\n        this.computed = accessor == '[';\n\n        this.dynamicDeps = typeof object == 'function' ||\n                           object.dynamicDeps ||\n                           (this.computed && !(property instanceof Literal));\n\n        this.simplePath =\n            !this.dynamicDeps &&\n            (property instanceof IdentPath || property instanceof Literal) &&\n            (object instanceof MemberExpression || object instanceof IdentPath);\n\n        this.object = this.simplePath ? object : getFn(object);\n        this.property = !this.computed || this.simplePath ?\n            property : getFn(property);\n    }\n\n    MemberExpression.prototype = {\n        get fullPath() {\n            if (!this.fullPath_) {\n\n                var parts = this.object instanceof MemberExpression ?\n                    this.object.fullPath.slice() : [this.object.name];\n                parts.push(this.property instanceof IdentPath ?\n                    this.property.name : this.property.value);\n                this.fullPath_ = Path.get(parts);\n            }\n\n            return this.fullPath_;\n        },\n\n        valueFn: function () {\n            if (!this.valueFn_) {\n                var object = this.object;\n\n                if (this.simplePath) {\n                    var path = this.fullPath;\n\n                    this.valueFn_ = function (model, observer) {\n                        if (observer)\n                            observer.addPath(model, path);\n\n                        return path.getValueFrom(model);\n                    };\n                } else if (!this.computed) {\n                    var path = Path.get(this.property.name);\n\n                    this.valueFn_ = function (model, observer, filterRegistry) {\n                        var context = object(model, observer, filterRegistry);\n\n                        if (observer)\n                            observer.addPath(context, path);\n\n                        return path.getValueFrom(context);\n                    }\n                } else {\n                    // Computed property.\n                    var property = this.property;\n\n                    this.valueFn_ = function (model, observer, filterRegistry) {\n                        var context = object(model, observer, filterRegistry);\n                        var propName = property(model, observer, filterRegistry);\n                        if (observer)\n                            observer.addPath(context, [propName]);\n\n                        return context ? context[propName] : undefined;\n                    };\n                }\n            }\n            return this.valueFn_;\n        },\n\n        setValue: function (model, newValue) {\n            if (this.simplePath) {\n                this.fullPath.setValueFrom(model, newValue);\n                return newValue;\n            }\n\n            var object = this.object(model);\n            var propName = this.property instanceof IdentPath ? this.property.name :\n                this.property(model);\n            return object[propName] = newValue;\n        }\n    };\n\n    function Filter(name, args) {\n        this.name = name;\n        this.args = [];\n        for (var i = 0; i < args.length; i++) {\n            this.args[i] = getFn(args[i]);\n        }\n    }\n\n    Filter.prototype = {\n        transform: function (model, observer, filterRegistry, toModelDirection,\n                            initialArgs) {\n            var fn = filterRegistry[this.name];\n            var context = model;\n            if (fn) {\n                context = undefined;\n            } else {\n                fn = context[this.name];\n                if (!fn) {\n                    console.error('Cannot find function or filter: ' + this.name);\n                    return;\n                }\n            }\n\n            // If toModelDirection is falsey, then the \"normal\" (dom-bound) direction\n            // is used. Otherwise, it looks for a 'toModel' property function on the\n            // object.\n            if (toModelDirection) {\n                fn = fn.toModel;\n            } else if (typeof fn.toView == 'function') {\n                fn = fn.toView;\n            }\n\n            if (typeof fn != 'function') {\n                console.error('Cannot find function or filter: ' + this.name);\n                return;\n            }\n\n            var args = initialArgs || [];\n            for (var i = 0; i < this.args.length; i++) {\n                args.push(getFn(this.args[i])(model, observer, filterRegistry));\n            }\n\n            return fn.apply(context, args);\n        }\n    };\n\n    function notImplemented() { throw Error('Not Implemented'); }\n\n    var unaryOperators = {\n        '+': function (v) { return +v; },\n        '-': function (v) { return -v; },\n        '!': function (v) { return !v; }\n    };\n\n    var binaryOperators = {\n        '+': function (l, r) { return l + r; },\n        '-': function (l, r) { return l - r; },\n        '*': function (l, r) { return l * r; },\n        '/': function (l, r) { return l / r; },\n        '%': function (l, r) { return l % r; },\n        '<': function (l, r) { return l < r; },\n        '>': function (l, r) { return l > r; },\n        '<=': function (l, r) { return l <= r; },\n        '>=': function (l, r) { return l >= r; },\n        '==': function (l, r) { return l == r; },\n        '!=': function (l, r) { return l != r; },\n        '===': function (l, r) { return l === r; },\n        '!==': function (l, r) { return l !== r; },\n        '&&': function (l, r) { return l && r; },\n        '||': function (l, r) { return l || r; },\n    };\n\n    function getFn(arg) {\n        return typeof arg == 'function' ? arg : arg.valueFn();\n    }\n\n    function ASTDelegate() {\n        this.expression = null;\n        this.filters = [];\n        this.deps = {};\n        this.currentPath = undefined;\n        this.scopeIdent = undefined;\n        this.indexIdent = undefined;\n        this.dynamicDeps = false;\n    }\n\n    ASTDelegate.prototype = {\n        createUnaryExpression: function (op, argument) {\n            if (!unaryOperators[op])\n                throw Error('Disallowed operator: ' + op);\n\n            argument = getFn(argument);\n\n            return function (model, observer, filterRegistry) {\n                return unaryOperators[op](argument(model, observer, filterRegistry));\n            };\n        },\n\n        createBinaryExpression: function (op, left, right) {\n            if (!binaryOperators[op])\n                throw Error('Disallowed operator: ' + op);\n\n            left = getFn(left);\n            right = getFn(right);\n\n            switch (op) {\n                case '||':\n                    this.dynamicDeps = true;\n                    return function (model, observer, filterRegistry) {\n                        return left(model, observer, filterRegistry) ||\n                            right(model, observer, filterRegistry);\n                    };\n                case '&&':\n                    this.dynamicDeps = true;\n                    return function (model, observer, filterRegistry) {\n                        return left(model, observer, filterRegistry) &&\n                            right(model, observer, filterRegistry);\n                    };\n            }\n\n            return function (model, observer, filterRegistry) {\n                return binaryOperators[op](left(model, observer, filterRegistry),\n                                           right(model, observer, filterRegistry));\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            test = getFn(test);\n            consequent = getFn(consequent);\n            alternate = getFn(alternate);\n\n            this.dynamicDeps = true;\n\n            return function (model, observer, filterRegistry) {\n                return test(model, observer, filterRegistry) ?\n                    consequent(model, observer, filterRegistry) :\n                    alternate(model, observer, filterRegistry);\n            }\n        },\n\n        createIdentifier: function (name) {\n            var ident = new IdentPath(name);\n            ident.type = 'Identifier';\n            return ident;\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            var ex = new MemberExpression(object, property, accessor);\n            if (ex.dynamicDeps)\n                this.dynamicDeps = true;\n            return ex;\n        },\n\n        createCallExpression: function (expression, args) {\n            if (!(expression instanceof IdentPath))\n                throw Error('Only identifier function invocations are allowed');\n\n            var filter = new Filter(expression.name, args);\n\n            return function (model, observer, filterRegistry) {\n                return filter.transform(model, observer, filterRegistry, false);\n            };\n        },\n\n        createLiteral: function (token) {\n            return new Literal(token.value);\n        },\n\n        createArrayExpression: function (elements) {\n            for (var i = 0; i < elements.length; i++)\n                elements[i] = getFn(elements[i]);\n\n            return function (model, observer, filterRegistry) {\n                var arr = []\n                for (var i = 0; i < elements.length; i++)\n                    arr.push(elements[i](model, observer, filterRegistry));\n                return arr;\n            }\n        },\n\n        createProperty: function (kind, key, value) {\n            return {\n                key: key instanceof IdentPath ? key.name : key.value,\n                value: value\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            for (var i = 0; i < properties.length; i++)\n                properties[i].value = getFn(properties[i].value);\n\n            return function (model, observer, filterRegistry) {\n                var obj = {};\n                for (var i = 0; i < properties.length; i++)\n                    obj[properties[i].key] =\n                        properties[i].value(model, observer, filterRegistry);\n                return obj;\n            }\n        },\n\n        createFilter: function (name, args) {\n            this.filters.push(new Filter(name, args));\n        },\n\n        createAsExpression: function (expression, scopeIdent) {\n            this.expression = expression;\n            this.scopeIdent = scopeIdent;\n        },\n\n        createInExpression: function (scopeIdent, indexIdent, expression) {\n            this.expression = expression;\n            this.scopeIdent = scopeIdent;\n            this.indexIdent = indexIdent;\n        },\n\n        createTopLevel: function (expression) {\n            this.expression = expression;\n        },\n\n        createThisExpression: notImplemented\n    }\n\n    function Expression(delegate) {\n        this.scopeIdent = delegate.scopeIdent;\n        this.indexIdent = delegate.indexIdent;\n\n        if (!delegate.expression)\n            throw Error('No expression found.');\n\n        this.expression = delegate.expression;\n        getFn(this.expression); // forces enumeration of path dependencies\n\n        this.filters = delegate.filters;\n        this.dynamicDeps = delegate.dynamicDeps;\n    }\n\n    Expression.prototype = {\n        getValue: function (model, isBackConvert, changedModel, observer) {\n            var value = getFn(this.expression)(model.context, observer, changedModel);\n            for (var i = 0; i < this.filters.length; i++) {\n                value = this.filters[i].transform(model.context, observer, model.context, isBackConvert, [value]);\n            }\n\n            return value;\n        },\n\n        setValue: function (model, newValue, filterRegistry) {\n            var count = this.filters ? this.filters.length : 0;\n            while (count-- > 0) {\n                newValue = this.filters[count].transform(model, undefined,\n                    filterRegistry, true, [newValue]);\n            }\n\n            if (this.expression.setValue)\n                return this.expression.setValue(model, newValue);\n        }\n    }\n\n    /**\n     * Converts a style property name to a css property name. For example:\n     * \"WebkitUserSelect\" to \"-webkit-user-select\"\n     */\n    function convertStylePropertyName(name) {\n        return String(name).replace(/[A-Z]/g, function (c) {\n            return '-' + c.toLowerCase();\n        });\n    }\n\n    var parentScopeName = '@' + Math.random().toString(36).slice(2);\n\n    // Single ident paths must bind directly to the appropriate scope object.\n    // I.e. Pushed values in two-bindings need to be assigned to the actual model\n    // object.\n    function findScope(model, prop) {\n        while (model[parentScopeName] &&\n               !Object.prototype.hasOwnProperty.call(model, prop)) {\n            model = model[parentScopeName];\n        }\n\n        return model;\n    }\n\n    function isLiteralExpression(pathString) {\n        switch (pathString) {\n            case '':\n                return false;\n\n            case 'false':\n            case 'null':\n            case 'true':\n                return true;\n        }\n\n        if (!isNaN(Number(pathString)))\n            return true;\n\n        return false;\n    };\n\n    function PolymerExpressions() { }\n\n    PolymerExpressions.prototype = {\n        // \"built-in\" filters\n        styleObject: function (value) {\n            var parts = [];\n            for (var key in value) {\n                parts.push(convertStylePropertyName(key) + ': ' + value[key]);\n            }\n            return parts.join('; ');\n        },\n\n        tokenList: function (value) {\n            var tokens = [];\n            for (var key in value) {\n                if (value[key])\n                    tokens.push(key);\n            }\n            return tokens.join(' ');\n        },\n\n        // binding delegate API\n        prepareInstancePositionChanged: function (template) {\n            var indexIdent = template.polymerExpressionIndexIdent_;\n            if (!indexIdent)\n                return;\n\n            return function (templateInstance, index) {\n                templateInstance.model[indexIdent] = index;\n            };\n        },\n\n        prepareInstanceModel: function (template) {\n            var scopeName = template.polymerExpressionScopeIdent_;\n            if (!scopeName)\n                return;\n\n            var parentScope = template.templateInstance ?\n                template.templateInstance.model :\n                template.model;\n\n            var indexName = template.polymerExpressionIndexIdent_;\n\n            return function (model) {\n                return createScopeObject(parentScope, model, scopeName, indexName);\n            };\n        }\n    };\n\n    var createScopeObject = ('__proto__' in {}) ?\n      function (parentScope, model, scopeName, indexName) {\n          var scope = {};\n          scope[scopeName] = model;\n          scope[indexName] = undefined;\n          scope[parentScopeName] = parentScope;\n          scope.__proto__ = parentScope;\n          return scope;\n      } :\n      function (parentScope, model, scopeName, indexName) {\n          var scope = Object.create(parentScope);\n          Object.defineProperty(scope, scopeName,\n              { value: model, configurable: true, writable: true });\n          Object.defineProperty(scope, indexName,\n              { value: undefined, configurable: true, writable: true });\n          Object.defineProperty(scope, parentScopeName,\n              { value: parentScope, configurable: true, writable: true });\n          return scope;\n      };\n\n    global.PolymerExpressions = PolymerExpressions;\n    PolymerExpressions.getExpression = getExpression;\n})(module.exports);"
    },
    {
      "id": 245,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/text/text.android.js",
      "name": "./~/tns-core-modules/text/text.android.js",
      "index": 32,
      "index2": 18,
      "size": 410,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system-access.android.js",
      "issuerId": 236,
      "issuerName": "./~/tns-core-modules/file-system/file-system-access.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 236,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/file-system/file-system-access.android.js",
          "module": "./~/tns-core-modules/file-system/file-system-access.android.js",
          "moduleName": "./~/tns-core-modules/file-system/file-system-access.android.js",
          "type": "cjs require",
          "userRequest": "../text",
          "loc": "2:17-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar encoding;\n(function (encoding) {\n    encoding.ISO_8859_1 = \"ISO-8859-1\";\n    encoding.US_ASCII = \"US-ASCII\";\n    encoding.UTF_16 = \"UTF-16\";\n    encoding.UTF_16BE = \"UTF-16BE\";\n    encoding.UTF_16LE = \"UTF-16LE\";\n    encoding.UTF_8 = \"UTF-8\";\n})(encoding = exports.encoding || (exports.encoding = {}));\n//# sourceMappingURL=text.android.js.map"
    },
    {
      "id": 246,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
      "name": "./~/tns-core-modules/ui/activity-indicator/activity-indicator.android.js",
      "index": 151,
      "index2": 146,
      "size": 3090,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/activity-indicator",
          "loc": "50:58-107"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar activity_indicator_common_1 = require(\"./activity-indicator-common\");\n__export(require(\"./activity-indicator-common\"));\nvar ActivityIndicator = (function (_super) {\n    __extends(ActivityIndicator, _super);\n    function ActivityIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ActivityIndicator.prototype.createNativeView = function () {\n        var progressBar = new android.widget.ProgressBar(this._context);\n        progressBar.setVisibility(android.view.View.INVISIBLE);\n        progressBar.setIndeterminate(true);\n        return progressBar;\n    };\n    ActivityIndicator.prototype[activity_indicator_common_1.busyProperty.getDefault] = function () {\n        return false;\n    };\n    ActivityIndicator.prototype[activity_indicator_common_1.busyProperty.setNative] = function (value) {\n        if (this.visibility === activity_indicator_common_1.Visibility.VISIBLE) {\n            this.nativeView.setVisibility(value ? android.view.View.VISIBLE : android.view.View.INVISIBLE);\n        }\n    };\n    ActivityIndicator.prototype[activity_indicator_common_1.visibilityProperty.getDefault] = function () {\n        return activity_indicator_common_1.Visibility.HIDDEN;\n    };\n    ActivityIndicator.prototype[activity_indicator_common_1.visibilityProperty.setNative] = function (value) {\n        switch (value) {\n            case activity_indicator_common_1.Visibility.VISIBLE:\n                this.nativeView.setVisibility(this.busy ? android.view.View.VISIBLE : android.view.View.INVISIBLE);\n                break;\n            case activity_indicator_common_1.Visibility.HIDDEN:\n                this.nativeView.setVisibility(android.view.View.INVISIBLE);\n                break;\n            case activity_indicator_common_1.Visibility.COLLAPSE:\n                this.nativeView.setVisibility(android.view.View.GONE);\n                break;\n            default:\n                throw new Error(\"Invalid visibility value: \" + value + \". Valid values are: \\\"\" + activity_indicator_common_1.Visibility.VISIBLE + \"\\\", \\\"\" + activity_indicator_common_1.Visibility.HIDDEN + \"\\\", \\\"\" + activity_indicator_common_1.Visibility.COLLAPSE + \"\\\".\");\n        }\n    };\n    ActivityIndicator.prototype[activity_indicator_common_1.colorProperty.getDefault] = function () {\n        return -1;\n    };\n    ActivityIndicator.prototype[activity_indicator_common_1.colorProperty.setNative] = function (value) {\n        if (value instanceof activity_indicator_common_1.Color) {\n            this.nativeView.getIndeterminateDrawable().setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n        }\n        else {\n            this.nativeView.getIndeterminateDrawable().clearColorFilter();\n        }\n    };\n    return ActivityIndicator;\n}(activity_indicator_common_1.ActivityIndicatorBase));\nexports.ActivityIndicator = ActivityIndicator;\n//# sourceMappingURL=activity-indicator.android.js.map"
    },
    {
      "id": 247,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/border/border.js",
      "name": "./~/tns-core-modules/ui/border/border.js",
      "index": 153,
      "index2": 147,
      "size": 2500,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/border",
          "loc": "51:47-84"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar content_view_1 = require(\"../content-view\");\nvar Border = (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Border.prototype, \"cornerRadius\", {\n        get: function () {\n            if (typeof this.borderRadius === \"number\") {\n                return this.borderRadius;\n            }\n            return 0;\n        },\n        set: function (value) {\n            this.borderRadius = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Border.prototype.onMeasure = function (widthMeasureSpec, heightMeasureSpec) {\n        var width = content_view_1.layout.getMeasureSpecSize(widthMeasureSpec);\n        var widthMode = content_view_1.layout.getMeasureSpecMode(widthMeasureSpec);\n        var height = content_view_1.layout.getMeasureSpecSize(heightMeasureSpec);\n        var heightMode = content_view_1.layout.getMeasureSpecMode(heightMeasureSpec);\n        var horizontalBorderLength = this.effectiveBorderLeftWidth + this.effectiveBorderRightWidth;\n        var verticalBorderLength = this.effectiveBorderTopWidth + this.effectiveBorderBottomWidth;\n        var result = content_view_1.View.measureChild(this, this.layoutView, content_view_1.layout.makeMeasureSpec(width - horizontalBorderLength, widthMode), content_view_1.layout.makeMeasureSpec(height - verticalBorderLength, heightMode));\n        var widthAndState = content_view_1.View.resolveSizeAndState(result.measuredWidth + horizontalBorderLength, width, widthMode, 0);\n        var heightAndState = content_view_1.View.resolveSizeAndState(result.measuredHeight + verticalBorderLength, height, heightMode, 0);\n        this.setMeasuredDimension(widthAndState, heightAndState);\n    };\n    Border.prototype.onLayout = function (left, top, right, bottom) {\n        var horizontalBorderLength = this.effectiveBorderLeftWidth + this.effectiveBorderRightWidth;\n        var verticalBorderLength = this.effectiveBorderTopWidth + this.effectiveBorderBottomWidth;\n        content_view_1.View.layoutChild(this, this.layoutView, this.effectiveBorderLeftWidth, this.effectiveBorderTopWidth, right - left - horizontalBorderLength, bottom - top - verticalBorderLength);\n    };\n    return Border;\n}(content_view_1.ContentView));\nBorder = __decorate([\n    Deprecated\n], Border);\nexports.Border = Border;\n//# sourceMappingURL=border.js.map"
    },
    {
      "id": 248,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/component-builder/component-builder.js",
      "name": "./~/tns-core-modules/ui/builder/component-builder/component-builder.js",
      "index": 64,
      "index2": 55,
      "size": 7958,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
      "issuerId": 63,
      "issuerName": "./~/tns-core-modules/ui/builder/builder.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "./component-builder",
          "loc": "6:26-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar bindable_1 = require(\"../../core/bindable\");\nvar file_system_1 = require(\"../../../file-system\");\nvar binding_builder_1 = require(\"../binding-builder\");\nvar file_name_resolver_1 = require(\"../../../file-system/file-name-resolver\");\nvar platform = require(\"../../../platform\");\nvar UI_PATH = \"ui/\";\nvar MODULES = {\n    \"TabViewItem\": \"ui/tab-view\",\n    \"FormattedString\": \"text/formatted-string\",\n    \"Span\": \"text/span\",\n    \"ActionItem\": \"ui/action-bar\",\n    \"NavigationButton\": \"ui/action-bar\",\n    \"SegmentedBarItem\": \"ui/segmented-bar\",\n};\nvar CODEFILE = \"codeFile\";\nvar CSSFILE = \"cssFile\";\nvar IMPORT = \"import\";\nfunction getComponentModule(elementName, namespace, attributes, exports, moduleNamePath) {\n    var instance;\n    var instanceModule;\n    var componentModule;\n    elementName = elementName.split(\"-\").map(function (s) { return s[0].toUpperCase() + s.substring(1); }).join(\"\");\n    var moduleId = MODULES[elementName] || UI_PATH +\n        (elementName.toLowerCase().indexOf(\"layout\") !== -1 ? \"layouts/\" : \"\") +\n        elementName.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n    try {\n        if (typeof namespace === \"string\") {\n            if (global.moduleExists(namespace)) {\n                moduleId = namespace;\n            }\n            else {\n                var pathInsideTNSModules = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, \"tns_modules\", namespace);\n                try {\n                    instanceModule = global.require(pathInsideTNSModules);\n                    moduleId = pathInsideTNSModules;\n                }\n                catch (e) {\n                    moduleId = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, namespace);\n                }\n            }\n        }\n        if (!instanceModule) {\n            instanceModule = global.loadModule(moduleId);\n        }\n        var instanceType = instanceModule[elementName] || Object;\n        instance = new instanceType();\n    }\n    catch (ex) {\n        var debug = require(\"utils/debug\");\n        throw new debug.ScopeError(ex, \"Module '\" + moduleId + \"' not found for element '\" + (namespace ? namespace + \":\" : \"\") + elementName + \"'.\");\n    }\n    var cssApplied = false;\n    if (attributes) {\n        if (attributes[IMPORT]) {\n            var importPath = attributes[IMPORT].trim();\n            if (importPath.indexOf(\"~/\") === 0) {\n                importPath = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, importPath.replace(\"~/\", \"\"));\n            }\n            exports = global.loadModule(importPath);\n            instance.exports = exports;\n        }\n        if (attributes[CODEFILE]) {\n            var codeFilePath = attributes[CODEFILE].trim();\n            if (codeFilePath.indexOf(\"~/\") === 0) {\n                codeFilePath = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, codeFilePath.replace(\"~/\", \"\"));\n            }\n            var codeFilePathWithExt = codeFilePath.indexOf(\".js\") !== -1 ? codeFilePath : codeFilePath + \".js\";\n            if (file_system_1.File.exists(codeFilePathWithExt)) {\n                exports = global.loadModule(codeFilePath);\n                instance.exports = exports;\n            }\n            else {\n                throw new Error(\"Code file with path \\\"\" + codeFilePathWithExt + \"\\\" cannot be found!\");\n            }\n        }\n        if (attributes[CSSFILE] && typeof instance.addCssFile === \"function\") {\n            var cssFilePath = attributes[CSSFILE].trim();\n            if (cssFilePath.indexOf(\"~/\") === 0) {\n                cssFilePath = file_system_1.path.join(file_system_1.knownFolders.currentApp().path, cssFilePath.replace(\"~/\", \"\"));\n            }\n            if (file_system_1.File.exists(cssFilePath)) {\n                instance.addCssFile(cssFilePath);\n                cssApplied = true;\n            }\n            else {\n                throw new Error(\"Css file with path \\\"\" + cssFilePath + \"\\\" cannot be found!\");\n            }\n        }\n    }\n    if (typeof instance.addCssFile === \"function\") {\n        if (moduleNamePath && !cssApplied) {\n            var cssFilePath = file_name_resolver_1.resolveFileName(moduleNamePath, \"css\");\n            if (cssFilePath) {\n                instance.addCssFile(cssFilePath);\n                cssApplied = true;\n            }\n        }\n        if (!cssApplied) {\n            instance._refreshCss();\n        }\n    }\n    if (instance && instanceModule) {\n        for (var attr in attributes) {\n            var attrValue = attributes[attr];\n            if (attr.indexOf(\":\") !== -1) {\n                var platformName = attr.split(\":\")[0].trim();\n                if (platformName.toLowerCase() === platform.device.os.toLowerCase()) {\n                    attr = attr.split(\":\")[1].trim();\n                }\n                else {\n                    continue;\n                }\n            }\n            if (attr.indexOf(\".\") !== -1) {\n                var subObj = instance;\n                var properties = attr.split(\".\");\n                var subPropName = properties[properties.length - 1];\n                for (var i = 0; i < properties.length - 1; i++) {\n                    if (subObj !== undefined && subObj !== null) {\n                        subObj = subObj[properties[i]];\n                    }\n                }\n                if (subObj !== undefined && subObj !== null) {\n                    setPropertyValue(subObj, instanceModule, exports, subPropName, attrValue);\n                }\n            }\n            else {\n                setPropertyValue(instance, instanceModule, exports, attr, attrValue);\n            }\n        }\n        componentModule = { component: instance, exports: instanceModule };\n    }\n    return componentModule;\n}\nexports.getComponentModule = getComponentModule;\nfunction setPropertyValue(instance, instanceModule, exports, propertyName, propertyValue) {\n    if (isBinding(propertyValue) && instance.bind) {\n        var bindOptions = binding_builder_1.getBindingOptions(propertyName, getBindingExpressionFromAttribute(propertyValue));\n        instance.bind({\n            sourceProperty: bindOptions[binding_builder_1.bindingConstants.sourceProperty],\n            targetProperty: bindOptions[binding_builder_1.bindingConstants.targetProperty],\n            expression: bindOptions[binding_builder_1.bindingConstants.expression],\n            twoWay: bindOptions[binding_builder_1.bindingConstants.twoWay]\n        }, bindOptions[binding_builder_1.bindingConstants.source]);\n    }\n    else if (bindable_1.isEventOrGesture(propertyName, instance)) {\n        var handler = exports && exports[propertyValue];\n        if (typeof handler === \"function\") {\n            instance.on(propertyName, handler);\n        }\n    }\n    else if (isKnownFunction(propertyName, instance) && exports && typeof exports[propertyValue] === \"function\") {\n        instance[propertyName] = exports[propertyValue];\n    }\n    else {\n        var attrHandled = false;\n        if (!attrHandled && instance._applyXmlAttribute) {\n            attrHandled = instance._applyXmlAttribute(propertyName, propertyValue);\n        }\n        if (!attrHandled) {\n            instance[propertyName] = propertyValue;\n        }\n    }\n}\nexports.setPropertyValue = setPropertyValue;\nfunction getBindingExpressionFromAttribute(value) {\n    return value.replace(\"{{\", \"\").replace(\"}}\", \"\").trim();\n}\nfunction isBinding(value) {\n    var isBinding;\n    if (typeof value === \"string\") {\n        var str = value.trim();\n        isBinding = str.indexOf(\"{{\") === 0 && str.lastIndexOf(\"}}\") === str.length - 2;\n    }\n    return isBinding;\n}\nvar KNOWN_FUNCTIONS = \"knownFunctions\";\nfunction isKnownFunction(name, instance) {\n    return instance.constructor\n        && KNOWN_FUNCTIONS in instance.constructor\n        && instance.constructor[KNOWN_FUNCTIONS].indexOf(name) !== -1;\n}\n//# sourceMappingURL=component-builder.js.map"
    },
    {
      "id": 249,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/date-picker/date-picker.android.js",
      "name": "./~/tns-core-modules/ui/date-picker/date-picker.android.js",
      "index": 154,
      "index2": 149,
      "size": 5634,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/date-picker",
          "loc": "54:51-93"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar date_picker_common_1 = require(\"./date-picker-common\");\n__export(require(\"./date-picker-common\"));\nvar DateChangedListener;\nfunction initializeDateChangedListener() {\n    if (DateChangedListener) {\n        return;\n    }\n    var DateChangedListenerImpl = (function (_super) {\n        __extends(DateChangedListenerImpl, _super);\n        function DateChangedListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        DateChangedListenerImpl.prototype.onDateChanged = function (picker, year, month, day) {\n            var owner = this.owner;\n            var dateChanged = false;\n            if (year !== owner.year) {\n                date_picker_common_1.yearProperty.nativeValueChange(owner, year);\n                dateChanged = true;\n            }\n            if ((month + 1) !== owner.month) {\n                date_picker_common_1.monthProperty.nativeValueChange(owner, month + 1);\n                dateChanged = true;\n            }\n            if (day !== owner.day) {\n                date_picker_common_1.dayProperty.nativeValueChange(owner, day);\n                dateChanged = true;\n            }\n            if (dateChanged) {\n                date_picker_common_1.dateProperty.nativeValueChange(owner, new Date(year, month, day));\n            }\n        };\n        return DateChangedListenerImpl;\n    }(java.lang.Object));\n    DateChangedListenerImpl = __decorate([\n        Interfaces([android.widget.DatePicker.OnDateChangedListener])\n    ], DateChangedListenerImpl);\n    DateChangedListener = DateChangedListenerImpl;\n}\nvar DatePicker = (function (_super) {\n    __extends(DatePicker, _super);\n    function DatePicker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DatePicker.prototype.createNativeView = function () {\n        initializeDateChangedListener();\n        var picker = new android.widget.DatePicker(this._context);\n        picker.setCalendarViewShown(false);\n        var listener = new DateChangedListener(this);\n        picker.init(0, 0, 0, listener);\n        picker.listener = listener;\n        return picker;\n    };\n    DatePicker.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.listener.owner = this;\n    };\n    DatePicker.prototype.disposeNativeView = function () {\n        this.nativeView.listener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    DatePicker.prototype.updateNativeDate = function () {\n        var nativeView = this.nativeView;\n        var year = typeof this.year === \"number\" ? this.year : nativeView.getYear();\n        var month = typeof this.month === \"number\" ? (this.month - 1) : nativeView.getMonth();\n        var day = typeof this.day === \"number\" ? this.day : nativeView.getDayOfMonth();\n        this.date = new Date(year, month, day);\n    };\n    DatePicker.prototype[date_picker_common_1.yearProperty.getDefault] = function () {\n        return this.nativeView.getYear();\n    };\n    DatePicker.prototype[date_picker_common_1.yearProperty.setNative] = function (value) {\n        if (this.nativeView.getYear() !== value) {\n            this.updateNativeDate();\n        }\n    };\n    DatePicker.prototype[date_picker_common_1.monthProperty.getDefault] = function () {\n        return this.nativeView.getMonth();\n    };\n    DatePicker.prototype[date_picker_common_1.monthProperty.setNative] = function (value) {\n        if (this.nativeView.getMonth() !== (value - 1)) {\n            this.updateNativeDate();\n        }\n    };\n    DatePicker.prototype[date_picker_common_1.dayProperty.getDefault] = function () {\n        return this.nativeView.getDayOfMonth();\n    };\n    DatePicker.prototype[date_picker_common_1.dayProperty.setNative] = function (value) {\n        if (this.nativeView.getDayOfMonth() !== value) {\n            this.updateNativeDate();\n        }\n    };\n    DatePicker.prototype[date_picker_common_1.dateProperty.getDefault] = function () {\n        var nativeView = this.nativeView;\n        return new Date(nativeView.getYear(), nativeView.getMonth(), nativeView.getDayOfMonth());\n    };\n    DatePicker.prototype[date_picker_common_1.dateProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        if (nativeView.getDayOfMonth() !== value.getDay()\n            || nativeView.getMonth() !== value.getMonth()\n            || nativeView.getYear() !== value.getFullYear()) {\n            nativeView.updateDate(value.getFullYear(), value.getMonth(), value.getDate());\n        }\n    };\n    DatePicker.prototype[date_picker_common_1.maxDateProperty.getDefault] = function () {\n        return this.nativeView.getMaxDate();\n    };\n    DatePicker.prototype[date_picker_common_1.maxDateProperty.setNative] = function (value) {\n        var newValue = value instanceof Date ? value.getTime() : value;\n        this.nativeView.setMaxDate(newValue);\n    };\n    DatePicker.prototype[date_picker_common_1.minDateProperty.getDefault] = function () {\n        return this.nativeView.getMinDate();\n    };\n    DatePicker.prototype[date_picker_common_1.minDateProperty.setNative] = function (value) {\n        var newValue = value instanceof Date ? value.getTime() : value;\n        this.nativeView.setMinDate(newValue);\n    };\n    return DatePicker;\n}(date_picker_common_1.DatePickerBase));\nexports.DatePicker = DatePicker;\n//# sourceMappingURL=date-picker.android.js.map"
    },
    {
      "id": 250,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/fragment.android.js",
      "name": "./~/tns-core-modules/ui/frame/fragment.android.js",
      "index": 70,
      "index2": 63,
      "size": 2062,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
      "issuerId": 7,
      "issuerName": "./~/tns-core-modules/ui/frame/frame.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/frame/frame.android.js",
          "module": "./~/tns-core-modules/ui/frame/frame.android.js",
          "moduleName": "./~/tns-core-modules/ui/frame/frame.android.js",
          "type": "cjs require",
          "userRequest": "ui/frame/fragment",
          "loc": "516:4-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar frame_1 = require(\"./frame\");\nvar FragmentClass = (function (_super) {\n    __extends(FragmentClass, _super);\n    function FragmentClass() {\n        var _this = _super.call(this) || this;\n        return global.__native(_this);\n    }\n    FragmentClass.prototype.onHiddenChanged = function (hidden) {\n        this._callbacks.onHiddenChanged(this, hidden, _super.prototype.onHiddenChanged);\n    };\n    FragmentClass.prototype.onCreateAnimator = function (transit, enter, nextAnim) {\n        var result = this._callbacks.onCreateAnimator(this, transit, enter, nextAnim, _super.prototype.onCreateAnimator);\n        return result;\n    };\n    FragmentClass.prototype.onCreate = function (savedInstanceState) {\n        if (!this._callbacks) {\n            frame_1.setFragmentCallbacks(this);\n        }\n        this.setHasOptionsMenu(true);\n        this._callbacks.onCreate(this, savedInstanceState, _super.prototype.onCreate);\n    };\n    FragmentClass.prototype.onCreateView = function (inflater, container, savedInstanceState) {\n        var result = this._callbacks.onCreateView(this, inflater, container, savedInstanceState, _super.prototype.onCreateView);\n        return result;\n    };\n    FragmentClass.prototype.onSaveInstanceState = function (outState) {\n        this._callbacks.onSaveInstanceState(this, outState, _super.prototype.onSaveInstanceState);\n    };\n    FragmentClass.prototype.onDestroyView = function () {\n        this._callbacks.onDestroyView(this, _super.prototype.onDestroyView);\n    };\n    FragmentClass.prototype.onDestroy = function () {\n        this._callbacks.onDestroy(this, _super.prototype.onDestroy);\n    };\n    FragmentClass.prototype.toString = function () {\n        return this._callbacks.toStringOverride(this, _super.prototype.toString);\n    };\n    return FragmentClass;\n}(android.app.Fragment));\nFragmentClass = __decorate([\n    JavaProxy(\"com.tns.FragmentClass\")\n], FragmentClass);\nframe_1.setFragmentClass(FragmentClass);\n//# sourceMappingURL=fragment.android.js.map"
    },
    {
      "id": 251,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/html-view/html-view.android.js",
      "name": "./~/tns-core-modules/ui/html-view/html-view.android.js",
      "index": 158,
      "index2": 153,
      "size": 1265,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/html-view",
          "loc": "57:49-89"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar html_view_common_1 = require(\"./html-view-common\");\n__export(require(\"./html-view-common\"));\nvar HtmlView = (function (_super) {\n    __extends(HtmlView, _super);\n    function HtmlView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HtmlView.prototype.createNativeView = function () {\n        var textView = new android.widget.TextView(this._context);\n        textView.setLinksClickable(true);\n        textView.setMovementMethod(android.text.method.LinkMovementMethod.getInstance());\n        return textView;\n    };\n    HtmlView.prototype[html_view_common_1.htmlProperty.getDefault] = function () {\n        return \"\";\n    };\n    HtmlView.prototype[html_view_common_1.htmlProperty.setNative] = function (value) {\n        var mask = 15;\n        if (value.search(/<a\\s/i) >= 0) {\n            mask = 0;\n        }\n        this.nativeView.setAutoLinkMask(mask);\n        this.nativeView.setText(android.text.Html.fromHtml(value));\n    };\n    return HtmlView;\n}(html_view_common_1.HtmlViewBase));\nexports.HtmlView = HtmlView;\n//# sourceMappingURL=html-view.android.js.map"
    },
    {
      "id": 252,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
      "name": "./~/tns-core-modules/ui/layouts/absolute-layout/absolute-layout.android.js",
      "index": 149,
      "index2": 144,
      "size": 1569,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/absolute-layout",
          "loc": "49:55-109"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar absolute_layout_common_1 = require(\"./absolute-layout-common\");\n__export(require(\"./absolute-layout-common\"));\nfunction makeNativeSetter(setter) {\n    return function (value) {\n        var nativeView = this.nativeView;\n        var lp = nativeView.getLayoutParams() || new org.nativescript.widgets.CommonLayoutParams();\n        if (lp instanceof org.nativescript.widgets.CommonLayoutParams) {\n            setter.call(this, lp, value);\n            nativeView.setLayoutParams(lp);\n        }\n    };\n}\nabsolute_layout_common_1.View.prototype[absolute_layout_common_1.topProperty.setNative] = makeNativeSetter(function (lp, value) { lp.top = absolute_layout_common_1.Length.toDevicePixels(value, 0); });\nabsolute_layout_common_1.View.prototype[absolute_layout_common_1.leftProperty.setNative] = makeNativeSetter(function (lp, value) { lp.left = absolute_layout_common_1.Length.toDevicePixels(value, 0); });\nvar AbsoluteLayout = (function (_super) {\n    __extends(AbsoluteLayout, _super);\n    function AbsoluteLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AbsoluteLayout.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.AbsoluteLayout(this._context);\n    };\n    return AbsoluteLayout;\n}(absolute_layout_common_1.AbsoluteLayoutBase));\nexports.AbsoluteLayout = AbsoluteLayout;\n//# sourceMappingURL=absolute-layout.android.js.map"
    },
    {
      "id": 253,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
      "name": "./~/tns-core-modules/ui/layouts/dock-layout/dock-layout.android.js",
      "index": 156,
      "index2": 151,
      "size": 1944,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/dock-layout",
          "loc": "55:51-101"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dock_layout_common_1 = require(\"./dock-layout-common\");\n__export(require(\"./dock-layout-common\"));\ndock_layout_common_1.View.prototype[dock_layout_common_1.dockProperty.setNative] = function (value) {\n    var nativeView = this.nativeView;\n    var lp = nativeView.getLayoutParams() || new org.nativescript.widgets.CommonLayoutParams();\n    if (lp instanceof org.nativescript.widgets.CommonLayoutParams) {\n        switch (value) {\n            case \"left\":\n                lp.dock = org.nativescript.widgets.Dock.left;\n                break;\n            case \"top\":\n                lp.dock = org.nativescript.widgets.Dock.top;\n                break;\n            case \"right\":\n                lp.dock = org.nativescript.widgets.Dock.right;\n                break;\n            case \"bottom\":\n                lp.dock = org.nativescript.widgets.Dock.bottom;\n                break;\n            default:\n                throw new Error(\"Invalid value for dock property: \" + value);\n        }\n        nativeView.setLayoutParams(lp);\n    }\n};\nvar DockLayout = (function (_super) {\n    __extends(DockLayout, _super);\n    function DockLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DockLayout.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.DockLayout(this._context);\n    };\n    DockLayout.prototype[dock_layout_common_1.stretchLastChildProperty.getDefault] = function () {\n        return true;\n    };\n    DockLayout.prototype[dock_layout_common_1.stretchLastChildProperty.setNative] = function (value) {\n        this.nativeView.setStretchLastChild(value);\n    };\n    return DockLayout;\n}(dock_layout_common_1.DockLayoutBase));\nexports.DockLayout = DockLayout;\n//# sourceMappingURL=dock-layout.android.js.map"
    },
    {
      "id": 254,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
      "name": "./~/tns-core-modules/ui/layouts/flexbox-layout/flexbox-layout.android.js",
      "index": 183,
      "index2": 178,
      "size": 7258,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/flexbox-layout",
          "loc": "75:54-107"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flexbox_layout_common_1 = require(\"./flexbox-layout-common\");\n__export(require(\"./flexbox-layout-common\"));\nfunction makeNativeSetter(setter) {\n    return function (value) {\n        var nativeView = this.nativeView;\n        var lp = nativeView.getLayoutParams() || new org.nativescript.widgets.FlexboxLayout.LayoutParams();\n        if (lp instanceof org.nativescript.widgets.FlexboxLayout.LayoutParams) {\n            setter(lp, value);\n            nativeView.setLayoutParams(lp);\n        }\n    };\n}\nflexbox_layout_common_1.View.prototype[flexbox_layout_common_1.orderProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.order = value; });\nflexbox_layout_common_1.View.prototype[flexbox_layout_common_1.flexGrowProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.flexGrow = value; });\nflexbox_layout_common_1.View.prototype[flexbox_layout_common_1.flexShrinkProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.flexShrink = value; });\nflexbox_layout_common_1.View.prototype[flexbox_layout_common_1.flexWrapBeforeProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.wrapBefore = value; });\nflexbox_layout_common_1.View.prototype[flexbox_layout_common_1.alignSelfProperty.setNative] = makeNativeSetter(function (lp, value) { return lp.alignSelf = alignSelfMap[value]; });\nvar flexDirectionMap = (_a = {},\n    _a[flexbox_layout_common_1.FlexDirection.ROW] = 0,\n    _a[flexbox_layout_common_1.FlexDirection.ROW_REVERSE] = 1,\n    _a[flexbox_layout_common_1.FlexDirection.COLUMN] = 2,\n    _a[flexbox_layout_common_1.FlexDirection.COLUMN_REVERSE] = 3,\n    _a);\nvar flexWrapMap = (_b = {},\n    _b[flexbox_layout_common_1.FlexWrap.NOWRAP] = 0,\n    _b[flexbox_layout_common_1.FlexWrap.WRAP] = 1,\n    _b[flexbox_layout_common_1.FlexWrap.WRAP_REVERSE] = 2,\n    _b);\nvar justifyContentMap = (_c = {},\n    _c[flexbox_layout_common_1.JustifyContent.FLEX_START] = 0,\n    _c[flexbox_layout_common_1.JustifyContent.FLEX_END] = 1,\n    _c[flexbox_layout_common_1.JustifyContent.CENTER] = 2,\n    _c[flexbox_layout_common_1.JustifyContent.SPACE_BETWEEN] = 3,\n    _c[flexbox_layout_common_1.JustifyContent.SPACE_AROUND] = 4,\n    _c);\nvar alignItemsMap = (_d = {},\n    _d[flexbox_layout_common_1.AlignItems.FLEX_START] = 0,\n    _d[flexbox_layout_common_1.AlignItems.FLEX_END] = 1,\n    _d[flexbox_layout_common_1.AlignItems.CENTER] = 2,\n    _d[flexbox_layout_common_1.AlignItems.BASELINE] = 3,\n    _d[flexbox_layout_common_1.AlignItems.STRETCH] = 4,\n    _d);\nvar alignContentMap = (_e = {},\n    _e[flexbox_layout_common_1.AlignContent.FLEX_START] = 0,\n    _e[flexbox_layout_common_1.AlignContent.FLEX_END] = 1,\n    _e[flexbox_layout_common_1.AlignContent.CENTER] = 2,\n    _e[flexbox_layout_common_1.AlignContent.SPACE_BETWEEN] = 3,\n    _e[flexbox_layout_common_1.AlignContent.SPACE_AROUND] = 4,\n    _e[flexbox_layout_common_1.AlignContent.STRETCH] = 5,\n    _e);\nvar alignSelfMap = (_f = {},\n    _f[flexbox_layout_common_1.AlignSelf.AUTO] = -1,\n    _f[flexbox_layout_common_1.AlignSelf.FLEX_START] = 0,\n    _f[flexbox_layout_common_1.AlignSelf.FLEX_END] = 1,\n    _f[flexbox_layout_common_1.AlignSelf.CENTER] = 2,\n    _f[flexbox_layout_common_1.AlignSelf.BASELINE] = 3,\n    _f[flexbox_layout_common_1.AlignSelf.STRETCH] = 4,\n    _f);\nvar FlexboxLayout = (function (_super) {\n    __extends(FlexboxLayout, _super);\n    function FlexboxLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FlexboxLayout.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.FlexboxLayout(this._context);\n    };\n    FlexboxLayout.prototype.disposeNativeView = function () {\n        this.nativeView.invalidateOrdersCache();\n        _super.prototype.disposeNativeView.call(this);\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.flexDirectionProperty.getDefault] = function () {\n        return flexbox_layout_common_1.flexDirectionProperty.defaultValue;\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.flexDirectionProperty.setNative] = function (flexDirection) {\n        this.nativeView.setFlexDirection(flexDirectionMap[flexDirection]);\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.flexWrapProperty.getDefault] = function () {\n        return flexbox_layout_common_1.flexWrapProperty.defaultValue;\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.flexWrapProperty.setNative] = function (flexWrap) {\n        this.nativeView.setFlexWrap(flexWrapMap[flexWrap]);\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.justifyContentProperty.getDefault] = function () {\n        return flexbox_layout_common_1.justifyContentProperty.defaultValue;\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.justifyContentProperty.setNative] = function (justifyContent) {\n        this.nativeView.setJustifyContent(justifyContentMap[justifyContent]);\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.alignItemsProperty.getDefault] = function () {\n        return flexbox_layout_common_1.alignItemsProperty.defaultValue;\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.alignItemsProperty.setNative] = function (alignItems) {\n        this.nativeView.setAlignItems(alignItemsMap[alignItems]);\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.alignContentProperty.getDefault] = function () {\n        return flexbox_layout_common_1.alignContentProperty.defaultValue;\n    };\n    FlexboxLayout.prototype[flexbox_layout_common_1.alignContentProperty.setNative] = function (alignContent) {\n        this.nativeView.setAlignContent(alignContentMap[alignContent]);\n    };\n    FlexboxLayout.prototype._updateNativeLayoutParams = function (child) {\n        _super.prototype._updateNativeLayoutParams.call(this, child);\n        var lp = child.nativeView.getLayoutParams();\n        lp.order = child.order;\n        lp.flexGrow = child.flexGrow;\n        lp.flexShrink = child.flexShrink;\n        lp.wrapBefore = child.flexWrapBefore;\n        lp.alignSelf = alignSelfMap[child.alignSelf];\n        child.nativeView.setLayoutParams(lp);\n    };\n    FlexboxLayout.prototype._setChildMinWidthNative = function (child) {\n        child._setMinWidthNative(0);\n        var lp = child.nativeView.getLayoutParams();\n        if (lp instanceof org.nativescript.widgets.FlexboxLayout.LayoutParams) {\n            lp.minWidth = flexbox_layout_common_1.Length.toDevicePixels(child.minWidth, 0);\n            child.nativeView.setLayoutParams(lp);\n        }\n    };\n    FlexboxLayout.prototype._setChildMinHeightNative = function (child) {\n        child._setMinHeightNative(0);\n        var lp = child.nativeView.getLayoutParams();\n        if (lp instanceof org.nativescript.widgets.FlexboxLayout.LayoutParams) {\n            lp.minHeight = flexbox_layout_common_1.Length.toDevicePixels(child.minHeight, 0);\n            child.nativeView.setLayoutParams(lp);\n        }\n    };\n    return FlexboxLayout;\n}(flexbox_layout_common_1.FlexboxLayoutBase));\nexports.FlexboxLayout = FlexboxLayout;\nvar _a, _b, _c, _d, _e, _f;\n//# sourceMappingURL=flexbox-layout.android.js.map"
    },
    {
      "id": 255,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
      "name": "./~/tns-core-modules/ui/layouts/wrap-layout/wrap-layout.android.js",
      "index": 193,
      "index2": 188,
      "size": 1382,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/layouts/wrap-layout",
          "loc": "82:51-101"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wrap_layout_common_1 = require(\"./wrap-layout-common\");\n__export(require(\"./wrap-layout-common\"));\nvar WrapLayout = (function (_super) {\n    __extends(WrapLayout, _super);\n    function WrapLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WrapLayout.prototype.createNativeView = function () {\n        return new org.nativescript.widgets.WrapLayout(this._context);\n    };\n    WrapLayout.prototype[wrap_layout_common_1.orientationProperty.setNative] = function (value) {\n        this.nativeView.setOrientation(value === \"vertical\" ? org.nativescript.widgets.Orientation.vertical : org.nativescript.widgets.Orientation.horizontal);\n    };\n    WrapLayout.prototype[wrap_layout_common_1.itemWidthProperty.setNative] = function (value) {\n        this.nativeView.setItemWidth(wrap_layout_common_1.Length.toDevicePixels(value, -1));\n    };\n    WrapLayout.prototype[wrap_layout_common_1.itemHeightProperty.setNative] = function (value) {\n        this.nativeView.setItemHeight(wrap_layout_common_1.Length.toDevicePixels(value, -1));\n    };\n    return WrapLayout;\n}(wrap_layout_common_1.WrapLayoutBase));\nexports.WrapLayout = WrapLayout;\n//# sourceMappingURL=wrap-layout.android.js.map"
    },
    {
      "id": 256,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-picker/list-picker.android.js",
      "name": "./~/tns-core-modules/ui/list-picker/list-picker.android.js",
      "index": 164,
      "index2": 159,
      "size": 6267,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/list-picker",
          "loc": "62:51-93"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar list_picker_common_1 = require(\"./list-picker-common\");\n__export(require(\"./list-picker-common\"));\nvar Formatter;\nvar ValueChangeListener;\nfunction initializeNativeClasses() {\n    if (Formatter) {\n        return;\n    }\n    var FormatterImpl = (function (_super) {\n        __extends(FormatterImpl, _super);\n        function FormatterImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        FormatterImpl.prototype.format = function (index) {\n            return this.owner._getItemAsString(index);\n        };\n        return FormatterImpl;\n    }(java.lang.Object));\n    FormatterImpl = __decorate([\n        Interfaces([android.widget.NumberPicker.Formatter])\n    ], FormatterImpl);\n    var ValueChangeListenerImpl = (function (_super) {\n        __extends(ValueChangeListenerImpl, _super);\n        function ValueChangeListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        ValueChangeListenerImpl.prototype.onValueChange = function (picker, oldValue, newValue) {\n            list_picker_common_1.selectedIndexProperty.nativeValueChange(this.owner, newValue);\n        };\n        return ValueChangeListenerImpl;\n    }(java.lang.Object));\n    ValueChangeListenerImpl = __decorate([\n        Interfaces([android.widget.NumberPicker.OnValueChangeListener])\n    ], ValueChangeListenerImpl);\n    Formatter = FormatterImpl;\n    ValueChangeListener = ValueChangeListenerImpl;\n}\nfunction getEditText(picker) {\n    for (var i = 0, count = picker.getChildCount(); i < count; i++) {\n        var child = picker.getChildAt(i);\n        if (child instanceof android.widget.EditText) {\n            return child;\n        }\n    }\n    return null;\n}\nvar selectorWheelPaintField;\nfunction getSelectorWheelPaint(picker) {\n    if (!selectorWheelPaintField) {\n        selectorWheelPaintField = picker.getClass().getDeclaredField(\"mSelectorWheelPaint\");\n        selectorWheelPaintField.setAccessible(true);\n    }\n    return selectorWheelPaintField.get(picker);\n}\nvar ListPicker = (function (_super) {\n    __extends(ListPicker, _super);\n    function ListPicker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ListPicker.prototype.createNativeView = function () {\n        initializeNativeClasses();\n        var picker = new android.widget.NumberPicker(this._context);\n        picker.setDescendantFocusability(android.widget.NumberPicker.FOCUS_BLOCK_DESCENDANTS);\n        picker.setMinValue(0);\n        picker.setMaxValue(0);\n        picker.setValue(0);\n        var formatter = new Formatter(this);\n        picker.setFormatter(formatter);\n        picker.formatter = formatter;\n        var valueChangedListener = new ValueChangeListener(this);\n        picker.setOnValueChangedListener(valueChangedListener);\n        picker.valueChangedListener = valueChangedListener;\n        var editText = getEditText(picker);\n        if (editText) {\n            picker.editText = editText;\n        }\n        picker.setWrapSelectorWheel(false);\n        return picker;\n    };\n    ListPicker.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        this._selectorWheelPaint = getSelectorWheelPaint(nativeView);\n        nativeView.formatter.owner = this;\n        nativeView.valueChangedListener.owner = this;\n        var editText = nativeView.editText;\n        if (editText) {\n            editText.setFilters([]);\n            editText.setText(\" \", android.widget.TextView.BufferType.NORMAL);\n        }\n    };\n    ListPicker.prototype.disposeNativeView = function () {\n        var nativeView = this.nativeView;\n        nativeView.formatter.owner = null;\n        nativeView.valueChangedListener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    ListPicker.prototype._fixNumberPickerRendering = function () {\n        var nativeView = this.nativeView;\n        nativeView.setFormatter(null);\n        nativeView.setFormatter(nativeView.formatter);\n        var editText = nativeView.editText;\n        if (editText) {\n            editText.setFilters([]);\n            editText.invalidate();\n        }\n        nativeView.invalidate();\n    };\n    ListPicker.prototype[list_picker_common_1.selectedIndexProperty.getDefault] = function () {\n        return -1;\n    };\n    ListPicker.prototype[list_picker_common_1.selectedIndexProperty.setNative] = function (value) {\n        if (value >= 0) {\n            this.nativeView.setValue(value);\n        }\n    };\n    ListPicker.prototype[list_picker_common_1.itemsProperty.getDefault] = function () {\n        return null;\n    };\n    ListPicker.prototype[list_picker_common_1.itemsProperty.setNative] = function (value) {\n        var maxValue = value && value.length > 0 ? value.length - 1 : 0;\n        this.nativeView.setMaxValue(maxValue);\n        this._fixNumberPickerRendering();\n        list_picker_common_1.selectedIndexProperty.coerce(this);\n    };\n    ListPicker.prototype[list_picker_common_1.colorProperty.getDefault] = function () {\n        var editText = this.nativeView.editText;\n        return {\n            wheelColor: this._selectorWheelPaint.getColor(),\n            textColor: editText ? editText.getTextColors().getDefaultColor() : -1\n        };\n    };\n    ListPicker.prototype[list_picker_common_1.colorProperty.setNative] = function (value) {\n        var color;\n        var wheelColor;\n        if (value instanceof list_picker_common_1.Color) {\n            color = wheelColor = value.android;\n        }\n        else {\n            color = value.textColor;\n            wheelColor = value.wheelColor;\n        }\n        this._selectorWheelPaint.setColor(wheelColor);\n        var editText = this.nativeView.editText;\n        if (editText) {\n            editText.setTextColor(color);\n        }\n    };\n    return ListPicker;\n}(list_picker_common_1.ListPickerBase));\nexports.ListPicker = ListPicker;\n//# sourceMappingURL=list-picker.android.js.map"
    },
    {
      "id": 257,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/list-view/list-view.android.js",
      "name": "./~/tns-core-modules/ui/list-view/list-view.android.js",
      "index": 166,
      "index2": 164,
      "size": 11370,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/list-view",
          "loc": "63:49-89"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar list_view_common_1 = require(\"./list-view-common\");\nvar stack_layout_1 = require(\"../layouts/stack-layout\");\nvar proxy_view_container_1 = require(\"../proxy-view-container\");\nvar layout_base_1 = require(\"../layouts/layout-base\");\n__export(require(\"./list-view-common\"));\nvar ITEMLOADING = list_view_common_1.ListViewBase.itemLoadingEvent;\nvar LOADMOREITEMS = list_view_common_1.ListViewBase.loadMoreItemsEvent;\nvar ITEMTAP = list_view_common_1.ListViewBase.itemTapEvent;\nvar ItemClickListener;\nfunction initializeItemClickListener() {\n    if (ItemClickListener) {\n        return;\n    }\n    var ItemClickListenerImpl = (function (_super) {\n        __extends(ItemClickListenerImpl, _super);\n        function ItemClickListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        ItemClickListenerImpl.prototype.onItemClick = function (parent, convertView, index, id) {\n            var owner = this.owner;\n            var view = owner._realizedTemplates.get(owner._getItemTemplate(index).key).get(convertView);\n            owner.notify({ eventName: ITEMTAP, object: owner, index: index, view: view });\n        };\n        return ItemClickListenerImpl;\n    }(java.lang.Object));\n    ItemClickListenerImpl = __decorate([\n        Interfaces([android.widget.AdapterView.OnItemClickListener])\n    ], ItemClickListenerImpl);\n    ItemClickListener = ItemClickListenerImpl;\n}\nvar ListView = (function (_super) {\n    __extends(ListView, _super);\n    function ListView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._androidViewId = -1;\n        _this._realizedItems = new Map();\n        _this._realizedTemplates = new Map();\n        return _this;\n    }\n    ListView.prototype.createNativeView = function () {\n        initializeItemClickListener();\n        var listView = new android.widget.ListView(this._context);\n        listView.setDescendantFocusability(android.view.ViewGroup.FOCUS_AFTER_DESCENDANTS);\n        this.updateEffectiveRowHeight();\n        listView.setCacheColorHint(android.graphics.Color.TRANSPARENT);\n        ensureListViewAdapterClass();\n        var adapter = new ListViewAdapterClass(this);\n        listView.setAdapter(adapter);\n        listView.adapter = adapter;\n        var itemClickListener = new ItemClickListener(this);\n        listView.setOnItemClickListener(itemClickListener);\n        listView.itemClickListener = itemClickListener;\n        return listView;\n    };\n    ListView.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.itemClickListener.owner = this;\n        var adapter = nativeView.adapter;\n        adapter.owner = this;\n        nativeView.setAdapter(adapter);\n        if (this._androidViewId < 0) {\n            this._androidViewId = android.view.View.generateViewId();\n        }\n        nativeView.setId(this._androidViewId);\n    };\n    ListView.prototype.disposeNativeView = function () {\n        var nativeView = this.nativeView;\n        nativeView.setAdapter(null);\n        nativeView.itemClickListener.owner = null;\n        nativeView.adapter.owner = null;\n        this.clearRealizedCells();\n        _super.prototype.disposeNativeView.call(this);\n    };\n    ListView.prototype.refresh = function () {\n        var nativeView = this.nativeView;\n        if (!nativeView || !nativeView.getAdapter()) {\n            return;\n        }\n        this._realizedItems.forEach(function (view, nativeView) {\n            if (!(view.bindingContext instanceof list_view_common_1.Observable)) {\n                view.bindingContext = null;\n            }\n        });\n        nativeView.getAdapter().notifyDataSetChanged();\n    };\n    ListView.prototype.scrollToIndex = function (index) {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            nativeView.setSelection(index);\n        }\n    };\n    Object.defineProperty(ListView.prototype, \"_childrenCount\", {\n        get: function () {\n            return this._realizedItems.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ListView.prototype.eachChildView = function (callback) {\n        this._realizedItems.forEach(function (view, nativeView) {\n            if (view.parent instanceof ListView) {\n                callback(view);\n            }\n            else {\n                if (view.parent) {\n                    callback(view.parent);\n                }\n            }\n        });\n    };\n    ListView.prototype._dumpRealizedTemplates = function () {\n        console.log(\"Realized Templates:\");\n        this._realizedTemplates.forEach(function (value, index) {\n            console.log(\"\\t\" + index + \":\");\n            value.forEach(function (value, index) {\n                console.log(\"\\t\\t\" + index.hashCode() + \": \" + value);\n            });\n        });\n        console.log(\"Realized Items Size: \" + this._realizedItems.size);\n    };\n    ListView.prototype.clearRealizedCells = function () {\n        var _this = this;\n        this._realizedItems.forEach(function (view, nativeView) {\n            if (view.parent) {\n                if (!(view.parent instanceof ListView)) {\n                    _this._removeView(view.parent);\n                }\n                view.parent._removeView(view);\n            }\n        });\n        this._realizedItems.clear();\n        this._realizedTemplates.clear();\n    };\n    ListView.prototype[list_view_common_1.separatorColorProperty.getDefault] = function () {\n        var nativeView = this.nativeView;\n        return {\n            dividerHeight: nativeView.getDividerHeight(),\n            divider: nativeView.getDivider()\n        };\n    };\n    ListView.prototype[list_view_common_1.separatorColorProperty.setNative] = function (value) {\n        var nativeView = this.nativeView;\n        if (value instanceof list_view_common_1.Color) {\n            nativeView.setDivider(new android.graphics.drawable.ColorDrawable(value.android));\n            nativeView.setDividerHeight(1);\n        }\n        else {\n            nativeView.setDivider(value.divider);\n            nativeView.setDividerHeight(value.dividerHeight);\n        }\n    };\n    ListView.prototype[list_view_common_1.itemTemplatesProperty.getDefault] = function () {\n        return null;\n    };\n    ListView.prototype[list_view_common_1.itemTemplatesProperty.setNative] = function (value) {\n        this._itemTemplatesInternal = new Array(this._defaultTemplate);\n        if (value) {\n            this._itemTemplatesInternal = this._itemTemplatesInternal.concat(value);\n        }\n        this.nativeView.setAdapter(new ListViewAdapterClass(this));\n        this.refresh();\n    };\n    return ListView;\n}(list_view_common_1.ListViewBase));\nexports.ListView = ListView;\nvar ListViewAdapterClass;\nfunction ensureListViewAdapterClass() {\n    if (ListViewAdapterClass) {\n        return;\n    }\n    var ListViewAdapter = (function (_super) {\n        __extends(ListViewAdapter, _super);\n        function ListViewAdapter(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        ListViewAdapter.prototype.getCount = function () {\n            return this.owner && this.owner.items && this.owner.items.length ? this.owner.items.length : 0;\n        };\n        ListViewAdapter.prototype.getItem = function (i) {\n            if (this.owner && this.owner.items && i < this.owner.items.length) {\n                var getItem = this.owner.items.getItem;\n                return getItem ? getItem(i) : this.owner.items[i];\n            }\n            return null;\n        };\n        ListViewAdapter.prototype.getItemId = function (i) {\n            return long(i);\n        };\n        ListViewAdapter.prototype.hasStableIds = function () {\n            return true;\n        };\n        ListViewAdapter.prototype.getViewTypeCount = function () {\n            return this.owner._itemTemplatesInternal.length;\n        };\n        ListViewAdapter.prototype.getItemViewType = function (index) {\n            var template = this.owner._getItemTemplate(index);\n            var itemViewType = this.owner._itemTemplatesInternal.indexOf(template);\n            return itemViewType;\n        };\n        ListViewAdapter.prototype.getView = function (index, convertView, parent) {\n            if (!this.owner) {\n                return null;\n            }\n            var totalItemCount = this.owner.items ? this.owner.items.length : 0;\n            if (index === (totalItemCount - 1)) {\n                this.owner.notify({ eventName: LOADMOREITEMS, object: this.owner });\n            }\n            var template = this.owner._getItemTemplate(index);\n            var view;\n            if (convertView) {\n                view = this.owner._realizedTemplates.get(template.key).get(convertView);\n                if (!view) {\n                    throw new Error(\"There is no entry with key '\" + convertView + \"' in the realized views cache for template with key'\" + template.key + \"'.\");\n                }\n            }\n            else {\n                view = template.createView();\n            }\n            var args = {\n                eventName: ITEMLOADING, object: this.owner, index: index, view: view,\n                android: parent,\n                ios: undefined\n            };\n            this.owner.notify(args);\n            if (!args.view) {\n                args.view = this.owner._getDefaultItemContent(index);\n            }\n            if (args.view) {\n                if (this.owner._effectiveRowHeight > -1) {\n                    args.view.height = this.owner.rowHeight;\n                }\n                else {\n                    args.view.height = list_view_common_1.unsetValue;\n                }\n                this.owner._prepareItem(args.view, index);\n                if (!args.view.parent) {\n                    if (args.view instanceof layout_base_1.LayoutBase &&\n                        !(args.view instanceof proxy_view_container_1.ProxyViewContainer)) {\n                        this.owner._addView(args.view);\n                        convertView = args.view.nativeView;\n                    }\n                    else {\n                        var sp = new stack_layout_1.StackLayout();\n                        sp.addChild(args.view);\n                        this.owner._addView(sp);\n                        convertView = sp.nativeView;\n                    }\n                }\n                var realizedItemsForTemplateKey = this.owner._realizedTemplates.get(template.key);\n                if (!realizedItemsForTemplateKey) {\n                    realizedItemsForTemplateKey = new Map();\n                    this.owner._realizedTemplates.set(template.key, realizedItemsForTemplateKey);\n                }\n                realizedItemsForTemplateKey.set(convertView, args.view);\n                this.owner._realizedItems.set(convertView, args.view);\n            }\n            return convertView;\n        };\n        return ListViewAdapter;\n    }(android.widget.BaseAdapter));\n    ListViewAdapterClass = ListViewAdapter;\n}\n//# sourceMappingURL=list-view.android.js.map"
    },
    {
      "id": 258,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/progress/progress.android.js",
      "name": "./~/tns-core-modules/ui/progress/progress.android.js",
      "index": 172,
      "index2": 167,
      "size": 2997,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/progress",
          "loc": "66:49-88"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar progress_common_1 = require(\"./progress-common\");\n__export(require(\"./progress-common\"));\nvar R_ATTR_PROGRESS_BAR_STYLE_HORIZONTAL = 0x01010078;\nvar Progress = (function (_super) {\n    __extends(Progress, _super);\n    function Progress() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Progress.prototype.createNativeView = function () {\n        return new android.widget.ProgressBar(this._context, null, R_ATTR_PROGRESS_BAR_STYLE_HORIZONTAL);\n    };\n    Progress.prototype[progress_common_1.valueProperty.getDefault] = function () {\n        return 0;\n    };\n    Progress.prototype[progress_common_1.valueProperty.setNative] = function (value) {\n        this.nativeView.setProgress(value);\n    };\n    Progress.prototype[progress_common_1.maxValueProperty.getDefault] = function () {\n        return 100;\n    };\n    Progress.prototype[progress_common_1.maxValueProperty.setNative] = function (value) {\n        this.nativeView.setMax(value);\n    };\n    Progress.prototype[progress_common_1.colorProperty.getDefault] = function () {\n        return null;\n    };\n    Progress.prototype[progress_common_1.colorProperty.setNative] = function (value) {\n        var progressDrawable = this.nativeView.getProgressDrawable();\n        if (!progressDrawable) {\n            return;\n        }\n        if (value instanceof progress_common_1.Color) {\n            progressDrawable.setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n        }\n        else {\n            progressDrawable.clearColorFilter();\n        }\n    };\n    Progress.prototype[progress_common_1.backgroundColorProperty.getDefault] = function () {\n        return null;\n    };\n    Progress.prototype[progress_common_1.backgroundColorProperty.setNative] = function (value) {\n        var progressDrawable = this.nativeView.getProgressDrawable();\n        if (!progressDrawable) {\n            return;\n        }\n        if (progressDrawable instanceof android.graphics.drawable.LayerDrawable && progressDrawable.getNumberOfLayers() > 0) {\n            var backgroundDrawable = progressDrawable.getDrawable(0);\n            if (backgroundDrawable) {\n                if (value instanceof progress_common_1.Color) {\n                    backgroundDrawable.setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n                }\n                else {\n                    backgroundDrawable.clearColorFilter();\n                }\n            }\n        }\n    };\n    Progress.prototype[progress_common_1.backgroundInternalProperty.getDefault] = function () {\n        return null;\n    };\n    Progress.prototype[progress_common_1.backgroundInternalProperty.setNative] = function (value) {\n    };\n    return Progress;\n}(progress_common_1.ProgressBase));\nexports.Progress = Progress;\n//# sourceMappingURL=progress.android.js.map"
    },
    {
      "id": 259,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/repeater/repeater.js",
      "name": "./~/tns-core-modules/ui/repeater/repeater.js",
      "index": 174,
      "index2": 168,
      "size": 5320,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/repeater",
          "loc": "68:49-88"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar label_1 = require(\"../label\");\nvar layout_base_1 = require(\"../layouts/layout-base\");\nvar stack_layout_1 = require(\"../layouts/stack-layout\");\nvar observable_array_1 = require(\"../../data/observable-array\");\nvar weak_event_listener_1 = require(\"../core/weak-event-listener\");\nvar builder_1 = require(\"../builder\");\n__export(require(\"../layouts/layout-base\"));\nvar knownTemplates;\n(function (knownTemplates) {\n    knownTemplates.itemTemplate = \"itemTemplate\";\n})(knownTemplates = exports.knownTemplates || (exports.knownTemplates = {}));\nvar Repeater = (function (_super) {\n    __extends(Repeater, _super);\n    function Repeater() {\n        var _this = _super.call(this) || this;\n        _this._isDirty = false;\n        _this.itemsLayout = new stack_layout_1.StackLayout();\n        return _this;\n    }\n    Repeater.prototype.onLoaded = function () {\n        if (this._isDirty) {\n            this.refresh();\n        }\n        _super.prototype.onLoaded.call(this);\n    };\n    Repeater.prototype._requestRefresh = function () {\n        this._isDirty = true;\n        if (this.isLoaded) {\n            this.refresh();\n        }\n    };\n    Repeater.prototype.refresh = function () {\n        if (this.itemsLayout) {\n            this.itemsLayout.removeChildren();\n        }\n        if (!this.items) {\n            return;\n        }\n        var length = this.items.length;\n        for (var i = 0; i < length; i++) {\n            var viewToAdd = this.itemTemplate ? builder_1.parse(this.itemTemplate, this) : this._getDefaultItemContent(i);\n            var dataItem = this._getDataItem(i);\n            viewToAdd.bindingContext = dataItem;\n            this.itemsLayout.addChild(viewToAdd);\n        }\n        this._isDirty = false;\n    };\n    Repeater.prototype._onItemsChanged = function (data) {\n        this._requestRefresh();\n    };\n    Repeater.prototype._getDefaultItemContent = function (index) {\n        var lbl = new label_1.Label();\n        lbl.bind({\n            targetProperty: \"text\",\n            sourceProperty: \"$value\"\n        });\n        return lbl;\n    };\n    Repeater.prototype._getDataItem = function (index) {\n        var items = this.items;\n        return items.getItem ? items.getItem(index) : this.items[index];\n    };\n    Object.defineProperty(Repeater.prototype, \"_childrenCount\", {\n        get: function () {\n            var count = 0;\n            if (this.itemsLayout) {\n                count++;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Repeater.prototype.eachChildView = function (callback) {\n        if (this.itemsLayout) {\n            callback(this.itemsLayout);\n        }\n    };\n    Repeater.prototype.onLayout = function (left, top, right, bottom) {\n        layout_base_1.View.layoutChild(this, this.itemsLayout, 0, 0, right - left, bottom - top);\n    };\n    Repeater.prototype.onMeasure = function (widthMeasureSpec, heightMeasureSpec) {\n        var result = layout_base_1.View.measureChild(this, this.itemsLayout, widthMeasureSpec, heightMeasureSpec);\n        var width = layout_base_1.layout.getMeasureSpecSize(widthMeasureSpec);\n        var widthMode = layout_base_1.layout.getMeasureSpecMode(widthMeasureSpec);\n        var height = layout_base_1.layout.getMeasureSpecSize(heightMeasureSpec);\n        var heightMode = layout_base_1.layout.getMeasureSpecMode(heightMeasureSpec);\n        var widthAndState = layout_base_1.View.resolveSizeAndState(result.measuredWidth, width, widthMode, 0);\n        var heightAndState = layout_base_1.View.resolveSizeAndState(result.measuredHeight, height, heightMode, 0);\n        this.setMeasuredDimension(widthAndState, heightAndState);\n    };\n    return Repeater;\n}(layout_base_1.CustomLayoutView));\nexports.Repeater = Repeater;\nexports.itemTemplateProperty = new layout_base_1.Property({\n    name: \"itemTemplate\", affectsLayout: true, valueChanged: function (target) {\n        target._requestRefresh();\n    }\n});\nexports.itemTemplateProperty.register(Repeater);\nexports.itemsProperty = new layout_base_1.Property({\n    name: \"items\", affectsLayout: true, valueChanged: function (target, oldValue, newValue) {\n        if (oldValue instanceof observable_array_1.ObservableArray) {\n            weak_event_listener_1.removeWeakEventListener(oldValue, observable_array_1.ObservableArray.changeEvent, target._onItemsChanged, target);\n        }\n        if (newValue instanceof observable_array_1.ObservableArray) {\n            weak_event_listener_1.addWeakEventListener(newValue, observable_array_1.ObservableArray.changeEvent, target._onItemsChanged, target);\n        }\n        target._requestRefresh();\n    }\n});\nexports.itemsProperty.register(Repeater);\nexports.itemsLayoutProperty = new layout_base_1.Property({\n    name: \"itemsLayout\", affectsLayout: true, valueChanged: function (target, oldValue, newValue) {\n        if (oldValue) {\n            target._removeView(oldValue);\n            oldValue.removeChildren();\n        }\n        if (newValue) {\n            target._addView(newValue);\n        }\n        target._requestRefresh();\n    }\n});\nexports.itemsLayoutProperty.register(Repeater);\n//# sourceMappingURL=repeater.js.map"
    },
    {
      "id": 260,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/scroll-view/scroll-view.android.js",
      "name": "./~/tns-core-modules/ui/scroll-view/scroll-view.android.js",
      "index": 175,
      "index2": 170,
      "size": 5365,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/scroll-view",
          "loc": "69:51-93"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scroll_view_common_1 = require(\"./scroll-view-common\");\n__export(require(\"./scroll-view-common\"));\nvar ScrollView = (function (_super) {\n    __extends(ScrollView, _super);\n    function ScrollView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._androidViewId = -1;\n        _this._lastScrollX = -1;\n        _this._lastScrollY = -1;\n        return _this;\n    }\n    Object.defineProperty(ScrollView.prototype, \"horizontalOffset\", {\n        get: function () {\n            var nativeView = this.nativeView;\n            if (!nativeView) {\n                return 0;\n            }\n            return nativeView.getScrollX() / scroll_view_common_1.layout.getDisplayDensity();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScrollView.prototype, \"verticalOffset\", {\n        get: function () {\n            var nativeView = this.nativeView;\n            if (!nativeView) {\n                return 0;\n            }\n            return nativeView.getScrollY() / scroll_view_common_1.layout.getDisplayDensity();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScrollView.prototype, \"scrollableWidth\", {\n        get: function () {\n            var nativeView = this.nativeView;\n            if (!nativeView || this.orientation !== \"horizontal\") {\n                return 0;\n            }\n            return nativeView.getScrollableLength() / scroll_view_common_1.layout.getDisplayDensity();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScrollView.prototype, \"scrollableHeight\", {\n        get: function () {\n            var nativeView = this.nativeView;\n            if (!nativeView || this.orientation !== \"vertical\") {\n                return 0;\n            }\n            return nativeView.getScrollableLength() / scroll_view_common_1.layout.getDisplayDensity();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScrollView.prototype.scrollToVerticalOffset = function (value, animated) {\n        var nativeView = this.nativeView;\n        if (nativeView && this.orientation === \"vertical\") {\n            value *= scroll_view_common_1.layout.getDisplayDensity();\n            if (animated) {\n                nativeView.smoothScrollTo(0, value);\n            }\n            else {\n                nativeView.scrollTo(0, value);\n            }\n        }\n    };\n    ScrollView.prototype.scrollToHorizontalOffset = function (value, animated) {\n        var nativeView = this.nativeView;\n        if (nativeView && this.orientation === \"horizontal\") {\n            value *= scroll_view_common_1.layout.getDisplayDensity();\n            if (animated) {\n                nativeView.smoothScrollTo(value, 0);\n            }\n            else {\n                nativeView.scrollTo(value, 0);\n            }\n        }\n    };\n    ScrollView.prototype.createNativeView = function () {\n        var nativeView = this.orientation === \"horizontal\" ? new org.nativescript.widgets.HorizontalScrollView(this._context) : new org.nativescript.widgets.VerticalScrollView(this._context);\n        if (this._androidViewId < 0) {\n            this._androidViewId = android.view.View.generateViewId();\n        }\n        nativeView.setId(this._androidViewId);\n        return nativeView;\n    };\n    ScrollView.prototype._onOrientationChanged = function () {\n        if (this.nativeView) {\n            var parent_1 = this.parent;\n            if (parent_1) {\n                parent_1._removeView(this);\n                parent_1._addView(this);\n            }\n        }\n    };\n    ScrollView.prototype.attachNative = function () {\n        var that = new WeakRef(this);\n        this.handler = new android.view.ViewTreeObserver.OnScrollChangedListener({\n            onScrollChanged: function () {\n                var owner = that.get();\n                if (owner) {\n                    owner._onScrollChanged();\n                }\n            }\n        });\n        this.nativeView.getViewTreeObserver().addOnScrollChangedListener(this.handler);\n    };\n    ScrollView.prototype._onScrollChanged = function () {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            var newScrollX = nativeView.getScrollX();\n            var newScrollY = nativeView.getScrollY();\n            if (newScrollX !== this._lastScrollX || newScrollY !== this._lastScrollY) {\n                this.notify({\n                    object: this,\n                    eventName: ScrollView.scrollEvent,\n                    scrollX: newScrollX / scroll_view_common_1.layout.getDisplayDensity(),\n                    scrollY: newScrollY / scroll_view_common_1.layout.getDisplayDensity()\n                });\n                this._lastScrollX = newScrollX;\n                this._lastScrollY = newScrollY;\n            }\n        }\n    };\n    ScrollView.prototype.dettachNative = function () {\n        this.nativeView.getViewTreeObserver().removeOnScrollChangedListener(this.handler);\n        this.handler = null;\n    };\n    return ScrollView;\n}(scroll_view_common_1.ScrollViewBase));\nexports.ScrollView = ScrollView;\n//# sourceMappingURL=scroll-view.android.js.map"
    },
    {
      "id": 261,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/search-bar/search-bar.android.js",
      "name": "./~/tns-core-modules/ui/search-bar/search-bar.android.js",
      "index": 177,
      "index2": 172,
      "size": 8500,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/search-bar",
          "loc": "70:50-91"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar font_1 = require(\"../styling/font\");\nvar search_bar_common_1 = require(\"./search-bar-common\");\nvar utils_1 = require(\"../../utils/utils\");\n__export(require(\"./search-bar-common\"));\nvar SEARCHTEXT = Symbol(\"searchText\");\nvar QUERY = Symbol(\"query\");\nvar QueryTextListener;\nvar CloseListener;\nfunction initializeNativeClasses() {\n    if (QueryTextListener) {\n        return;\n    }\n    var QueryTextListenerImpl = (function (_super) {\n        __extends(QueryTextListenerImpl, _super);\n        function QueryTextListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        QueryTextListenerImpl.prototype.onQueryTextChange = function (newText) {\n            var owner = this.owner;\n            search_bar_common_1.textProperty.nativeValueChange(owner, newText);\n            if (newText === \"\" && this[SEARCHTEXT] !== newText) {\n                owner._emit(search_bar_common_1.SearchBarBase.clearEvent);\n            }\n            this[SEARCHTEXT] = newText;\n            return true;\n        };\n        QueryTextListenerImpl.prototype.onQueryTextSubmit = function (query) {\n            var owner = this.owner;\n            if (query !== \"\" && this[QUERY] !== query) {\n                owner._emit(search_bar_common_1.SearchBarBase.submitEvent);\n            }\n            this[QUERY] = query;\n            return true;\n        };\n        return QueryTextListenerImpl;\n    }(java.lang.Object));\n    QueryTextListenerImpl = __decorate([\n        Interfaces([android.widget.SearchView.OnQueryTextListener])\n    ], QueryTextListenerImpl);\n    var CloseListenerImpl = (function (_super) {\n        __extends(CloseListenerImpl, _super);\n        function CloseListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        CloseListenerImpl.prototype.onClose = function () {\n            this.owner._emit(search_bar_common_1.SearchBarBase.clearEvent);\n            return true;\n        };\n        return CloseListenerImpl;\n    }(java.lang.Object));\n    CloseListenerImpl = __decorate([\n        Interfaces([android.widget.SearchView.OnCloseListener])\n    ], CloseListenerImpl);\n    QueryTextListener = QueryTextListenerImpl;\n    CloseListener = CloseListenerImpl;\n}\nvar SearchBar = (function (_super) {\n    __extends(SearchBar, _super);\n    function SearchBar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SearchBar.prototype.dismissSoftInput = function () {\n        utils_1.ad.dismissSoftInput(this.nativeView);\n    };\n    SearchBar.prototype.focus = function () {\n        var result = _super.prototype.focus.call(this);\n        if (result) {\n            utils_1.ad.showSoftInput(this.nativeView);\n        }\n        return result;\n    };\n    SearchBar.prototype.createNativeView = function () {\n        initializeNativeClasses();\n        var nativeView = new android.widget.SearchView(this._context);\n        nativeView.setIconified(false);\n        var queryTextListener = new QueryTextListener(this);\n        nativeView.setOnQueryTextListener(queryTextListener);\n        nativeView.queryTextListener = queryTextListener;\n        var closeListener = new CloseListener(this);\n        nativeView.setOnCloseListener(closeListener);\n        nativeView.closeListener = closeListener;\n        return nativeView;\n    };\n    SearchBar.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.closeListener.owner = this;\n        nativeView.queryTextListener.owner = this;\n    };\n    SearchBar.prototype.disposeNativeView = function () {\n        var nativeView = this.nativeView;\n        nativeView.closeListener.owner = null;\n        nativeView.queryTextListener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    SearchBar.prototype[search_bar_common_1.backgroundColorProperty.getDefault] = function () {\n        var result = this.nativeView.getDrawingCacheBackgroundColor();\n        return result;\n    };\n    SearchBar.prototype[search_bar_common_1.backgroundColorProperty.setNative] = function (value) {\n        var color;\n        if (typeof value === \"number\") {\n            color = value;\n        }\n        else {\n            color = value.android;\n        }\n        this.nativeView.setBackgroundColor(color);\n        var searchPlate = this._getSearchPlate();\n        searchPlate.setBackgroundColor(color);\n    };\n    SearchBar.prototype[search_bar_common_1.colorProperty.getDefault] = function () {\n        var textView = this._getTextView();\n        return textView.getCurrentTextColor();\n    };\n    SearchBar.prototype[search_bar_common_1.colorProperty.setNative] = function (value) {\n        var color = (typeof value === \"number\") ? value : value.android;\n        var textView = this._getTextView();\n        textView.setTextColor(color);\n    };\n    SearchBar.prototype[search_bar_common_1.fontSizeProperty.getDefault] = function () {\n        return { nativeSize: this._getTextView().getTextSize() };\n    };\n    SearchBar.prototype[search_bar_common_1.fontSizeProperty.setNative] = function (value) {\n        if (typeof value === \"number\") {\n            this._getTextView().setTextSize(value);\n        }\n        else {\n            this._getTextView().setTextSize(android.util.TypedValue.COMPLEX_UNIT_PX, value.nativeSize);\n        }\n    };\n    SearchBar.prototype[search_bar_common_1.fontInternalProperty.getDefault] = function () {\n        return this._getTextView().getTypeface();\n    };\n    SearchBar.prototype[search_bar_common_1.fontInternalProperty.setNative] = function (value) {\n        this._getTextView().setTypeface(value instanceof font_1.Font ? value.getAndroidTypeface() : value);\n    };\n    SearchBar.prototype[search_bar_common_1.backgroundInternalProperty.getDefault] = function () {\n        return null;\n    };\n    SearchBar.prototype[search_bar_common_1.backgroundInternalProperty.setNative] = function (value) {\n    };\n    SearchBar.prototype[search_bar_common_1.textProperty.getDefault] = function () {\n        return \"\";\n    };\n    SearchBar.prototype[search_bar_common_1.textProperty.setNative] = function (value) {\n        var text = (value === null || value === undefined) ? '' : value.toString();\n        this.nativeView.setQuery(text, false);\n    };\n    SearchBar.prototype[search_bar_common_1.hintProperty.getDefault] = function () {\n        return \"\";\n    };\n    SearchBar.prototype[search_bar_common_1.hintProperty.setNative] = function (value) {\n        var text = (value === null || value === undefined) ? '' : value.toString();\n        this.nativeView.setQueryHint(text);\n    };\n    SearchBar.prototype[search_bar_common_1.textFieldBackgroundColorProperty.getDefault] = function () {\n        var textView = this._getTextView();\n        return textView.getCurrentTextColor();\n    };\n    SearchBar.prototype[search_bar_common_1.textFieldBackgroundColorProperty.setNative] = function (value) {\n        var textView = this._getTextView();\n        var color = value instanceof search_bar_common_1.Color ? value.android : value;\n        textView.setBackgroundColor(color);\n    };\n    SearchBar.prototype[search_bar_common_1.textFieldHintColorProperty.getDefault] = function () {\n        var textView = this._getTextView();\n        return textView.getCurrentTextColor();\n    };\n    SearchBar.prototype[search_bar_common_1.textFieldHintColorProperty.setNative] = function (value) {\n        var textView = this._getTextView();\n        var color = value instanceof search_bar_common_1.Color ? value.android : value;\n        textView.setHintTextColor(color);\n    };\n    SearchBar.prototype._getTextView = function () {\n        var id = this.nativeView.getContext().getResources().getIdentifier(\"android:id/search_src_text\", null, null);\n        return this.nativeView.findViewById(id);\n    };\n    SearchBar.prototype._getSearchPlate = function () {\n        var id = this.nativeView.getContext().getResources().getIdentifier(\"android:id/search_plate\", null, null);\n        return this.nativeView.findViewById(id);\n    };\n    return SearchBar;\n}(search_bar_common_1.SearchBarBase));\nexports.SearchBar = SearchBar;\n//# sourceMappingURL=search-bar.android.js.map"
    },
    {
      "id": 262,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/slider/slider.android.js",
      "name": "./~/tns-core-modules/ui/slider/slider.android.js",
      "index": 181,
      "index2": 176,
      "size": 4902,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/slider",
          "loc": "73:47-84"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar slider_common_1 = require(\"./slider-common\");\n__export(require(\"./slider-common\"));\nvar SeekBarChangeListener;\nfunction initializeSeekBarChangeListener() {\n    if (SeekBarChangeListener) {\n        return;\n    }\n    var SeekBarChangeListenerImpl = (function (_super) {\n        __extends(SeekBarChangeListenerImpl, _super);\n        function SeekBarChangeListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        SeekBarChangeListenerImpl.prototype.onProgressChanged = function (seekBar, progress, fromUser) {\n            var owner = this.owner;\n            if (!owner._supressNativeValue) {\n                var newValue = seekBar.getProgress() + owner.minValue;\n                slider_common_1.valueProperty.nativeValueChange(owner, newValue);\n            }\n        };\n        SeekBarChangeListenerImpl.prototype.onStartTrackingTouch = function (seekBar) {\n        };\n        SeekBarChangeListenerImpl.prototype.onStopTrackingTouch = function (seekBar) {\n        };\n        return SeekBarChangeListenerImpl;\n    }(java.lang.Object));\n    SeekBarChangeListenerImpl = __decorate([\n        Interfaces([android.widget.SeekBar.OnSeekBarChangeListener])\n    ], SeekBarChangeListenerImpl);\n    SeekBarChangeListener = SeekBarChangeListenerImpl;\n}\nvar Slider = (function (_super) {\n    __extends(Slider, _super);\n    function Slider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Slider.prototype.createNativeView = function () {\n        initializeSeekBarChangeListener();\n        var listener = new SeekBarChangeListener(this);\n        var nativeView = new android.widget.SeekBar(this._context);\n        nativeView.setOnSeekBarChangeListener(listener);\n        nativeView.listener = listener;\n        return nativeView;\n    };\n    Slider.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = this;\n    };\n    Slider.prototype.disposeNativeView = function () {\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    Slider.prototype.setNativeValuesSilently = function (newValue, newMaxValue) {\n        this._supressNativeValue = true;\n        var nativeView = this.nativeView;\n        try {\n            nativeView.setMax(newMaxValue);\n            nativeView.setProgress(newValue);\n        }\n        finally {\n            this._supressNativeValue = false;\n        }\n    };\n    Slider.prototype[slider_common_1.valueProperty.getDefault] = function () {\n        return 0;\n    };\n    Slider.prototype[slider_common_1.valueProperty.setNative] = function (value) {\n        this.setNativeValuesSilently(value - this.minValue, this.maxValue - this.minValue);\n    };\n    Slider.prototype[slider_common_1.minValueProperty.getDefault] = function () {\n        return 0;\n    };\n    Slider.prototype[slider_common_1.minValueProperty.setNative] = function (value) {\n        this.setNativeValuesSilently(this.value - value, this.maxValue - value);\n    };\n    Slider.prototype[slider_common_1.maxValueProperty.getDefault] = function () {\n        return 100;\n    };\n    Slider.prototype[slider_common_1.maxValueProperty.setNative] = function (value) {\n        this.nativeView.setMax(value - this.minValue);\n    };\n    Slider.prototype[slider_common_1.colorProperty.getDefault] = function () {\n        return -1;\n    };\n    Slider.prototype[slider_common_1.colorProperty.setNative] = function (value) {\n        if (value instanceof slider_common_1.Color) {\n            this.nativeView.getThumb().setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n        }\n        else {\n            this.nativeView.getThumb().clearColorFilter();\n        }\n    };\n    Slider.prototype[slider_common_1.backgroundColorProperty.getDefault] = function () {\n        return -1;\n    };\n    Slider.prototype[slider_common_1.backgroundColorProperty.setNative] = function (value) {\n        if (value instanceof slider_common_1.Color) {\n            this.nativeView.getProgressDrawable().setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n        }\n        else {\n            this.nativeView.getProgressDrawable().clearColorFilter();\n        }\n    };\n    Slider.prototype[slider_common_1.backgroundInternalProperty.getDefault] = function () {\n        return null;\n    };\n    Slider.prototype[slider_common_1.backgroundInternalProperty.setNative] = function (value) {\n    };\n    return Slider;\n}(slider_common_1.SliderBase));\nexports.Slider = Slider;\n//# sourceMappingURL=slider.android.js.map"
    },
    {
      "id": 263,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background-common.js",
      "name": "./~/tns-core-modules/ui/styling/background-common.js",
      "index": 20,
      "index2": 13,
      "size": 14174,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
      "issuerId": 157,
      "issuerName": "./~/tns-core-modules/ui/styling/background.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 157,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/background.android.js",
          "module": "./~/tns-core-modules/ui/styling/background.android.js",
          "moduleName": "./~/tns-core-modules/ui/styling/background.android.js",
          "type": "cjs require",
          "userRequest": "./background-common",
          "loc": "8:9-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../../color\");\nvar css_value_1 = require(\"../../css-value\");\nvar Background = (function () {\n    function Background() {\n        this.borderTopWidth = 0;\n        this.borderRightWidth = 0;\n        this.borderBottomWidth = 0;\n        this.borderLeftWidth = 0;\n        this.borderTopLeftRadius = 0;\n        this.borderTopRightRadius = 0;\n        this.borderBottomLeftRadius = 0;\n        this.borderBottomRightRadius = 0;\n    }\n    Background.prototype.clone = function () {\n        var clone = new Background();\n        clone.color = this.color;\n        clone.image = this.image;\n        clone.repeat = this.repeat;\n        clone.position = this.position;\n        clone.size = this.size;\n        clone.borderTopColor = this.borderTopColor;\n        clone.borderRightColor = this.borderRightColor;\n        clone.borderBottomColor = this.borderBottomColor;\n        clone.borderLeftColor = this.borderLeftColor;\n        clone.borderTopWidth = this.borderTopWidth;\n        clone.borderRightWidth = this.borderRightWidth;\n        clone.borderBottomWidth = this.borderBottomWidth;\n        clone.borderLeftWidth = this.borderLeftWidth;\n        clone.borderTopLeftRadius = this.borderTopLeftRadius;\n        clone.borderTopRightRadius = this.borderTopRightRadius;\n        clone.borderBottomRightRadius = this.borderBottomRightRadius;\n        clone.borderBottomLeftRadius = this.borderBottomLeftRadius;\n        clone.clipPath = this.clipPath;\n        return clone;\n    };\n    Background.prototype.withColor = function (value) {\n        var clone = this.clone();\n        clone.color = value;\n        return clone;\n    };\n    Background.prototype.withImage = function (value) {\n        var clone = this.clone();\n        clone.image = value;\n        return clone;\n    };\n    Background.prototype.withRepeat = function (value) {\n        var clone = this.clone();\n        clone.repeat = value;\n        return clone;\n    };\n    Background.prototype.withPosition = function (value) {\n        var clone = this.clone();\n        clone.position = value;\n        return clone;\n    };\n    Background.prototype.withSize = function (value) {\n        var clone = this.clone();\n        clone.size = value;\n        return clone;\n    };\n    Background.prototype.withBorderTopColor = function (value) {\n        var clone = this.clone();\n        clone.borderTopColor = value;\n        return clone;\n    };\n    Background.prototype.withBorderRightColor = function (value) {\n        var clone = this.clone();\n        clone.borderRightColor = value;\n        return clone;\n    };\n    Background.prototype.withBorderBottomColor = function (value) {\n        var clone = this.clone();\n        clone.borderBottomColor = value;\n        return clone;\n    };\n    Background.prototype.withBorderLeftColor = function (value) {\n        var clone = this.clone();\n        clone.borderLeftColor = value;\n        return clone;\n    };\n    Background.prototype.withBorderTopWidth = function (value) {\n        var clone = this.clone();\n        clone.borderTopWidth = value;\n        return clone;\n    };\n    Background.prototype.withBorderRightWidth = function (value) {\n        var clone = this.clone();\n        clone.borderRightWidth = value;\n        return clone;\n    };\n    Background.prototype.withBorderBottomWidth = function (value) {\n        var clone = this.clone();\n        clone.borderBottomWidth = value;\n        return clone;\n    };\n    Background.prototype.withBorderLeftWidth = function (value) {\n        var clone = this.clone();\n        clone.borderLeftWidth = value;\n        return clone;\n    };\n    Background.prototype.withBorderTopLeftRadius = function (value) {\n        var clone = this.clone();\n        clone.borderTopLeftRadius = value;\n        return clone;\n    };\n    Background.prototype.withBorderTopRightRadius = function (value) {\n        var clone = this.clone();\n        clone.borderTopRightRadius = value;\n        return clone;\n    };\n    Background.prototype.withBorderBottomRightRadius = function (value) {\n        var clone = this.clone();\n        clone.borderBottomRightRadius = value;\n        return clone;\n    };\n    Background.prototype.withBorderBottomLeftRadius = function (value) {\n        var clone = this.clone();\n        clone.borderBottomLeftRadius = value;\n        return clone;\n    };\n    Background.prototype.withClipPath = function (value) {\n        var clone = this.clone();\n        clone.clipPath = value;\n        return clone;\n    };\n    Background.prototype.getDrawParams = function (width, height) {\n        if (!this.image) {\n            return null;\n        }\n        var res = {\n            repeatX: true,\n            repeatY: true,\n            posX: 0,\n            posY: 0,\n        };\n        if (this.repeat) {\n            switch (this.repeat.toLowerCase()) {\n                case \"no-repeat\":\n                    res.repeatX = false;\n                    res.repeatY = false;\n                    break;\n                case \"repeat-x\":\n                    res.repeatY = false;\n                    break;\n                case \"repeat-y\":\n                    res.repeatX = false;\n                    break;\n            }\n        }\n        var imageWidth = this.image.width;\n        var imageHeight = this.image.height;\n        if (this.size) {\n            var values = css_value_1.parse(this.size);\n            if (values.length === 2) {\n                var vx = values[0];\n                var vy = values[1];\n                if (vx.unit === \"%\" && vy.unit === \"%\") {\n                    imageWidth = width * vx.value / 100;\n                    imageHeight = height * vy.value / 100;\n                    res.sizeX = imageWidth;\n                    res.sizeY = imageHeight;\n                }\n                else if (vx.type === \"number\" && vy.type === \"number\" &&\n                    ((vx.unit === \"px\" && vy.unit === \"px\") || (vx.unit === \"\" && vy.unit === \"\"))) {\n                    imageWidth = vx.value;\n                    imageHeight = vy.value;\n                    res.sizeX = imageWidth;\n                    res.sizeY = imageHeight;\n                }\n            }\n            else if (values.length === 1 && values[0].type === \"ident\") {\n                var scale = 0;\n                if (values[0].string === \"cover\") {\n                    scale = Math.max(width / imageWidth, height / imageHeight);\n                }\n                else if (values[0].string === \"contain\") {\n                    scale = Math.min(width / imageWidth, height / imageHeight);\n                }\n                if (scale > 0) {\n                    imageWidth *= scale;\n                    imageHeight *= scale;\n                    res.sizeX = imageWidth;\n                    res.sizeY = imageHeight;\n                }\n            }\n        }\n        if (this.position) {\n            var v = Background.parsePosition(this.position);\n            if (v) {\n                var spaceX = width - imageWidth;\n                var spaceY = height - imageHeight;\n                if (v.x.unit === \"%\" && v.y.unit === \"%\") {\n                    res.posX = spaceX * v.x.value / 100;\n                    res.posY = spaceY * v.y.value / 100;\n                }\n                else if (v.x.type === \"number\" && v.y.type === \"number\" &&\n                    ((v.x.unit === \"px\" && v.y.unit === \"px\") || (v.x.unit === \"\" && v.y.unit === \"\"))) {\n                    res.posX = v.x.value;\n                    res.posY = v.y.value;\n                }\n                else if (v.x.type === \"ident\" && v.y.type === \"ident\") {\n                    if (v.x.string.toLowerCase() === \"center\") {\n                        res.posX = spaceX / 2;\n                    }\n                    else if (v.x.string.toLowerCase() === \"right\") {\n                        res.posX = spaceX;\n                    }\n                    if (v.y.string.toLowerCase() === \"center\") {\n                        res.posY = spaceY / 2;\n                    }\n                    else if (v.y.string.toLowerCase() === \"bottom\") {\n                        res.posY = spaceY;\n                    }\n                }\n            }\n        }\n        return res;\n    };\n    Background.parsePosition = function (pos) {\n        var values = css_value_1.parse(pos);\n        if (values.length === 2) {\n            return {\n                x: values[0],\n                y: values[1]\n            };\n        }\n        if (values.length === 1 && values[0].type === \"ident\") {\n            var val = values[0].string.toLocaleLowerCase();\n            var center = {\n                type: \"ident\",\n                string: \"center\"\n            };\n            if (val === \"left\" || val === \"right\") {\n                return {\n                    x: values[0],\n                    y: center\n                };\n            }\n            else if (val === \"top\" || val === \"bottom\") {\n                return {\n                    x: center,\n                    y: values[0]\n                };\n            }\n            else if (val === \"center\") {\n                return {\n                    x: center,\n                    y: center\n                };\n            }\n        }\n        return null;\n    };\n    ;\n    Background.prototype.isEmpty = function () {\n        return !this.color\n            && !this.image\n            && !this.hasBorderWidth()\n            && !this.hasBorderRadius()\n            && !this.clipPath;\n    };\n    Background.equals = function (value1, value2) {\n        if (!value1 && !value2) {\n            return true;\n        }\n        if (!value1 || !value2) {\n            return false;\n        }\n        return color_1.Color.equals(value1.color, value2.color)\n            && value1.image === value2.image\n            && value1.position === value2.position\n            && value1.repeat === value2.repeat\n            && value1.size === value2.size\n            && color_1.Color.equals(value1.borderTopColor, value2.borderTopColor)\n            && color_1.Color.equals(value1.borderRightColor, value2.borderRightColor)\n            && color_1.Color.equals(value1.borderBottomColor, value2.borderBottomColor)\n            && color_1.Color.equals(value1.borderLeftColor, value2.borderLeftColor)\n            && value1.borderTopWidth === value2.borderTopWidth\n            && value1.borderRightWidth === value2.borderRightWidth\n            && value1.borderBottomWidth === value2.borderBottomWidth\n            && value1.borderLeftWidth === value2.borderLeftWidth\n            && value1.borderTopLeftRadius === value2.borderTopLeftRadius\n            && value1.borderTopRightRadius === value2.borderTopRightRadius\n            && value1.borderBottomRightRadius === value2.borderBottomRightRadius\n            && value1.borderBottomLeftRadius === value2.borderBottomLeftRadius\n            && value1.clipPath === value2.clipPath;\n    };\n    Background.prototype.hasBorderColor = function () {\n        return !!this.borderTopColor || !!this.borderRightColor || !!this.borderBottomColor || !!this.borderLeftColor;\n    };\n    Background.prototype.hasBorderWidth = function () {\n        return this.borderTopWidth > 0\n            || this.borderRightWidth > 0\n            || this.borderBottomWidth > 0\n            || this.borderLeftWidth > 0;\n    };\n    Background.prototype.hasBorderRadius = function () {\n        return this.borderTopLeftRadius > 0\n            || this.borderTopRightRadius > 0\n            || this.borderBottomRightRadius > 0\n            || this.borderBottomLeftRadius > 0;\n    };\n    Background.prototype.hasUniformBorderColor = function () {\n        return color_1.Color.equals(this.borderTopColor, this.borderRightColor)\n            && color_1.Color.equals(this.borderTopColor, this.borderBottomColor)\n            && color_1.Color.equals(this.borderTopColor, this.borderLeftColor);\n    };\n    Background.prototype.hasUniformBorderWidth = function () {\n        return this.borderTopWidth === this.borderRightWidth\n            && this.borderTopWidth === this.borderBottomWidth\n            && this.borderTopWidth === this.borderLeftWidth;\n    };\n    Background.prototype.hasUniformBorderRadius = function () {\n        return this.borderTopLeftRadius === this.borderTopRightRadius\n            && this.borderTopLeftRadius === this.borderBottomRightRadius\n            && this.borderTopLeftRadius === this.borderBottomLeftRadius;\n    };\n    Background.prototype.hasUniformBorder = function () {\n        return this.hasUniformBorderColor()\n            && this.hasUniformBorderWidth()\n            && this.hasUniformBorderRadius();\n    };\n    Background.prototype.getUniformBorderColor = function () {\n        if (this.hasUniformBorderColor()) {\n            return this.borderTopColor;\n        }\n        return undefined;\n    };\n    ;\n    Background.prototype.getUniformBorderWidth = function () {\n        if (this.hasUniformBorderWidth()) {\n            return this.borderTopWidth;\n        }\n        return 0;\n    };\n    ;\n    Background.prototype.getUniformBorderRadius = function () {\n        if (this.hasUniformBorderRadius()) {\n            return this.borderTopLeftRadius;\n        }\n        return 0;\n    };\n    ;\n    Background.prototype.toString = function () {\n        return \"isEmpty: \" + this.isEmpty() + \"; color: \" + this.color + \"; image: \" + this.image + \"; repeat: \" + this.repeat + \"; position: \" + this.position + \"; size: \" + this.size + \"; borderTopColor: \" + this.borderTopColor + \"; borderRightColor: \" + this.borderRightColor + \"; borderBottomColor: \" + this.borderBottomColor + \"; borderLeftColor: \" + this.borderLeftColor + \"; borderTopWidth: \" + this.borderTopWidth + \"; borderRightWidth: \" + this.borderRightWidth + \"; borderBottomWidth: \" + this.borderBottomWidth + \"; borderLeftWidth: \" + this.borderLeftWidth + \"; borderTopLeftRadius: \" + this.borderTopLeftRadius + \"; borderTopRightRadius: \" + this.borderTopRightRadius + \"; borderBottomRightRadius: \" + this.borderBottomRightRadius + \"; borderBottomLeftRadius: \" + this.borderBottomLeftRadius + \"; clipPath: \" + this.clipPath + \";\";\n    };\n    return Background;\n}());\nBackground.default = new Background();\nexports.Background = Background;\n//# sourceMappingURL=background-common.js.map"
    },
    {
      "id": 264,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/converters.js",
      "name": "./~/tns-core-modules/ui/styling/converters.js",
      "index": 57,
      "index2": 44,
      "size": 3528,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-animation-parser.js",
      "issuerId": 265,
      "issuerName": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 265,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-animation-parser.js",
          "module": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
          "moduleName": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
          "type": "cjs require",
          "userRequest": "../styling/converters",
          "loc": "4:19-51"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../../color\");\nvar animation_1 = require(\"../animation\");\nfunction colorConverter(value) {\n    return new color_1.Color(value);\n}\nexports.colorConverter = colorConverter;\nfunction floatConverter(value) {\n    var result = parseFloat(value);\n    return result;\n}\nexports.floatConverter = floatConverter;\nfunction fontSizeConverter(value) {\n    return floatConverter(value);\n}\nexports.fontSizeConverter = fontSizeConverter;\nexports.numberConverter = parseFloat;\nfunction opacityConverter(value) {\n    var result = parseFloat(value);\n    result = Math.max(0.0, result);\n    result = Math.min(1.0, result);\n    return result;\n}\nexports.opacityConverter = opacityConverter;\nfunction timeConverter(value) {\n    var result = parseFloat(value);\n    if (value.indexOf(\"ms\") === -1) {\n        result = result * 1000;\n    }\n    return Math.max(0.0, result);\n}\nexports.timeConverter = timeConverter;\nfunction bezieArgumentConverter(value) {\n    var result = parseFloat(value);\n    result = Math.max(0.0, result);\n    result = Math.min(1.0, result);\n    return result;\n}\nexports.bezieArgumentConverter = bezieArgumentConverter;\nfunction animationTimingFunctionConverter(value) {\n    var result = \"ease\";\n    switch (value) {\n        case \"ease\":\n            result = \"ease\";\n            break;\n        case \"linear\":\n            result = \"linear\";\n            break;\n        case \"ease-in\":\n            result = \"easeIn\";\n            break;\n        case \"ease-out\":\n            result = \"easeOut\";\n            break;\n        case \"ease-in-out\":\n            result = \"easeInOut\";\n            break;\n        case \"spring\":\n            result = \"spring\";\n            break;\n        default:\n            if (value.indexOf(\"cubic-bezier(\") === 0) {\n                var bezierArr = value.substring(13).split(/[,]+/);\n                if (bezierArr.length !== 4) {\n                    throw new Error(\"Invalid value for animation: \" + value);\n                }\n                result = new animation_1.CubicBezierAnimationCurve(bezieArgumentConverter(bezierArr[0]), bezieArgumentConverter(bezierArr[1]), bezieArgumentConverter(bezierArr[2]), bezieArgumentConverter(bezierArr[3]));\n            }\n            else {\n                throw new Error(\"Invalid value for animation: \" + value);\n            }\n            break;\n    }\n    return result;\n}\nexports.animationTimingFunctionConverter = animationTimingFunctionConverter;\nfunction transformConverter(value) {\n    if (value === \"none\") {\n        var operations = {};\n        operations[value] = value;\n        return operations;\n    }\n    else if (typeof value === \"string\") {\n        var operations = {};\n        var operator = \"\";\n        var pos = 0;\n        while (pos < value.length) {\n            if (value[pos] === \" \" || value[pos] === \",\") {\n                pos++;\n            }\n            else if (value[pos] === \"(\") {\n                var start = pos + 1;\n                while (pos < value.length && value[pos] !== \")\") {\n                    pos++;\n                }\n                var operand = value.substring(start, pos);\n                operations[operator] = operand.trim();\n                operator = \"\";\n                pos++;\n            }\n            else {\n                operator += value[pos++];\n            }\n        }\n        return operations;\n    }\n    else {\n        return undefined;\n    }\n}\nexports.transformConverter = transformConverter;\n//# sourceMappingURL=converters.js.map"
    },
    {
      "id": 265,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-animation-parser.js",
      "name": "./~/tns-core-modules/ui/styling/css-animation-parser.js",
      "index": 56,
      "index2": 45,
      "size": 10855,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
      "issuerId": 159,
      "issuerName": "./~/tns-core-modules/ui/styling/style-scope.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "./css-animation-parser",
          "loc": "17:35-68"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../../color\");\nvar keyframe_animation_1 = require(\"../animation/keyframe-animation\");\nvar converters_1 = require(\"../styling/converters\");\nvar animationProperties = {\n    \"animation-name\": function (info, declaration) { return info.name = declaration.value; },\n    \"animation-duration\": function (info, declaration) { return info.duration = converters_1.timeConverter(declaration.value); },\n    \"animation-delay\": function (info, declaration) { return info.delay = converters_1.timeConverter(declaration.value); },\n    \"animation-timing-function\": function (info, declaration) { return info.curve = converters_1.animationTimingFunctionConverter(declaration.value); },\n    \"animation-iteration-count\": function (info, declaration) { return declaration.value === \"infinite\" ? info.iterations = Number.MAX_VALUE : info.iterations = converters_1.numberConverter(declaration.value); },\n    \"animation-direction\": function (info, declaration) { return info.isReverse = declaration.value === \"reverse\"; },\n    \"animation-fill-mode\": function (info, declaration) { return info.isForwards = declaration.value === \"forwards\"; }\n};\nvar CssAnimationParser = (function () {\n    function CssAnimationParser() {\n    }\n    CssAnimationParser.keyframeAnimationsFromCSSDeclarations = function (declarations) {\n        var animations = new Array();\n        var animationInfo = undefined;\n        if (declarations === null || declarations === undefined) {\n            return undefined;\n        }\n        for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n            var declaration = declarations_1[_i];\n            if (declaration.property === \"animation\") {\n                keyframeAnimationsFromCSSProperty(declaration.value, animations);\n            }\n            else {\n                var propertyHandler = animationProperties[declaration.property];\n                if (propertyHandler) {\n                    if (animationInfo === undefined) {\n                        animationInfo = new keyframe_animation_1.KeyframeAnimationInfo();\n                        animations.push(animationInfo);\n                    }\n                    propertyHandler(animationInfo, declaration);\n                }\n            }\n        }\n        return animations.length === 0 ? undefined : animations;\n    };\n    CssAnimationParser.keyframesArrayFromCSS = function (cssKeyframes) {\n        var parsedKeyframes = new Array();\n        for (var _i = 0, _a = cssKeyframes.keyframes; _i < _a.length; _i++) {\n            var keyframe = _a[_i];\n            var declarations = parseKeyframeDeclarations(keyframe);\n            for (var _b = 0, _c = keyframe.values; _b < _c.length; _b++) {\n                var time_1 = _c[_b];\n                if (time_1 === \"from\") {\n                    time_1 = 0;\n                }\n                else if (time_1 === \"to\") {\n                    time_1 = 1;\n                }\n                else {\n                    time_1 = parseFloat(time_1) / 100;\n                    if (time_1 < 0) {\n                        time_1 = 0;\n                    }\n                    if (time_1 > 100) {\n                        time_1 = 100;\n                    }\n                }\n                var current = parsedKeyframes[time_1];\n                if (current === undefined) {\n                    current = {};\n                    current.duration = time_1;\n                    parsedKeyframes[time_1] = current;\n                }\n                for (var _d = 0, _e = keyframe.declarations; _d < _e.length; _d++) {\n                    var declaration = _e[_d];\n                    if (declaration.property === \"animation-timing-function\") {\n                        current.curve = converters_1.animationTimingFunctionConverter(declaration.value);\n                    }\n                }\n                current.declarations = declarations;\n            }\n        }\n        var array = new Array();\n        for (var parsedKeyframe in parsedKeyframes) {\n            array.push(parsedKeyframes[parsedKeyframe]);\n        }\n        array.sort(function (a, b) { return a.duration - b.duration; });\n        return array;\n    };\n    return CssAnimationParser;\n}());\nexports.CssAnimationParser = CssAnimationParser;\nfunction keyframeAnimationsFromCSSProperty(value, animations) {\n    if (typeof value === \"string\") {\n        var values = value.split(/[,]+/);\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var parsedValue = values_1[_i];\n            var animationInfo = new keyframe_animation_1.KeyframeAnimationInfo();\n            var arr = parsedValue.trim().split(/[ ]+/);\n            if (arr.length > 0) {\n                animationInfo.name = arr[0];\n            }\n            if (arr.length > 1) {\n                animationInfo.duration = converters_1.timeConverter(arr[1]);\n            }\n            if (arr.length > 2) {\n                animationInfo.curve = converters_1.animationTimingFunctionConverter(arr[2]);\n            }\n            if (arr.length > 3) {\n                animationInfo.delay = converters_1.timeConverter(arr[3]);\n            }\n            if (arr.length > 4) {\n                animationInfo.iterations = parseInt(arr[4]);\n            }\n            if (arr.length > 5) {\n                animationInfo.isReverse = arr[4] === \"reverse\";\n            }\n            if (arr.length > 6) {\n                animationInfo.isForwards = arr[5] === \"forwards\";\n            }\n            if (arr.length > 7) {\n                throw new Error(\"Invalid value for animation: \" + value);\n            }\n            animations.push(animationInfo);\n        }\n    }\n}\nfunction getTransformationValues(value) {\n    var newTransform = converters_1.transformConverter(value);\n    var array = new Array();\n    var values = undefined;\n    for (var transform in newTransform) {\n        switch (transform) {\n            case \"scaleX\":\n                array.push({ propertyName: \"scaleX\", value: parseFloat(newTransform[transform]) });\n                break;\n            case \"scaleY\":\n                array.push({ propertyName: \"scaleY\", value: parseFloat(newTransform[transform]) });\n                break;\n            case \"scale\":\n            case \"scale3d\":\n                values = newTransform[transform].split(\",\");\n                if (values.length === 2 || values.length === 3) {\n                    array.push({ propertyName: \"scaleX\", value: parseFloat(values[0]) });\n                    array.push({ propertyName: \"scaleY\", value: parseFloat(values[1]) });\n                }\n                break;\n            case \"translateX\":\n                array.push({ propertyName: \"translateX\", value: parseFloat(newTransform[transform]) });\n                break;\n            case \"translateY\":\n                array.push({ propertyName: \"translateY\", value: parseFloat(newTransform[transform]) });\n                break;\n            case \"translate\":\n            case \"translate3d\":\n                values = newTransform[transform].split(\",\");\n                if (values.length === 2 || values.length === 3) {\n                    array.push({ propertyName: \"translateX\", value: parseFloat(values[0]) });\n                    array.push({ propertyName: \"translateY\", value: parseFloat(values[1]) });\n                }\n                break;\n            case \"rotate\":\n                var text = newTransform[transform];\n                var val = parseFloat(text);\n                if (text.slice(-3) === \"rad\") {\n                    val = val * (180.0 / Math.PI);\n                }\n                array.push({ propertyName: \"rotate\", value: val });\n                break;\n            case \"none\":\n                array.push({ propertyName: \"scaleX\", value: 1 });\n                array.push({ propertyName: \"scaleY\", value: 1 });\n                array.push({ propertyName: \"translateX\", value: 0 });\n                array.push({ propertyName: \"translateY\", value: 0 });\n                array.push({ propertyName: \"rotate\", value: 0 });\n                break;\n        }\n    }\n    return array;\n}\nfunction parseKeyframeDeclarations(keyframe) {\n    var declarations = {};\n    var transforms = { scale: undefined, translate: undefined };\n    for (var _i = 0, _a = keyframe.declarations; _i < _a.length; _i++) {\n        var declaration = _a[_i];\n        var propertyName = declaration.property;\n        var value = declaration.value;\n        if (propertyName === \"opacity\") {\n            declarations[propertyName] = parseFloat(value);\n        }\n        else if (propertyName === \"transform\") {\n            var values = getTransformationValues(value);\n            if (values) {\n                for (var _b = 0, values_2 = values; _b < values_2.length; _b++) {\n                    var pair = values_2[_b];\n                    if (!preprocessAnimationValues(pair.propertyName, pair.value, transforms)) {\n                        declarations[pair.propertyName] = pair.value;\n                    }\n                }\n            }\n            delete declarations[propertyName];\n        }\n        else if (propertyName === \"backgroundColor\" || propertyName === \"background-color\") {\n            declarations[\"backgroundColor\"] = new color_1.Color(value);\n        }\n        else {\n            declarations[propertyName] = value;\n        }\n    }\n    if (transforms.scale !== undefined) {\n        declarations[\"scale\"] = transforms.scale;\n    }\n    if (transforms.translate !== undefined) {\n        declarations[\"translate\"] = transforms.translate;\n    }\n    var array = new Array();\n    for (var declaration in declarations) {\n        var keyframeDeclaration = {};\n        keyframeDeclaration.property = declaration;\n        keyframeDeclaration.value = declarations[declaration];\n        array.push(keyframeDeclaration);\n    }\n    return array;\n}\nfunction preprocessAnimationValues(propertyName, value, transforms) {\n    if (propertyName === \"scaleX\") {\n        if (transforms.scale === undefined) {\n            transforms.scale = { x: 1, y: 1 };\n        }\n        transforms.scale.x = value;\n        return true;\n    }\n    if (propertyName === \"scaleY\") {\n        if (transforms.scale === undefined) {\n            transforms.scale = { x: 1, y: 1 };\n        }\n        transforms.scale.y = value;\n        return true;\n    }\n    if (propertyName === \"translateX\") {\n        if (transforms.translate === undefined) {\n            transforms.translate = { x: 0, y: 0 };\n        }\n        transforms.translate.x = value;\n        return true;\n    }\n    if (propertyName === \"translateY\") {\n        if (transforms.translate === undefined) {\n            transforms.translate = { x: 0, y: 0 };\n        }\n        transforms.translate.y = value;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=css-animation-parser.js.map"
    },
    {
      "id": 266,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-selector-parser.js",
      "name": "./~/tns-core-modules/ui/styling/css-selector-parser.js",
      "index": 51,
      "index2": 38,
      "size": 3164,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-selector/css-selector.js",
      "issuerId": 267,
      "issuerName": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 267,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "module": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "moduleName": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
          "type": "cjs require",
          "userRequest": "../css-selector-parser",
          "loc": "4:21-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUniversal(sel) {\n    return sel.type === \"*\";\n}\nexports.isUniversal = isUniversal;\nfunction isType(sel) {\n    return sel.type === \"\";\n}\nexports.isType = isType;\nfunction isClass(sel) {\n    return sel.type === \".\";\n}\nexports.isClass = isClass;\nfunction isId(sel) {\n    return sel.type === \"#\";\n}\nexports.isId = isId;\nfunction isPseudo(sel) {\n    return sel.type === \":\";\n}\nexports.isPseudo = isPseudo;\nfunction isAttribute(sel) {\n    return sel.type === \"[]\";\n}\nexports.isAttribute = isAttribute;\nvar regex = /(\\s*)(?:(\\*)|(#|\\.|:|\\b)([_-\\w][_-\\w\\d]*)|\\[\\s*([_-\\w][_-\\w\\d]*)\\s*(?:(=|\\^=|\\$=|\\*=|\\~=|\\|=)\\s*(?:([_-\\w][_-\\w\\d]*)|\"((?:[^\\\\\"]|\\\\(?:\"|n|r|f|\\\\|0-9a-f))*)\"|'((?:[^\\\\']|\\\\(?:'|n|r|f|\\\\|0-9a-f))*)')\\s*)?\\])(?:\\s*(\\+|~|>|\\s))?/g;\nfunction parse(selector) {\n    var selectors = [];\n    var result;\n    var lastIndex = regex.lastIndex = 0;\n    while (result = regex.exec(selector)) {\n        var pos = result.index;\n        if (lastIndex !== pos) {\n            throw new Error(\"Unexpected characters at index, near: \" + lastIndex + \": \" + result.input.substr(lastIndex, 32));\n        }\n        else if (!result[0] || result[0].length === 0) {\n            throw new Error(\"Last selector match got zero character result at index \" + lastIndex + \", near: \" + result.input.substr(lastIndex, 32));\n        }\n        pos += getLeadingWhiteSpace(result).length;\n        lastIndex = regex.lastIndex;\n        var type = getType(result);\n        var selector_1 = void 0;\n        switch (type) {\n            case \"*\":\n                selector_1 = { pos: pos, type: type };\n                break;\n            case \"#\":\n            case \".\":\n            case \":\":\n            case \"\":\n                var ident = getIdentifier(result);\n                selector_1 = { pos: pos, type: type, ident: ident };\n                break;\n            case \"[]\":\n                var prop = getProperty(result);\n                var test = getPropertyTest(result);\n                var value = getPropertyValue(result);\n                selector_1 = test ? { pos: pos, type: type, prop: prop, test: test, value: value } : { pos: pos, type: type, prop: prop };\n                break;\n            default:\n                throw new Error(\"Unhandled type.\");\n        }\n        var comb = getCombinator(result);\n        if (comb) {\n            selector_1.comb = comb;\n        }\n        selectors.push(selector_1);\n    }\n    if (selectors.length > 0) {\n        delete selectors[selectors.length - 1].comb;\n    }\n    return selectors;\n}\nexports.parse = parse;\nfunction getLeadingWhiteSpace(result) {\n    return result[1] || \"\";\n}\nfunction getType(result) {\n    return (result[5] && \"[]\") || result[2] || result[3];\n}\nfunction getIdentifier(result) {\n    return result[4];\n}\nfunction getProperty(result) {\n    return result[5];\n}\nfunction getPropertyTest(result) {\n    return result[6] || undefined;\n}\nfunction getPropertyValue(result) {\n    return result[7] || result[8] || result[9];\n}\nfunction getCombinator(result) {\n    return result[result.length - 1] || undefined;\n}\n//# sourceMappingURL=css-selector-parser.js.map"
    },
    {
      "id": 267,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/css-selector/css-selector.js",
      "name": "./~/tns-core-modules/ui/styling/css-selector/css-selector.js",
      "index": 50,
      "index2": 39,
      "size": 20515,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
      "issuerId": 159,
      "issuerName": "./~/tns-core-modules/ui/styling/style-scope.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 159,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/styling/style-scope.js",
          "module": "./~/tns-core-modules/ui/styling/style-scope.js",
          "moduleName": "./~/tns-core-modules/ui/styling/style-scope.js",
          "type": "cjs require",
          "userRequest": "./css-selector",
          "loc": "4:21-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"../../../utils/types\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar selectorParser = require(\"../css-selector-parser\");\nvar Match;\n(function (Match) {\n    Match.Dynamic = true;\n    Match.Static = false;\n})(Match || (Match = {}));\nfunction SelectorProperties(specificity, rarity, dynamic) {\n    if (dynamic === void 0) { dynamic = false; }\n    return function (cls) {\n        cls.prototype.specificity = specificity;\n        cls.prototype.rarity = rarity;\n        cls.prototype.combinator = \"\";\n        cls.prototype.dynamic = dynamic;\n        return cls;\n    };\n}\nvar SelectorCore = (function () {\n    function SelectorCore() {\n    }\n    SelectorCore.prototype.lookupSort = function (sorter, base) { sorter.sortAsUniversal(base || this); };\n    return SelectorCore;\n}());\nSelectorCore = __decorate([\n    SelectorProperties(0, 0, Match.Static)\n], SelectorCore);\nexports.SelectorCore = SelectorCore;\nvar SimpleSelector = (function (_super) {\n    __extends(SimpleSelector, _super);\n    function SimpleSelector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleSelector.prototype.accumulateChanges = function (node, map) {\n        if (!this.dynamic) {\n            return this.match(node);\n        }\n        else if (this.mayMatch(node)) {\n            this.trackChanges(node, map);\n            return true;\n        }\n        return false;\n    };\n    SimpleSelector.prototype.mayMatch = function (node) { return this.match(node); };\n    SimpleSelector.prototype.trackChanges = function (node, map) {\n    };\n    return SimpleSelector;\n}(SelectorCore));\nexports.SimpleSelector = SimpleSelector;\nfunction wrap(text) {\n    return text ? \" \" + text + \" \" : \"\";\n}\nvar InvalidSelector = (function (_super) {\n    __extends(InvalidSelector, _super);\n    function InvalidSelector(e) {\n        var _this = _super.call(this) || this;\n        _this.e = e;\n        return _this;\n    }\n    InvalidSelector.prototype.toString = function () { return \"<error: \" + this.e + \">\"; };\n    InvalidSelector.prototype.match = function (node) { return false; };\n    InvalidSelector.prototype.lookupSort = function (sorter, base) {\n    };\n    return InvalidSelector;\n}(SimpleSelector));\nInvalidSelector = __decorate([\n    SelectorProperties(0, 4, Match.Static)\n], InvalidSelector);\nexports.InvalidSelector = InvalidSelector;\nvar UniversalSelector = (function (_super) {\n    __extends(UniversalSelector, _super);\n    function UniversalSelector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UniversalSelector.prototype.toString = function () { return \"*\" + wrap(this.combinator); };\n    UniversalSelector.prototype.match = function (node) { return true; };\n    return UniversalSelector;\n}(SimpleSelector));\nUniversalSelector = __decorate([\n    SelectorProperties(0, 0, Match.Static)\n], UniversalSelector);\nexports.UniversalSelector = UniversalSelector;\nvar IdSelector = (function (_super) {\n    __extends(IdSelector, _super);\n    function IdSelector(id) {\n        var _this = _super.call(this) || this;\n        _this.id = id;\n        return _this;\n    }\n    IdSelector.prototype.toString = function () { return \"#\" + this.id + wrap(this.combinator); };\n    IdSelector.prototype.match = function (node) { return node.id === this.id; };\n    IdSelector.prototype.lookupSort = function (sorter, base) { sorter.sortById(this.id, base || this); };\n    return IdSelector;\n}(SimpleSelector));\nIdSelector = __decorate([\n    SelectorProperties(65536, 3, Match.Static)\n], IdSelector);\nexports.IdSelector = IdSelector;\nvar TypeSelector = (function (_super) {\n    __extends(TypeSelector, _super);\n    function TypeSelector(cssType) {\n        var _this = _super.call(this) || this;\n        _this.cssType = cssType;\n        return _this;\n    }\n    TypeSelector.prototype.toString = function () { return \"\" + this.cssType + wrap(this.combinator); };\n    TypeSelector.prototype.match = function (node) { return node.cssType === this.cssType; };\n    TypeSelector.prototype.lookupSort = function (sorter, base) { sorter.sortByType(this.cssType, base || this); };\n    return TypeSelector;\n}(SimpleSelector));\nTypeSelector = __decorate([\n    SelectorProperties(1, 1, Match.Static)\n], TypeSelector);\nexports.TypeSelector = TypeSelector;\nvar ClassSelector = (function (_super) {\n    __extends(ClassSelector, _super);\n    function ClassSelector(cssClass) {\n        var _this = _super.call(this) || this;\n        _this.cssClass = cssClass;\n        return _this;\n    }\n    ClassSelector.prototype.toString = function () { return \".\" + this.cssClass + wrap(this.combinator); };\n    ClassSelector.prototype.match = function (node) { return node.cssClasses && node.cssClasses.has(this.cssClass); };\n    ClassSelector.prototype.lookupSort = function (sorter, base) { sorter.sortByClass(this.cssClass, base || this); };\n    return ClassSelector;\n}(SimpleSelector));\nClassSelector = __decorate([\n    SelectorProperties(256, 2, Match.Static)\n], ClassSelector);\nexports.ClassSelector = ClassSelector;\nvar AttributeSelector = (function (_super) {\n    __extends(AttributeSelector, _super);\n    function AttributeSelector(attribute, test, value) {\n        var _this = _super.call(this) || this;\n        _this.attribute = attribute;\n        _this.test = test;\n        _this.value = value;\n        if (!test) {\n            _this.match = function (node) { return !types_1.isNullOrUndefined(node[attribute]); };\n            return _this;\n        }\n        if (!value) {\n            _this.match = function (node) { return false; };\n        }\n        var escapedValue = utils_1.escapeRegexSymbols(value);\n        var regexp = null;\n        switch (test) {\n            case \"^=\":\n                regexp = new RegExp(\"^\" + escapedValue);\n                break;\n            case \"$=\":\n                regexp = new RegExp(escapedValue + \"$\");\n                break;\n            case \"*=\":\n                regexp = new RegExp(escapedValue);\n                break;\n            case \"=\":\n                regexp = new RegExp(\"^\" + escapedValue + \"$\");\n                break;\n            case \"~=\":\n                if (/\\s/.test(value)) {\n                    _this.match = function (node) { return false; };\n                    return _this;\n                }\n                regexp = new RegExp(\"(^|\\\\s)\" + escapedValue + \"(\\\\s|$)\");\n                break;\n            case \"|=\":\n                regexp = new RegExp(\"^\" + escapedValue + \"(-|$)\");\n                break;\n        }\n        if (regexp) {\n            _this.match = function (node) { return regexp.test(node[attribute] + \"\"); };\n            return _this;\n        }\n        else {\n            _this.match = function (node) { return false; };\n            return _this;\n        }\n    }\n    AttributeSelector.prototype.toString = function () { return \"[\" + this.attribute + wrap(this.test) + ((this.test && this.value) || '') + \"]\" + wrap(this.combinator); };\n    AttributeSelector.prototype.match = function (node) { return false; };\n    AttributeSelector.prototype.mayMatch = function (node) { return true; };\n    AttributeSelector.prototype.trackChanges = function (node, map) { map.addAttribute(node, this.attribute); };\n    return AttributeSelector;\n}(SimpleSelector));\nAttributeSelector = __decorate([\n    SelectorProperties(256, 0, Match.Dynamic)\n], AttributeSelector);\nexports.AttributeSelector = AttributeSelector;\nvar PseudoClassSelector = (function (_super) {\n    __extends(PseudoClassSelector, _super);\n    function PseudoClassSelector(cssPseudoClass) {\n        var _this = _super.call(this) || this;\n        _this.cssPseudoClass = cssPseudoClass;\n        return _this;\n    }\n    PseudoClassSelector.prototype.toString = function () { return \":\" + this.cssPseudoClass + wrap(this.combinator); };\n    PseudoClassSelector.prototype.match = function (node) { return node.cssPseudoClasses && node.cssPseudoClasses.has(this.cssPseudoClass); };\n    PseudoClassSelector.prototype.mayMatch = function (node) { return true; };\n    PseudoClassSelector.prototype.trackChanges = function (node, map) { map.addPseudoClass(node, this.cssPseudoClass); };\n    return PseudoClassSelector;\n}(SimpleSelector));\nPseudoClassSelector = __decorate([\n    SelectorProperties(256, 0, Match.Dynamic)\n], PseudoClassSelector);\nexports.PseudoClassSelector = PseudoClassSelector;\nvar SimpleSelectorSequence = (function (_super) {\n    __extends(SimpleSelectorSequence, _super);\n    function SimpleSelectorSequence(selectors) {\n        var _this = _super.call(this) || this;\n        _this.selectors = selectors;\n        _this.specificity = selectors.reduce(function (sum, sel) { return sel.specificity + sum; }, 0);\n        _this.head = _this.selectors.reduce(function (prev, curr) { return !prev || (curr.rarity > prev.rarity) ? curr : prev; }, null);\n        _this.dynamic = selectors.some(function (sel) { return sel.dynamic; });\n        return _this;\n    }\n    SimpleSelectorSequence.prototype.toString = function () { return \"\" + this.selectors.join(\"\") + wrap(this.combinator); };\n    SimpleSelectorSequence.prototype.match = function (node) { return this.selectors.every(function (sel) { return sel.match(node); }); };\n    SimpleSelectorSequence.prototype.mayMatch = function (node) {\n        return this.selectors.every(function (sel) { return sel.mayMatch(node); });\n    };\n    SimpleSelectorSequence.prototype.trackChanges = function (node, map) {\n        this.selectors.forEach(function (sel) { return sel.trackChanges(node, map); });\n    };\n    SimpleSelectorSequence.prototype.lookupSort = function (sorter, base) {\n        this.head.lookupSort(sorter, base || this);\n    };\n    return SimpleSelectorSequence;\n}(SimpleSelector));\nexports.SimpleSelectorSequence = SimpleSelectorSequence;\nvar Selector = (function (_super) {\n    __extends(Selector, _super);\n    function Selector(selectors) {\n        var _this = _super.call(this) || this;\n        _this.selectors = selectors;\n        var lastGroup;\n        var groups = [];\n        selectors.reverse().forEach(function (sel) {\n            switch (sel.combinator) {\n                case undefined:\n                case \" \":\n                    groups.push(lastGroup = []);\n                case \">\":\n                    lastGroup.push(sel);\n                    break;\n                default:\n                    throw new Error(\"Unsupported combinator \\\"\" + sel.combinator + \"\\\".\");\n            }\n        });\n        _this.groups = groups.map(function (g) { return new Selector.ChildGroup(g); });\n        _this.last = selectors[0];\n        _this.specificity = selectors.reduce(function (sum, sel) { return sel.specificity + sum; }, 0);\n        _this.dynamic = selectors.some(function (sel) { return sel.dynamic; });\n        return _this;\n    }\n    Selector.prototype.toString = function () { return this.selectors.join(\"\"); };\n    Selector.prototype.match = function (node) {\n        return this.groups.every(function (group, i) {\n            if (i === 0) {\n                node = group.match(node);\n                return !!node;\n            }\n            else {\n                var ancestor = node;\n                while (ancestor = ancestor.parent) {\n                    if (node = group.match(ancestor)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n    };\n    Selector.prototype.lookupSort = function (sorter, base) {\n        this.last.lookupSort(sorter, this);\n    };\n    Selector.prototype.accumulateChanges = function (node, map) {\n        if (!this.dynamic) {\n            return this.match(node);\n        }\n        var bounds = [];\n        var mayMatch = this.groups.every(function (group, i) {\n            if (i === 0) {\n                var nextNode = group.mayMatch(node);\n                bounds.push({ left: node, right: node });\n                node = nextNode;\n                return !!node;\n            }\n            else {\n                var ancestor = node;\n                while (ancestor = ancestor.parent) {\n                    var nextNode = group.mayMatch(ancestor);\n                    if (nextNode) {\n                        bounds.push({ left: ancestor, right: null });\n                        node = nextNode;\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        if (!mayMatch) {\n            return false;\n        }\n        if (!map) {\n            return mayMatch;\n        }\n        for (var i = 0; i < this.groups.length; i++) {\n            var group_1 = this.groups[i];\n            if (!group_1.dynamic) {\n                continue;\n            }\n            var bound = bounds[i];\n            var node_1 = bound.left;\n            do {\n                if (group_1.mayMatch(node_1)) {\n                    group_1.trackChanges(node_1, map);\n                }\n            } while ((node_1 !== bound.right) && (node_1 = node_1.parent));\n        }\n        return mayMatch;\n    };\n    return Selector;\n}(SelectorCore));\nexports.Selector = Selector;\n(function (Selector) {\n    var ChildGroup = (function () {\n        function ChildGroup(selectors) {\n            this.selectors = selectors;\n            this.dynamic = selectors.some(function (sel) { return sel.dynamic; });\n        }\n        ChildGroup.prototype.match = function (node) {\n            return this.selectors.every(function (sel, i) { return (i === 0 ? node : node = node.parent) && sel.match(node); }) ? node : null;\n        };\n        ChildGroup.prototype.mayMatch = function (node) {\n            return this.selectors.every(function (sel, i) { return (i === 0 ? node : node = node.parent) && sel.mayMatch(node); }) ? node : null;\n        };\n        ChildGroup.prototype.trackChanges = function (node, map) {\n            this.selectors.forEach(function (sel, i) { return (i === 0 ? node : node = node.parent) && sel.trackChanges(node, map); });\n        };\n        return ChildGroup;\n    }());\n    Selector.ChildGroup = ChildGroup;\n})(Selector = exports.Selector || (exports.Selector = {}));\nexports.Selector = Selector;\nvar RuleSet = (function () {\n    function RuleSet(selectors, declarations) {\n        var _this = this;\n        this.selectors = selectors;\n        this.declarations = declarations;\n        this.selectors.forEach(function (sel) { return sel.ruleset = _this; });\n    }\n    RuleSet.prototype.toString = function () { return this.selectors.join(\", \") + \" {\" + this.declarations.map(function (d, i) { return \"\" + (i === 0 ? \" \" : \"\") + d.property + \": \" + d.value; }).join(\"; \") + \" }\"; };\n    RuleSet.prototype.lookupSort = function (sorter) { this.selectors.forEach(function (sel) { return sel.lookupSort(sorter); }); };\n    return RuleSet;\n}());\nexports.RuleSet = RuleSet;\nfunction fromAstNodes(astRules) {\n    return astRules.filter(isRule).map(function (rule) {\n        var declarations = rule.declarations.filter(isDeclaration).map(createDeclaration);\n        var selectors = rule.selectors.map(createSelector);\n        var ruleset = new RuleSet(selectors, declarations);\n        return ruleset;\n    });\n}\nexports.fromAstNodes = fromAstNodes;\nfunction createDeclaration(decl) {\n    return { property: decl.property.toLowerCase(), value: decl.value };\n}\nfunction createSelector(sel) {\n    try {\n        var ast = selectorParser.parse(sel);\n        if (ast.length === 0) {\n            return new InvalidSelector(new Error(\"Empty selector\"));\n        }\n        var selectors = ast.map(createSimpleSelector);\n        var sequences = [];\n        for (var seqStart = 0, seqEnd = 0, last = selectors.length - 1; seqEnd <= last; seqEnd++) {\n            var sel_1 = selectors[seqEnd];\n            var astComb = ast[seqEnd].comb;\n            if (astComb || seqEnd === last) {\n                if (seqStart === seqEnd) {\n                    sel_1.combinator = astComb;\n                    sequences.push(sel_1);\n                }\n                else {\n                    var sequence = new SimpleSelectorSequence(selectors.slice(seqStart, seqEnd + 1));\n                    sequence.combinator = astComb;\n                    sequences.push(sequence);\n                }\n                seqStart = seqEnd + 1;\n            }\n        }\n        if (sequences.length === 1) {\n            return sequences[0];\n        }\n        else {\n            return new Selector(sequences);\n        }\n    }\n    catch (e) {\n        return new InvalidSelector(e);\n    }\n}\nfunction createSimpleSelector(sel) {\n    if (selectorParser.isUniversal(sel)) {\n        return new UniversalSelector();\n    }\n    else if (selectorParser.isId(sel)) {\n        return new IdSelector(sel.ident);\n    }\n    else if (selectorParser.isType(sel)) {\n        return new TypeSelector(sel.ident.replace(/-/, '').toLowerCase());\n    }\n    else if (selectorParser.isClass(sel)) {\n        return new ClassSelector(sel.ident);\n    }\n    else if (selectorParser.isPseudo(sel)) {\n        return new PseudoClassSelector(sel.ident);\n    }\n    else if (selectorParser.isAttribute(sel)) {\n        if (sel.test) {\n            return new AttributeSelector(sel.prop, sel.test, sel.value);\n        }\n        else {\n            return new AttributeSelector(sel.prop);\n        }\n    }\n}\nfunction isRule(node) {\n    return node.type === \"rule\";\n}\nfunction isDeclaration(node) {\n    return node.type === \"declaration\";\n}\nvar SelectorsMap = (function () {\n    function SelectorsMap(rulesets) {\n        var _this = this;\n        this.id = {};\n        this.class = {};\n        this.type = {};\n        this.universal = [];\n        this.position = 0;\n        rulesets.forEach(function (rule) { return rule.lookupSort(_this); });\n    }\n    SelectorsMap.prototype.query = function (node) {\n        var _this = this;\n        var selectorClasses = [\n            this.universal,\n            this.id[node.id],\n            this.type[node.cssType]\n        ];\n        if (node.cssClasses) {\n            node.cssClasses.forEach(function (c) { return selectorClasses.push(_this.class[c]); });\n        }\n        var selectors = selectorClasses\n            .filter(function (arr) { return !!arr; })\n            .reduce(function (cur, next) { return cur.concat(next); }, []);\n        var selectorsMatch = new SelectorsMatch();\n        selectorsMatch.selectors = selectors\n            .filter(function (sel) { return sel.sel.accumulateChanges(node, selectorsMatch); })\n            .sort(function (a, b) { return a.sel.specificity - b.sel.specificity || a.pos - b.pos; })\n            .map(function (docSel) { return docSel.sel; });\n        return selectorsMatch;\n    };\n    SelectorsMap.prototype.sortById = function (id, sel) { this.addToMap(this.id, id, sel); };\n    SelectorsMap.prototype.sortByClass = function (cssClass, sel) {\n        this.addToMap(this.class, cssClass, sel);\n    };\n    SelectorsMap.prototype.sortByType = function (cssType, sel) {\n        this.addToMap(this.type, cssType, sel);\n    };\n    SelectorsMap.prototype.sortAsUniversal = function (sel) { this.universal.push(this.makeDocSelector(sel)); };\n    SelectorsMap.prototype.addToMap = function (map, head, sel) {\n        this.position++;\n        var list = map[head];\n        if (list) {\n            list.push(this.makeDocSelector(sel));\n        }\n        else {\n            map[head] = [this.makeDocSelector(sel)];\n        }\n    };\n    SelectorsMap.prototype.makeDocSelector = function (sel) {\n        return { sel: sel, pos: this.position++ };\n    };\n    return SelectorsMap;\n}());\nexports.SelectorsMap = SelectorsMap;\nvar SelectorsMatch = (function () {\n    function SelectorsMatch() {\n        this.changeMap = new Map();\n    }\n    SelectorsMatch.prototype.addAttribute = function (node, attribute) {\n        var deps = this.properties(node);\n        if (!deps.attributes) {\n            deps.attributes = new Set();\n        }\n        deps.attributes.add(attribute);\n    };\n    SelectorsMatch.prototype.addPseudoClass = function (node, pseudoClass) {\n        var deps = this.properties(node);\n        if (!deps.pseudoClasses) {\n            deps.pseudoClasses = new Set();\n        }\n        deps.pseudoClasses.add(pseudoClass);\n    };\n    SelectorsMatch.prototype.properties = function (node) {\n        var set = this.changeMap.get(node);\n        if (!set) {\n            this.changeMap.set(node, set = {});\n        }\n        return set;\n    };\n    return SelectorsMatch;\n}());\nexports.SelectorsMatch = SelectorsMatch;\n//# sourceMappingURL=css-selector.js.map"
    },
    {
      "id": 268,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/switch/switch.android.js",
      "name": "./~/tns-core-modules/ui/switch/switch.android.js",
      "index": 185,
      "index2": 180,
      "size": 3643,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/switch",
          "loc": "76:47-84"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar switch_common_1 = require(\"./switch-common\");\n__export(require(\"./switch-common\"));\nvar CheckedChangeListener;\nfunction initializeCheckedChangeListener() {\n    if (CheckedChangeListener) {\n        return;\n    }\n    var CheckedChangeListenerImpl = (function (_super) {\n        __extends(CheckedChangeListenerImpl, _super);\n        function CheckedChangeListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        CheckedChangeListenerImpl.prototype.onCheckedChanged = function (buttonView, isChecked) {\n            var owner = this.owner;\n            switch_common_1.checkedProperty.nativeValueChange(owner, isChecked);\n        };\n        return CheckedChangeListenerImpl;\n    }(java.lang.Object));\n    CheckedChangeListenerImpl = __decorate([\n        Interfaces([android.widget.CompoundButton.OnCheckedChangeListener])\n    ], CheckedChangeListenerImpl);\n    CheckedChangeListener = CheckedChangeListenerImpl;\n}\nvar Switch = (function (_super) {\n    __extends(Switch, _super);\n    function Switch() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Switch.prototype.createNativeView = function () {\n        initializeCheckedChangeListener();\n        var nativeView = new android.widget.Switch(this._context);\n        var listener = new CheckedChangeListener(this);\n        nativeView.setOnCheckedChangeListener(listener);\n        nativeView.listener = listener;\n        return nativeView;\n    };\n    Switch.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = this;\n    };\n    Switch.prototype.disposeNativeView = function () {\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = null;\n        _super.prototype.disposeNativeView.call(this);\n    };\n    Switch.prototype[switch_common_1.checkedProperty.getDefault] = function () {\n        return false;\n    };\n    Switch.prototype[switch_common_1.checkedProperty.setNative] = function (value) {\n        this.nativeView.setChecked(value);\n    };\n    Switch.prototype[switch_common_1.colorProperty.getDefault] = function () {\n        return -1;\n    };\n    Switch.prototype[switch_common_1.colorProperty.setNative] = function (value) {\n        if (value instanceof switch_common_1.Color) {\n            this.nativeView.getThumbDrawable().setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n        }\n        else {\n            this.nativeView.getThumbDrawable().clearColorFilter();\n        }\n    };\n    Switch.prototype[switch_common_1.backgroundColorProperty.getDefault] = function () {\n        return -1;\n    };\n    Switch.prototype[switch_common_1.backgroundColorProperty.setNative] = function (value) {\n        if (value instanceof switch_common_1.Color) {\n            this.nativeView.getTrackDrawable().setColorFilter(value.android, android.graphics.PorterDuff.Mode.SRC_IN);\n        }\n        else {\n            this.nativeView.getTrackDrawable().clearColorFilter();\n        }\n    };\n    Switch.prototype[switch_common_1.backgroundInternalProperty.getDefault] = function () {\n        return null;\n    };\n    Switch.prototype[switch_common_1.backgroundInternalProperty.setNative] = function (value) {\n    };\n    return Switch;\n}(switch_common_1.SwitchBase));\nexports.Switch = Switch;\n//# sourceMappingURL=switch.android.js.map"
    },
    {
      "id": 269,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/time-picker/time-picker.android.js",
      "name": "./~/tns-core-modules/ui/time-picker/time-picker.android.js",
      "index": 189,
      "index2": 184,
      "size": 3814,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/time-picker",
          "loc": "80:51-93"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar time_picker_common_1 = require(\"./time-picker-common\");\n__export(require(\"./time-picker-common\"));\nvar TimeChangedListener;\nfunction initializeTimeChangedListener() {\n    if (TimeChangedListener) {\n        return;\n    }\n    apiLevel = android.os.Build.VERSION.SDK_INT;\n    var TimeChangedListenerImpl = (function (_super) {\n        __extends(TimeChangedListenerImpl, _super);\n        function TimeChangedListenerImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        TimeChangedListenerImpl.prototype.onTimeChanged = function (picker, hour, minute) {\n            var timePicker = this.owner;\n            if (timePicker.updatingNativeValue) {\n                return;\n            }\n            var validTime = time_picker_common_1.getValidTime(timePicker, hour, minute);\n            time_picker_common_1.timeProperty.nativeValueChange(timePicker, new Date(0, 0, 0, validTime.hour, validTime.minute));\n        };\n        return TimeChangedListenerImpl;\n    }(java.lang.Object));\n    TimeChangedListenerImpl = __decorate([\n        Interfaces([android.widget.TimePicker.OnTimeChangedListener])\n    ], TimeChangedListenerImpl);\n    TimeChangedListener = TimeChangedListenerImpl;\n}\nvar apiLevel;\nvar TimePicker = (function (_super) {\n    __extends(TimePicker, _super);\n    function TimePicker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimePicker.prototype.createNativeView = function () {\n        initializeTimeChangedListener();\n        var nativeView = new android.widget.TimePicker(this._context);\n        var listener = new TimeChangedListener(this);\n        nativeView.setOnTimeChangedListener(listener);\n        nativeView.listener = listener;\n        nativeView.calendar = java.util.Calendar.getInstance();\n        return nativeView;\n    };\n    TimePicker.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        var nativeView = this.nativeView;\n        nativeView.listener.owner = this;\n        var calendar = nativeView.calendar;\n        var hour = time_picker_common_1.hourProperty.isSet(this) ? this.hour : calendar.get(java.util.Calendar.HOUR_OF_DAY);\n        var minute = time_picker_common_1.minuteProperty.isSet(this) ? this.minute : calendar.get(java.util.Calendar.MINUTE);\n        var validTime = time_picker_common_1.getValidTime(this, hour, minute);\n        if (!time_picker_common_1.timeProperty.isSet(this)) {\n            this.time = new Date(0, 0, 0, validTime.hour, validTime.minute);\n        }\n    };\n    TimePicker.prototype[time_picker_common_1.minuteProperty.setNative] = function (value) {\n        this.updatingNativeValue = true;\n        try {\n            if (apiLevel >= 23) {\n                this.nativeView.setMinute(value);\n            }\n            else {\n                this.nativeView.setCurrentMinute(new java.lang.Integer(value));\n            }\n        }\n        finally {\n            this.updatingNativeValue = false;\n        }\n    };\n    TimePicker.prototype[time_picker_common_1.hourProperty.setNative] = function (value) {\n        this.updatingNativeValue = true;\n        try {\n            if (apiLevel >= 23) {\n                this.nativeView.setHour(value);\n            }\n            else {\n                this.nativeView.setCurrentHour(new java.lang.Integer(value));\n            }\n        }\n        finally {\n            this.updatingNativeValue = false;\n        }\n    };\n    return TimePicker;\n}(time_picker_common_1.TimePickerBase));\nexports.TimePicker = TimePicker;\n//# sourceMappingURL=time-picker.android.js.map"
    },
    {
      "id": 270,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/fade-transition.android.js",
      "name": "./~/tns-core-modules/ui/transition/fade-transition.android.js",
      "index": 68,
      "index2": 60,
      "size": 1365,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
      "issuerId": 44,
      "issuerName": "./~/tns-core-modules/ui/transition/transition.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "ui/transition/fade-transition",
          "loc": "16:25-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar transition_1 = require(\"./transition\");\nvar FadeTransition = (function (_super) {\n    __extends(FadeTransition, _super);\n    function FadeTransition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FadeTransition.prototype.createAndroidAnimator = function (transitionType) {\n        var alphaValues = Array.create(\"float\", 2);\n        switch (transitionType) {\n            case transition_1.AndroidTransitionType.enter:\n            case transition_1.AndroidTransitionType.popEnter:\n                alphaValues[0] = 0;\n                alphaValues[1] = 1;\n                break;\n            case transition_1.AndroidTransitionType.exit:\n            case transition_1.AndroidTransitionType.popExit:\n                alphaValues[0] = 1;\n                alphaValues[1] = 0;\n                break;\n        }\n        var animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", alphaValues);\n        var duration = this.getDuration();\n        if (duration !== undefined) {\n            animator.setDuration(duration);\n        }\n        animator.setInterpolator(this.getCurve());\n        return animator;\n    };\n    return FadeTransition;\n}(transition_1.Transition));\nexports.FadeTransition = FadeTransition;\n//# sourceMappingURL=fade-transition.android.js.map"
    },
    {
      "id": 271,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/flip-transition.android.js",
      "name": "./~/tns-core-modules/ui/transition/flip-transition.android.js",
      "index": 69,
      "index2": 61,
      "size": 5193,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
      "issuerId": 44,
      "issuerName": "./~/tns-core-modules/ui/transition/transition.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "ui/transition/flip-transition",
          "loc": "22:25-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar transition_1 = require(\"./transition\");\nvar FlipTransition = (function (_super) {\n    __extends(FlipTransition, _super);\n    function FlipTransition(direction, duration, curve) {\n        var _this = _super.call(this, duration, curve) || this;\n        _this._direction = direction;\n        return _this;\n    }\n    FlipTransition.prototype.createAndroidAnimator = function (transitionType) {\n        var objectAnimators;\n        var values;\n        var animator;\n        var animatorSet = new android.animation.AnimatorSet();\n        var fullDuration = this.getDuration() || 300;\n        var interpolator = this.getCurve();\n        var rotationY = this._direction === \"right\" ? 180 : -180;\n        switch (transitionType) {\n            case transition_1.AndroidTransitionType.enter:\n                objectAnimators = Array.create(android.animation.Animator, 3);\n                values = Array.create(\"float\", 2);\n                values[0] = 1.0;\n                values[1] = 0.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", values);\n                animator.setDuration(0);\n                objectAnimators[0] = animator;\n                values = Array.create(\"float\", 2);\n                values[0] = rotationY;\n                values[1] = 0.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"rotationY\", values);\n                animator.setInterpolator(interpolator);\n                animator.setDuration(fullDuration);\n                objectAnimators[1] = animator;\n                values = Array.create(\"float\", 2);\n                values[0] = 0.0;\n                values[1] = 1.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", values);\n                animator.setStartDelay(fullDuration / 2);\n                animator.setDuration(1);\n                objectAnimators[2] = animator;\n                break;\n            case transition_1.AndroidTransitionType.exit:\n                objectAnimators = Array.create(android.animation.Animator, 2);\n                values = Array.create(\"float\", 2);\n                values[0] = 0.0;\n                values[1] = -rotationY;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"rotationY\", values);\n                animator.setInterpolator(interpolator);\n                animator.setDuration(fullDuration);\n                objectAnimators[0] = animator;\n                values = Array.create(\"float\", 2);\n                values[0] = 1.0;\n                values[1] = 0.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", values);\n                animator.setStartDelay(fullDuration / 2);\n                animator.setDuration(1);\n                objectAnimators[1] = animator;\n                break;\n            case transition_1.AndroidTransitionType.popEnter:\n                objectAnimators = Array.create(android.animation.Animator, 3);\n                values = Array.create(\"float\", 2);\n                values[0] = 1.0;\n                values[1] = 0.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", values);\n                animator.setDuration(0);\n                objectAnimators[0] = animator;\n                values = Array.create(\"float\", 2);\n                values[0] = -rotationY;\n                values[1] = 0.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"rotationY\", values);\n                animator.setInterpolator(interpolator);\n                animator.setDuration(fullDuration);\n                objectAnimators[1] = animator;\n                values = Array.create(\"float\", 2);\n                values[0] = 0.0;\n                values[1] = 1.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", values);\n                animator.setStartDelay(fullDuration / 2);\n                animator.setDuration(1);\n                objectAnimators[2] = animator;\n                break;\n            case transition_1.AndroidTransitionType.popExit:\n                objectAnimators = Array.create(android.animation.Animator, 2);\n                values = Array.create(\"float\", 2);\n                values[0] = 0.0;\n                values[1] = rotationY;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"rotationY\", values);\n                animator.setInterpolator(interpolator);\n                animator.setDuration(fullDuration);\n                objectAnimators[0] = animator;\n                values = Array.create(\"float\", 2);\n                values[0] = 1.0;\n                values[1] = 0.0;\n                animator = android.animation.ObjectAnimator.ofFloat(null, \"alpha\", values);\n                animator.setStartDelay(fullDuration / 2);\n                animator.setDuration(1);\n                objectAnimators[1] = animator;\n                break;\n        }\n        animatorSet.playTogether(objectAnimators);\n        return animatorSet;\n    };\n    return FlipTransition;\n}(transition_1.Transition));\nexports.FlipTransition = FlipTransition;\n//# sourceMappingURL=flip-transition.android.js.map"
    },
    {
      "id": 272,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/slide-transition.android.js",
      "name": "./~/tns-core-modules/ui/transition/slide-transition.android.js",
      "index": 67,
      "index2": 59,
      "size": 5437,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
      "issuerId": 44,
      "issuerName": "./~/tns-core-modules/ui/transition/transition.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/transition/transition.android.js",
          "module": "./~/tns-core-modules/ui/transition/transition.android.js",
          "moduleName": "./~/tns-core-modules/ui/transition/transition.android.js",
          "type": "cjs require",
          "userRequest": "ui/transition/slide-transition",
          "loc": "10:26-67"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar transition = require(\"./transition\");\nvar platform = require(\"../../platform\");\nvar lazy_1 = require(\"../../utils/lazy\");\nvar screenWidth = lazy_1.default(function () { return platform.screen.mainScreen.widthPixels; });\nvar screenHeight = lazy_1.default(function () { return platform.screen.mainScreen.heightPixels; });\nvar SlideTransition = (function (_super) {\n    __extends(SlideTransition, _super);\n    function SlideTransition(direction, duration, curve) {\n        var _this = _super.call(this, duration, curve) || this;\n        _this._direction = direction;\n        return _this;\n    }\n    SlideTransition.prototype.createAndroidAnimator = function (transitionType) {\n        var translationValues = Array.create(\"float\", 2);\n        switch (this._direction) {\n            case \"left\":\n                switch (transitionType) {\n                    case transition.AndroidTransitionType.enter:\n                        translationValues[0] = screenWidth();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.exit:\n                        translationValues[0] = 0;\n                        translationValues[1] = -screenWidth();\n                        break;\n                    case transition.AndroidTransitionType.popEnter:\n                        translationValues[0] = -screenWidth();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.popExit:\n                        translationValues[0] = 0;\n                        translationValues[1] = screenWidth();\n                        break;\n                }\n                break;\n            case \"right\":\n                switch (transitionType) {\n                    case transition.AndroidTransitionType.enter:\n                        translationValues[0] = -screenWidth();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.exit:\n                        translationValues[0] = 0;\n                        translationValues[1] = screenWidth();\n                        break;\n                    case transition.AndroidTransitionType.popEnter:\n                        translationValues[0] = screenWidth();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.popExit:\n                        translationValues[0] = 0;\n                        translationValues[1] = -screenWidth();\n                        break;\n                }\n                break;\n            case \"top\":\n                switch (transitionType) {\n                    case transition.AndroidTransitionType.enter:\n                        translationValues[0] = screenHeight();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.exit:\n                        translationValues[0] = 0;\n                        translationValues[1] = -screenHeight();\n                        break;\n                    case transition.AndroidTransitionType.popEnter:\n                        translationValues[0] = -screenHeight();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.popExit:\n                        translationValues[0] = 0;\n                        translationValues[1] = screenHeight();\n                        break;\n                }\n                break;\n            case \"bottom\":\n                switch (transitionType) {\n                    case transition.AndroidTransitionType.enter:\n                        translationValues[0] = -screenHeight();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.exit:\n                        translationValues[0] = 0;\n                        translationValues[1] = screenHeight();\n                        break;\n                    case transition.AndroidTransitionType.popEnter:\n                        translationValues[0] = screenHeight();\n                        translationValues[1] = 0;\n                        break;\n                    case transition.AndroidTransitionType.popExit:\n                        translationValues[0] = 0;\n                        translationValues[1] = -screenHeight();\n                        break;\n                }\n                break;\n        }\n        var prop;\n        if (this._direction === \"left\" || this._direction === \"right\") {\n            prop = \"translationX\";\n        }\n        else {\n            prop = \"translationY\";\n        }\n        var animator = android.animation.ObjectAnimator.ofFloat(null, prop, translationValues);\n        var duration = this.getDuration();\n        if (duration !== undefined) {\n            animator.setDuration(duration);\n        }\n        animator.setInterpolator(this.getCurve());\n        return animator;\n    };\n    SlideTransition.prototype.toString = function () {\n        return _super.prototype.toString.call(this) + \" \" + this._direction;\n    };\n    return SlideTransition;\n}(transition.Transition));\nexports.SlideTransition = SlideTransition;\n//# sourceMappingURL=slide-transition.android.js.map"
    },
    {
      "id": 273,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/web-view/web-view.android.js",
      "name": "./~/tns-core-modules/ui/web-view/web-view.android.js",
      "index": 191,
      "index2": 186,
      "size": 7086,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
      "issuerId": 47,
      "issuerName": "./~/nativescript-angular/element-registry.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-angular/element-registry.js",
          "module": "./~/nativescript-angular/element-registry.js",
          "moduleName": "./~/nativescript-angular/element-registry.js",
          "type": "cjs require",
          "userRequest": "tns-core-modules/ui/web-view",
          "loc": "81:48-87"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar web_view_common_1 = require(\"./web-view-common\");\n__export(require(\"./web-view-common\"));\nvar WebViewClient;\nfunction initializeWebViewClient() {\n    if (WebViewClient) {\n        return;\n    }\n    var WebViewClientImpl = (function (_super) {\n        __extends(WebViewClientImpl, _super);\n        function WebViewClientImpl(owner) {\n            var _this = _super.call(this) || this;\n            _this.owner = owner;\n            return global.__native(_this);\n        }\n        WebViewClientImpl.prototype.shouldOverrideUrlLoading = function (view, url) {\n            if (web_view_common_1.traceEnabled()) {\n                web_view_common_1.traceWrite(\"WebViewClientClass.shouldOverrideUrlLoading(\" + url + \")\", web_view_common_1.traceCategories.Debug);\n            }\n            return false;\n        };\n        WebViewClientImpl.prototype.onPageStarted = function (view, url, favicon) {\n            _super.prototype.onPageStarted.call(this, view, url, favicon);\n            var owner = this.owner;\n            if (owner) {\n                if (web_view_common_1.traceEnabled()) {\n                    web_view_common_1.traceWrite(\"WebViewClientClass.onPageStarted(\" + url + \", \" + favicon + \")\", web_view_common_1.traceCategories.Debug);\n                }\n                owner._onLoadStarted(url, web_view_common_1.WebViewBase.navigationTypes[web_view_common_1.WebViewBase.navigationTypes.indexOf(\"linkClicked\")]);\n            }\n        };\n        WebViewClientImpl.prototype.onPageFinished = function (view, url) {\n            _super.prototype.onPageFinished.call(this, view, url);\n            var owner = this.owner;\n            if (owner) {\n                if (web_view_common_1.traceEnabled()) {\n                    web_view_common_1.traceWrite(\"WebViewClientClass.onPageFinished(\" + url + \")\", web_view_common_1.traceCategories.Debug);\n                }\n                owner._onLoadFinished(url, undefined);\n            }\n        };\n        WebViewClientImpl.prototype.onReceivedError = function () {\n            var view = arguments[0];\n            if (arguments.length === 4) {\n                var errorCode = arguments[1];\n                var description = arguments[2];\n                var failingUrl = arguments[3];\n                _super.prototype.onReceivedError.call(this, view, errorCode, description, failingUrl);\n                var owner = this.owner;\n                if (owner) {\n                    if (web_view_common_1.traceEnabled()) {\n                        web_view_common_1.traceWrite(\"WebViewClientClass.onReceivedError(\" + errorCode + \", \" + description + \", \" + failingUrl + \")\", web_view_common_1.traceCategories.Debug);\n                    }\n                    owner._onLoadFinished(failingUrl, description + \"(\" + errorCode + \")\");\n                }\n            }\n            else {\n                var request = arguments[1];\n                var error = arguments[2];\n                _super.prototype.onReceivedError.call(this, view, request, error);\n                var owner = this.owner;\n                if (owner) {\n                    if (web_view_common_1.traceEnabled()) {\n                        web_view_common_1.traceWrite(\"WebViewClientClass.onReceivedError(\" + error.getErrorCode() + \", \" + error.getDescription() + \", \" + (error.getUrl && error.getUrl()) + \")\", web_view_common_1.traceCategories.Debug);\n                    }\n                    owner._onLoadFinished(error.getUrl && error.getUrl(), error.getDescription() + \"(\" + error.getErrorCode() + \")\");\n                }\n            }\n        };\n        return WebViewClientImpl;\n    }(android.webkit.WebViewClient));\n    ;\n    WebViewClient = WebViewClientImpl;\n}\nvar WebView = (function (_super) {\n    __extends(WebView, _super);\n    function WebView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebView.prototype.createNativeView = function () {\n        initializeWebViewClient();\n        var nativeView = new android.webkit.WebView(this._context);\n        nativeView.getSettings().setJavaScriptEnabled(true);\n        nativeView.getSettings().setBuiltInZoomControls(true);\n        var client = new WebViewClient(this);\n        nativeView.setWebViewClient(client);\n        nativeView.client = client;\n        return nativeView;\n    };\n    WebView.prototype.initNativeView = function () {\n        _super.prototype.initNativeView.call(this);\n        this.nativeView.client.owner = this;\n    };\n    WebView.prototype.resetNativeView = function () {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            nativeView.destroy();\n        }\n        nativeView.client.owner = null;\n        _super.prototype.resetNativeView.call(this);\n    };\n    WebView.prototype._loadFileOrResource = function (path, content) {\n        var nativeView = this.nativeView;\n        if (!nativeView) {\n            return;\n        }\n        var baseUrl = \"file:///\" + path.substring(0, path.lastIndexOf('/') + 1);\n        nativeView.loadDataWithBaseURL(baseUrl, content, \"text/html\", \"utf-8\", null);\n    };\n    WebView.prototype._loadHttp = function (src) {\n        var nativeView = this.nativeView;\n        if (!nativeView) {\n            return;\n        }\n        nativeView.loadUrl(src);\n    };\n    WebView.prototype._loadData = function (src) {\n        var nativeView = this.nativeView;\n        if (!nativeView) {\n            return;\n        }\n        var baseUrl = \"file:///\" + web_view_common_1.knownFolders.currentApp().path + \"/\";\n        nativeView.loadDataWithBaseURL(baseUrl, src, \"text/html\", \"utf-8\", null);\n    };\n    Object.defineProperty(WebView.prototype, \"canGoBack\", {\n        get: function () {\n            return this.nativeView.canGoBack();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebView.prototype.stopLoading = function () {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            nativeView.stopLoading();\n        }\n    };\n    Object.defineProperty(WebView.prototype, \"canGoForward\", {\n        get: function () {\n            var nativeView = this.nativeView;\n            if (nativeView) {\n                return nativeView.canGoForward();\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebView.prototype.goBack = function () {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            return nativeView.goBack();\n        }\n    };\n    WebView.prototype.goForward = function () {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            return nativeView.goForward();\n        }\n    };\n    WebView.prototype.reload = function () {\n        var nativeView = this.nativeView;\n        if (nativeView) {\n            return nativeView.reload();\n        }\n    };\n    return WebView;\n}(web_view_common_1.WebViewBase));\nexports.WebView = WebView;\n//# sourceMappingURL=web-view.android.js.map"
    },
    {
      "id": 274,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/debug-common.js",
      "name": "./~/tns-core-modules/utils/debug-common.js",
      "index": 39,
      "index2": 28,
      "size": 1743,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/debug.android.js",
      "issuerId": 69,
      "issuerName": "./~/tns-core-modules/utils/debug.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 69,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/debug.android.js",
          "module": "./~/tns-core-modules/utils/debug.android.js",
          "moduleName": "./~/tns-core-modules/utils/debug.android.js",
          "type": "cjs require",
          "userRequest": "./debug-common",
          "loc": "5:9-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar file_system_1 = require(\"../file-system\");\nexports.debug = true;\nvar applicationRootPath;\nfunction ensureAppRootPath() {\n    if (!applicationRootPath) {\n        applicationRootPath = file_system_1.knownFolders.currentApp().path;\n        applicationRootPath = applicationRootPath.substr(0, applicationRootPath.length - \"app/\".length);\n    }\n}\nvar Source = (function () {\n    function Source(uri, line, column) {\n        ensureAppRootPath();\n        if (uri.length > applicationRootPath.length && uri.substr(0, applicationRootPath.length) === applicationRootPath) {\n            this._uri = \"file://\" + uri.substr(applicationRootPath.length);\n        }\n        else {\n            this._uri = uri;\n        }\n        this._line = line;\n        this._column = column;\n    }\n    Object.defineProperty(Source.prototype, \"uri\", {\n        get: function () { return this._uri; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Source.prototype, \"line\", {\n        get: function () { return this._line; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Source.prototype, \"column\", {\n        get: function () { return this._column; },\n        enumerable: true,\n        configurable: true\n    });\n    Source.prototype.toString = function () {\n        return this._uri + \":\" + this._line + \":\" + this._column;\n    };\n    Source.get = function (object) {\n        return object[Source._source];\n    };\n    Source.set = function (object, src) {\n        object[Source._source] = src;\n    };\n    return Source;\n}());\nSource._source = Symbol(\"source\");\nexports.Source = Source;\n//# sourceMappingURL=debug-common.js.map"
    },
    {
      "id": 275,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils-common.js",
      "name": "./~/tns-core-modules/utils/utils-common.js",
      "index": 15,
      "index2": 4,
      "size": 4246,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils.android.js",
      "issuerId": 2,
      "issuerName": "./~/tns-core-modules/utils/utils.android.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/utils/utils.android.js",
          "module": "./~/tns-core-modules/utils/utils.android.js",
          "moduleName": "./~/tns-core-modules/utils/utils.android.js",
          "type": "cjs require",
          "userRequest": "./utils-common",
          "loc": "6:9-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar types = require(\"./types\");\nexports.RESOURCE_PREFIX = \"res://\";\nfunction escapeRegexSymbols(source) {\n    var escapeRegex = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n    return source.replace(escapeRegex, \"\\\\$&\");\n}\nexports.escapeRegexSymbols = escapeRegexSymbols;\nfunction convertString(value) {\n    var result;\n    if (!types.isString(value)) {\n        result = value;\n    }\n    else if (value.trim() === \"\") {\n        result = value;\n    }\n    else {\n        var valueAsNumber = +value;\n        if (!isNaN(valueAsNumber)) {\n            result = valueAsNumber;\n        }\n        else if (value && (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\")) {\n            result = value.toLowerCase() === \"true\" ? true : false;\n        }\n        else {\n            result = value;\n        }\n    }\n    return result;\n}\nexports.convertString = convertString;\nvar layout;\n(function (layout) {\n    var MODE_SHIFT = 30;\n    var MODE_MASK = 0x3 << MODE_SHIFT;\n    layout.UNSPECIFIED = 0 << MODE_SHIFT;\n    layout.EXACTLY = 1 << MODE_SHIFT;\n    layout.AT_MOST = 2 << MODE_SHIFT;\n    layout.MEASURED_HEIGHT_STATE_SHIFT = 0x00000010;\n    layout.MEASURED_STATE_TOO_SMALL = 0x01000000;\n    layout.MEASURED_STATE_MASK = 0xff000000;\n    layout.MEASURED_SIZE_MASK = 0x00ffffff;\n    function getMode(mode) {\n        switch (mode) {\n            case layout.EXACTLY:\n                return \"Exact\";\n            case layout.AT_MOST:\n                return \"AtMost\";\n            default:\n                return \"Unspecified\";\n        }\n    }\n    layout.getMode = getMode;\n    function getMeasureSpecMode(spec) {\n        return (spec & MODE_MASK);\n    }\n    layout.getMeasureSpecMode = getMeasureSpecMode;\n    function getMeasureSpecSize(spec) {\n        return (spec & ~MODE_MASK);\n    }\n    layout.getMeasureSpecSize = getMeasureSpecSize;\n    function measureSpecToString(measureSpec) {\n        var mode = getMeasureSpecMode(measureSpec);\n        var size = getMeasureSpecSize(measureSpec);\n        var text = \"MeasureSpec: \";\n        if (mode === layout.UNSPECIFIED) {\n            text += \"UNSPECIFIED \";\n        }\n        else if (mode === layout.EXACTLY) {\n            text += \"EXACTLY \";\n        }\n        else if (mode === layout.AT_MOST) {\n            text += \"AT_MOST \";\n        }\n        else {\n            text += mode + \" \";\n        }\n        text += size;\n        return text;\n    }\n    layout.measureSpecToString = measureSpecToString;\n    function round(value) {\n        var res = Math.floor(value + 0.5);\n        if (res !== 0) {\n            return res;\n        }\n        else if (value === 0) {\n            return 0;\n        }\n        else if (value > 0) {\n            return 1;\n        }\n        return -1;\n    }\n    layout.round = round;\n})(layout = exports.layout || (exports.layout = {}));\nfunction isFileOrResourcePath(path) {\n    if (!types.isString(path)) {\n        return false;\n    }\n    return path.indexOf(\"~/\") === 0 ||\n        path.indexOf(\"/\") === 0 ||\n        path.indexOf(exports.RESOURCE_PREFIX) === 0;\n}\nexports.isFileOrResourcePath = isFileOrResourcePath;\nfunction isDataURI(uri) {\n    if (!types.isString(uri)) {\n        return false;\n    }\n    var firstSegment = uri.trim().split(',')[0];\n    return firstSegment && firstSegment.indexOf(\"data:\") === 0 && firstSegment.indexOf('base64') >= 0;\n}\nexports.isDataURI = isDataURI;\nfunction mergeSort(arr, compareFunc) {\n    if (arr.length < 2) {\n        return arr;\n    }\n    var middle = arr.length / 2;\n    var left = arr.slice(0, middle);\n    var right = arr.slice(middle, arr.length);\n    return merge(mergeSort(left, compareFunc), mergeSort(right, compareFunc), compareFunc);\n}\nexports.mergeSort = mergeSort;\nfunction merge(left, right, compareFunc) {\n    var result = [];\n    while (left.length && right.length) {\n        if (compareFunc(left[0], right[0]) <= 0) {\n            result.push(left.shift());\n        }\n        else {\n            result.push(right.shift());\n        }\n    }\n    while (left.length) {\n        result.push(left.shift());\n    }\n    while (right.length) {\n        result.push(right.shift());\n    }\n    return result;\n}\nexports.merge = merge;\n//# sourceMappingURL=utils-common.js.map"
    },
    {
      "id": 276,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/xml/xml.js",
      "name": "./~/tns-core-modules/xml/xml.js",
      "index": 62,
      "index2": 54,
      "size": 12446,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        2
      ],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
      "issuerId": 63,
      "issuerName": "./~/tns-core-modules/ui/builder/builder.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 63,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/tns-core-modules/ui/builder/builder.js",
          "module": "./~/tns-core-modules/ui/builder/builder.js",
          "moduleName": "./~/tns-core-modules/ui/builder/builder.js",
          "type": "cjs require",
          "userRequest": "../../xml",
          "loc": "3:10-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "Object.defineProperty(exports, \"__esModule\", { value: true });\nvar easysax = require(\"../js-libs/easysax\");\nvar ParserEventType = (function () {\n    function ParserEventType() {\n    }\n    return ParserEventType;\n}());\nParserEventType.StartElement = \"StartElement\";\nParserEventType.EndElement = \"EndElement\";\nParserEventType.Text = \"Text\";\nParserEventType.CDATA = \"CDATA\";\nParserEventType.Comment = \"Comment\";\nexports.ParserEventType = ParserEventType;\nvar ParserEvent = (function () {\n    function ParserEvent(eventType, position, prefix, namespace, elementName, attributes, data) {\n        this._eventType = eventType;\n        this._position = position;\n        this._prefix = prefix;\n        this._namespace = namespace;\n        this._elementName = elementName;\n        this._attributes = attributes;\n        this._data = data;\n    }\n    ParserEvent.prototype.toString = function () {\n        return JSON.stringify({\n            eventType: this.eventType,\n            position: this.position,\n            prefix: this.prefix,\n            namespace: this.namespace,\n            elementName: this.elementName,\n            attributes: this.attributes,\n            data: this.data\n        });\n    };\n    Object.defineProperty(ParserEvent.prototype, \"eventType\", {\n        get: function () {\n            return this._eventType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserEvent.prototype, \"position\", {\n        get: function () {\n            return this._position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserEvent.prototype, \"prefix\", {\n        get: function () {\n            return this._prefix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserEvent.prototype, \"namespace\", {\n        get: function () {\n            return this._namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserEvent.prototype, \"elementName\", {\n        get: function () {\n            return this._elementName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserEvent.prototype, \"attributes\", {\n        get: function () {\n            return this._attributes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParserEvent.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ParserEvent;\n}());\nexports.ParserEvent = ParserEvent;\nvar _ampCodes;\nvar _entitySearchRegEx = /&#(\\d+);|&#x([0123456789abcdef]+);|&(\\w+);/ig;\nfunction _generateAmpMap() {\n    var objCodes = { Tab: 9, NewLine: 10, excl: 33, quot: 34, QUOT: 34, num: 35, dollar: 36, percent: 37, amp: 38, AMP: 38, apos: 39, lpar: 40, rpar: 41, ast: 42, midast: 42, plus: 43, comma: 44, period: 46, sol: 47, colon: 58, semi: 59, lt: 60, LT: 60, equals: 61, gt: 62, GT: 62, quest: 63, commat: 64, lsqb: 91, lbrack: 91, bsol: 92, rsqb: 92, rbrack: 92, Hat: 94, lowbar: 95, grave: 96, DiacriticalGrave: 96, lcub: 123, lbrace: 123, verbar: 124, vert: 124, VerticalLine: 124, rcub: 125, rbrace: 125, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, brkbar: 166, sect: 167, uml: 168, copy: 169, ordf: 170, laquo: 171, not: 172, shy: 173, reg: 174, macr: 175, hibar: 175, deg: 176, plusmn: 177, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, sup1: 185, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, Agrave: 192, Aacute: 193, Acirc: 194, Atilde: 195, Auml: 196, Aring: 197, AElig: 198, Ccedil: 199, Egrave: 200, Eacute: 201, Ecirc: 202, Euml: 203, Igrave: 204, Iacute: 205, Icirc: 206, Iuml: 207, ETH: 208, Dstrok: 208, Ntilde: 209, Ograve: 210, Oacute: 211, Ocirc: 212, Otilde: 213, Ouml: 214, times: 215, Oslash: 216, Ugrave: 217, Uacute: 218, Ucirc: 219, Uuml: 220, Yacute: 221, THORN: 222, szlig: 223, agrave: 224, aacute: 225, acirc: 226, atilde: 227, auml: 228, aring: 229, aelig: 230, ccedil: 231, egrave: 232, eacute: 233, ecirc: 234, euml: 235, igrave: 236, iacute: 237, icirc: 238, iuml: 239, eth: 240, ntilde: 241, ograve: 242, oacute: 243, ocirc: 244, otilde: 245, ouml: 246, divide: 247, oslash: 248, ugrave: 249, uacute: 250, ucirc: 251, uuml: 252, yacute: 253, thorn: 254, yuml: 255, fnof: 402, imped: 437, gacute: 501, jmath: 567, circ: 710, caron: 711, Hacek: 711, breve: 728, Breve: 728, dot: 729, DiacriticalDot: 729, ring: 730, ogon: 731, tilde: 732, DiacriticalTilde: 732, dblac: 733, DiacriticalDoubleAcute: 733, DownBreve: 785, UnderBar: 818, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949, epsiv: 949, varepsilon: 949, zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigmav: 962, varsigma: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetav: 977, vartheta: 977, thetasym: 977, Upsi: 978, upsih: 978, straightphi: 981, piv: 982, varpi: 982, Gammad: 988, gammad: 989, digamma: 989, kappav: 1008, varkappa: 1008, rhov: 1009, varrho: 1009, epsi: 1013, straightepsilon: 1013, bepsi: 1014, backepsilon: 1014, euro: 8364, trade: 8482, TRADE: 8482, forall: 8704, part: 8706, larr: 8592, rarr: 8593, hyphen: 8208, dash: 8208, ndash: 8211, mdash: 8212, horbar: 8213, Vert: 8214, Verbar: 8214, lsquo: 8216, OpenCurlyQuote: 8216, rsquo: 8217, rsquor: 8217, CloseCurlyQuote: 8217, lsquor: 8218, sbquo: 8218, ldquo: 8220, OpenCurlyDoubleQuote: 8220, rdquo: 8221, rdquor: 8221, CloseCurlyDoubleQuote: 8221, ldquor: 8222, bdquo: 8222, dagger: 8224, Dagger: 8225, ddagger: 8225, bull: 8226, bullet: 8226, nldr: 8229, hellip: 8230, mldr: 8230, hybull: 8259, tdot: 8411, TripleDot: 8411, DotDot: 8412, star: 9734, phone: 9742, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830, female: 9792, male: 9794, check: 10003, checkmark: 10003, cross: 10007, VerticalSeparator: 10072, EmptySmallSquare: 9723, FilledSmallSquare: 9724, starf: 9733, bigstar: 9733, square: 9633, squ: 9633, Square: 9633 };\n    var ampCodes = new Map();\n    for (var key in objCodes) {\n        if (objCodes.hasOwnProperty(key)) {\n            ampCodes.set(key, objCodes[key]);\n        }\n    }\n    return ampCodes;\n}\nif (global.__snapshot) {\n    _ampCodes = _generateAmpMap();\n}\nfunction _HandleAmpEntities(found, decimalValue, hexValue, wordValue) {\n    if (wordValue) {\n        if (!_ampCodes) {\n            _ampCodes = _generateAmpMap();\n        }\n        var res = _ampCodes.get(wordValue);\n        if (res) {\n            return String.fromCharCode(res);\n        }\n        return found;\n    }\n    if (decimalValue) {\n        return String.fromCharCode(parseInt(decimalValue, 10));\n    }\n    return String.fromCharCode(parseInt(hexValue, 16));\n}\n;\nvar XmlParser = (function () {\n    function XmlParser(onEvent, onError, processNamespaces) {\n        this._processNamespaces = processNamespaces;\n        this._parser = new easysax.EasySAXParser();\n        var that = this;\n        this._parser.on('startNode', function (elem, attr, uq, tagend, str, pos) {\n            var attributes = attr();\n            if (attributes === true) {\n                attributes = undefined;\n            }\n            if (attributes) {\n                var key;\n                for (key in attributes) {\n                    if (attributes.hasOwnProperty(key)) {\n                        attributes[key] = XmlParser._dereferenceEntities(attributes[key]);\n                    }\n                }\n            }\n            var prefix = undefined;\n            var namespace = undefined;\n            var name = elem;\n            if (that._processNamespaces) {\n                var stackEntry = XmlParser._getNamespacesStackEntry(attributes);\n                that._namespaceStack.push(stackEntry);\n                var resolved = that._resolveNamespace(name);\n                prefix = resolved.prefix;\n                namespace = resolved.namespace;\n                name = resolved.name;\n            }\n            onEvent(new ParserEvent(ParserEventType.StartElement, pos(), prefix, namespace, name, attributes, undefined));\n        });\n        this._parser.on('textNode', function (text, uq, pos) {\n            var data = uq(XmlParser._dereferenceEntities(text));\n            onEvent(new ParserEvent(ParserEventType.Text, pos(), undefined, undefined, undefined, undefined, data));\n        });\n        this._parser.on('endNode', function (elem, uq, tagstart, str, pos) {\n            var prefix = undefined;\n            var namespace = undefined;\n            var name = elem;\n            if (that._processNamespaces) {\n                var resolved = that._resolveNamespace(name);\n                prefix = resolved.prefix;\n                namespace = resolved.namespace;\n                name = resolved.name;\n            }\n            onEvent(new ParserEvent(ParserEventType.EndElement, pos(), prefix, namespace, name, undefined, undefined));\n            if (that._processNamespaces) {\n                that._namespaceStack.pop();\n            }\n        });\n        this._parser.on('cdata', function (data, res, pos) {\n            onEvent(new ParserEvent(ParserEventType.CDATA, pos(), undefined, undefined, undefined, undefined, data));\n        });\n        this._parser.on('comment', function (text, uq, pos) {\n            onEvent(new ParserEvent(ParserEventType.Comment, pos(), undefined, undefined, undefined, undefined, text));\n        });\n        if (onError) {\n            this._parser.on('error', function (msg, pos) {\n                onError(new Error(msg), pos());\n            });\n        }\n    }\n    Object.defineProperty(XmlParser.prototype, \"angularSyntax\", {\n        get: function () {\n            return this._parser.angularSyntax;\n        },\n        set: function (value) {\n            this._parser.angularSyntax = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XmlParser.prototype.parse = function (xmlString) {\n        if (this._processNamespaces) {\n            this._namespaceStack = [];\n        }\n        this._parser.parse(xmlString);\n    };\n    XmlParser._getNamespacesStackEntry = function (attributes) {\n        var stackEntry = {};\n        if (!attributes) {\n            return stackEntry;\n        }\n        for (var key in attributes) {\n            if (!attributes.hasOwnProperty(key)) {\n                continue;\n            }\n            var attributeName = key;\n            if (attributeName.indexOf(\"xmlns\") !== 0) {\n                continue;\n            }\n            var namespacePrefix = \"\";\n            if (attributeName.indexOf(\":\") !== -1) {\n                namespacePrefix = attributeName.split(\":\")[1];\n            }\n            stackEntry[namespacePrefix] = attributes[key];\n        }\n        return stackEntry;\n    };\n    XmlParser.prototype._resolveNamespace = function (fullName) {\n        var result = { prefix: undefined, namespace: undefined, name: undefined };\n        result.prefix = \"\";\n        if (fullName.indexOf(\":\") !== -1) {\n            var split = fullName.split(\":\");\n            result.prefix = split[0];\n            result.name = split[1];\n        }\n        else {\n            result.name = fullName;\n        }\n        var i;\n        var stackEntry;\n        for (i = this._namespaceStack.length - 1; i >= 0; i--) {\n            stackEntry = this._namespaceStack[i];\n            for (var key in stackEntry) {\n                if (!stackEntry.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (result.prefix === key) {\n                    result.namespace = stackEntry[key];\n                    return result;\n                }\n            }\n        }\n        return result;\n    };\n    XmlParser._dereferenceEntities = function (s) {\n        s = String(s);\n        if (s.length > 3 && s.indexOf('&') !== -1) {\n            s = s.replace(_entitySearchRegEx, _HandleAmpEntities);\n        }\n        return s;\n    };\n    return XmlParser;\n}());\nexports.XmlParser = XmlParser;\n//# sourceMappingURL=xml.js.map"
    },
    {
      "id": 277,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-theme-core/css/core.light.android.css",
      "name": "./~/nativescript-css-loader!./~/nativescript-theme-core/css/core.light.android.css",
      "index": 278,
      "index2": 277,
      "size": 13880,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/extract-text-webpack-plugin/loader.js??ref--1-0!/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
      "issuerId": 175,
      "issuerName": "./app/app.css",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "exports = module.exports = require(\"../../nativescript-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n * NativeScript Theme v1.0.4 (https://nativescript.org)\\n * Copyright 2016-2016 The Theme Authors\\n * Copyright 2016-2016 Telerik\\n * Licensed under MIT (https://github.com/NativeScript/theme/blob/master/LICENSE)\\n */.c-white{color:#fff}.c-bg-white{background-color:#fff}.c-black{color:#000}.c-bg-black{background-color:#000}.c-aqua{color:#00caab}.c-bg-aqua{background-color:#00caab}.c-blue{color:#3d5afe}.c-bg-blue{background-color:#3d5afe}.c-charcoal{color:#303030}.c-bg-charcoal{background-color:#303030}.c-brown{color:#795548}.c-bg-brown{background-color:#795548}.c-forest{color:#006968}.c-bg-forest{background-color:#006968}.c-grey{color:#e0e0e0}.c-bg-grey{background-color:#e0e0e0}.c-grey-light{color:#bababa}.c-bg-grey-light{background-color:#bababa}.c-grey-dark{color:#5c687c}.c-bg-grey-dark{background-color:#5c687c}.c-purple{color:#8130ff}.c-bg-purple{background-color:#8130ff}.c-lemon{color:#ffea00}.c-bg-lemon{background-color:#ffea00}.c-lime{color:#aee406}.c-bg-lime{background-color:#aee406}.c-orange{color:#f57c00}.c-bg-orange{background-color:#f57c00}.c-ruby{color:#ff1744}.c-bg-ruby{background-color:#ff1744}.c-sky{color:#30bcff}.c-bg-sky{background-color:#30bcff}.w-full{width:100%}.w-100{width:100}.h-full{height:100%}.h-100{height:100}.m-0{margin:0}.m-t-0{margin-top:0}.m-r-0{margin-right:0}.m-b-0{margin-bottom:0}.m-l-0{margin-left:0}.m-x-0{margin-right:0;margin-left:0}.m-y-0{margin-top:0;margin-bottom:0}.m-2{margin:2}.m-t-2{margin-top:2}.m-r-2{margin-right:2}.m-b-2{margin-bottom:2}.m-l-2{margin-left:2}.m-x-2{margin-right:2;margin-left:2}.m-y-2{margin-top:2;margin-bottom:2}.m-4{margin:4}.m-t-4{margin-top:4}.m-r-4{margin-right:4}.m-b-4{margin-bottom:4}.m-l-4{margin-left:4}.m-x-4{margin-right:4;margin-left:4}.m-y-4{margin-top:4;margin-bottom:4}.m-5{margin:5}.m-t-5{margin-top:5}.m-r-5{margin-right:5}.m-b-5{margin-bottom:5}.m-l-5{margin-left:5}.m-x-5{margin-right:5;margin-left:5}.m-y-5{margin-top:5;margin-bottom:5}.m-8{margin:8}.m-t-8{margin-top:8}.m-r-8{margin-right:8}.m-b-8{margin-bottom:8}.m-l-8{margin-left:8}.m-x-8{margin-right:8;margin-left:8}.m-y-8{margin-top:8;margin-bottom:8}.m-10{margin:10}.m-t-10{margin-top:10}.m-r-10{margin-right:10}.m-b-10{margin-bottom:10}.m-l-10{margin-left:10}.m-x-10{margin-right:10;margin-left:10}.m-y-10{margin-top:10;margin-bottom:10}.m-12{margin:12}.m-t-12{margin-top:12}.m-r-12{margin-right:12}.m-b-12{margin-bottom:12}.m-l-12{margin-left:12}.m-x-12{margin-right:12;margin-left:12}.m-y-12{margin-top:12;margin-bottom:12}.m-15{margin:15}.m-t-15{margin-top:15}.m-r-15{margin-right:15}.m-b-15{margin-bottom:15}.m-l-15{margin-left:15}.m-x-15{margin-right:15;margin-left:15}.m-y-15{margin-top:15;margin-bottom:15}.m-16{margin:16}.m-t-16{margin-top:16}.m-r-16{margin-right:16}.m-b-16{margin-bottom:16}.m-l-16{margin-left:16}.m-x-16{margin-right:16;margin-left:16}.m-y-16{margin-top:16;margin-bottom:16}.m-20{margin:20}.m-t-20{margin-top:20}.m-r-20{margin-right:20}.m-b-20{margin-bottom:20}.m-l-20{margin-left:20}.m-x-20{margin-right:20;margin-left:20}.m-y-20{margin-top:20;margin-bottom:20}.m-24{margin:24}.m-t-24{margin-top:24}.m-r-24{margin-right:24}.m-b-24{margin-bottom:24}.m-l-24{margin-left:24}.m-x-24{margin-right:24;margin-left:24}.m-y-24{margin-top:24;margin-bottom:24}.m-25{margin:25}.m-t-25{margin-top:25}.m-r-25{margin-right:25}.m-b-25{margin-bottom:25}.m-l-25{margin-left:25}.m-x-25{margin-right:25;margin-left:25}.m-y-25{margin-top:25;margin-bottom:25}.m-28{margin:28}.m-t-28{margin-top:28}.m-r-28{margin-right:28}.m-b-28{margin-bottom:28}.m-l-28{margin-left:28}.m-x-28{margin-right:28;margin-left:28}.m-y-28{margin-top:28;margin-bottom:28}.m-30{margin:30}.m-t-30{margin-top:30}.m-r-30{margin-right:30}.m-b-30{margin-bottom:30}.m-l-30{margin-left:30}.m-x-30{margin-right:30;margin-left:30}.m-y-30{margin-top:30;margin-bottom:30}.p-0{padding:0}.p-t-0{padding-top:0}.p-r-0{padding-right:0}.p-b-0{padding-bottom:0}.p-l-0{padding-left:0}.p-x-0{padding-right:0;padding-left:0}.p-y-0{padding-top:0;padding-bottom:0}.p-2{padding:2}.p-t-2{padding-top:2}.p-r-2{padding-right:2}.p-b-2{padding-bottom:2}.p-l-2{padding-left:2}.p-x-2{padding-right:2;padding-left:2}.p-y-2{padding-top:2;padding-bottom:2}.p-4{padding:4}.p-t-4{padding-top:4}.p-r-4{padding-right:4}.p-b-4{padding-bottom:4}.p-l-4{padding-left:4}.p-x-4{padding-right:4;padding-left:4}.p-y-4{padding-top:4;padding-bottom:4}.p-5{padding:5}.p-t-5{padding-top:5}.p-r-5{padding-right:5}.p-b-5{padding-bottom:5}.p-l-5{padding-left:5}.p-x-5{padding-right:5;padding-left:5}.p-y-5{padding-top:5;padding-bottom:5}.p-8{padding:8}.p-t-8{padding-top:8}.p-r-8{padding-right:8}.p-b-8{padding-bottom:8}.p-l-8{padding-left:8}.p-x-8{padding-right:8;padding-left:8}.p-y-8{padding-top:8;padding-bottom:8}.p-10{padding:10}.p-t-10{padding-top:10}.p-r-10{padding-right:10}.p-b-10{padding-bottom:10}.p-l-10{padding-left:10}.p-x-10{padding-right:10;padding-left:10}.p-y-10{padding-top:10;padding-bottom:10}.p-12{padding:12}.p-t-12{padding-top:12}.p-r-12{padding-right:12}.p-b-12{padding-bottom:12}.p-l-12{padding-left:12}.p-x-12{padding-right:12;padding-left:12}.p-y-12{padding-top:12;padding-bottom:12}.p-15{padding:15}.p-t-15{padding-top:15}.p-r-15{padding-right:15}.p-b-15{padding-bottom:15}.p-l-15{padding-left:15}.p-x-15{padding-right:15;padding-left:15}.p-y-15{padding-top:15;padding-bottom:15}.p-16{padding:16}.p-t-16{padding-top:16}.p-r-16{padding-right:16}.p-b-16{padding-bottom:16}.p-l-16{padding-left:16}.p-x-16{padding-right:16;padding-left:16}.p-y-16{padding-top:16;padding-bottom:16}.p-20{padding:20}.p-t-20{padding-top:20}.p-r-20{padding-right:20}.p-b-20{padding-bottom:20}.p-l-20{padding-left:20}.p-x-20{padding-right:20;padding-left:20}.p-y-20{padding-top:20;padding-bottom:20}.p-24{padding:24}.p-t-24{padding-top:24}.p-r-24{padding-right:24}.p-b-24{padding-bottom:24}.p-l-24{padding-left:24}.p-x-24{padding-right:24;padding-left:24}.p-y-24{padding-top:24;padding-bottom:24}.p-25{padding:25}.p-t-25{padding-top:25}.p-r-25{padding-right:25}.p-b-25{padding-bottom:25}.p-l-25{padding-left:25}.p-x-25{padding-right:25;padding-left:25}.p-y-25{padding-top:25;padding-bottom:25}.p-28{padding:28}.p-t-28{padding-top:28}.p-r-28{padding-right:28}.p-b-28{padding-bottom:28}.p-l-28{padding-left:28}.p-x-28{padding-right:28;padding-left:28}.p-y-28{padding-top:28;padding-bottom:28}.p-30{padding:30}.p-t-30{padding-top:30}.p-r-30{padding-right:30}.p-b-30{padding-bottom:30}.p-l-30{padding-left:30}.p-x-30{padding-right:30;padding-left:30}.p-y-30{padding-top:30;padding-bottom:30}.hr-light{height:1;background-color:#e0e0e0;width:100%}.hr-dark{height:1;background-color:#303030;width:100%}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-lowercase{text-transform:lowercase}.text-uppercase{text-transform:uppercase}.text-capitalize{text-transform:capitalize}.font-weight-normal{font-weight:normal}.font-weight-bold{font-weight:bold}.font-italic{font-style:italic}.t-10{font-size:10}.t-12{font-size:12}.t-14{font-size:14}.t-15{font-size:15}.t-16{font-size:16}.t-17{font-size:17}.t-18{font-size:18}.t-19{font-size:19}.t-20{font-size:20}.t-25{font-size:25}.t-30{font-size:30}.img-rounded{border-radius:5}.img-circle{border-radius:20}.img-thumbnail{border-radius:0}.invisible{visibility:collapse}.pull-left{horizontal-align:left}.pull-right{horizontal-align:right}.m-x-auto{horizontal-align:center}.m-y-auto{vertical-align:center}.text-primary{color:#30bcff}.text-danger{color:#d50000}.text-muted{color:#9e9e9e}.bg-primary{background-color:#30bcff;color:#fff}.bg-danger{background-color:#d50000;color:#fff}.action-bar{background-color:#F8F8F8;color:#212121}.action-bar .action-bar-title{font-weight:bold;font-size:17;vertical-align:center}.action-bar .action-item{font-weight:normal}.activity-indicator{color:#30bcff;width:30;height:30}.btn{color:#30bcff;background-color:transparent;min-height:36;min-width:64;padding:10 10 10 10;font-size:18;margin:8 16 8 16}.btn.btn-active:highlighted{color:#fff;background-color:#c0ebff}.btn-primary{background-color:#30bcff;border-color:#30bcff;color:#fff}.btn-primary.btn-active:highlighted{background-color:#01a0ec;border-color:#01a0ec}.btn-primary.btn-aqua{background-color:#00caab}.btn-primary.btn-blue{background-color:#3d5afe}.btn-primary.btn-brown{background-color:#795548}.btn-primary.btn-forest{background-color:#006968}.btn-primary.btn-grey{background-color:#5c687c}.btn-primary.btn-lemon{background-color:#ffea00;color:#000}.btn-primary.btn-lime{background-color:#aee406;color:#000}.btn-primary.btn-orange{background-color:#f57c00}.btn-primary.btn-purple{background-color:#8130ff}.btn-primary.btn-ruby{background-color:#ff1744}.btn-primary.btn-sky{background-color:#30bcff}.btn-outline{background-color:transparent;border-color:#30bcff;color:#30bcff}.btn-outline.btn-active:highlighted{background-color:#c0ebff}.btn[isEnabled=false]{color:#a4a4a4;background-color:#e0e0e0;border-color:#e0e0e0}.fa{font-family:FontAwesome, fontawesome-webfont}.form .input{padding:16 8 16 8;background-color:transparent}.form .input.input-border{border-width:1;border-color:#e0e0e0;border-radius:2;padding:16}.form .input.input-rounded{border-width:1;border-color:#e0e0e0;border-radius:28;padding:16}.form .input[isEnabled='false']{background-color:#fafafa}.form .input-field{margin:8}.form .input-field .label{font-size:12;color:#bababa}.form .input-field .input{padding:0;margin:0 0 8 0}.form .input-field .hr-light.active,.form .input-field .hr-dark.active{background-color:#30bcff}.form .input-field.input-sides .label{font-size:18;margin:0 0 8 0}.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:4;font-weight:normal;color:#212121}.body,.body2,.footnote{font-weight:normal;color:#757575}.h1{font-size:32}.h2{font-size:22}.h3{font-size:15}.h4{font-size:12}.h5{font-size:11}.h6{font-size:10}.body{font-size:14}.body2{font-size:17}.footnote{font-size:13}.list-group .list-group-item{color:#212121;font-size:16;margin:0;padding:16}.list-group .list-group-item Label{vertical-align:center}.list-group .list-group-item .thumb{stretch:fill;width:40;height:40;margin-right:16}.list-group .list-group-item.active{background-color:#e0e0e0}.list-group .list-group-item .list-group-item-text{color:#757575;font-size:14}.page{background-color:#fff}.progress{color:#30bcff;background-color:#bababa}.segmented-bar{font-size:13;background-color:#fff;color:#212121;selected-background-color:#30bcff}.sidedrawer-left,.sidedrawer-center{background-color:#fafafa}.sidedrawer-header{background-color:#fafafa;height:148;width:100%}.sidedrawer-left .sidedrawer-header{padding:16 16 0 16}.sidedrawer-center .sidedrawer-header{padding:20 15 0 15}.sidedrawer-header-image{background-color:#e0e0e0}.sidedrawer-left .sidedrawer-header-image{height:64;width:64;border-radius:32;horizontal-align:left;margin-bottom:36}.sidedrawer-center .sidedrawer-header-image{height:74;width:74;border-radius:37;horizontal-align:center;margin-bottom:24}.sidedrawer-header-brand{color:#737373}.sidedrawer-left .sidedrawer-header-brand{horizontal-align:left;font-size:14}.sidedrawer-center .sidedrawer-header-brand{horizontal-align:center;font-size:15}.sidedrawer-list-item{height:48;horizontal-align:left;width:100%;orientation:horizontal}.sidedrawer-list-item .sidedrawer-list-item-icon{width:24;text-align:center;font-size:20;height:48;vertical-align:center}.sidedrawer-list-item.active{color:#fff;background-color:#30bcff}.sidedrawer-list-item.active .sidedrawer-list-item-icon{color:#fff}.sidedrawer-left .sidedrawer-list-item-icon{margin:0 16 0 16}.sidedrawer-center .sidedrawer-list-item-icon{margin:0 0 0 15}.sidedrawer-list-item-text{horizontal-align:left;text-align:left;font-size:15;background-color:transparent;border-width:0.1;width:80%;vertical-align:center}.sidedrawer-left .sidedrawer-list-item-text{padding-left:16}.sidedrawer-center .sidedrawer-list-item-text{padding-left:15}.slider{background-color:#30bcff}.slider[isEnabled=false]{background-color:#e0e0e0;color:#e0e0e0}.switch[checked=true]{background-color:#30bcff}.switch[checked=true][isEnabled=false]{background-color:#e0e0e0;color:#fff}.switch[isEnabled=false]{background-color:#e0e0e0;color:#e0e0e0}.tab-view{selected-color:#30bcff;tabs-background-color:#fff}.tab-view .tab-view-item{background-color:#fff;tabs-background-color:#fff}#login-background{margin-top:-20;background-size:cover;background-position:center}.login-wrap{padding:0 40}.logo-wrap{margin:60 0 10 0;padding:20 0}.logo-wrap .login-logo{text-align:center;font-size:30;font-weight:bold;margin-bottom:10;opacity:1;color:#212121;opacity:.9}.logo-wrap .login-logo-sub{color:#212121;opacity:.8;text-align:center}.login-wrapper{padding:20;background-color:#fff;border-radius:3}.login-wrapper TextField{padding:10 10;margin:10 0 0 0}.go-back{font-size:14;text-align:center;color:#212121;margin-top:10}.action-bar .action-bar-title{font-weight:500;font-size:20}.action-bar .action-item{background-color:rgba(255,0,0,0);border-color:rgba(255,0,0,0);border-width:1}.btn{font-family:'Roboto Medium';font-size:14}.btn-primary{border-color:rgba(255,0,0,0)}.btn-outline{background-color:rgba(255,0,0,0);border-width:1;border-color:#30bcff;height:36;padding:0}.btn-rounded-sm{border-radius:2;height:36;padding:0}.btn-rounded-lg{border-radius:40;height:36;padding:0}.form{font-family:'Roboto Regular'}.form .input{font-size:16}.h1{font-size:34}.h2{font-size:24}.h3{font-size:16}.h5{font-size:11;font-weight:bold}.body2{font-size:14;font-weight:500}.sidedrawer-list-item-icon{margin:0 16 0 16;padding-top:14}.sidedrawer-list-item-icon,.sidedrawer-list-item{color:#737373}.sidedrawer-list-item{font-family:'Roboto Medium';font-size:14}.slider{color:#30bcff;margin:20 16}.switch{margin:14 16;color:#e0e0e0;background-color:#e0e0e0}.switch[checked=true]{color:#30bcff}\\n\", \"\"]);\n\n// exports\n"
    },
    {
      "id": 278,
      "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/lib/css-base.js",
      "name": "./~/nativescript-css-loader/lib/css-base.js",
      "index": 277,
      "index2": 276,
      "size": 1506,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [],
      "assets": [],
      "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/extract-text-webpack-plugin/loader.js??ref--1-0!/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
      "issuerId": 175,
      "issuerName": "./app/app.css",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 277,
          "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-theme-core/css/core.light.android.css",
          "module": "./~/nativescript-css-loader!./~/nativescript-theme-core/css/core.light.android.css",
          "moduleName": "./~/nativescript-css-loader!./~/nativescript-theme-core/css/core.light.android.css",
          "type": "cjs require",
          "userRequest": "../../nativescript-css-loader/lib/css-base.js",
          "loc": "1:27-83"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n"
    }
  ],
  "filteredModules": 0,
  "children": [
    {
      "errors": [],
      "warnings": [
        "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css\n(Emitted value instead of an instance of Error)   resolve-url-loader cannot operate: CSS error\n  /home/svlaeva@bedford.progress.com/chart/app/app.css:9:1: missing '{'\n  at error (/home/svlaeva@bedford.progress.com/chart/node_modules/css/lib/parse/index.js:62:15)\nNonErrorEmittedError: (Emitted value instead of an instance of Error)   resolve-url-loader cannot operate: CSS error\n  /home/svlaeva@bedford.progress.com/chart/app/app.css:9:1: missing '{'\n  at error (/home/svlaeva@bedford.progress.com/chart/node_modules/css/lib/parse/index.js:62:15)\n    at Object.emitWarning (/home/svlaeva@bedford.progress.com/chart/node_modules/webpack/lib/NormalModule.js:114:16)\n    at handleException (/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js:147:14)\n    at Object.resolveUrlLoader (/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js:112:12)"
      ],
      "publicPath": "",
      "assetsByChunkName": {},
      "assets": [],
      "entrypoints": {
        "undefined": {
          "chunks": [
            0
          ],
          "assets": [
            "extract-text-webpack-plugin-output-filename"
          ]
        }
      },
      "chunks": [
        {
          "id": 0,
          "rendered": true,
          "initial": true,
          "entry": true,
          "extraAsync": false,
          "size": 16141,
          "names": [],
          "files": [
            "extract-text-webpack-plugin-output-filename"
          ],
          "hash": "952da33e44ef16b3918f",
          "parents": [],
          "origins": [
            {
              "moduleId": 2,
              "module": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
              "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
              "moduleName": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
              "loc": "",
              "reasons": []
            }
          ]
        }
      ],
      "modules": [
        {
          "id": 0,
          "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/lib/css-base.js",
          "name": "./~/nativescript-css-loader/lib/css-base.js",
          "index": 1,
          "index2": 0,
          "size": 1506,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
          "issuerId": 2,
          "issuerName": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-theme-core/css/core.light.android.css",
              "module": "./~/nativescript-css-loader!./~/nativescript-theme-core/css/core.light.android.css",
              "moduleName": "./~/nativescript-css-loader!./~/nativescript-theme-core/css/core.light.android.css",
              "type": "cjs require",
              "userRequest": "../../nativescript-css-loader/lib/css-base.js",
              "loc": "1:27-83"
            },
            {
              "moduleId": 2,
              "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
              "module": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
              "moduleName": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
              "type": "cjs require",
              "userRequest": "../node_modules/nativescript-css-loader/lib/css-base.js",
              "loc": "1:27-93"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 1,
          "source": "/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n"
        },
        {
          "id": 1,
          "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-theme-core/css/core.light.android.css",
          "name": "./~/nativescript-css-loader!./~/nativescript-theme-core/css/core.light.android.css",
          "index": 2,
          "index2": 1,
          "size": 13880,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
          "issuerId": 2,
          "issuerName": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
              "module": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
              "moduleName": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
              "type": "cjs require",
              "userRequest": "-!../node_modules/nativescript-css-loader/index.js!nativescript-theme-core/css/core.light",
              "loc": "3:10-110"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 1,
          "source": "exports = module.exports = require(\"../../nativescript-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n * NativeScript Theme v1.0.4 (https://nativescript.org)\\n * Copyright 2016-2016 The Theme Authors\\n * Copyright 2016-2016 Telerik\\n * Licensed under MIT (https://github.com/NativeScript/theme/blob/master/LICENSE)\\n */.c-white{color:#fff}.c-bg-white{background-color:#fff}.c-black{color:#000}.c-bg-black{background-color:#000}.c-aqua{color:#00caab}.c-bg-aqua{background-color:#00caab}.c-blue{color:#3d5afe}.c-bg-blue{background-color:#3d5afe}.c-charcoal{color:#303030}.c-bg-charcoal{background-color:#303030}.c-brown{color:#795548}.c-bg-brown{background-color:#795548}.c-forest{color:#006968}.c-bg-forest{background-color:#006968}.c-grey{color:#e0e0e0}.c-bg-grey{background-color:#e0e0e0}.c-grey-light{color:#bababa}.c-bg-grey-light{background-color:#bababa}.c-grey-dark{color:#5c687c}.c-bg-grey-dark{background-color:#5c687c}.c-purple{color:#8130ff}.c-bg-purple{background-color:#8130ff}.c-lemon{color:#ffea00}.c-bg-lemon{background-color:#ffea00}.c-lime{color:#aee406}.c-bg-lime{background-color:#aee406}.c-orange{color:#f57c00}.c-bg-orange{background-color:#f57c00}.c-ruby{color:#ff1744}.c-bg-ruby{background-color:#ff1744}.c-sky{color:#30bcff}.c-bg-sky{background-color:#30bcff}.w-full{width:100%}.w-100{width:100}.h-full{height:100%}.h-100{height:100}.m-0{margin:0}.m-t-0{margin-top:0}.m-r-0{margin-right:0}.m-b-0{margin-bottom:0}.m-l-0{margin-left:0}.m-x-0{margin-right:0;margin-left:0}.m-y-0{margin-top:0;margin-bottom:0}.m-2{margin:2}.m-t-2{margin-top:2}.m-r-2{margin-right:2}.m-b-2{margin-bottom:2}.m-l-2{margin-left:2}.m-x-2{margin-right:2;margin-left:2}.m-y-2{margin-top:2;margin-bottom:2}.m-4{margin:4}.m-t-4{margin-top:4}.m-r-4{margin-right:4}.m-b-4{margin-bottom:4}.m-l-4{margin-left:4}.m-x-4{margin-right:4;margin-left:4}.m-y-4{margin-top:4;margin-bottom:4}.m-5{margin:5}.m-t-5{margin-top:5}.m-r-5{margin-right:5}.m-b-5{margin-bottom:5}.m-l-5{margin-left:5}.m-x-5{margin-right:5;margin-left:5}.m-y-5{margin-top:5;margin-bottom:5}.m-8{margin:8}.m-t-8{margin-top:8}.m-r-8{margin-right:8}.m-b-8{margin-bottom:8}.m-l-8{margin-left:8}.m-x-8{margin-right:8;margin-left:8}.m-y-8{margin-top:8;margin-bottom:8}.m-10{margin:10}.m-t-10{margin-top:10}.m-r-10{margin-right:10}.m-b-10{margin-bottom:10}.m-l-10{margin-left:10}.m-x-10{margin-right:10;margin-left:10}.m-y-10{margin-top:10;margin-bottom:10}.m-12{margin:12}.m-t-12{margin-top:12}.m-r-12{margin-right:12}.m-b-12{margin-bottom:12}.m-l-12{margin-left:12}.m-x-12{margin-right:12;margin-left:12}.m-y-12{margin-top:12;margin-bottom:12}.m-15{margin:15}.m-t-15{margin-top:15}.m-r-15{margin-right:15}.m-b-15{margin-bottom:15}.m-l-15{margin-left:15}.m-x-15{margin-right:15;margin-left:15}.m-y-15{margin-top:15;margin-bottom:15}.m-16{margin:16}.m-t-16{margin-top:16}.m-r-16{margin-right:16}.m-b-16{margin-bottom:16}.m-l-16{margin-left:16}.m-x-16{margin-right:16;margin-left:16}.m-y-16{margin-top:16;margin-bottom:16}.m-20{margin:20}.m-t-20{margin-top:20}.m-r-20{margin-right:20}.m-b-20{margin-bottom:20}.m-l-20{margin-left:20}.m-x-20{margin-right:20;margin-left:20}.m-y-20{margin-top:20;margin-bottom:20}.m-24{margin:24}.m-t-24{margin-top:24}.m-r-24{margin-right:24}.m-b-24{margin-bottom:24}.m-l-24{margin-left:24}.m-x-24{margin-right:24;margin-left:24}.m-y-24{margin-top:24;margin-bottom:24}.m-25{margin:25}.m-t-25{margin-top:25}.m-r-25{margin-right:25}.m-b-25{margin-bottom:25}.m-l-25{margin-left:25}.m-x-25{margin-right:25;margin-left:25}.m-y-25{margin-top:25;margin-bottom:25}.m-28{margin:28}.m-t-28{margin-top:28}.m-r-28{margin-right:28}.m-b-28{margin-bottom:28}.m-l-28{margin-left:28}.m-x-28{margin-right:28;margin-left:28}.m-y-28{margin-top:28;margin-bottom:28}.m-30{margin:30}.m-t-30{margin-top:30}.m-r-30{margin-right:30}.m-b-30{margin-bottom:30}.m-l-30{margin-left:30}.m-x-30{margin-right:30;margin-left:30}.m-y-30{margin-top:30;margin-bottom:30}.p-0{padding:0}.p-t-0{padding-top:0}.p-r-0{padding-right:0}.p-b-0{padding-bottom:0}.p-l-0{padding-left:0}.p-x-0{padding-right:0;padding-left:0}.p-y-0{padding-top:0;padding-bottom:0}.p-2{padding:2}.p-t-2{padding-top:2}.p-r-2{padding-right:2}.p-b-2{padding-bottom:2}.p-l-2{padding-left:2}.p-x-2{padding-right:2;padding-left:2}.p-y-2{padding-top:2;padding-bottom:2}.p-4{padding:4}.p-t-4{padding-top:4}.p-r-4{padding-right:4}.p-b-4{padding-bottom:4}.p-l-4{padding-left:4}.p-x-4{padding-right:4;padding-left:4}.p-y-4{padding-top:4;padding-bottom:4}.p-5{padding:5}.p-t-5{padding-top:5}.p-r-5{padding-right:5}.p-b-5{padding-bottom:5}.p-l-5{padding-left:5}.p-x-5{padding-right:5;padding-left:5}.p-y-5{padding-top:5;padding-bottom:5}.p-8{padding:8}.p-t-8{padding-top:8}.p-r-8{padding-right:8}.p-b-8{padding-bottom:8}.p-l-8{padding-left:8}.p-x-8{padding-right:8;padding-left:8}.p-y-8{padding-top:8;padding-bottom:8}.p-10{padding:10}.p-t-10{padding-top:10}.p-r-10{padding-right:10}.p-b-10{padding-bottom:10}.p-l-10{padding-left:10}.p-x-10{padding-right:10;padding-left:10}.p-y-10{padding-top:10;padding-bottom:10}.p-12{padding:12}.p-t-12{padding-top:12}.p-r-12{padding-right:12}.p-b-12{padding-bottom:12}.p-l-12{padding-left:12}.p-x-12{padding-right:12;padding-left:12}.p-y-12{padding-top:12;padding-bottom:12}.p-15{padding:15}.p-t-15{padding-top:15}.p-r-15{padding-right:15}.p-b-15{padding-bottom:15}.p-l-15{padding-left:15}.p-x-15{padding-right:15;padding-left:15}.p-y-15{padding-top:15;padding-bottom:15}.p-16{padding:16}.p-t-16{padding-top:16}.p-r-16{padding-right:16}.p-b-16{padding-bottom:16}.p-l-16{padding-left:16}.p-x-16{padding-right:16;padding-left:16}.p-y-16{padding-top:16;padding-bottom:16}.p-20{padding:20}.p-t-20{padding-top:20}.p-r-20{padding-right:20}.p-b-20{padding-bottom:20}.p-l-20{padding-left:20}.p-x-20{padding-right:20;padding-left:20}.p-y-20{padding-top:20;padding-bottom:20}.p-24{padding:24}.p-t-24{padding-top:24}.p-r-24{padding-right:24}.p-b-24{padding-bottom:24}.p-l-24{padding-left:24}.p-x-24{padding-right:24;padding-left:24}.p-y-24{padding-top:24;padding-bottom:24}.p-25{padding:25}.p-t-25{padding-top:25}.p-r-25{padding-right:25}.p-b-25{padding-bottom:25}.p-l-25{padding-left:25}.p-x-25{padding-right:25;padding-left:25}.p-y-25{padding-top:25;padding-bottom:25}.p-28{padding:28}.p-t-28{padding-top:28}.p-r-28{padding-right:28}.p-b-28{padding-bottom:28}.p-l-28{padding-left:28}.p-x-28{padding-right:28;padding-left:28}.p-y-28{padding-top:28;padding-bottom:28}.p-30{padding:30}.p-t-30{padding-top:30}.p-r-30{padding-right:30}.p-b-30{padding-bottom:30}.p-l-30{padding-left:30}.p-x-30{padding-right:30;padding-left:30}.p-y-30{padding-top:30;padding-bottom:30}.hr-light{height:1;background-color:#e0e0e0;width:100%}.hr-dark{height:1;background-color:#303030;width:100%}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-lowercase{text-transform:lowercase}.text-uppercase{text-transform:uppercase}.text-capitalize{text-transform:capitalize}.font-weight-normal{font-weight:normal}.font-weight-bold{font-weight:bold}.font-italic{font-style:italic}.t-10{font-size:10}.t-12{font-size:12}.t-14{font-size:14}.t-15{font-size:15}.t-16{font-size:16}.t-17{font-size:17}.t-18{font-size:18}.t-19{font-size:19}.t-20{font-size:20}.t-25{font-size:25}.t-30{font-size:30}.img-rounded{border-radius:5}.img-circle{border-radius:20}.img-thumbnail{border-radius:0}.invisible{visibility:collapse}.pull-left{horizontal-align:left}.pull-right{horizontal-align:right}.m-x-auto{horizontal-align:center}.m-y-auto{vertical-align:center}.text-primary{color:#30bcff}.text-danger{color:#d50000}.text-muted{color:#9e9e9e}.bg-primary{background-color:#30bcff;color:#fff}.bg-danger{background-color:#d50000;color:#fff}.action-bar{background-color:#F8F8F8;color:#212121}.action-bar .action-bar-title{font-weight:bold;font-size:17;vertical-align:center}.action-bar .action-item{font-weight:normal}.activity-indicator{color:#30bcff;width:30;height:30}.btn{color:#30bcff;background-color:transparent;min-height:36;min-width:64;padding:10 10 10 10;font-size:18;margin:8 16 8 16}.btn.btn-active:highlighted{color:#fff;background-color:#c0ebff}.btn-primary{background-color:#30bcff;border-color:#30bcff;color:#fff}.btn-primary.btn-active:highlighted{background-color:#01a0ec;border-color:#01a0ec}.btn-primary.btn-aqua{background-color:#00caab}.btn-primary.btn-blue{background-color:#3d5afe}.btn-primary.btn-brown{background-color:#795548}.btn-primary.btn-forest{background-color:#006968}.btn-primary.btn-grey{background-color:#5c687c}.btn-primary.btn-lemon{background-color:#ffea00;color:#000}.btn-primary.btn-lime{background-color:#aee406;color:#000}.btn-primary.btn-orange{background-color:#f57c00}.btn-primary.btn-purple{background-color:#8130ff}.btn-primary.btn-ruby{background-color:#ff1744}.btn-primary.btn-sky{background-color:#30bcff}.btn-outline{background-color:transparent;border-color:#30bcff;color:#30bcff}.btn-outline.btn-active:highlighted{background-color:#c0ebff}.btn[isEnabled=false]{color:#a4a4a4;background-color:#e0e0e0;border-color:#e0e0e0}.fa{font-family:FontAwesome, fontawesome-webfont}.form .input{padding:16 8 16 8;background-color:transparent}.form .input.input-border{border-width:1;border-color:#e0e0e0;border-radius:2;padding:16}.form .input.input-rounded{border-width:1;border-color:#e0e0e0;border-radius:28;padding:16}.form .input[isEnabled='false']{background-color:#fafafa}.form .input-field{margin:8}.form .input-field .label{font-size:12;color:#bababa}.form .input-field .input{padding:0;margin:0 0 8 0}.form .input-field .hr-light.active,.form .input-field .hr-dark.active{background-color:#30bcff}.form .input-field.input-sides .label{font-size:18;margin:0 0 8 0}.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:4;font-weight:normal;color:#212121}.body,.body2,.footnote{font-weight:normal;color:#757575}.h1{font-size:32}.h2{font-size:22}.h3{font-size:15}.h4{font-size:12}.h5{font-size:11}.h6{font-size:10}.body{font-size:14}.body2{font-size:17}.footnote{font-size:13}.list-group .list-group-item{color:#212121;font-size:16;margin:0;padding:16}.list-group .list-group-item Label{vertical-align:center}.list-group .list-group-item .thumb{stretch:fill;width:40;height:40;margin-right:16}.list-group .list-group-item.active{background-color:#e0e0e0}.list-group .list-group-item .list-group-item-text{color:#757575;font-size:14}.page{background-color:#fff}.progress{color:#30bcff;background-color:#bababa}.segmented-bar{font-size:13;background-color:#fff;color:#212121;selected-background-color:#30bcff}.sidedrawer-left,.sidedrawer-center{background-color:#fafafa}.sidedrawer-header{background-color:#fafafa;height:148;width:100%}.sidedrawer-left .sidedrawer-header{padding:16 16 0 16}.sidedrawer-center .sidedrawer-header{padding:20 15 0 15}.sidedrawer-header-image{background-color:#e0e0e0}.sidedrawer-left .sidedrawer-header-image{height:64;width:64;border-radius:32;horizontal-align:left;margin-bottom:36}.sidedrawer-center .sidedrawer-header-image{height:74;width:74;border-radius:37;horizontal-align:center;margin-bottom:24}.sidedrawer-header-brand{color:#737373}.sidedrawer-left .sidedrawer-header-brand{horizontal-align:left;font-size:14}.sidedrawer-center .sidedrawer-header-brand{horizontal-align:center;font-size:15}.sidedrawer-list-item{height:48;horizontal-align:left;width:100%;orientation:horizontal}.sidedrawer-list-item .sidedrawer-list-item-icon{width:24;text-align:center;font-size:20;height:48;vertical-align:center}.sidedrawer-list-item.active{color:#fff;background-color:#30bcff}.sidedrawer-list-item.active .sidedrawer-list-item-icon{color:#fff}.sidedrawer-left .sidedrawer-list-item-icon{margin:0 16 0 16}.sidedrawer-center .sidedrawer-list-item-icon{margin:0 0 0 15}.sidedrawer-list-item-text{horizontal-align:left;text-align:left;font-size:15;background-color:transparent;border-width:0.1;width:80%;vertical-align:center}.sidedrawer-left .sidedrawer-list-item-text{padding-left:16}.sidedrawer-center .sidedrawer-list-item-text{padding-left:15}.slider{background-color:#30bcff}.slider[isEnabled=false]{background-color:#e0e0e0;color:#e0e0e0}.switch[checked=true]{background-color:#30bcff}.switch[checked=true][isEnabled=false]{background-color:#e0e0e0;color:#fff}.switch[isEnabled=false]{background-color:#e0e0e0;color:#e0e0e0}.tab-view{selected-color:#30bcff;tabs-background-color:#fff}.tab-view .tab-view-item{background-color:#fff;tabs-background-color:#fff}#login-background{margin-top:-20;background-size:cover;background-position:center}.login-wrap{padding:0 40}.logo-wrap{margin:60 0 10 0;padding:20 0}.logo-wrap .login-logo{text-align:center;font-size:30;font-weight:bold;margin-bottom:10;opacity:1;color:#212121;opacity:.9}.logo-wrap .login-logo-sub{color:#212121;opacity:.8;text-align:center}.login-wrapper{padding:20;background-color:#fff;border-radius:3}.login-wrapper TextField{padding:10 10;margin:10 0 0 0}.go-back{font-size:14;text-align:center;color:#212121;margin-top:10}.action-bar .action-bar-title{font-weight:500;font-size:20}.action-bar .action-item{background-color:rgba(255,0,0,0);border-color:rgba(255,0,0,0);border-width:1}.btn{font-family:'Roboto Medium';font-size:14}.btn-primary{border-color:rgba(255,0,0,0)}.btn-outline{background-color:rgba(255,0,0,0);border-width:1;border-color:#30bcff;height:36;padding:0}.btn-rounded-sm{border-radius:2;height:36;padding:0}.btn-rounded-lg{border-radius:40;height:36;padding:0}.form{font-family:'Roboto Regular'}.form .input{font-size:16}.h1{font-size:34}.h2{font-size:24}.h3{font-size:16}.h5{font-size:11;font-weight:bold}.body2{font-size:14;font-weight:500}.sidedrawer-list-item-icon{margin:0 16 0 16;padding-top:14}.sidedrawer-list-item-icon,.sidedrawer-list-item{color:#737373}.sidedrawer-list-item{font-family:'Roboto Medium';font-size:14}.slider{color:#30bcff;margin:20 16}.switch{margin:14 16;color:#e0e0e0;background-color:#e0e0e0}.switch[checked=true]{color:#30bcff}\\n\", \"\"]);\n\n// exports\n"
        },
        {
          "id": 2,
          "identifier": "/home/svlaeva@bedford.progress.com/chart/node_modules/resolve-url-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-css-loader/index.js!/home/svlaeva@bedford.progress.com/chart/node_modules/nativescript-dev-webpack/platform-css-loader.js!/home/svlaeva@bedford.progress.com/chart/app/app.css",
          "name": "./~/resolve-url-loader!./~/nativescript-css-loader!./~/nativescript-dev-webpack/platform-css-loader.js!./app/app.css",
          "index": 0,
          "index2": 2,
          "size": 755,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "failed": false,
          "errors": 0,
          "warnings": 1,
          "reasons": [],
          "usedExports": true,
          "providedExports": null,
          "depth": 0,
          "source": "exports = module.exports = require(\"../node_modules/nativescript-css-loader/lib/css-base.js\")();\n// imports\nexports.i(require(\"-!../node_modules/nativescript-css-loader/index.js!nativescript-theme-core/css/core.light\"), \"\");\n\n// module\nexports.push([module.id, \"/*\\nIn NativeScript, the app.css file is where you place CSS rules that\\nyou would like to apply to your entire application. Check out\\nhttp://docs.nativescript.org/ui/styling for a full list of the CSS\\nselectors and properties you can use to style UI components.\\n\\n/*\\nIn many cases you may want to use the NativeScript core theme instead\\nof writing your own CSS rules. For a full list of class names in the theme\\nrefer to http://docs.nativescript.org/ui/theme.\\n*/\\n\", \"\"]);\n\n// exports\n"
        }
      ],
      "filteredModules": 0,
      "children": [],
      "name": "extract-text-webpack-plugin"
    }
  ]
}